{"version":3,"sources":["webpack://Kandy/webpack/universalModuleDefinition","webpack://Kandy/webpack/bootstrap","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/dist/io-6de156f3.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/dist/redux-saga-core.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/deferred/dist/redux-saga-deferred.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/is/dist/redux-saga-is.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/array/from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/json/stringify.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/map.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/define-properties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/entries.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/freeze.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/get-prototype-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/values.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/promise.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/reflect/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/symbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/symbol/iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/helpers/extends.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/helpers/objectWithoutProperties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/base-64/base64.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/array/from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/json/stringify.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/map.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/define-properties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/entries.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/freeze.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/get-prototype-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/values.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/promise.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/reflect/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/symbol/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/symbol/iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_a-function.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_add-to-unscopables.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_an-instance.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_an-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-from-iterable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-includes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-methods.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-species-constructor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-species-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_classof.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_cof.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_collection-strong.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_collection-to-json.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_collection.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_core.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_create-property.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_ctx.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_defined.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_descriptors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_dom-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_enum-bug-keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_enum-keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_export.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_fails.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_for-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_global.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_has.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_hide.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_html.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_invoke.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iobject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_is-array-iter.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_is-array.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_is-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-define.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-detect.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-step.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iterators.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_library.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_meta.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_microtask.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_new-promise-capability.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-dp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-dps.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gopd.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gopn-ext.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gopn.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gops.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gpo.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-keys-internal.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-pie.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-sap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-to-array.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_perform.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_promise-resolve.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_property-desc.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_redefine-all.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_redefine.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-collection-from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-collection-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-species.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-to-string-tag.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_shared-key.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_shared.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_species-constructor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_string-at.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_task.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-absolute-index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-integer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-iobject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-length.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-primitive.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_uid.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_user-agent.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_validate-collection.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_wks-define.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_wks-ext.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_wks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/core.get-iterator-method.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.array.from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.array.iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.map.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.define-properties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.freeze.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.get-prototype-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.promise.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.reflect.set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.string.iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.symbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.map.from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.map.of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.map.to-json.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.object.entries.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.object.values.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.promise.finally.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.promise.try.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.set.from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.set.of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.set.to-json.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.symbol.async-iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.symbol.observable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/web.dom.iterable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/decode-uri-component/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/eventemitter3/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/invariant/browser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/just-curry-it/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/jwt-decode/lib/atob.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/jwt-decode/lib/base64_url_decode.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/jwt-decode/lib/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp/_baseConvert.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp/_mapping.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp/placeholder.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/lodash.min.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/p-defer/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/deflate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/inflate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/utils/common.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/utils/strings.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/adler32.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/crc32.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/deflate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/gzheader.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/inffast.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/inflate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/inftrees.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/messages.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/trees.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/pako/lib/zlib/zstream.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/reduce-reducers/es/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/combineActions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/createAction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/createActions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/createCurriedAction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/handleAction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/handleActions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/arrayToObject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/camelCase.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/flattenActionMap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/flattenReducerMap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/flattenWhenNode.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/get.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/getLastElement.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/hasGeneratorInterface.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/identity.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isArray.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isEmpty.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isFunction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isMap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isNil.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isNull.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isPlainObject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isString.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isSymbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isUndefined.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/ownKeys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/toString.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/unflattenActionCreators.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-devtools-extension/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-logger/dist/redux-logger.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux/es/redux.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/grammar.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/parser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/writer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/split-on-first/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/stampit/compose.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/symbol-observable/es/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/symbol-observable/es/ponyfill.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/to-camel-case/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/to-no-case/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/to-space-case/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/utf8/utf8.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/bytesToUuid.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/md5.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/rng.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/sha1.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v1.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v3.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v35.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v4.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v5.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/v8n/dist/v8n.esm.js","webpack://Kandy/(webpack)/buildin/global.js","webpack://Kandy/(webpack)/buildin/harmony-module.js","webpack://Kandy/(webpack)/buildin/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/webrtc-adapter/out/adapter_no_edge.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/sdp/codecRemover.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/node_modules/query-string/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/node_modules/strict-uri-encode/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/name.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/link/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/cpaas/utils/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/actions/call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/actions/turn.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/reducers/call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/reducers/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/reducers/turn.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/link/requests/calls.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/link/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/link/sagas/support.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/link/sagas/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/link/utils/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/utils/normalization.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/utils/sdp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/utils/state.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/sagas/client.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/sagas/server.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/dtmf.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/establish.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/midcall.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/negotiation.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/notifications.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/support.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/sdp/compareMedia.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/sdp/operations.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/sdp/pipeline.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/utils/bandwidth.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/utils/dscp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/utils/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/utils/sdp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/codecs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/establish.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/midcall.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/negotiation.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/validation/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/version.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/common/base.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/common/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/common/websocket.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/effects.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/name.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/docs/docs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/errors/codes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/errors/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/eventEmitter.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/factory.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/actionHandler.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/transformers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/config.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/docs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/plugin.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/actions/conversations.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/actions/messages.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/mixins.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/link/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/link/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/link/requests.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/link/sagas/notification.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/link/sagas/pushRegistration.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/predicates.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/link/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/link/requests.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/link/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/effects.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/reducer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/name.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/link/requests/services.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/link/requests/subscriptions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/link/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/actions/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/actions/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/actions/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/reducers/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/reducers/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/reducers/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/link.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/mediaManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/session.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/sessionManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/track.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/trackManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/misc.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/sessions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/tracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/events/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/events/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/events/tracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/browser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/sessions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/tracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/sagas/logs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/sagas/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/channel.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/proxies/manager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/proxies/model.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/proxyStack.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtcProxy/sagas/proxyStack.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logHandler.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logger.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/timer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/validation.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/config.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/icecandidate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/iceconnectionstatechange.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/icegatheringstatechange.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/negotiationneeded.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/signalingstatechange.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/track.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/addIceCandidate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/addTrack.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/close.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/createAnswer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/createOffer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/findReusableTransceiver.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/getState.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/getStats.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/removeTrack.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/replaceTrack.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/sendDTMF.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/setLocalDescription.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/setRemoteDescription.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/setTransceiversDirection.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/localDescription.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/localTracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/remoteDescription.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/remoteTracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/senderTracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/utils/iceCollectionLoop.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/utils/timer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/logs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/deviceManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/mediaManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/peerManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/sessionManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/trackManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/webrtcManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/models/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/models/session.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/models/track.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/extractors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/handlers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/pipeline.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/sdpSemantics.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/transceiverUtils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/utils.js","webpack://Kandy/../core/basePlugins.js","webpack://Kandy/../core/index.js","webpack://Kandy/./index.js"],"names":["e","t","exports","super_","prototype","constructor","value","enumerable","writable","configurable","r","Object","defineProperty","length","n","call","o","i","a","f","slice","push","apply","u","N","Math","Array","isArray","toString","test","l","c","s","d","p","g","prefilter","normalize","h","y","v","b","lhs","hasOwnProperty","m","rhs","filter","w","x","S","forEach","indexOf","isNaN","path","kind","index","item","F","color","join","groupCollapsed","group","log","text","concat","P","groupEnd","timestamp","duration","String","type","toFixed","logger","actionTransformer","titleFormatter","collapsed","colors","level","diff","started","startedTime","action","prevState","error","took","nextState","k","j","D","E","title","A","O","C","L","T","M","_","arguments","stateTransformer","errorTransformer","predicate","logErrors","diffPredicate","getState","dispatch","console","now","Date","getHours","getMinutes","getSeconds","getMilliseconds","performance","global","window","DeepDiff","observableDiff","applyDiff","applyChange","revertChange","isConflict","noConflict","transformer","defaults","createLogger","default","isObject","obj","isFunction","assign","to","args","from","keys","key","isPlainObject","concatAssignFunctions","dstObject","srcArray","propName","dstArray","fn","combineProperties","srcObject","deepMergeAssign","merge","mergeAssign","mergeOne","dst","src","undefined","returnValue","srcValue","dstValue","newDst","srcs","len","reduce","createFactory","descriptor","Stamp","options","methods","deepProperties","properties","propertyDescriptors","initializers","inits","initializer","returnedValue","instance","stamp","createStamp","composeFunction","staticDeepProperties","staticProperties","staticPropertyDescriptors","composeImplementation","compose","_compose","mergeComposable","dstDescriptor","srcComposable","srcDescriptor","composables","module","createCodecRemover","codecs","map","name","oldCallstack","currentSdp","params","newSdp","codecStringsToRemove","codec","media","finalRemoveList","filteredRtp","rtp","includes","relevantCodecs","relevantCodec","fmtpParams","payload","fmtp","every","config","parseInt","replace","isNumber","payloads","split","rtcpFb","next","SUBSCRIPTION_STATE","FULL","PARTIAL","NONE","DISCONNECT_REASONS","GONE","LOST_CONNECTION","prefix","CONNECT","SET_CONNECTION_INFO","CONNECTION_OCCURRED","CONNECT_FINISHED","GET_USER_DETAILS","USER_DETAILS_RECEIVED","DISCONNECT","DISCONNECT_FINISHED","RESUBSCRIPTION_FINISHED","REFRESH_TOKENS","REFRESH_TOKENS_FINISHED","UPDATE_SUBSCRIPTION","UPDATE_SUBSCRIPTION_FINISH","SET_TOKEN","SET_CREDENTIALS","SET_CREDENTIALS_FINISH","connect","setConnectionInfo","connectionOccurred","connectFinished","getUserDetails","userDetailsReceived","disconnect","disconnectFinished","resubscribeFinished","refreshTokens","refreshTokensFinished","updateSubscription","updateSubscriptionFinished","setTokens","setCredentials","setCredentialsFinished","actionTypes","credentials","meta","isSensitive","userInfo","connection","platform","subscription","isSSO","userDetailsResponse","firstName","user_first_name","lastName","user_last_name","photoURL","emailAddress","user_email","username","reason","attemptNum","accessToken","idToken","password","authname","hmacToken","bearerAccessToken","api","actions","logManager","getLogger","debug","API_LOG_TAG","updateToken","updateConnection","getUserInfo","getConnection","isConnected","isPending","authentication","getServices","subscriptionStates","disconnectReasons","jwt","AUTH_CHANGE","AUTH_ERROR","AUTH_RESUB","eventTypes","authChangedEvent","eventsMap","discEvent","forced","resubEvent","isFailure","reducer","reducers","state","throw","requestOptions","refreshToken","idTokenPayload","preferred_username","identity","getExposedState","getAuthConfig","getSubscriptionInfo","getConnectionInfo","getDomain","getIdentity","getAuthScenario","getPlatform","getRequestInfo","pluginState","domain","servicesInfo","requested","received","missing","status","services","clientCorrelator","server","protocol","base","port","version","requestInfo","platforms","CPAAS","baseURL","token","headers","Accept","Authorization","UC","LINK","setPlatform","connInfo","authLink","defaultOptions","v8nValidation","v8n","schema","string","positive","parseOptions","websocket","warn","init","capabilities","sagas","connectFlow","setCredentialsEntry","onSubscriptionGone","onConnectionLostEntry","selector","onConnectionLost","subscribeActions","subscribeActionTypes","connectivityActionTypes","task","finishOrError","disconnectAction","setCredentialsFinishOrError","info","authConfig","service","selectUserInfo","subscribe","subscribeFinishOrError","SUBSCRIBE_FINISHED","BasicError","message","code","authCodes","MISSING_SERVICE","notificationType","unsubscribe","disconnectFinishAction","UNSUBSCRIBE_FINISHED","base64","encode","utf8","INVALID_CREDENTIALS","takeGoneSubscription","NOTIFICATION_RECEIVED","notificationMessage","eventType","WS_RECONNECT_FAILED","mapValuesToKeys","source","FCS_CALL_STATES","CALL_STATES_FCS","CALL_STATES","INITIATING","INITIATED","EARLY_MEDIA","RINGING","CANCELLED","CONNECTED","ON_HOLD","ENDED","CALL_MEDIA_STATES","LOCAL_HOLD","REMOTE_HOLD","DUAL_HOLD","OPERATIONS","CHANGE_MEDIA","HOLD_MEDIA","UNHOLD_MEDIA","MUSIC_ON_HOLD","COMPLEX_OPERATIONS","DIRECT_TRANSFER","CONSULTATIVE_TRANSFER","JOIN","COMPLEX_OPERATION_MESSAGES","DIRECT_TRANSFER_SUCCESS","CONSULTATIVE_TRANSFER_SUCCESS","JOIN_SUCCESS","DIRECT_TRANSFER_FAILURE","CONSULTATIVE_TRANSFER_FAILURE","JOIN_FAILURE","STATUS_CODES","CALL_DIRECTION","INCOMING","OUTGOING","BANDWIDTH_DEFAULTS","AUDIO","VIDEO","WEBRTC_DEVICE_KINDS","audioinput","videoinput","audiooutput","FCS_ICE_MEDIA_STATES","ICE_MEDIA_STATES","getSessionInfoByCallId","validateCallState","sanitizeSdesFromSdp","webRTC","callId","targetCall","getCallById","callCodes","INVALID_PARAM","INVALID_STATE","webrtcSessionId","STATE_DESYNC","session","sessionManager","expected","isSubsetOf","set","whole","differences","prop","originalSdp","mLine","crypto","fingerprint","PREFIX","MAKE_CALL","MAKE_CALL_FINISH","CALL_INCOMING","ANSWER_CALL","ANSWER_CALL_FINISH","IGNORE_CALL","IGNORE_CALL_FINISH","REJECT_CALL","REJECT_CALL_FINISH","END_CALL","END_CALL_FINISH","CALL_STATE_CHANGE","CALL_MEDIA_STATE_CHANGE","START_LOCAL_VIDEO","START_LOCAL_VIDEO_FINISH","STOP_LOCAL_VIDEO","STOP_LOCAL_VIDEO_FINISH","MUTE_CALL","MUTE_CALL_FINISH","UNMUTE_CALL","UNMUTE_CALL_FINISH","SILENCE_CALL","SILENCE_CALL_FINISH","UNSILENCE_CALL","UNSILENCE_CALL_FINISH","SET_CUSTOM_PARAMETERS","START_VIDEO","START_VIDEO_FINISH","STOP_VIDEO","STOP_VIDEO_FINISH","HOLD_CALL","HOLD_CALL_FINISH","UNHOLD_CALL","UNHOLD_CALL_FINISH","START_SCREENSHARE","START_SCREENSHARE_FINISH","STOP_SCREENSHARE","STOP_SCREENSHARE_FINISH","FORWARD_CALL","FORWARD_CALL_FINISH","DIRECT_TRANSFER_FINISH","CONSULTATIVE_TRANSFER_FINISH","JOIN_CALL","JOIN_CALL_FINISH","SEND_CUSTOM_PARAMETERS","SEND_CUSTOM_PARAMETERS_FINISH","SEND_DTMF","SEND_DTMF_FINISH","CHECK_DEVICES","CHECK_DEVICES_FINISH","SET_DEFAULT_DEVICES","SET_DEFAULT_DEVICES_FINISH","PROMPT_USER_MEDIA","PROMPT_USER_MEDIA_FINISH","CHANGE_SPEAKER","CHANGE_SPEAKER_FINISH","CHANGE_INPUT_DEVICES","CHANGE_INPUT_DEVICES_FINISH","INIT_MEDIA","INIT_MEDIA_FINISH","MAKE_CALL_ANONYMOUS","CREATE_AUDIO_BRIDGE","CREATE_AUDIO_BRIDGE_FINISH","CLOSE_AUDIO_BRIDGE","CLOSE_AUDIO_BRIDGE_FINISH","BRIDGE_ADD_CALL","BRIDGE_ADD_CALL_FINISH","BRIDGE_REMOVE_CALL","BRIDGE_REMOVE_CALL_FINISH","MUTE_AUDIO_BRIDGE","MUTE_AUDIO_BRIDGE_FINISH","UNMUTE_AUDIO_BRIDGE","UNMUTE_AUDIO_BRIDGE_FINISH","SILENCE_AUDIO_BRIDGE","SILENCE_AUDIO_BRIDGE_FINISH","UNSILENCE_AUDIO_BRIDGE","UNSILENCE_AUDIO_BRIDGE_FINISH","UPDATE_AUDIO_BRIDGE_CALLS","getCallConfig","getCalls","getCustomParametersById","getDevices","getMediaInfo","getAudioBridges","getBridgeCalls","calls","id","customParameters","devices","audioBridges","bridgeId","bridge","callPrefix","PENDING_MAKE_CALL","SESSION_CREATED","MAKE_ANONYMOUS_CALL","MAKE_ANONYMOUS_CALL_FINISH","CALL_RINGING","SESSION_PROGRESS","CALL_CANCELLED","CALL_AUDIT","CALL_ACCEPTED","PENDING_OPERATION","UPDATE_CALL","CALL_HOLD","CALL_HOLD_FINISH","CALL_UNHOLD","CALL_UNHOLD_FINISH","ADD_MEDIA","ADD_MEDIA_FINISH","ADD_BASIC_MEDIA","REMOVE_MEDIA","REMOVE_MEDIA_FINISH","REMOVE_BASIC_MEDIA","RENEGOTIATE","RENEGOTIATE_FINISH","GET_STATS","GET_STATS_FINISH","PENDING_CONSULTATIVE_TRANSFER","PENDING_JOIN","JOIN_FINISH","REPLACE_TRACK","REPLACE_TRACK_FINISH","CUSTOM_PARAMETERS_RECEIVED","GET_AVAILABLE_CODECS","AVAILABLE_CODECS_RETRIEVED","CALL_REMOTE_HOLD_FINISH","CALL_REMOTE_UNHOLD_FINISH","REMOTE_ADD_MEDIA_FINISH","REMOTE_REMOVE_MEDIA_FINISH","REMOTE_START_MOH_FINISH","REMOTE_STOP_MOH_FINISH","REMOTE_SLOW_START","turnPrefix","TURN_CHANGED","trackPrefix","TRACK_ADDED","TRACK_REMOVED","callActionHelper","makeCall","sessionCreated","pendingMakeCall","makeCallFinish","makeAnonymousCall","makeAnonymousCallFinish","callIncoming","callRinging","sessionProgress","callCancelled","sendCallAudit","answerCall","answerCallFinish","rejectCall","rejectCallFinish","callAccepted","ignoreCall","ignoreCallFinish","endCall","endCallFinish","holdCall","holdCallFinish","unholdCall","unholdCallFinish","setCustomParameters","sendCustomParameters","sendCustomParametersFinish","customParametersReceived","addMedia","addMediaFinish","addBasicMedia","removeMedia","removeMediaFinish","removeBasicMedia","renegotiate","renegotiateFinish","sendDTMF","sendDTMFFinish","getStats","getStatsFinish","forwardCall","forwardCallFinish","consultativeTransfer","pendingConsultativeTransfer","consultativeTransferFinish","directTransfer","directTransferFinish","pendingJoin","joinFinish","replaceTrack","replaceTrackFinish","pendingOperation","getAvailableCodecs","availableCodecsRetrieved","remoteHoldFinish","remoteUnholdFinish","remoteAddMediaFinish","remoteRemoveMediaFinish","remoteStartMohFinish","remoteStopMohFinish","remoteSlowStart","updateCall","callee","mediaConstraints","callOptions","deferred","callActionsImport","turnActionsImport","callActions","turnActions","turnChanged","servers","callAPI","make","destination","audio","audioOptions","video","videoOptions","screenShare","screen","screenOptions","normalizeDestination","participantAddress","reject","answer","ignore","hold","unhold","getAll","getById","end","tracks","startVideo","stopVideo","tone","intertoneGap","trackId","forward","otherCallId","newCallId","deferredResult","promise","setSdpHandlers","sdpHandlers","removeH264Codecs","states","context","MAKE","ANSWER","REJECT","IGNORE","END","HOLD","UNHOLD","START_MOH","STOP_MOH","SLOW_START","ENDPOINTS","LOCAL","REMOTE","OP_STATUS","ONGOING","PENDING","OP_TRANSITIONS","START","UPDATE","FINISH","NO_FINISH_OPS","CALL_OPERATION","CALL_STARTED","CALL_JOIN","CALL_ADDED_MEDIA","CALL_REMOVED_MEDIA","CALL_NEW_TRACK","CALL_TRACK_ENDED","STATS_RECEIVED","CALL_TRACK_REPLACED","CUSTOM_PARAMETERS","AVAILABLE_CODECS","webrtcActionTypes","callEventHandler","stateChangeHandler","prevCall","transition","previous","localHold","remoteHold","callOperationHandler","isLocal","localOp","remoteOp","operation","callEvents","startActionTypesAndOperations","startActionTypeAndOperation","otherCallAction","operationEvents","usedCallIds","newAction","finishActionTypesAndData","finishActionTypeAndData","events","isSlowStart","local","mediaId","result","newTrackId","oldTrack","oldTrackState","SESSION_NEW_TRACK","SESSION_TRACK_REMOVED","sdpSemantics","SESSION_TRACK_ENDED","noop","callEnder","startTime","endTime","remoteParticipant","callReducers","newCall","displayNumber","displayName","participantName","dscpControls","direction","isCaller","isAnonymous","account","wrtcsSessionId","bandwidth","webrtcId","newState","payloadWithoutTransition","callState","callIds","endedCall","isJoinedCall","callReducer","specificCallActions","updatedCall","turn","getActiveCalls","getCallByWrtcsSessionId","getCallByWebrtcSessionId","getOptions","getTurnInfo","addTracksToCall","localTracks","remoteTracks","endedStates","find","getOperationMeta","setOperationState","actionType","Error","opType","match","opMeta","parts","validPrefixes","prefixes","shift","validSuffixes","suffixes","pop","err","metaOp","stateProp","current","operationData","isRemote","unsetOperation","currentOp","callsLink","iceServers","iceCollectionDelay","maxIceTimeout","serverTurnCredentials","earlyMedia","resyncOnConnect","mediaBrokerOnly","removeBundling","trickleIceMode","array","boolean","mediaDevices","peerConnection","iceserver","isPlanB","isNotChrome","getBrowserDetails","browser","pluginInterface","sdpHandlerOptions","deps","managers","wrappedSagas","saga","createSession","updateCallRinging","updateCustomParameters","endSession","answerSession","rejectSession","forwardSession","consultativeTransferSessions","directTransferSession","joinSessions","updateSession","getSession","auditCall","updateSessionResponse","linkCallRequest","callInfo","fromAddress","method","requestBody","sdp","offer","supported","getWebsocketIdResult","getWebsocketId","body","callMeRequest","notifyChannelId","websocketId","callControlRequest","response","responseBodyType","sessionData","bodyType","responseType","endUrl","callDispositionRequest","address","otherWrtcsSessionId","firstSessionData","secondSessionData","newWrtcsSessionId","callControlResponse","url","generateCallUrl","handleLinkCallRequestError","getMessage","statusCode","userType","userId","requestType","createCall","answerCallEntry","rejectCallEntry","addMediaEntry","removeMediaEntry","addBasicMediaEntry","removeBasicMediaEntry","checkRenegotiationFlagEntry","renegotiationEntry","sendDtmfEntry","incomingCallNotification","sessionProgressNotification","callStatusNotification","callCancelNotification","receiveRemoteOffer","receiveRemoteAnswer","endCallEntry","ignoreCallEntry","callAudit","getSessionsOnWSConnect","getStatsEntry","setTurnCredentials","forwardCallEntry","consultativeTransferEntry","directTransferEntry","joinEntry","replaceTrackEntry","getAvailableCodecsEntry","supportSagas","requests","midcallSagas","checkRenegotiationFlag","sendDtmf","linkIncomingCall","notificationParams","callNotificationParams","sessionParams","remoteName","callerName","remoteNumber","callerDisplayNumber","calleeNumber","calleeDisplayNumber","incomingCall","incomingCallPattern","progressPattern","parseSessionProgress","remoteDisplayNumber","receiveEarlyMedia","statusUpdatePattern","statusPattern","parseStatusNotification","reasonText","remoteInfo","getRemoteParticipant","callStatusUpdateEnded","sessionStatusUpdateEnded","callStatusUpdateRinging","callStatusUpdateFailed","callCancelPattern","handleCallCancel","currentCall","parseOfferNotification","parseCallRequest","receiveOfferPattern","parseAnswerNotification","retryAfter","parseCallResponse","receiveAnswerPattern","offerInactiveMedia","offerFullMedia","actionTypesToDoAuditOn","callStartAuditPattern","WS_CONNECT_FINISHED","getSessions","hasTurnCredentials","turnCredentials","subscriptions","turnInfo","iceInfo","credential","notification","subscriptionInfo","notificationChannel","GENERIC_ERROR","normalizeSipUri","extractDomainFromAddress","addressString","indexOfAtSymbol","lastIndexOf","substr","separateAddressAndDomain","defaultDomainString","extractedDomain","extractPrependedData","inputString","prependedDataMatches","extractLeadingSpecialCharacters","potentialLeadingChars","actualLeadingChars","withoutVisualSeparators","isPhoneNumber","cleanNumber","phoneNumberMatch","processAddress","processDomain","domainString","trim","resultingAddressAndDomain","prepend","leadingChars","setMediaInactive","hasMediaFlowing","hasMusicOnHold","regex","objectSdp","sdpTransform","parse","isVideoInactive","isAudioInactive","isMusicOnHold","some","getMediaState","hasMedia","isLocalHold","isRemoteHold","isDualHold","callHistory","FETCH_CALL_HISTORY","FETCH_CALL_HISTORY_FINISH","DELETE_CALL_HISTORY","DELETE_CALL_HISTORY_FINISH","ADD_CALL_HISTORY_ENTRY","SET_CACHE","retrieveCallLogs","retrieveCallLogsFinish","removeCallLogs","removeCallLogsFinish","addCallLogEntry","setCache","amount","offset","logs","recordId","logEntry","data","callHistoryApi","fetch","remove","clear","get","getCache","JSON","history","CALL_HISTORY_CHANGE","CALL_HISTORY_ERROR","CALL_HISTORY_CACHE_CHANGE","callHistoryEvent","localLogs","localLogsRemoved","resourceLocation","uniqueLogs","isSimilar","newLogs","serverLogEntry","startTimePadding","durationPadding","abs","getCallHistory","getCachedHistory","oldStoreCallLogs","storeCallLogs","oldGetCallById","calleeName","originalRemoteParticipant","contactName","contact","newGetCallById","fetchLogs","removeLogs","createLocalLog","oldCallEndedPattern","callEndedPattern","callHistoryCodes","BAD_REQUEST","queryParams","startIndex","count","logHistory","UNKNOWN_ERROR","NOT_AUTHENTICATED","FORBIDDEN","logItems","logRecord","NOT_FOUND","playOutBand","playInBand","hasTelephoneEvent","convertTone","splitTones","remoteDesc","canSendOutBand","gap","Number","track","localTrack","stream","AudioContext","createMediaStreamSource","dest","createMediaStreamDestination","newTrack","getAudioTracks","peer","addTones","close","targetNode","tones","oscillators","createOscillator","oscNode","createGain","gain","scheduleTone","start","dur","frequency","setValueAtTime","toneSequence","toneStart","currentTime","numTones","delayTime","stop","stringSdp","hasCodec","matches","offerSdp","sessionId","mediaIds","setupCall","iceCollectionCheck","closeCall","stateError","webrtcInfo","sessionOptions","answerWebrtcSession","answerSDP","generateOffer","INVALID_OFFER","callBandwidth","finalBandwidth","medias","webRtcAddMedia","webRtcRemoveMedia","performRenegotiation","getTracks","getTrackById","mediaTracks","trackObj","otherCall","currentStateError","otherStateError","currentCallRemoteName","otherCallRemoteName","currentCallRemoteAddress","otherCallRemoteAddress","webRtcReplaceTrack","handleUpdateRequest","handleSlowUpdateRequest","handleUpdateResponse","handleSlowUpdateResponse","getCallAction","mediaState","mediaDiff","compareMedia","getOperation","isMediaFlowing","callAction","sameSession","isSameSdpSessionId","recreatePeer","handleOffer","remote","mediaDirections","slowOffer","sessionInfo","answerSdp","receivedAnswer","finishAction","mediaFlowing","undesired","dir","negotiation","uuidV4","customNames","param","setupIncomingCall","updateStatusResponse","customStatusCode","callConfigOptions","runPipeline","step","endpoint","updateCallState","delayMs","activeCalls","activeCall","callStateAfterConnect","sessionStatusResponse","summarizeMedia","compareSummary","MEDIA_TRANSITIONS","STOP","SAME","prevSdpString","sdpString","prevSdp","prevMedia","currMedia","removed","added","changed","unchanged","prevM","currM","sectionId","changes","sending","receiving","sdpMedia","mid","ssrcGroups","willSend","willReceive","msid","ssrcs","ssrc","attribute","summary","change","wasHold","wasUnhold","was3xHold","was3xUnhold","wasAddMedia","wasRemoveMedia","wasStartMoh","wasStopMoh","wasNoChange","hadMediaFlowing","stoppedFlowing","noActiveMediaAdded","noMediaRemoved","didChange","allStopped","notSending","notReceiving","stillStopped","startedFlowing","sameMedia","noUnchangedSend","onlyStartChanges","onlyStartSending","onlyStartReceiving","wasFlowing","allSendOnly","isFlowing","allSending","wasntRemoved","somethingStarted","addedSending","changedSending","wasntAdded","wasChanged","onlyStopSending","onlyAudioChange","inactiveUnchanged","stopSendAudio","noChange","hasUnchanged","unchangedFlowing","changedFlowing","wasSending","wasReceiving","removedFlowing","addedFlowing","handlers","handler","write","checkBandwidthControls","bandwidthControls","finalBandwidthControls","getTrackDscpMapping","audioTracks","videoTracks","screenTracks","dscpTrackMapping","screenNetworkPriority","screenTrack","audioNetworkPriority","audioTrack","videoNetworkPriority","videoTrack","changeDtlsRoleTo","modifySdpBandwidth","generateEndParams","role","changeDtlsRole","original","setup","generateBandwidthConfigs","limit","currentCallState","endParams","hasSameSessionId","firstSdpSessionId","secondSdpSessionId","errorMsg","webrtcManager","mediaOps","createLocal","rtcConfig","allTracks","eachMedia","screenShareContraints","screenShareMedia","audioConstraints","audioMedia","videoConstraints","videoMedia","errMessage","constraint","USER_MEDIA_ERROR","mediaStates","localTracksToRemove","invalidIndexes","acc","cur","ind","invalidTracks","noOfTruthyTrackTypes","newTrackKind","oldTrackKind","compatibleTrackKinds","newMedias","createLocalError","allNewTracks","newTracks","replaceTrackError","currentDesc","sameId","newRole","errorInfo","clickToCallImplementation","clickToCallSaga","CLICK_TO_CALL","CLICK_TO_CALL_FINISH","clickToCall","clickToCallFinish","caller","requestTime","clickToCallApi","CLICK_TO_CALL_STARTED","CLICK_TO_CALL_ERROR","clickToCallEvent","clickToCallCodes","MISSING_ARGS","conn","clickToCallRequest","callingParty","calledParty","getTime","RESPONSE_ERROR","mergeValues","toQueryString","autoRestart","forwardAction","normalizeServices","objects","leftValue","rightValue","stringifiedParams","paramParser","stringify","autoRestarting","shouldRestart","extend","function","validation","enums","values","v8nExact","exact","exactValues","passesAnyOf","errorMessages","v8nRule","input","validationErrorMessages","validationResults","testAll","errors","prettyPrint","validationError","startingPath","validationErrorMessageHelper","cause","rule","target","newVEM","ruleMessage","enumValues","enumName","aOrAn","arg","chain","__","getVersion","configImplementation","CONFIG_UPDATE","SET_SDP_HANDLERS","update","pluginName","configApi","getConfig","updateConfig","newConfigValues","getConfiguration","baseConnectivity","responsibleParty","connCheckResponsibility","CLIENT","wsConnectFlow","websocketLifecycle","serverPingFlow","clientPingFlow","connectWebsocket","chan","WS_ATTEMPT_CONNECT","wsConnectAction","wsInfo","isReconnect","kandy","getConnectivityConfig","wsReconnectFailed","wsConnectFinished","lastContact","emitTask","wsEmitter","pingFlow","SERVER","closeWebsocketPattern","WS_DISCONNECT","closeWebsocket","wsDisconnectFinished","oauthToken","access_token","wsAttemptConnect","ws","maxMissedPings","autoReconnect","timeOfLastPing","pingInterval","getPingInterval","maxIdleDuration","serverPing","expiry","RECEIVE_SERVER_PING","WS_DISCONNECT_FINISHED","pingIntervalMillis","connCheck","interval","changePingInterval","connAck","_sendWSMessage","lostConnection","checkConnectivity","timeOfLastPong","shouldCheck","getCheckConnectivity","intervalInSeconds","connCheckMethods","PING_PONG","KEEP_ALIVE","message_type","shouldCheckConnectivity","delayStartTime","serverPong","RECEIVE_SERVER_PONG","timeElapsed","timeUntilNextPing","readyState","send","configs","connectionAttempt","disconnectWebsocketPattern","reconnectLimit","openWebsocket","reconnectTimeLimit","reconnectDelay","pow","reconnectTimeMultiplier","delay","INITIAL_BUFFER_SIZE","WebSocket","validateWS","resolve","onOpen","onopen","onerror","onError","onclose","onmessage","createWsChannel","emit","buffers","expanding","wsChannel","WS_CLOSED","WS_ERROR","CHANGE_CONNECTIVITY_CHECKING","CHANGE_PING_INTERVAL","createWsAction","wsDisconnect","wsClosed","wsError","receiveServerPing","receiveServerPong","changeConnectivityChecking","connectivityApi","getSocketState","enableConnectivityChecking","enable","disconnectWebsocket","websocketInfo","responseAction","WS_CHANGE","connected","pinging","getConnectionState","connectivity","defaultValues","webSocketOAuthMode","notificationTypes","WEBSOCKET","PUSH","CONNECT_FAIL_WS_ERROR","LINK_UNSUBSCRIBE_FAIL","LINK_SUBSCRIBE_FAIL","LINK_EXTEND_SUBSCRIPTION_FAIL","LINK_UPDATE_SUBSCRIPTION_FAIL","UC_SUBSCRIBE_FAIL","UC_REFRESH_TOKEN_FAIL","UC_CREATE_TOKEN_FAIL","UC_EXTEND_SUBSCRIPTION_FAIL","UC_DISCONNECT_FAIL","INIT_MEDIA_FAILED","NOT_SUPPORTED","groupsCodes","MISSING_PARAMETERS","messagingCodes","CREATE_GROUP_FAIL","MARK_READ_FAIL","REMOVE_MEMBERS_FAIL","ADD_MEMBERS_FAIL","SEND_MESSAGE_FAIL","FETCH_MESSAGES_FAIL","FILE_UPLOAD_FAIL","FETCH_CONVERSATIONS_FAIL","INVALID_DESTINATION","INVALID_FILE_PARTS","SET_IS_TYPING_FAIL","mwiCodes","FETCH_MWI_FAIL","sipEventCodes","NOT_PROVISIONED","NOT_SUBSCRIBED","bridgeCodes","INVALID_INPUT","ALREADY_EXISTS","MEDIA_NOT_FOUND","subscriptionCodes","WS_CONNECTION_ERROR","CPAAS_WSREQUEST_FAIL","CPAAS_WSREVOKE_FAIL","CPAAS_WSREFRESH_FAIL","CPAAS_SERVICE_SUB_FAIL","CPAAS_SERVICE_UNSUB_FAIL","CPAAS_UNSUBSCRIBE_FAIL","presenceCodes","INVALID_STATUS","INVALID_ACTIVITY","usersCodes","UNKNOWN","REFRESH_CONTACTS_FAIL","DIRECTORY_REQUEST_FAIL","eventEmitter","eventMap","subscribeMap","strictMode","checkEvent","define","alias","on","listener","off","list","splice","setStrictMode","strict","eventsImplementation","middleware","emitter","EVENTS_ON","EVENTS_OFF","EVENTS_SUBSCRIBE","EVENTS_UNSUBSCRIBE","EVENTS_ALIAS","EVENTS_EMIT","MAP_EVENTS","mapper","then","event","mapEvents","emitEvent","aliasEvent","mapping","eventReducer","aliases","factory","factoryDefaults","enableReduxDevTools","allowProxy","plugins","store","selectors","middlewares","initSagas","taskDescriptor","shared","primitives","destroyedSDK","loggerMiddleware","destroyedSDKMiddleware","plugin","Boolean","mixins","baseStamp","objName","rootSaga","composeMiddleware","composeWithDevTools","composeWithoutDevTools","sagaMiddleware","run","selectState","exposedState","publicAPI","getCapabilities","destroy","cancel","destroyStateReducer","replaceReducer","defaultActionHandler","entry","messages","logInfo","logType","toUpperCase","createActionLogger","setHandler","logActions","setLevel","logLevels","logLevel","actionOptions","INFO","actionOnly","excludeActions","transformers","setupTransformers","actionPipeline","actionTransformers","exposePayloads","removePayloads","passwordHider","isSafe","time","enableFcsLogs","manager","SET_LEVEL","LEVELS_CHANGE","SET_HANDLER","HANDLERS_CHANGE","levelsChanged","handlersChanged","levelMap","handlerMap","levels","SILENT","ERROR","WARN","DEBUG","getLevel","getTypes","clonedState","logPlugin","getLoggers","components","setLevelEntry","setHandlerEntry","setLogLevel","setLogHandler","getLevelMap","getHandlerMap","defaultType","loggers","types","getHandler","CREATE_CONVERSATION","SEND_MESSAGE","SEND_MESSAGE_FINISH","MESSAGE_RECEIVED","INCOMING_MESSAGE_READ","SEND_MESSAGE_READ","SEND_MESSAGE_READ_FINISH","CLEAR_MESSAGES","CLEAR_MESSAGES_FINISH","DELETE_CONVERSATION","DELETE_CONVERSATION_FINISH","DELETE_MESSAGE","DELETE_MESSAGE_FINISH","FETCH_CONVERSATIONS","FETCH_CONVERSATIONS_FINISHED","UPDATE_CONVERSATION","FETCH_MESSAGES","FETCH_MESSAGES_FINISHED","createConversation","fetchConversations","fetchConversationsFinished","updateConversation","deleteConversation","deleteConversationFinish","isTypingList","conversations","conversation","messageActionsImport","convoActionsImport","messageActions","convoActions","messageReceived","sendMessageReadFinish","fetchMessages","fetchMessagesFinished","clearMessages","deleteMessage","deleteMessageFinish","sendMessageHelper","read","messageReadHelper","messageId","participant","sendMessage","sendMessageFinish","sender","deliveryStatus","newConversation","incomingMessageRead","sendMessageRead","messagingApi","recipient","description","Conversation","lastMessage","lastReceived","lastPull","create","prevConv","CONVERSATIONS_NEW","CONVERSATIONS_CHANGE","MESSAGES_CHANGE","MESSAGES_ERROR","MESSAGING_ERROR","messaging","conversationBase","features","groupIndex","createMessage","part","messageContext","isGroup","Message","getMessages","convo","markRead","deleteMessages","messageIds","delete","subscriber","subscriberWrapper","conversationHistory","messageBase","convoContext","withParts","addPart","validationResponse","validatePart","validTypeFlag","sendMessageFinishHelper","getMessagingConfig","getConversations","findConversation","findMember","conversationId","conv","members","member","linkMessaging","receiveMessage","sendMessageChannel","imRequest","charset","toUrl","imResponse","receiveMessagePattern","and","link","imnotificationParams","msgText","primaryContact","eventId","mimeType","MWI_UPDATE","FETCH_MWI","mwiUpdate","fetchMwi","mwiData","mwiApi","voicemail","MWI_CHANGE","MWI_ERROR","lastUpdated","newMessagesWaiting","totalVoice","unheardVoice","voice","fax","multimedia","getMwi","mwi","mwiLink","mwiReceived","mwiEventChannel","mwiNotificationParams","mwiresponse","errMsg","PROCESS_NOTIFICATION","PROCESS_NOTIFICATION_FINISH","ENABLE_NOTIFICATION_CHANNEL","ENABLE_NOTIFICATION_CHANNEL_FINISH","REGISTER_APPLE_PUSH_NOTIFICATION","REGISTER_ANDROID_PUSH_NOTIFICATION","UNREGISTER_APPLE_PUSH_NOTIFICATION","UNREGISTER_ANDROID_PUSH_NOTIFICATION","websocketNotification","externalNotification","notificationReceived","processNotificationFinish","enableNotificationChannel","registerApplePushNotification","registerAndroidPushNotification","unregisterApplePushNotification","unregisterAndroidPushNotification","enableNotificationChannelFinish","notificationHelper","channel","pushProvider","registration","channelEnabled","notificationApi","process","registerApplePush","voipDeviceToken","standardDeviceToken","bundleId","realm","isProduction","registerAndroidPush","deviceToken","unregisterApplePush","registrationInfo","unregisterAndroidPush","enableWebsocket","NOTI_CHANGE","NOTI_ERROR","NOTI_RECEIVED","enabled","newChannelState","defaultState","getNotificationsInfo","getNotificationConfig","notifications","pushRegistrationSagas","notificationSagas","idCacheLength","incomingCallNotificationMode","pushRegistration","optional","pluginOptions","pushNotificationsRegistration","pushNotificationsDeRegistration","fetchSDP","toLowerCase","bundleID","registrationResponse","responseName","statuscode","partialUrl","enableWebsocketChannelEntry","processNotification","enableWebsocketChannel","idCache","isDuplicate","addIdToCache","externalNotifications","notificationId","formattedPayload","normalizeSDP","sdpFormat","sdpCompressedBytes","atob","sdpUnCompressedBytes","inflate","fromCharCode","Uint16Array","eventDataResponse","applePushRegistrationEntry","androidPushRegistrationEntry","applePushUnregisterEntry","androidPushUnregisterEntry","registerPushDeviceToken","unregisterPushDeviceToken","operands","or","UPDATE_FINISH","GET","GET_FINISH","SUBSCRIBE","SUBSCRIBE_FINISH","UNSUBSCRIBE","UNSUBSCRIBE_FINISH","RECEIVED","CREATE_PRESENCE_LIST","CREATE_PRESENCE_LIST_FINISH","DELETE_PRESENCE_LIST","GET_PRESENCE_LIST","updatePresence","updatePresenceFinish","getPresence","getPresenceFinish","subscribePresence","subscribePresenceFinish","unsubscribePresence","unsubscribePresenceFinish","createPresenceList","deletePresenceList","getPresenceList","createListFinish","presenceReceived","activity","note","users","presentityUserId","presenceListId","presence","presenceApi","user","storedUsers","getAllPresence","getSelf","getSelfPresence","SELF_CHANGE","presenceError","userIds","self","loading","presenceContact","presenceObject","person","activities","activityValue","overridingWillingnessValue","other","STATUS","OPEN","CLOSED","ACTIVITY","ACTIVE","IDLE","AWAY","LUNCH","OTHER","BUSY","VACATION","ON_THE_PHONE","linkPresence","augmentedApi","newApi","statuses","updatePresenceRequest","watchPresenceRequest","presenceRequest","presenceResponse","presenceWatcherRequest","userList","presenceWatcherResponse","presenceUpdateSaga","presenceGetSaga","presenceSubscribeSaga","presenceUnsubscribeSaga","presenceReceivedSaga","receivePresence","res","wsAction","presenceWatcherNotificationParams","request","requestSaga","commonOptions","useCustomHeader","injectAgentVersionHeader","headerValue","requestAction","RESPONSE","requestId","responseTypes","json","blob","none","contentTypes","jsonType","vdnJsonType","plainTextType","xmlTextType","octetStream","watchRequests","REQUEST","handleRequest","makeRequest","makeResponse","apiResponse","httpResponse","ok","fetchOptions","invalidUrlMessage","substring","invalidResponseType","contentType","statusText","responseBody","isJson","__testonly__","nextRequestId","generateRequestId","sipEvents","SIP_EVENT_SUBSCRIBE","SIP_EVENT_SUBSCRIBE_FINISH","SIP_EVENT_UPDATE","SIP_EVENT_UPDATE_FINISH","SIP_EVENT_UNSUBSCRIBE","SIP_EVENT_UNSUBSCRIBE_FINISH","SIP_EVENT_RECEIVED","sipEventSubscribe","sipEventSubscribeFinish","sipEventUpdate","sipEventUpdateFinish","sipEventUnsubscribe","sipEventUnsubscribeFinish","sipEventReceived","finishActionHelper","subscribeUserList","userLists","isResub","unsubscribeUserList","sipEvent","getDetails","sip","EVENT_SUBSCRIPTION_CHANGED","EVENT_ERROR","EVENT_RECEIVED","subscriptionChange","subscribedUsers","unsubscribedUsers","eventInfo","getSipEventInfo","receiveEventNotify","subscribedServices","getSubscribedServices","startsWith","expires","eventSubscriptionRequest","eventSubscriptionResponse","sipEventResub","shouldResub","resubDelay","unsubAction","receiveEventNotifyPattern","REGISTER_SUB_SERVICE","PLUGIN_SUBSCRIPTION","PLUGIN_SUBSCRIPTION_FINISHED","PLUGIN_UNSUBSCRIPTION","PLUGIN_UNSUBSCRIPTION_FINISHED","CHANNEL_OPENED","CHANNEL_CLOSED","subscribeFinished","unsubscribeFinished","registerService","doPluginSubscriptions","reportSubscriptionFinished","doPluginUnsubscriptions","reportUnsubscriptionFinished","channelOpened","channelClosed","actionFormatter","subscriptionId","resourceURL","channelType","channelInfo","subscriptionApi","resubscribe","getSubscriptions","subscribed","available","SUB_CHANGE","SUB_ERROR","SUB_RESUB","subChangeEvent","notificationChannels","registeredServices","pendingChange","removeSubscription","getSubscriptionConfig","getRegisteredServices","getNotificationChannels","currentSub","createSubscriptionPlugin","subscriptionFlow","extendSubscription","parseSpidrServices","upperReceived","reqService","subConfig","extras","subscribeType","subscribeRequest","localization","useTurn","forceLogOut","subscribeResponse","subscriptionParams","subscriptionURL","unsubResponse","resubResponse","doSubscribe","doUnsubscribe","subscriptionChannel","updatedServices","linkConnection","wsOpenOrError","wsState","resubTriggers","addService","updatedSubscription","ADD_CONTACT","ADD_CONTACT_FINISH","REFRESH_CONTACTS","REFRESH_CONTACTS_FINISH","REMOVE_CONTACT","REMOVE_CONTACT_FINISH","UPDATE_CONTACT","UPDATE_CONTACT_FINISH","FETCH_CONTACT","FETCH_CONTACT_FINISH","FETCH_USER","FETCH_USER_FINISH","FETCH_SELF_INFO","FETCH_SELF_INFO_FINISH","SEARCH_DIRECTORY","SEARCH_DIRECTORY_FINISH","refreshContacts","refreshContactsFinish","addContact","addContactFinish","fetchContact","fetchContactFinish","removeContact","removeContactFinish","updateContact","updateContactFinish","contacts","contactId","fetchSelfInfo","fetchSelfInfoFinish","fetchUser","fetchUserFinish","searchDirectory","searchDirectoryFinish","filters","contactsAPI","add","refresh","objectToUse","usersAPI","search","contactNewEvent","CONTACTS_CHANGE","contactsChangeEvent","CONTACTS_ERROR","addContactFinishActions","CONTACTS_NEW","DIRECTORY_CHANGE","DIRECTORY_ERROR","USERS_CHANGE","USERS_ERROR","results","contactsPendingReducer","contactsReducers","usersReducers","getContacts","getContact","getUsers","getUser","allUsers","usersLink","contactRequest","getDirectory","fetchUserLocale","userActions","contactActions","contactsEvents","usersEvents","addressBookEntries","localContactFromRemote","contactData","addressBookRequest","remoteContactFromLocal","encodeURIComponent","contactRestObject","searchCriteria","searchType","searchTypeInteger","directoryItems","localUserFromRemote","fetchSelf","userData","userProfile","currentLocale","extraURL","errorMessage","addressBookResponse","directory","userProfileData","acceptLanguage","nickname","watchDeviceEvents","setListeners","managerChannel","checkDevices","deviceActions","devicesChanged","watchManagers","watchTrackManagerEvents","watchSessionManagerEvents","watchMediaManagerEvents","watchMediaEvents","mediaChannel","mediaActions","mediaNewTrack","trackRemoved","mediaTrackRemoved","trackEnded","mediaTrackEnded","mediaStopped","mediaManagerEventsHandler","MEDIA_NEW","newMedia","removedMedia","watchSessionEvents","sessionChannel","sessionActions","sessionNewTrack","sessionTrackRemoved","sessionTrackEnded","trackReplaced","oldTrackId","sessionTrackReplaced","onChange","sessionChange","SESSION_ADDED","sessionAdded","sessionRemoved","watchTrackEvents","trackChannel","trackData","trackSourceMuted","trackActions","trackSourceUnmuted","trackManagerEventsHandler","trackAdded","initializeStack","webRtcPlugin","details","miscActions","setBrowserDetails","DEVICES_CHANGE","RENDER_TRACKS","RENDER_TRACKS_FINISH","REMOVE_TRACKS","REMOVE_TRACKS_FINISH","MUTE_TRACKS","MUTE_TRACKS_FINISH","UNMUTE_TRACKS","UNMUTE_TRACKS_FINISH","TRACK_SOURCE_MUTED","TRACK_SOURCE_UNMUTED","sessionPrefix","SESSION_REMOVED","SESSION_CHANGE","SESSION_TRACK_REPLACED","mediaPrefix","MEDIA_REMOVED","MEDIA_CHANGE","MEDIA_NEW_TRACK","MEDIA_TRACK_REMOVED","MEDIA_TRACK_ENDED","SET_BROWSER_DETAILS","deviceActionsImport","trackActionsImport","sessionActionsImport","mediaActionsImport","miscActionsImport","mediaActionHelper","sessionActionHelper","muteTracks","muteTracksFinish","unmuteTracks","unmuteTracksFinish","renderTracks","renderTracksFinish","removeTracks","removeTracksFinish","trackManagerHelper","trackHelper","trackIds","mediaAPI","cssSelector","DEVICES_CHANGED","TRACKS_MUTED","TRACKS_UNMUTED","deviceEvents","trackEvents","camera","microphone","speaker","sessions","mediaReducers","removeTrack","mediaReducer","specificMediaActions","removeSession","sessionReducers","newLocalTracks","sessionReducer","specificSessionActions","containers","removeContainer","container","muted","sourceMuted","getSessionById","getMedia","getMediaById","webrtc","updateLogLevelEntry","updateLogHandlerEntry","initLogLevel","mediaSagas","logSagas","updateLogLevel","updateLogHandler","WEBRTC","speakerId","filteredTracks","wrapChannel","sentMessages","receive","callback","reply","proxyPlugin","proxy","setProxyMode","SET_MODE","SET_MODE_FINISH","SET_CHANNEL","SET_CHANNEL_FINISH","INITIALIZE","INITIALIZE_FINISH","setProxyModeFinish","setChannel","setChannelFinish","initializeRemote","initializeRemoteFinish","actionHelper","getProxyMode","proxyMode","getInfo","getProxyDetails","PROXY_CHANGE","PROXY_ERROR","proxyEvents","hasChannel","remoteInitialized","getProxyState","actualManager","Proxy","objTarget","receiver","funcTarget","thisArg","parseData","proxies","modelProxy","initializeProxy","clientReady","manProxy","wrappedChannel","getChannel","onMessage","initialize","initialized","setHandlers","pipeline","setMode","updateProxyLevel","handleMessages","messageChannel","proxyState","webrtcLevel","proxyLevel","channelLevel","PROXY","CHANNEL","TRACE","levelValues","logMethods","trace","timeLevel","createManager","levelImport","defaultLogHandler","shortId","shortName","extra","settings","loggerName","logFunc","injectables","shouldLog","timeLog","timer","timeWarn","createTimer","timers","timeEnd","elapsed","checkLevel","checkHandler","upperLevel","PEER","SDP_SEMANTICS","PLAN_B","TRICKLE_ICE","halfTrickleThreshold","isPassedHalfTrickleThreshold","iceCandidate","passedHalf","candidate","iceCandidates","onicecandidate","nativePeer","proxyPeer","iceTimer","HALF","haveHalf","localDescription","timeFromStart","oniceconnectionstatechange","iceConnectionState","onicegatheringstatechange","gatheringState","iceGatheringState","ICE_GATHERING_STATE","GATHERING","COMPLETE","onnegotiationneeded","onsignalingstatechange","ontrack","signalingState","trackManager","nativeTrack","streams","targetStream","MediaStream","EventEmitter","RTCPeerConnection","googDscp","customMethods","bind","once","dtlsRole","eventName","addIceCandidate","remoteDescription","catch","addTrack","getStream","createAnswer","preventDtlsRoleChange","removeTrickleIce","ENDPOINT","createOffer","findReusableTransceiver","transceivers","getTransceivers","transceiver","currentDirection","localDesc","senderTracks","senders","getSenders","setLocalDescription","setRemoteDescription","setTransceiversDirection","targetTransceiver","insertDTMF","handleToneChangeEvent","dtmf","dtmfSender","ontonechange","desc","dtlsMatch","isStarted","setTimeout","localRole","targetDirection","failures","getLocalDescription","active","getRemoteDescription","getRemoteTracks","getReceivers","iceCollectionLoop","proxyBase","elapsedTime","enoughCandidates","hasReachedTimeout","timerPrototype","_startTime","NEW","UNIFIED_PLAN","MEDIA_DIR","INACTIVE","SEND_ONLY","RECV_ONLY","SEND_RECV","getWebRTCSupportCapabilities","navigator","browserDetails","deviceManager","DeviceManager","TrackManager","mediaManager","MediaManager","peerManager","PeerManager","SessionManager","WebRTCManager","models","Track","Media","Peer","sdpPipeline","recentDeviceChange","addEventListener","enumerateDevices","device","browserContraintsWorkaround","constraints","deviceId","setupMedia","mediaStream","wrappedTrack","size","constraintsWorkaround","getUserMedia","createLocalScreen","getDisplayMedia","createRemote","findTrack","allMedia","getTrack","peers","Session","targetTrack","setStream","RTCRtpSender","nativeStream","onremovetrack","has","removedTrack","cleanup","renderIn","element","removeFrom","moveTo","peerId","dtlsRoleRecord","latestRemoteDescription","setupPeerEventHandlers","recordNewDtlsRole","remoteSdpSessionId","getLocalTracks","warmup","addTracks","addTrackOrReuseTransceiverPromises","reusableTransceiver","all","audioTransceiverTargetDir","videoTransceiverTargetDir","getHandlers","setParameters","promises","setNetworkPriority","networkPriority","parameters","getParameters","encodings","encoding","processOffer","previousDtlsRole","generateAnswer","processAnswer","findIndex","DTMFOptions","sendOptions","targetPeer","trackToCleanup","oldPeer","newPeer","oldLocalTrack","getPeer","getLatestRemoteDesc","mediaTrack","onended","onmute","onunmute","newStream","streamId","label","document","querySelector","renderer","createElement","style","height","width","URL","createObjectURL","autoplay","play","setSinkId","appendChild","rendererId","removeChild","mute","unmute","getConstraints","setConstraints","constr","getContainers","getSdpSessionId","oLine","changeMediaDirection","iceOptions","groups","isValid","createPipeline","defaultHandlers","isUnifiedPlan","getSdpSemanticsList","setTransceiverDirection","setDirection","makeSafeForCSS","adapter","commonIndex","pluginInstances","common","defaultPlugins","basePlugins","auth","root"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;AClFA;AAAA;AAAe;AACf;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,C;;;;;;;;AChBA;AAAA;AAAe;AACf;AACA;AACA;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgH;AACtD;AACuE;AACxF;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAAQ;;AAEV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6lBAA6lB;;AAE7lB;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA,OAAO;AACP;;AAEA,kDAAkD,+DAAW;AAC7D;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,6DAAS;AAC1B;AACA;AACA,iBAAiB,+DAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,IAAqC;AAC3C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,gBAAgB,4DAAK;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,kBAAkB,OAAO,sDAAE;AAC3B;;AAEA;AACA,SAAS,6DAAM;AACf;;AAEA;AACA,MAAM,IAAqC;AAC3C;AACA;;AAEA,0BAA0B,kFAAQ,GAAG;AACrC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAAqC;AAC3C,wBAAwB,uDAAQ;AAChC;;AAEA,MAAM,8DAAO;AACb;AACA;AACA,KAAK;AACL;;AAEA,MAAM,gEAAS,sBAAsB,+DAAQ,sBAAsB,8DAAO;AAC1E;AACA;AACA;AACA,KAAK;AACL;;AAEA,MAAM,8DAAO;AACb;AACA;AACA,KAAK;AACL;;AAEA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA,uBAAuB,uDAAQ;AAC/B,uBAAuB,sDAAO;AAC9B,oBAAoB,uDAAQ;AAC5B,KAAK;AACL,uBAAuB,uDAAQ;AAC/B;AACA;;AAEA,MAAM,4DAAK;AACX,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,sBAAsB,uDAAQ;;AAE9B,MAAM,2DAAI;AACV;AACA;;AAEA;AACA;;AAEA,MAAM,4DAAK;AACX;AACA;AACA,cAAc,uDAAQ;AACtB,GAAG,UAAU,6DAAM;AACnB;AACA;AACA,cAAc,uDAAQ,oCAAoC,YAAY;AACtE,GAAG;AACH,wBAAwB,mDAAI;AAC5B;AACA;;AAEA,iBAAiB,6DAAM;AACvB,uBAAuB,mDAAI;AAC3B;AACA;;AAEA,YAAY,mDAAI,+DAA+D,YAAY;AAC3F;;AAEA;AACA;AACA;;AAEA,MAAM,2DAAI;AACV;AACA,GAAG;AACH,QAAQ,4DAAK;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,6DAAM,QAAQ,2DAAI;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,IAAqC;AAC3C;AACA;;AAEA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;;AAEA,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA,cAAc,6DAAM;AACpB,KAAK;AACL;;AAEA,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;;AAEA,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;;AAEA,QAAQ,4DAAK;AACb;AACA,iBAAiB,mDAAI;AACrB,OAAO;AACP,KAAK;AACL,yBAAyB,mDAAI;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,qEAAiB;AACnC;;AAEA,MAAM,IAAqC;AAC3C;AACA;AACA;;AAEA,QAAQ,4DAAK;AACb;AACA,iBAAiB,mDAAI;AACrB,OAAO;AACP,KAAK,0BAA0B,qEAAiB,IAAI,+DAAQ;AAC5D,yBAAyB,mDAAI;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4FAA4F,eAAe;AAC3G;AACA;;AAEA,MAAM,KAAqC;AAC3C,wBAAwB,uDAAQ;AAChC,oBAAoB,mDAAI;AACxB;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,MAAM,IAAqC;AAC3C,qBAAqB,sDAAO;;AAE5B;AACA,sBAAsB,uDAAQ;AAC9B,sBAAsB,qDAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iCAAiC;AACjC;AACA;AACA,MAAM,IAAqC;AAC3C,qBAAqB,sDAAO;AAC5B;;AAEA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C,gBAAgB,qDAAM;AACtB;;AAEA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C,iBAAiB,qDAAM;AACvB;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,2DAAM;;AAE26B;;;;;;;;;ACzqBj8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmJ;AACvF;AACF;AAC0C;AACsF;AAC0d;AACvlB;AAC7B;AACY;AACf;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAK;AACd;AACA;AACA;AACA,oDAAoD,6DAAQ,qBAAqB,4DAAO,oBAAoB,qEAAc,qBAAqB,2DAAI,wBAAwB,6DAAQ;;AAEnL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,oEAAgB;AACxB;AACA;AACA,yBAAyB,oEAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAS;AACxB;;AAEA;AACA;;AAEA,MAAM,IAAqC;AAC3C,IAAI,yDAAK,WAAW,qDAAM;AAC1B;;AAEA;AACA;AACA,YAAY,yDAAW;AACvB;;AAEA;AACA,YAAY,yDAAW;AACvB;AACA;;AAEA;AACA,QAAQ,IAAqC;AAC7C;AACA,MAAM,yDAAK,QAAQ,uDAAQ;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ,IAAqC;AAC7C;AACA,MAAM,yDAAK,KAAK,mDAAI;AACpB;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA,QAAQ,yDAAM;AACd;AACA;AACA;;AAEA;AACA,QAAQ,IAAqC;AAC7C;AACA,MAAM,yDAAK,KAAK,mDAAI;AACpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,IAAqC;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yDAAI;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,QAAQ,2DAAI;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH,MAAM,IAAqC;AAC3C,IAAI,yDAAK,cAAc,mDAAI;AAC3B;;AAEA,gBAAgB,yDAAI;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yDAAW;AACvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,IAAqC;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,kBAAkB,OAAO,6DAAS;AAClC,QAAQ,IAAqC;AAC7C;AACA,MAAM,yDAAK,QAAQ,uDAAQ;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAwC,SAAS;AACjD;;AAEA,gBAAgB,yDAAK;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,QAAQ,IAAqC;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,yDAAK;AACZ;AACA;AACA,gBAAgB,yDAAI;AACpB;AACA,MAAM,yDAAM;AACZ,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,cAAc,+DAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,0DAAM;;AAEpC,MAAM,2DAAI;AACV;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,yDAAW;AACpB;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA,yCAAyC;;AAEzC,QAAQ,+DAAQ;AAChB;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA,iBAAiB,8DAAO;AACxB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,yDAAY;AACvB,GAAG;AACH;AACA;AACA,WAAW,yDAAY;AACvB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,8DAAO;AAC1B;AACA,KAAK;AACL;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,6DAAS;AAClB;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,+DAAQ;AACjC,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;;AAEA,QAAQ,8DAAO;AACf;AACA;AACA;;AAEA,QAAQ,+DAAQ;AAChB;AACA,+CAA+C,yDAAW;AAC1D;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,UAAU,4DAAK;AACf;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,yDAAM;AAC1C;;AAEA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,MAAM,4DAAO;AACb;AACA;AACA;AACA;;AAEA,yBAAyB,yDAA4B;AACrD;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,qEAAiB;AACvC;AACA,GAAG,UAAU,4DAAO;AACpB;AACA,GAAG;AACH;AACA;;AAEA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO,4DAAO,mBAAmB;AACjC;AACA;;AAEA,uBAAuB,yDAA4B;AACnD;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,4DAAO,YAAY,yDAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,yDAAc;AACjC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,iDAAI;AAC3B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,yDAAiB;AACnB;AACA;;AAEA,4CAA4C,mBAAmB,iDAAI,oCAAoC,iDAAG,mCAAmC,iDAAG,mCAAmC,iDAAI,oCAAoC,iDAAI,oCAAoC,iDAAG,mCAAmC,iDAAI,oCAAoC,iDAAI,oCAAoC,iDAAQ,sCAAsC,iDAAM,sCAAsC,iDAAc,uCAAuC,iDAAW,yCAAyC,iDAAK,qCAAqC,iDAAW,0CAA0C,iDAAW;;AAEtqB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,yDAAM;AACZ,kBAAkB,iDAAI;;AAEtB;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iDAAI;AACnB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,yDAAW;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,yDAAO;AAC9B;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA,mDAAmD;AACnD,6BAA6B,oCAAoC,GAAG;AACpE,4BAA4B;AAC5B,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA,WAAW,iDAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB,UAAU,+DAAW;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,+DAAW;AAChC;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,QAAQ,IAAqC;AAC7C,MAAM,yDAAK,QAAQ,qDAAM,EAAE,yDAAuB;AAClD;;AAEA,IAAI,yDAAiB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,oEAAQ;;AAE1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,wBAAwB,QAAQ,wDAAI;AACpC;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA,MAAM,KAAqC,eAAe,iDAAmB;AAC7E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,iDAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,+DAAW;AACtB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;;;AAGH,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAiD;AAC9D,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA,OAAO,UAAU,yDAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,2DAAI,wCAAwC,+DAAW;AACxE;AACA,iBAAiB,+DAAW;AAC5B;AACA,OAAO,UAAU,yDAAe;AAChC;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAO;AACf;AACA,KAAK,UAAU,+DAAQ;AACvB;AACA;AACA;AACA;AACA,KAAK,2BAA2B,sDAAE;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,iDAAI,CAAC;;AAEvB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL,oBAAoB,iDAAI,CAAC;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;;AAEtB,sBAAsB,iDAAI,CAAC;;AAE3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,0CAA0C,iDAAQ;;AAElD,MAAM,IAAqC;AAC3C,IAAI,yDAAK,OAAO,mDAAI;AACpB;;AAEA,wFAAwF,aAAa;AACrG;AACA;;AAEA;;AAEA,MAAM,IAAqC;AAC3C,IAAI,yDAAK,aAAa,uDAAQ;AAC9B;;AAEA;;AAEA;AACA;AACA,iEAAiE,iDAAI;AACrE,iEAAiE,iDAAI;AACrE,+DAA+D,iDAAI;AACnE,+DAA+D,iDAAI;AACnE,iEAAiE,iDAAI;AACrE,mEAAmE,iDAAI;AACvE;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,MAAM,IAAqC;AAC3C,QAAQ,+DAAQ;AAChB,MAAM,yDAAK,WAAW,mDAAI;AAC1B;;AAEA,QAAQ,+DAAQ;AAChB,MAAM,yDAAK,WAAW,mDAAI;AAC1B;;AAEA,QAAQ,+DAAQ;AAChB;AACA,MAAM,yDAAK,oBAAoB,oDAAO;AACtC;AACA,eAAe,yDAAK,mBAAmB,mDAAI;AAC3C,OAAO;AACP;;AAEA,IAAI,yDAAK,UAAU,mDAAI;AACvB;;AAEA;;AAEA;AACA,qBAAqB,6CAAO;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,iDAAQ;AAChC;;AAEA;AACA;AACA,cAAc,yDAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,yDAAW;AACnE;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,kCAAkC;AAClC;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,gBAAgB,uGAA6B;;AAE7C;;AAEA,MAAM,IAAqC;AAC3C,IAAI,yDAAK,UAAU,sDAAS;AAC5B;;AAEA;AACA;AACA;AACA,sCAAsC,kFAAQ,GAAG;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,KAAqC;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,IAAqC;AAC7C,MAAM,yDAAK,QAAQ,qDAAM,EAAE,yDAAuB;AAClD;;AAEA,IAAI,yDAAiB;AACrB;;AAEA;AACA;;AAEe,oFAAqB,EAAC;AAC+C;;;;;;;;;AC75CpF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACe;AAC6B;AAC+F;AAC0J;AACrS;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,8DAAO;AACb;AACA;;AAEA,MAAM,qEAAc;AACpB;AACA;;AAEA,MAAM,2DAAI;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,yDAAY;AACrB;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,yDAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,iDAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,yDAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,iDAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa,yDAAM;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,yDAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,iDAAI;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA,WAAW,yDAAa,UAAU,yDAAO;AACzC;;AAEA;AACA;AACA;AACA,aAAa,yDAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa,iDAAI;AACjB;AACA;;AAEA;AACA;AACA,WAAW,yDAAK;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,iDAAI;AACf;AACA;AACA;AACA,WAAW,yDAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA,WAAW,yDAAI;AACf;AACA;AACA;AACA,WAAW,yDAAI;AACf,cAAc,yDAAI;AAClB,gBAAgB,yDAAK;AACrB,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,iDAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,G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BAA0B;AAC1B,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qBAAqB;AACrB,0BAA0B;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;AC/IA;AACA,cAAc,mBAAO,CAAC,wDAAY;AAClC,WAAW,mBAAO,CAAC,oEAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRa;AACb,aAAa,mBAAO,CAAC,uDAAW;AAChC,cAAc,mBAAO,CAAC,uDAAW;AACjC,WAAW,mBAAO,CAAC,qDAAS;AAC5B,YAAY,mBAAO,CAAC,sDAAU;AAC9B,WAAW,mBAAO,CAAC,qDAAS;AAC5B,kBAAkB,mBAAO,CAAC,6DAAiB;AAC3C,YAAY,mBAAO,CAAC,uDAAW;AAC/B,iBAAiB,mBAAO,CAAC,4DAAgB;AACzC,eAAe,mBAAO,CAAC,0DAAc;AACrC,qBAAqB,mBAAO,CAAC,kEAAsB;AACnD,SAAS,mBAAO,CAAC,0DAAc;AAC/B,WAAW,mBAAO,CAAC,8DAAkB;AACrC,kBAAkB,mBAAO,CAAC,4DAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC1DA,6BAA6B;AAC7B,uCAAuC;;;;;;;;;ACD1B;AACb,sBAAsB,mBAAO,CAAC,0DAAc;AAC5C,iBAAiB,mBAAO,CAAC,8DAAkB;;AAE3C;AACA;AACA;AACA;;;;;;;;ACPA;AACA,gBAAgB,mBAAO,CAAC,2DAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA,kBAAkB,mBAAO,CAAC,sDAAU;AACpC,iCAAiC,QAAQ,mBAAmB,UAAU,EAAE,EAAE;AAC1E,CAAC;;;;;;;;ACHD,eAAe,mBAAO,CAAC,0DAAc;AACrC,eAAe,mBAAO,CAAC,uDAAW;AAClC;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;;;;;;;;ACHA;AACA,cAAc,mBAAO,CAAC,4DAAgB;AACtC,WAAW,mBAAO,CAAC,4DAAgB;AACnC,UAAU,mBAAO,CAAC,2DAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACdA,aAAa,mBAAO,CAAC,uDAAW;AAChC,WAAW,mBAAO,CAAC,qDAAS;AAC5B,UAAU,mBAAO,CAAC,oDAAQ;AAC1B,WAAW,mBAAO,CAAC,qDAAS;AAC5B,UAAU,mBAAO,CAAC,oDAAQ;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA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AC9C;AACA,GAAG,YAAY;AACf;AACA;;;;;;;;ACrBA;AACA,UAAU;AACV;;;;;;;;ACFA;;;;;;;;ACAA;;;;;;;;ACAA,WAAW,mBAAO,CAAC,oDAAQ;AAC3B,eAAe,mBAAO,CAAC,0DAAc;AACrC,UAAU,mBAAO,CAAC,oDAAQ;AAC1B,cAAc,mBAAO,CAAC,0DAAc;AACpC;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,sDAAU;AAChC,iDAAiD;AACjD,CAAC;AACD;AACA,qBAAqB;AACrB;AACA,SAAS;AACT,GAAG,EAAE;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpDA,aAAa,mBAAO,CAAC,uDAAW;AAChC,gBAAgB,mBAAO,CAAC,qDAAS;AACjC;AACA;AACA;AACA,aAAa,mBAAO,CAAC,oDAAQ;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uCAAuC,sBAAsB,EAAE;AAC/D;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;ACpEa;AACb;AACA,gBAAgB,mBAAO,CAAC,2DAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACjBa;AACb;AACA,kBAAkB,mBAAO,CAAC,4DAAgB;AAC1C,cAAc,mBAAO,CAAC,4DAAgB;AACtC,WAAW,mBAAO,CAA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CD;AACA,QAAQ,mBAAO,CAAC,wDAAY;AAC5B;AACA,CAAC;;;;;;;;ACXD;AACA,eAAe,mBAAO,CAAC,0DAAc;AACrC,gBAAgB,mBAAO,CAAC,2DAAe;AACvC,cAAc,mBAAO,CAAC,oDAAQ;AAC9B;AACA;AACA;AACA;AACA;;;;;;;;ACRA,gBAAgB,mBAAO,CAAC,2DAAe;AACvC,cAAc,mBAAO,CAAC,wDAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA,UAAU,mBAAO,CAAC,oDAAQ;AAC1B,aAAa,mBAAO,CAAC,uDAAW;AAChC,WAAW,mBAAO,CAAC,qDAAS;AAC5B,UAAU,mBAAO,CAAC,2DAAe;AACjC,aAAa,mBAAO,CAAC,uDAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAO,CAAC,oDAAQ;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnFA,gBAAgB,mBAAO,CAAC,2DAAe;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA,cAAc,mBAAO,CAAC,wDAAY;AAClC,cAAc,mBAAO,CAAC,wDAAY;AAClC;AACA;AACA;;;;;;;;ACLA;AACA,gBAAgB,mBAAO,CAAC,2DAAe;AACvC;AACA;AACA,2DAA2D;AAC3D;;;;;;;;ACLA;AACA,cAAc,mBAAO,CAAC,wDAAY;AAC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AClC,aAAa,mBAAO,CAAC,uDAAW;AAChC,UAAU,mBAAO,CAAC,oDAAQ;AAC1B,cAAc,mBAAO,CAAC,wDAAY;AAClC,cAAc,mBAAO,CAAC,uDAAW;AACjC,eAAe,mBAAO,CAAC,0DAAc;AACrC,gBAAgB,mBAAO,CAAC,2DAAe;AACvC,iBAAiB,mBAAO,CAAC,4DAAgB;AACzC,YAAY,mBAAO,CAAC,uDAAW;AAC/B,yBAAyB,mBAAO,CAAC,oEAAwB;AACzD,WAAW,mBAAO,CAAC,qDAAS;AAC5B,gBAAgB,mBAAO,CAAC,0DAAc;AACtC,iCAAiC,mBAAO,CAAC,uEAA2B;AACpE,cAAc,mBAAO,CAAC,wDAAY;AAClC,gBAAgB,mBAAO,CAAC,2DAAe;AACvC,qBAAqB,mBAAO,CAAC,gEAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,EAAE,mBAAO,CAAC,oDAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,kCAAkC;AACrD,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,uCAAuC;AACtD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,yBAAyB,KAAK;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,wBAAwB;AACxB,gBAAgB;AAChB,oBAAoB;AACpB,wBAAwB;AACxB,gBAAgB;AAChB,oBAAoB;AACpB;AACA,uBAAuB,mBAAO,CAAC,6DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,oBAAoB;AAC9E,mBAAO,CAAC,kEAAsB;AAC9B,mBAAO,CAAC,4DAAgB;AACxB,UAAU,mBAAO,CAAC,qDAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gDAAgD,mBAAO,CAAC,4DAAgB;AACxE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;;AC7RD;AACA,SAAS,mBAAO,CAAC,0DAAc;AAC/B,WAAW,mBAAO,CAAC,4DAAgB;AACnC,qBAAqB,mBAAO,CAAC,2DAAe;AAC5C,UAAU,mBAAO,CAAC,oDAAQ;AAC1B,cAAc,mBAAO,CAAC,uDAAW;AACjC,iBAAiB,mBAAO,CAAC,8DAAkB;AAC3C,eAAe,mBAAO,CAAC,0DAAc;AACrC,eAAe,mBAAO,CAAC,0DAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,+BAA+B,WAAW;;;;;;;;;AChC7B;AACb,aAAa,mBAAO,CAAC,kEAAsB;AAC3C,eAAe,mBAAO,CAAC,oEAAwB;AAC/C;;AAEA;AACA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,yBAAyB,mEAAmE;AAC5F,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACbY;AACb,UAAU,mBAAO,CAAC,0DAAc;;AAEhC;AACA,mBAAO,CAAC,4DAAgB;AACxB,6BAA6B;AAC7B,cAAc;AACd;AACA,CAAC;AACD;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,UAAU;AACV,CAAC;;;;;;;;;AChBY;AACb;AACA,aAAa,mBAAO,CAAC,uDAAW;AAChC,UAAU,mBAAO,CAAC,oDAAQ;AAC1B,kBAAkB,mBAAO,CAAC,4DAAgB;AAC1C,cAAc,mBAAO,CAAC,uDAAW;AACjC,eAAe,mBAAO,CAAC,yDAAa;AACpC,WAAW,mBAAO,CAAC,qDAAS;AAC5B,aAAa,mBAAO,CAAC,sDAAU;AAC/B,aAAa,mBAAO,CAAC,uDAAW;AAChC,qBAAqB,mBAAO,CAAC,kEAAsB;AACnD,UAAU,mBAAO,CAAC,oDAAQ;AAC1B,UAAU,mBAAO,CAAC,oDAAQ;AAC1B,aAAa,mBAAO,CAAC,wDAAY;AACjC,gBAAgB,mBAAO,CAAC,2DAAe;AACvC,eAAe,mBAAO,CAAC,0DAAc;AACrC,cAAc,mBAAO,CAAC,yDAAa;AACnC,eAAe,mBAAO,CAAC,0DAAc;AACrC,eAAe,mBAAO,CAAC,0DAAc;AACrC,eAAe,mBAAO,CAAC,0DAAc;AACrC,gBAAgB,mBAAO,CAAC,2DAAe;AACvC,kBAAkB,mBAAO,CAAC,6DAAiB;AAC3C,iBAAiB,mBAAO,CAAC,8DAAkB;AAC3C,cAAc,mBAAO,CAAC,8DAAkB;AACxC,cAAc,mBAAO,CAAC,gEAAoB;AAC1C,YAAY,mBAAO,CAAC,4DAAgB;AACpC,YAAY,mBAAO,CAAC,4DAAgB;AACpC,UAAU,mBAAO,CAAC,0DAAc;AAChC,YAAY,mBAAO,CAAC,4DAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,sBAAsB,uBAAuB,WAAW,IAAI;AAC5D,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,KAAK;AACL;AACA,sBAAsB,mCAAmC;AACzD,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,gCAAgC;AAChG;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,EAAE,mBAAO,CAAC,4DAAgB;AAC1B,EAAE,mBAAO,CAAC,2DAAe;AACzB;;AAEA,sBAAsB,mBAAO,CAAC,wDAAY;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAA0D,kBAAkB;;AAE5E;AACA;AACA;AACA,oBAAoB,uBAAuB;;AAE3C,oDAAoD,6BAA6B;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,eAAe,EAAE;AAC3C,0BAA0B,gBAAgB;AAC1C,CAAC;;AAED;AACA;AA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Aa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;AAChE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE,uEAAuE;AACvE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;;AC/UA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0CAA0C,yBAAyB,EAAE;AACrE;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;;AAEA;;;;;;;;AChDA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvCA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;ACrCA,WAAW,mBAAO,CAAC,2CAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;AChCa;;AAEb,wBAAwB,mBAAO,CAAC,wDAAqB;;AAErD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;ACzBA,QAAQ,mBAAO,CAAC,yCAAc;AAC9B,iBAAiB,mBAAO,CAAC,8CAAmB;;;;;;;;ACD5C,cAAc,mBAAO,CAAC,0CAAY;AAClC,qBAAqB,mBAAO,CAAC,6CAAe;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,sBAAsB,yCAAyC;AAC/D,mBAAmB,yCAAyC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC,mBAAmB,gBAAgB;AACnC;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;;;;;;;;ACxjgBAAgB,aAAa;AAC7B,oBAAoB,aAAa;AACjC,kBAAkB,aAAa;AAC/B,sBAAsB,aAAa;AACnC,kBAAkB,aAAa;AAC/B,sBAAsB,aAAa;AACnC,iBAAiB,aAAa;AAC9B,oBAAoB,aAAa;AACjC,eAAe,aAAa;AAC5B,mBAAmB,aAAa;AAChC,cAAc,aAAa;AAC3B,mBAAmB,aAAa;AAChC,cAAc,aAAa;AAC3B,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;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AAC,8CAAiB;AAC5C,mBAAmB,mBAAO,CAAC,6CAAgB;;AAE3C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;;AAEjC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,yCAAyC;;AAE9D;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;AC/Ya;;;AAGb,mBAAmB,mBAAO,CAAC,6CAAgB;AAC3C,mBAAmB,mBAAO,CAAC,6CAAgB;AAC3C,mBAAmB,mBAAO,CAAC,8CAAiB;AAC5C,mBAAmB,mBAAO,CAAC,+CAAkB;AAC7C,mBAAmB,mBAAO,CAAC,8CAAiB;AAC5C,mBAAmB,mBAAO,CAAC,6CAAgB;AAC3C,mBAAmB,mBAAO,CAAC,8CAAiB;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,kEAAkE;;AAEvF;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,yCAAyC;;AAE9D;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;ACtaa;;;AAGb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,4BAA4B,YAAY;AACxC,qBAAqB,8BAA8B;AACnD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACxGA;AACa;;;AAGb,YAAY,mBAAO,CAAC,6CAAU;;;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,wCAAwC,EAAE,aAAa,sBAAsB;AAClF,KAAK,oDAAoD,EAAE,aAAa,0BAA0B;;;AAGlG;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,kCAAkC;;;AAGlC;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA,mBAAmB,qBAAqB,UAAU;;AAElD;AACA;AACA,oBAAoB,0BAA0B,gBAAgB,UAAU;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,0BAA0B,UAAU;;AAExD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,kBAAkB;;AAE3C;AACA;AACA,kDAAkD,OAAO;;AAEzD;AACA;AACA,gBAAgB,YAAY;;AAE5B;AACA;AACA,kBAAkB,YAAY;;AAE9B;AACA;;;;;;;;;AC1La;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;AClDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACnEa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA,sBAAsB;AACtB;;;AAGA;;;;;;;;;AC1Da;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,6CAAiB;AACvC,cAAc,mBAAO,CAAC,2CAAS;AAC/B,cAAc,mBAAO,CAAC,6CAAW;AACjC,cAAc,mBAAO,CAAC,2CAAS;AAC/B,cAAc,mBAAO,CAAC,8CAAY;;AAElC;AACA;;;AAGA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;;;AAGA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;;AAE1B,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,sBAAsB,qBAAqB,cAAc,EAAE;;;AAG/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B,kBAAkB,UAAU;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,wBAAwB;AACxB,YAAY;AACZ,UAAU;AACV,+BAA+B;AAC/B,gCAAgC;AAChC;AACA;;AAEA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;;AAE3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA,yDAAyD;AACzD;;AAEA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,mBAAmB;;AAEnB;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE;AACpE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mBAAmB;AACnB,kBAAkB;AAClB,0BAA0B;AAC1B,4BAA4B;AAC5B,uBAAuB;AACvB,mBAAmB;AACnB,gBAAgB;AAChB,qBAAqB;AACrB,mBAAmB;AACnB,2BAA2B;AAC3B,uBAAuB;;AAEvB,kBAAkB;AAClB,kBAAkB;AAClB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,iBAAiB;AACjB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,sBAAsB;AACtB,2BAA2B;AAC3B,oBAAoB;AACpB,uBAAuB;AACvB,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,oBAAoB;;AAEpB;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA;;AAEA,2CAA2C;AAC3C,6CAA6C;AAC7C,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,0BAA0B;AAC1B,+CAA+C;AAC/C;;AAEA,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;AACnB,kBAAkB;;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,6BAA6B,uBAAuB;AACpD,8BAA8B,uBAAuB;AACrD;AACA;AACA;;;AAGA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB,sCAAsC;;AAEtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB,qBAAqB;AACrB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B,2BAA2B,aAAa;AACxC,oBAAoB,qBAAqB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA,aAAa;;AAEb;AACA;AACA,qBAAqB;AACrB,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACj1Da;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACzDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX,UAAU;AACV,UAAU;AACV;AACA,WAAW;AACX;AACA,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ;AACA,eAAe;AACf,WAAW;AACX,WAAW;AACX,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,WAAW;AACX,SAAS;AACT;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX;;;AAGA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,gCAAgC;AAChC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kBAAkB;AAClB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxVa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,6CAAiB;AAC7C,oBAAoB,mBAAO,CAAC,6CAAW;AACvC,oBAAoB,mBAAO,CAAC,2CAAS;AACrC,oBAAoB,mBAAO,CAAC,6CAAW;AACvC,oBAAoB,mBAAO,CAAC,8CAAY;;AAExC;AACA;AACA;;AAEA;AACA;;;AAGA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;AAGA,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,cAAc;AACd,iBAAiB;AACjB,iBAAiB;AACjB,gBAAgB;AAChB,mBAAmB;AACnB,gBAAgB;AAChB,mBAAmB;AACnB,iBAAiB;AACjB,qBAAqB;AACrB,uBAAuB;AACvB,uBAAuB;AACvB,sBAAsB;AACtB,qBAAqB;AACrB,sBAAsB;AACtB,wBAAwB;AACxB,yBAAyB;AACzB,yBAAyB;AACzB,wBAAwB;AACxB,2BAA2B;AAC3B,yBAAyB;AACzB,4BAA4B;AAC5B,0BAA0B;AAC1B,wBAAwB;AACxB,kBAAkB;AAClB,mBAAmB;AACnB,iBAAiB;AACjB,gBAAgB;AAChB,gBAAgB;AAChB,iBAAiB;;AAEjB;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,gBAAgB;AAChB,oBAAoB;AACpB,gBAAgB;AAChB,wBAAwB;AACxB,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB;AACA,mBAAmB;;AAEnB;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,qBAAqB;;AAErB;AACA,gBAAgB;AAChB,gBAAgB;;AAEhB;AACA,kBAAkB;AAClB,kBAAkB;;AAElB;AACA,iBAAiB;;AAEjB;AACA,sBAAsB;AACtB,uBAAuB;AACvB,mBAAmB;AACnB,oBAAoB;;AAEpB;AACA,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,mBAAmB;;AAEnB,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qBAAqB;AACrB,sBAAsB;AACtB,gBAAgB;AAChB,gBAAgB;AAChB,eAAe;AACf;;AAEA;AACA;;AAEA,6BAA6B,uBAAuB;AACpD;AACA;AACA,gBAAgB;AAChB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,uBAAuB;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,uBAAuB;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;;AAE9C,uEAAuE,UAAU;;AAEjF;AACA;AACA,sBAAsB,uBAAuB;;AAE7C,uEAAuE,UAAU;;AAEjF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,WAAW;AACX,UAAU;AACV,iBAAiB;AACjB,WAAW;AACX,WAAW;AACX,gBAAgB;AAChB,WAAW;AACX,WAAW;AACX;AACA,eAAe;AACf,mCAAmC;AACnC,aAAa;AACb,mCAAmC;AACnC,UAAU;AACV,UAAU;AACV,+BAA+B;AAC/B;;AAEA,QAAQ;;AAER;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,qBAAqB,EAAE;;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,4BAA4B,aAAa;AACzC,2BAA2B,iBAAiB;AAC5C,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oEAAoE;AACpE;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,OAAO;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,kEAAkE;AAClE;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,oEAAoE;AACpE;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,kBAAkB;AACnD;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,uBAAuB;AACpD;AACA,+BAA+B,uBAAuB;;AAEtD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6DAA6D,uBAAuB;AACpF;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnhDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,6CAAiB;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB,cAAc;AACd,cAAc;AACd,uBAAuB;AACvB,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,WAAW;AACX,WAAW;AACX,UAAU;AACV,WAAW;AACX,WAAW;AACX,kBAAkB;AAClB;AACA,iBAAiB;AACjB,UAAU;AACV,2CAA2C,eAAe;AAC1D,0CAA0C,eAAe;AACzD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,eAAe,aAAa;AAC5B;AACA;;AAEA;AACA;AACA,qBAAqB,UAAU;AAC/B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,kBAAkB;AAClB,sCAAsC,2BAA2B;AACjE,uCAAuC;AACvC,wCAAwC;AACxC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA,eAAe,WAAW;AAC1B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;;AAEA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,GAAG,OAAO;AACV;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,UAAU;AACV,YAAY;AACZ,qBAAqB;AACrB,cAAc;AACd,WAAW;AACX,WAAW;AACX,mBAAmB;AACnB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACtVa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/Ba;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY,mBAAO,CAAC,6CAAiB;;AAErC;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;;;AAGA,oBAAoB,sBAAsB,qBAAqB,cAAc,EAAE;;AAE/E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA,kCAAkC;AAClC,iCAAiC;AACjC,iCAAiC;AACjC,4BAA4B;AAC5B,iCAAiC;;AAEjC;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA,2BAA2B;AAC3B,oBAAoB;AACpB,6BAA6B;AAC7B;;;;AAIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,WAAW;AACX,WAAW;AACX,YAAY;AACZ,QAAQ;AACR,mBAAmB;;AAEnB,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;;AAE/C,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,UAAU,EAAE;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;;AAE/B;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C,uBAAuB;AACvB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB,qBAAqB;AACrB;AACA,0CAA0C;AAC1C,eAAe;AACf,WAAW;AACX,QAAQ;;AAER;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA,oBAAoB,UAAU;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR,WAAW;AACX,aAAa;AACb,WAAW;AACX,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA,aAAa;AACb,QAAQ,gBAAgB;AACxB;AACA,eAAe,oCAAoC;AACnD;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA,aAAa,aAAa,QAAQ,iCAAiC;AACnE,aAAa,aAAa,QAAQ,iCAAiC;AACnE,aAAa,cAAc,OAAO,+BAA+B;;AAEjE;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,eAAe;AACf,kBAAkB;AAClB;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,YAAY;AACZ;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA,WAAW;AACX,SAAS;AACT,aAAa;AACb,WAAW;AACX,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,OAAO;AACP;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,kCAAkC;AAClC;AACA,eAAe;AACf;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA,oCAAoC;AACpC;AACA,OAAO;;AAEP;AACA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,oBAAoB;AACpB,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,QAAQ,OAAO,wBAAwB;;AAE9E;AACA;AACA;AACA,eAAe;AACf;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;;AAEA,KAAK;;AAEL,+BAA+B,kCAAkC;AACjE;;AAEA,KAAK;AACL;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL,UAAU,iCAAiC,EAAE;;AAE7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,gCAAgC;AAChC,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;;AAEA,wCAAwC;AACxC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI,MAAM,GAAG,MAAM,GAAG;AAChD;AACA;AACA;AACA,SAAS,IAAI,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;AACX;AACA,wDAAwD;AACxD,uCAAuC;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;AACX;AACA,4BAA4B;AAC5B,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,wBAAwB;;AAE1D,GAAG;AACH;AACA,4CAA4C;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW;AACX;AACA;AAC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AA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;;;;;;;;ACAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,IAAI;AACf,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;;;AAGA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,yDAAY;AACxB;AACA,KAAK;AACL,GAAG;AACH;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,yDAAY;AACvB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa;;AAEhB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE;AACpE;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;;AAEA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;;AAEA;;AAEA,MAAM,IAAqC;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,IAAqC;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;;AAEA;AACA,4EAA4E,aAAa;AACzF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,8BAA8B;AAC9B;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAqC;AACzC;AACA;;AAEgI;;;;;;;;ACtpBhI;AACA;AACA;AACA;AACA,GAAG;AACH,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,cAAc;AACrB,OAAO,gBAAgB;AACvB,OAAO,gBAAgB;AACvB,OAAO,oBAAoB;AAC3B,OAAO,kBAAkB;AACzB,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK,kCAAkC,UAAU;AACjD,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK,+BAA+B,eAAe,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK,0BAA0B,aAAa;AAC5C,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,sCAAsC;AACtC,yBAAyB;AACzB,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA,gCAAgC;AAChC,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;ACjXD,aAAa,mBAAO,CAAC,gDAAU;AAC/B,aAAa,mBAAO,CAAC,gDAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,+CAA+C;;AAE/C;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,iDAAW;AACjC;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC,uCAAuC;AACvC;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,6BAA6B;AACnD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E,GAAG;AACH;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;AC3HA,cAAc,mBAAO,CAAC,iDAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;;;;;;;;;ACjHa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBa;;;;;;;;;;;;;;;;;;;;;;;;AAEbK,OAAOC,cAAP,CAAsBV,OAAtB,EAA+B,YAA/B,EAA6C,EAAEI,OAAO,IAAT,EAA7C;;AAEA,SAASyH,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAI1D,OAAO,OAAO0D,GAAlB;AACA,SAAO,CAAC,CAACA,GAAF,KAAU1D,SAAS,QAAT,IAAqBA,SAAS,UAAxC,CAAP;AACD;;AAED,SAAS2D,UAAT,CAAoBD,GAApB,EAAyB;AACvB,SAAO,OAAOA,GAAP,KAAe,UAAtB;AACD;;AAED,IAAIE,SAAS,oBAAiB,SAASA,MAAT,CAAgBC,EAAhB,EAAoB;AAChD,MAAIC,OAAOlC,SAAX;AACA,OAAK,IAAIlE,IAAI,CAAb,EAAgBA,IAAIoG,KAAKvH,MAAzB,EAAiCmB,KAAK,CAAtC,EAAyC;AACvC,QAAIqG,OAAOD,KAAKpG,CAAL,CAAX;AACA,QAAIqG,IAAJ,EAAU;AACR,UAAIC,OAAO,oBAAYD,IAAZ,CAAX;AACA,WAAK,IAAIpH,IAAI,CAAb,EAAgBA,IAAIqH,KAAKzH,MAAzB,EAAiCI,KAAK,CAAtC,EAAyC;AACvC,YAAIsH,MAAMD,KAAKrH,CAAL,CAAV;AACAkH,WAAGI,GAAH,IAAUF,KAAKE,GAAL,CAAV;AACD;AACF;AACF;;AAED,SAAOJ,EAAP;AACD,CAdD;;AAgBA,IAAIxG,UAAUD,MAAMC,OAApB;;AAEA,SAAS6G,aAAT,CAAuBlI,KAAvB,EAA8B;AAC5B,SAAO,CAAC,CAACA,KAAF,IAAW,OAAOA,KAAP,KAAiB,QAA5B,IACL,8BAAsBA,KAAtB,MAAiCK,OAAOP,SAD1C;AAED;;AAKD,SAASqI,qBAAT,CAA+BC,SAA/B,EAA0CC,QAA1C,EAAoDC,QAApD,EAA8D;AAC5D,MAAI,CAACjH,QAAQgH,QAAR,CAAL,EAAwB;AAAE;AAAS;;AAEnC,MAAI9H,SAAS8H,SAAS9H,MAAtB;AACA,MAAIgI,WAAWH,UAAUE,QAAV,KAAuB,EAAtC;AACAF,YAAUE,QAAV,IAAsBC,QAAtB;AACA,OAAK,IAAI5H,IAAI,CAAb,EAAgBA,IAAIJ,MAApB,EAA4BI,KAAK,CAAjC,EAAoC;AAClC,QAAI6H,KAAKH,SAAS1H,CAAT,CAAT;AACA,QAAIgH,WAAWa,EAAX,KAAkBD,SAAS1F,OAAT,CAAiB2F,EAAjB,IAAuB,CAA7C,EAAgD;AAC9CD,eAASxH,IAAT,CAAcyH,EAAd;AACD;AACF;AACF;;AAGD,SAASC,iBAAT,CAA2BL,SAA3B,EAAsCM,SAAtC,EAAiDJ,QAAjD,EAA2D3D,MAA3D,EAAmE;AACjE,MAAI,CAAC8C,SAASiB,UAAUJ,QAAV,CAAT,CAAL,EAAoC;AAAE;AAAS;AAC/C,MAAI,CAACb,SAASW,UAAUE,QAAV,CAAT,CAAL,EAAoC;AAAEF,cAAUE,QAAV,IAAsB,EAAtB;AAA2B;AACjE3D,SAAOyD,UAAUE,QAAV,CAAP,EAA4BI,UAAUJ,QAAV,CAA5B;AACD;;AAED,SAASK,eAAT,CAAyBP,SAAzB,EAAoCM,SAApC,EAA+CJ,QAA/C,EAAyD;AACvDG,oBAAkBL,SAAlB,EAA6BM,SAA7B,EAAwCJ,QAAxC,EAAkDM,KAAlD;AACD;AACD,SAASC,WAAT,CAAqBT,SAArB,EAAgCM,SAAhC,EAA2CJ,QAA3C,EAAqD;AACnDG,oBAAkBL,SAAlB,EAA6BM,SAA7B,EAAwCJ,QAAxC,EAAkDV,MAAlD;AACD;;AAED;;;;;;;AAOA,SAASkB,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AAC1B,MAAIA,QAAQC,SAAZ,EAAuB;AAAE,WAAOF,GAAP;AAAa;;AAEtC;AACA;AACA,MAAI1H,QAAQ2H,GAAR,CAAJ,EAAkB;AAAE,WAAO,CAAC3H,QAAQ0H,GAAR,IAAeA,GAAf,GAAqB,EAAtB,EAA0BrF,MAA1B,CAAiCsF,GAAjC,CAAP;AAA+C;;AAEnE;AACA;AACA,MAAI,CAACd,cAAcc,GAAd,CAAL,EAAyB;AAAE,WAAOA,GAAP;AAAa;;AAExC;AACA,MAAIE,cAAczB,SAASsB,GAAT,IAAgBA,GAAhB,GAAsB,EAAxC;;AAEA,MAAIf,OAAO,oBAAYgB,GAAZ,CAAX;AACA,OAAK,IAAIrI,IAAI,CAAb,EAAgBA,IAAIqH,KAAKzH,MAAzB,EAAiCI,KAAK,CAAtC,EAAyC;AACvC,QAAIsH,MAAMD,KAAKrH,CAAL,CAAV;;AAEA,QAAIwI,WAAWH,IAAIf,GAAJ,CAAf;AACA;AACA,QAAIkB,aAAaF,SAAjB,EAA4B;AAC1B,UAAIG,WAAWF,YAAYjB,GAAZ,CAAf;AACA;AACA,UAAIoB,SAASnB,cAAckB,QAAd,KAA2B/H,QAAQ8H,QAAR,CAA3B,GAA+CC,QAA/C,GAA0D,EAAvE;;AAEA;AACAF,kBAAYjB,GAAZ,IAAmBa,SAASO,MAAT,EAAiBF,QAAjB,CAAnB;AACD;AACF;;AAED,SAAOD,WAAP;AACD;;AAED,IAAIN,QAAQ,UAAUG,GAAV,EAAe;AACzB,MAAIO,OAAO,EAAX;AAAA,MAAeC,MAAM3D,UAAUrF,MAAV,GAAmB,CAAxC;AACA,SAAQgJ,QAAQ,CAAhB,EAAoBD,KAAMC,GAAN,IAAc3D,UAAW2D,MAAM,CAAjB,CAAd;;AAEpB,SAAOD,KAAKE,MAAL,CAAYV,QAAZ,EAAsBC,GAAtB,CAAP;AACD,CALD;;AAOA;;;;;AAKA,SAASU,aAAT,CAAuBC,UAAvB,EAAmC;AACjC,SAAO,SAASC,KAAT,CAAeC,OAAf,EAAwB;AAC7B,QAAI9B,OAAO,EAAX;AAAA,QAAeyB,MAAM3D,UAAUrF,MAAV,GAAmB,CAAxC;AACA,WAAQgJ,QAAQ,CAAhB,EAAoBzB,KAAMyB,GAAN,IAAc3D,UAAW2D,MAAM,CAAjB,CAAd;;AAEpB;AACA,QAAI7B,MAAM,sBAAcgC,WAAWG,OAAX,IAAsB,IAApC,CAAV;;AAEAjB,UAAMlB,GAAN,EAAWgC,WAAWI,cAAtB;AACAlC,WAAOF,GAAP,EAAYgC,WAAWK,UAAvB;AACA,oCAAwBrC,GAAxB,EAA6BgC,WAAWM,mBAAX,IAAkC,EAA/D;;AAEA,QAAI,CAACN,WAAWO,YAAZ,IAA4BP,WAAWO,YAAX,CAAwB1J,MAAxB,KAAmC,CAAnE,EAAsE;AAAE,aAAOmH,GAAP;AAAa;;AAErF,QAAIkC,YAAYX,SAAhB,EAA2B;AAAEW,gBAAU,EAAV;AAAe;AAC5C,QAAIM,QAAQR,WAAWO,YAAvB;AACA,QAAI1J,SAAS2J,MAAM3J,MAAnB;AACA,SAAK,IAAII,IAAI,CAAb,EAAgBA,IAAIJ,MAApB,EAA4BI,KAAK,CAAjC,EAAoC;AAClC,UAAIwJ,cAAcD,MAAMvJ,CAAN,CAAlB;AACA,UAAIgH,WAAWwC,WAAX,CAAJ,EAA6B;AAC3B,YAAIC,gBAAgBD,YAAY1J,IAAZ,CAAiBiH,GAAjB,EAAsBkC,OAAtB,EAClB,EAACS,UAAU3C,GAAX,EAAgB4C,OAAOX,KAAvB,EAA8B7B,MAAM,CAAC8B,OAAD,EAAUlG,MAAV,CAAiBoE,IAAjB,CAApC,EADkB,CAApB;AAEAJ,cAAM0C,kBAAkBnB,SAAlB,GAA8BvB,GAA9B,GAAoC0C,aAA1C;AACD;AACF;;AAED,WAAO1C,GAAP;AACD,GA1BD;AA2BD;;AAED;;;;;;AAMA,SAAS6C,WAAT,CAAqBb,UAArB,EAAiCc,eAAjC,EAAkD;AAChD,MAAIb,QAAQF,cAAcC,UAAd,CAAZ;;AAEAd,QAAMe,KAAN,EAAaD,WAAWe,oBAAxB;AACA7C,SAAO+B,KAAP,EAAcD,WAAWgB,gBAAzB;AACA,kCAAwBf,KAAxB,EAA+BD,WAAWiB,yBAAX,IAAwC,EAAvE;;AAEA,MAAIC,wBAAwBjD,WAAWgC,MAAMkB,OAAjB,IAA4BlB,MAAMkB,OAAlC,GAA4CL,eAAxE;AACAb,QAAMkB,OAAN,GAAgB,SAASC,QAAT,GAAoB;AAClC,QAAIhD,OAAO,EAAX;AAAA,QAAeyB,MAAM3D,UAAUrF,MAA/B;AACA,WAAQgJ,KAAR,EAAgBzB,KAAMyB,GAAN,IAAc3D,UAAW2D,GAAX,CAAd;;AAEhB,WAAOqB,sBAAsB5J,KAAtB,CAA4B,IAA5B,EAAkC8G,IAAlC,CAAP;AACD,GALD;AAMAF,SAAO+B,MAAMkB,OAAb,EAAsBnB,UAAtB;;AAEA,SAAOC,KAAP;AACD;;AAED;;;;;;;AAOA,SAASoB,eAAT,CAAyBC,aAAzB,EAAwCC,aAAxC,EAAuD;AACrD,MAAIC,gBAAiBD,iBAAiBA,cAAcJ,OAAhC,IAA4CI,aAAhE;AACA,MAAI,CAACxD,SAASyD,aAAT,CAAL,EAA8B;AAAE,WAAOF,aAAP;AAAuB;;AAEvDnC,cAAYmC,aAAZ,EAA2BE,aAA3B,EAA0C,SAA1C;AACArC,cAAYmC,aAAZ,EAA2BE,aAA3B,EAA0C,YAA1C;AACAvC,kBAAgBqC,aAAhB,EAA+BE,aAA/B,EAA8C,gBAA9C;AACArC,cAAYmC,aAAZ,EAA2BE,aAA3B,EAA0C,qBAA1C;AACArC,cAAYmC,aAAZ,EAA2BE,aAA3B,EAA0C,kBAA1C;AACAvC,kBAAgBqC,aAAhB,EAA+BE,aAA/B,EAA8C,sBAA9C;AACArC,cAAYmC,aAAZ,EAA2BE,aAA3B,EAA0C,2BAA1C;AACArC,cAAYmC,aAAZ,EAA2BE,aAA3B,EAA0C,eAA1C;AACAvC,kBAAgBqC,aAAhB,EAA+BE,aAA/B,EAA8C,mBAA9C;AACA/C,wBAAsB6C,aAAtB,EAAqCE,cAAcjB,YAAnD,EAAiE,cAAjE;;AAEA,SAAOe,aAAP;AACD;;AAED;;;;;;;AAOA,SAASH,OAAT,GAAmB;AACjB,MAAIM,cAAc,EAAlB;AAAA,MAAsB5B,MAAM3D,UAAUrF,MAAtC;AACA,SAAQgJ,KAAR,EAAgB4B,YAAa5B,GAAb,IAAqB3D,UAAW2D,GAAX,CAArB;;AAEhB,MAAIG,aAAa,CAAC,IAAD,EACdhG,MADc,CACPyH,WADO,EAEd3I,MAFc,CAEPiF,QAFO,EAGd+B,MAHc,CAGPuB,eAHO,EAGU,EAHV,CAAjB;AAIA,SAAOR,YAAYb,UAAZ,EAAwBmB,OAAxB,CAAP;AACD;;AAGD;;;;;;;;;;;;;;;;AAgBA;;;;;;;AAOA;;;;;AAKAjL,QAAQ,SAAR,IAAqBiL,OAArB;AACAO,OAAOxL,OAAP,GAAiBA,QAAQ,SAAR,CAAjB;AACA,mC;;;;;;;;ACxPA;AAAA;AAAA;AACqC;;AAErC;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC,UAAU,IAA6B;AACxC;AACA,CAAC,MAAM,EAEN;;AAED,aAAa,4DAAQ;AACN,qEAAM,EAAC;;;;;;;;;;AClBtB;AAAA;AAAe;AACf;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;;;;;;;;ACfA,YAAY,mBAAO,CAAC,2CAAe;;AAEnC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;ACnBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;ACjEA,YAAY,mBAAO,CAAC,wCAAY;;AAEhC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACpBA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;AACL,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,CAAC,CAAC,MAA8B,GAAG,SAAc;;;;;;;;;ACzMjD;AAAA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;;AAEe,0EAAW,E;;;;;;;;ACjB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACA;AACA;;;;;;;;;ACFxC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;;AAEA;;AAEA,aAAa,aAAa;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,kEAAG,E;;;;;;;;ACzNlB;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAEhB;AACf;AACA;AACA;;AAEA;AACA,C;;;;;;;;ACdA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,mEAAI,E;;;;;;;;AC1FnB;AAAA;AAAA;AAA2B;AACgB;AAC3C;AACA;AACA;;AAEA;;AAEA,cAAc;;;AAGd;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;;AAEA;AACA,sDAAsD,+CAAG;;AAEzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA,iFAAiF;AACjF;;AAEA,2EAA2E;;AAE3E,6DAA6D;;AAE7D;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,sBAAsB;;AAEtB,mCAAmC;;AAEnC,6BAA6B;;AAE7B,iCAAiC;;AAEjC,2BAA2B;;AAE3B,iBAAiB,OAAO;AACxB;AACA;;AAEA,qBAAqB,+DAAW;AAChC;;AAEe,iEAAE,E;;;;;;;;AC9FjB;AAAA;AAAA;AAA2B;AACA;AAC3B,SAAS,uDAAG,aAAa,+CAAG;AACb,iEAAE,E;;;;;;;;ACHjB;AAAA;AAAA;AAAA;AAA2C;;AAE3C;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA,GAAG;AACH;AACA;;AAEA;AACA,0CAA0C;;AAE1C;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;AAEO;AACA;AACQ;AACf;AACA;AACA;AACA;AACA;AACA,6IAA6I;;AAE7I;AACA;AACA;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;;AAEA,kBAAkB,+DAAW;AAC7B,IAAI;;;AAGJ;AACA;AACA,GAAG,eAAe;;;AAGlB;AACA;AACA;AACA,C;;;;;;;;ACvDA;AAAA;AAAA;AAA2B;AACgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,+CAAG,IAAI;;AAEtD;AACA,kCAAkC;;AAElC;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA,gBAAgB,+DAAW;AAC3B;;AAEe,iEAAE,E;;;;;;;;AC1BjB;AAAA;AAAA;AAA2B;AACE;AAC7B,SAAS,uDAAG,aAAa,gDAAI;AACd,iEAAE,E;;;;;;;;ACHjB;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2FAA2F,aAAa;AACxG;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA,0EAA0E,aAAa;AACvF;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;AC5pBnB;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;ACrBA,mFAAa,GAAG,IAAsD,EAAE,mBAAmB,KAAK,UAAgO,CAAC,aAAa,0BAA0B,mBAAmB,kBAAkB,gBAAgB,UAAU,UAAU,0CAA0C,gBAAgB,OAAC,OAAO,oBAAoB,8CAA8C,kCAAkC,YAAY,YAAY,mCAAmC,iBAAiB,eAAe,sBAAsB,oBAAoB,kDAAkD,WAAW,YAAY,SAAS,SAAS,KAAK;;AAE5zB,CAAC,GAAG;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,0BAA0B;AAC1B;AACA;AACA;AACA,yDAAyD;AACzD,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iCAAiC,sBAAsB;;AAEvD,CAAC,qIAAqI;AACtI,CAAC,EAAE,yBAAyB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC,EAAE,kIAAkI;;AAErI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ,sBAAsB;AAC3C;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,+DAA+D;AAC/D;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,oCAAoC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,gDAAgD;AAChD;AACA;AACA,yDAAyD,oBAAoB;AAC7E,yDAAyD;AACzD;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,iBAAiB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,CAAC,EAAE,qBAAqB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,iCAAiC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,8BAA8B;AAC9B,oCAAoC,EAAE;AACtC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAgE;AAC7E,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,cAAc;AACjaAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,cAAc;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;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;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxQa;AACb,6EAA6E,2CAA2C;;;;;;;;;;;;;;ACDxH;;;;;AAKO,MAAMsB,kDAAqB;AAChCC,QAAM,MAD0B;AAEhCC,WAAS,SAFuB;AAGhCC,QAAM;;AAGR;;;;;AANkC,CAA3B,CAWA,MAAMC,kDAAqB;AAChCC,QAAM,MAD0B;AAEhCC,mBAAiB;AAFe,CAA3B,C;;;;;;;;;;;;;AChBP,MAAMC,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","file":"kandy.newLink.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Kandy\"] = factory();\n\telse\n\t\troot[\"Kandy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { TASK_CANCEL, TERMINATE, SAGA_LOCATION, SAGA_ACTION, IO, SELF_CANCELLATION } from '@redux-saga/symbols';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { array, notUndef, pattern, multicast, channel, undef, effect, task, func, buffer, string, object } from '@redux-saga/is';\nimport delayP from '@redux-saga/delay-p';\n\nvar konst = function konst(v) {\n  return function () {\n    return v;\n  };\n};\nvar kTrue =\n/*#__PURE__*/\nkonst(true);\n\nvar noop = function noop() {};\n\nif (process.env.NODE_ENV !== 'production' && typeof Proxy !== 'undefined') {\n  noop =\n  /*#__PURE__*/\n  new Proxy(noop, {\n    set: function set() {\n      throw internalErr('There was an attempt to assign a property to internal `noop` function.');\n    }\n  });\n}\nvar identity = function identity(v) {\n  return v;\n};\nvar hasSymbol = typeof Symbol === 'function';\nvar asyncIteratorSymbol = hasSymbol && Symbol.asyncIterator ? Symbol.asyncIterator : '@@asyncIterator';\nfunction check(value, predicate, error) {\n  if (!predicate(value)) {\n    throw new Error(error);\n  }\n}\nvar assignWithSymbols = function assignWithSymbols(target, source) {\n  _extends(target, source);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(source).forEach(function (s) {\n      target[s] = source[s];\n    });\n  }\n};\nvar flatMap = function flatMap(mapper, arr) {\n  var _ref;\n\n  return (_ref = []).concat.apply(_ref, arr.map(mapper));\n};\nfunction remove(array, item) {\n  var index = array.indexOf(item);\n\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction once(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    fn();\n  };\n}\n\nvar kThrow = function kThrow(err) {\n  throw err;\n};\n\nvar kReturn = function kReturn(value) {\n  return {\n    value: value,\n    done: true\n  };\n};\n\nfunction makeIterator(next, thro, name) {\n  if (thro === void 0) {\n    thro = kThrow;\n  }\n\n  if (name === void 0) {\n    name = 'iterator';\n  }\n\n  var iterator = {\n    meta: {\n      name: name\n    },\n    next: next,\n    throw: thro,\n    return: kReturn,\n    isSagaIterator: true\n  };\n\n  if (typeof Symbol !== 'undefined') {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n\n  return iterator;\n}\nfunction logError(error, _ref2) {\n  var sagaStack = _ref2.sagaStack;\n\n  /*eslint-disable no-console*/\n  console.error(error);\n  console.error(sagaStack);\n}\nvar internalErr = function internalErr(err) {\n  return new Error(\"\\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\\n  in redux-saga code and not yours. Thanks for reporting this in the project's github repo.\\n  Error: \" + err + \"\\n\");\n};\nvar createSetContextWarning = function createSetContextWarning(ctx, props) {\n  return (ctx ? ctx + '.' : '') + \"setContext(props): argument \" + props + \" is not a plain object\";\n};\nvar FROZEN_ACTION_ERROR = \"You can't put (a.k.a. dispatch from saga) frozen actions.\\nWe have to define a special non-enumerable property on those actions for scheduling purposes.\\nOtherwise you wouldn't be able to communicate properly between sagas & other subscribers (action ordering would become far less predictable).\\nIf you are using redux and you care about this behaviour (frozen actions),\\nthen you might want to switch to freezing actions in a middleware rather than in action creator.\\nExample implementation:\\n\\nconst freezeActions = store => next => action => next(Object.freeze(action))\\n\"; // creates empty, but not-holey array\n\nvar createEmptyArray = function createEmptyArray(n) {\n  return Array.apply(null, new Array(n));\n};\nvar wrapSagaDispatch = function wrapSagaDispatch(dispatch) {\n  return function (action) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(action, function (ac) {\n        return !Object.isFrozen(ac);\n      }, FROZEN_ACTION_ERROR);\n    }\n\n    return dispatch(Object.defineProperty(action, SAGA_ACTION, {\n      value: true\n    }));\n  };\n};\nvar shouldTerminate = function shouldTerminate(res) {\n  return res === TERMINATE;\n};\nvar shouldCancel = function shouldCancel(res) {\n  return res === TASK_CANCEL;\n};\nvar shouldComplete = function shouldComplete(res) {\n  return shouldTerminate(res) || shouldCancel(res);\n};\nfunction createAllStyleChildCallbacks(shape, parentCallback) {\n  var keys = Object.keys(shape);\n  var totalCount = keys.length;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(totalCount, function (c) {\n      return c > 0;\n    }, 'createAllStyleChildCallbacks: get an empty array or object');\n  }\n\n  var completedCount = 0;\n  var completed;\n  var results = array(shape) ? createEmptyArray(totalCount) : {};\n  var childCallbacks = {};\n\n  function checkEnd() {\n    if (completedCount === totalCount) {\n      completed = true;\n      parentCallback(results);\n    }\n  }\n\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        parentCallback.cancel();\n        parentCallback(res, isErr);\n      } else {\n        results[key] = res;\n        completedCount++;\n        checkEnd();\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCallbacks[key] = chCbAtKey;\n  });\n\n  parentCallback.cancel = function () {\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCallbacks[key].cancel();\n      });\n    }\n  };\n\n  return childCallbacks;\n}\nfunction getMetaInfo(fn) {\n  return {\n    name: fn.name || 'anonymous',\n    location: getLocation(fn)\n  };\n}\nfunction getLocation(instrumented) {\n  return instrumented[SAGA_LOCATION];\n}\n\nvar BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\nvar zeroBuffer = {\n  isEmpty: kTrue,\n  put: noop,\n  take: noop\n};\n\nfunction ringBuffer(limit, overflowAction) {\n  if (limit === void 0) {\n    limit = 10;\n  }\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n\n    while (length) {\n      items.push(take());\n    }\n\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit;\n\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n            arr = flush();\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n            push(it);\n            break;\n\n          default: // DROP\n\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nvar none = function none() {\n  return zeroBuffer;\n};\nvar fixed = function fixed(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_THROW);\n};\nvar dropping = function dropping(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_DROP);\n};\nvar sliding = function sliding(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n};\nvar expanding = function expanding(initialSize) {\n  return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n};\n\nvar buffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  none: none,\n  fixed: fixed,\n  dropping: dropping,\n  sliding: sliding,\n  expanding: expanding\n});\n\nvar TAKE = 'TAKE';\nvar PUT = 'PUT';\nvar ALL = 'ALL';\nvar RACE = 'RACE';\nvar CALL = 'CALL';\nvar CPS = 'CPS';\nvar FORK = 'FORK';\nvar JOIN = 'JOIN';\nvar CANCEL = 'CANCEL';\nvar SELECT = 'SELECT';\nvar ACTION_CHANNEL = 'ACTION_CHANNEL';\nvar CANCELLED = 'CANCELLED';\nvar FLUSH = 'FLUSH';\nvar GET_CONTEXT = 'GET_CONTEXT';\nvar SET_CONTEXT = 'SET_CONTEXT';\n\nvar effectTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TAKE: TAKE,\n  PUT: PUT,\n  ALL: ALL,\n  RACE: RACE,\n  CALL: CALL,\n  CPS: CPS,\n  FORK: FORK,\n  JOIN: JOIN,\n  CANCEL: CANCEL,\n  SELECT: SELECT,\n  ACTION_CHANNEL: ACTION_CHANNEL,\n  CANCELLED: CANCELLED,\n  FLUSH: FLUSH,\n  GET_CONTEXT: GET_CONTEXT,\n  SET_CONTEXT: SET_CONTEXT\n});\n\nvar TEST_HINT = '\\n(HINT: if you are getting these errors in tests, consider using createMockTask from @redux-saga/testing-utils)';\n\nvar makeEffect = function makeEffect(type, payload) {\n  var _ref;\n\n  return _ref = {}, _ref[IO] = true, _ref.combinator = false, _ref.type = type, _ref.payload = payload, _ref;\n};\n\nvar isForkEffect = function isForkEffect(eff) {\n  return effect(eff) && eff.type === FORK;\n};\n\nvar detach = function detach(eff) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(eff, isForkEffect, 'detach(eff): argument must be a fork effect');\n  }\n\n  return makeEffect(FORK, _extends({}, eff.payload, {\n    detached: true\n  }));\n};\nfunction take(patternOrChannel, multicastPattern) {\n  if (patternOrChannel === void 0) {\n    patternOrChannel = '*';\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'take(patternOrChannel): patternOrChannel is undefined');\n  }\n\n  if (pattern(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      pattern: patternOrChannel\n    });\n  }\n\n  if (multicast(patternOrChannel) && notUndef(multicastPattern) && pattern(multicastPattern)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel,\n      pattern: multicastPattern\n    });\n  }\n\n  if (channel(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    throw new Error(\"take(patternOrChannel): argument \" + patternOrChannel + \" is not valid channel or a valid pattern\");\n  }\n}\nvar takeMaybe = function takeMaybe() {\n  var eff = take.apply(void 0, arguments);\n  eff.payload.maybe = true;\n  return eff;\n};\nfunction put(channel$1, action) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      check(channel$1, notUndef, 'put(channel, action): argument channel is undefined');\n      check(channel$1, channel, \"put(channel, action): argument \" + channel$1 + \" is not a valid channel\");\n      check(action, notUndef, 'put(channel, action): argument action is undefined');\n    } else {\n      check(channel$1, notUndef, 'put(action): argument action is undefined');\n    }\n  }\n\n  if (undef(action)) {\n    action = channel$1; // `undefined` instead of `null` to make default parameter work\n\n    channel$1 = undefined;\n  }\n\n  return makeEffect(PUT, {\n    channel: channel$1,\n    action: action\n  });\n}\nvar putResolve = function putResolve() {\n  var eff = put.apply(void 0, arguments);\n  eff.payload.resolve = true;\n  return eff;\n};\nfunction all(effects) {\n  var eff = makeEffect(ALL, effects);\n  eff.combinator = true;\n  return eff;\n}\nfunction race(effects) {\n  var eff = makeEffect(RACE, effects);\n  eff.combinator = true;\n  return eff;\n} // this match getFnCallDescriptor logic\n\nvar validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {\n  check(fnDescriptor, notUndef, effectName + \": argument fn is undefined or null\");\n\n  if (func(fnDescriptor)) {\n    return;\n  }\n\n  var context = null;\n  var fn;\n\n  if (array(fnDescriptor)) {\n    context = fnDescriptor[0];\n    fn = fnDescriptor[1];\n    check(fn, notUndef, effectName + \": argument of type [context, fn] has undefined or null `fn`\");\n  } else if (object(fnDescriptor)) {\n    context = fnDescriptor.context;\n    fn = fnDescriptor.fn;\n    check(fn, notUndef, effectName + \": argument of type {context, fn} has undefined or null `fn`\");\n  } else {\n    check(fnDescriptor, func, effectName + \": argument fn is not function\");\n    return;\n  }\n\n  if (context && string(fn)) {\n    check(context[fn], func, effectName + \": context arguments has no such method - \\\"\" + fn + \"\\\"\");\n    return;\n  }\n\n  check(fn, func, effectName + \": unpacked fn argument (from [context, fn] or {context, fn}) is not a function\");\n};\n\nfunction getFnCallDescriptor(fnDescriptor, args) {\n  var context = null;\n  var fn;\n\n  if (func(fnDescriptor)) {\n    fn = fnDescriptor;\n  } else {\n    if (array(fnDescriptor)) {\n      context = fnDescriptor[0];\n      fn = fnDescriptor[1];\n    } else {\n      context = fnDescriptor.context;\n      fn = fnDescriptor.fn;\n    }\n\n    if (context && string(fn) && func(context[fn])) {\n      fn = context[fn];\n    }\n  }\n\n  return {\n    context: context,\n    fn: fn,\n    args: args\n  };\n}\n\nvar isNotDelayEffect = function isNotDelayEffect(fn) {\n  return fn !== delay;\n};\n\nfunction call(fnDescriptor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    var arg0 = typeof args[0] === 'number' ? args[0] : 'ms';\n    check(fnDescriptor, isNotDelayEffect, \"instead of writing `yield call(delay, \" + arg0 + \")` where delay is an effect from `redux-saga/effects` you should write `yield delay(\" + arg0 + \")`\");\n    validateFnDescriptor('call', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction apply(context, fn, args) {\n  if (args === void 0) {\n    args = [];\n  }\n\n  var fnDescriptor = [context, fn];\n\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('apply', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor([context, fn], args));\n}\nfunction cps(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('cps', fnDescriptor);\n  }\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return makeEffect(CPS, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction fork(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('fork', fnDescriptor);\n    check(fnDescriptor, function (arg) {\n      return !effect(arg);\n    }, 'fork: argument must not be an effect');\n  }\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction spawn(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('spawn', fnDescriptor);\n  }\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  return detach(fork.apply(void 0, [fnDescriptor].concat(args)));\n}\nfunction join(taskOrTasks) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('join(...tasks) is not supported any more. Please use join([...tasks]) to join multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"join([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else {\n      check(taskOrTasks, task, \"join(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(JOIN, taskOrTasks);\n}\nfunction cancel(taskOrTasks) {\n  if (taskOrTasks === void 0) {\n    taskOrTasks = SELF_CANCELLATION;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('cancel(...tasks) is not supported any more. Please use cancel([...tasks]) to cancel multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"cancel([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else if (taskOrTasks !== SELF_CANCELLATION && notUndef(taskOrTasks)) {\n      check(taskOrTasks, task, \"cancel(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(CANCEL, taskOrTasks);\n}\nfunction select(selector) {\n  if (selector === void 0) {\n    selector = identity;\n  }\n\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'select(selector, [...]): argument selector is undefined');\n    check(selector, func, \"select(selector, [...]): argument \" + selector + \" is not a function\");\n  }\n\n  return makeEffect(SELECT, {\n    selector: selector,\n    args: args\n  });\n}\n/**\n  channel(pattern, [buffer])    => creates a proxy channel for store actions\n**/\n\nfunction actionChannel(pattern$1, buffer$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(pattern$1, pattern, 'actionChannel(pattern,...): argument pattern is not valid');\n\n    if (arguments.length > 1) {\n      check(buffer$1, notUndef, 'actionChannel(pattern, buffer): argument buffer is undefined');\n      check(buffer$1, buffer, \"actionChannel(pattern, buffer): argument \" + buffer$1 + \" is not a valid buffer\");\n    }\n  }\n\n  return makeEffect(ACTION_CHANNEL, {\n    pattern: pattern$1,\n    buffer: buffer$1\n  });\n}\nfunction cancelled() {\n  return makeEffect(CANCELLED, {});\n}\nfunction flush(channel$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(channel$1, channel, \"flush(channel): argument \" + channel$1 + \" is not valid channel\");\n  }\n\n  return makeEffect(FLUSH, channel$1);\n}\nfunction getContext(prop) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(prop, string, \"getContext(prop): argument \" + prop + \" is not a string\");\n  }\n\n  return makeEffect(GET_CONTEXT, prop);\n}\nfunction setContext(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(props, object, createSetContextWarning(null, props));\n  }\n\n  return makeEffect(SET_CONTEXT, props);\n}\nvar delay =\n/*#__PURE__*/\ncall.bind(null, delayP);\n\nexport { apply as $, ALL as A, logError as B, CALL as C, wrapSagaDispatch as D, identity as E, FORK as F, GET_CONTEXT as G, buffers as H, detach as I, JOIN as J, take as K, fork as L, cancel as M, call as N, actionChannel as O, PUT as P, sliding as Q, RACE as R, SELECT as S, TAKE as T, delay as U, race as V, effectTypes as W, takeMaybe as X, put as Y, putResolve as Z, all as _, CPS as a, cps as a0, spawn as a1, join as a2, select as a3, cancelled as a4, flush as a5, getContext as a6, setContext as a7, CANCEL as b, check as c, ACTION_CHANNEL as d, expanding as e, CANCELLED as f, FLUSH as g, SET_CONTEXT as h, internalErr as i, getMetaInfo as j, kTrue as k, createAllStyleChildCallbacks as l, createEmptyArray as m, none as n, once as o, assignWithSymbols as p, makeIterator as q, remove as r, shouldComplete as s, noop as t, flatMap as u, getLocation as v, createSetContextWarning as w, asyncIteratorSymbol as x, shouldCancel as y, shouldTerminate as z };\n","import { CHANNEL_END_TYPE, MULTICAST, MATCH, SAGA_ACTION, CANCEL, SELF_CANCELLATION, TERMINATE, TASK, TASK_CANCEL, IO } from '@redux-saga/symbols';\nexport { CANCEL, SAGA_LOCATION } from '@redux-saga/symbols';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { string as string$1, array as array$1, stringableFunc, func, symbol as symbol$1, buffer, notUndef, promise, iterator, undef, object, channel as channel$1 } from '@redux-saga/is';\nimport { k as kTrue, e as expanding, c as check, o as once, r as remove, n as none, i as internalErr, T as TAKE, P as PUT, A as ALL, R as RACE, C as CALL, a as CPS, F as FORK, J as JOIN, b as CANCEL$1, S as SELECT, d as ACTION_CHANNEL, f as CANCELLED$1, g as FLUSH, G as GET_CONTEXT, h as SET_CONTEXT, j as getMetaInfo, l as createAllStyleChildCallbacks, m as createEmptyArray, p as assignWithSymbols, q as makeIterator, s as shouldComplete, t as noop, u as flatMap, v as getLocation, w as createSetContextWarning, x as asyncIteratorSymbol, y as shouldCancel, z as shouldTerminate, B as logError, D as wrapSagaDispatch, E as identity } from './io-6de156f3.js';\nexport { H as buffers, I as detach } from './io-6de156f3.js';\nimport { compose } from 'redux';\nimport deferred from '@redux-saga/deferred';\nimport '@redux-saga/delay-p';\n\nvar queue = [];\n/**\n  Variable to hold a counting semaphore\n  - Incrementing adds a lock and puts the scheduler in a `suspended` state (if it's not\n    already suspended)\n  - Decrementing releases a lock. Zero locks puts the scheduler in a `released` state. This\n    triggers flushing the queued tasks.\n**/\n\nvar semaphore = 0;\n/**\n  Executes a task 'atomically'. Tasks scheduled during this execution will be queued\n  and flushed after this task has finished (assuming the scheduler endup in a released\n  state).\n**/\n\nfunction exec(task) {\n  try {\n    suspend();\n    task();\n  } finally {\n    release();\n  }\n}\n/**\n  Executes or queues a task depending on the state of the scheduler (`suspended` or `released`)\n**/\n\n\nfunction asap(task) {\n  queue.push(task);\n\n  if (!semaphore) {\n    suspend();\n    flush();\n  }\n}\n/**\n * Puts the scheduler in a `suspended` state and executes a task immediately.\n */\n\nfunction immediately(task) {\n  try {\n    suspend();\n    return task();\n  } finally {\n    flush();\n  }\n}\n/**\n  Puts the scheduler in a `suspended` state. Scheduled tasks will be queued until the\n  scheduler is released.\n**/\n\nfunction suspend() {\n  semaphore++;\n}\n/**\n  Puts the scheduler in a `released` state.\n**/\n\n\nfunction release() {\n  semaphore--;\n}\n/**\n  Releases the current lock. Executes all queued tasks if the scheduler is in the released state.\n**/\n\n\nfunction flush() {\n  release();\n  var task;\n\n  while (!semaphore && (task = queue.shift()) !== undefined) {\n    exec(task);\n  }\n}\n\nvar array = function array(patterns) {\n  return function (input) {\n    return patterns.some(function (p) {\n      return matcher(p)(input);\n    });\n  };\n};\nvar predicate = function predicate(_predicate) {\n  return function (input) {\n    return _predicate(input);\n  };\n};\nvar string = function string(pattern) {\n  return function (input) {\n    return input.type === String(pattern);\n  };\n};\nvar symbol = function symbol(pattern) {\n  return function (input) {\n    return input.type === pattern;\n  };\n};\nvar wildcard = function wildcard() {\n  return kTrue;\n};\nfunction matcher(pattern) {\n  // prettier-ignore\n  var matcherCreator = pattern === '*' ? wildcard : string$1(pattern) ? string : array$1(pattern) ? array : stringableFunc(pattern) ? string : func(pattern) ? predicate : symbol$1(pattern) ? symbol : null;\n\n  if (matcherCreator === null) {\n    throw new Error(\"invalid pattern: \" + pattern);\n  }\n\n  return matcherCreator(pattern);\n}\n\nvar END = {\n  type: CHANNEL_END_TYPE\n};\nvar isEnd = function isEnd(a) {\n  return a && a.type === CHANNEL_END_TYPE;\n};\nvar CLOSED_CHANNEL_WITH_TAKERS = 'Cannot have a closed channel with pending takers';\nvar INVALID_BUFFER = 'invalid buffer passed to channel factory function';\nvar UNDEFINED_INPUT_ERROR = \"Saga or channel was provided with an undefined action\\nHints:\\n  - check that your Action Creator returns a non-undefined value\\n  - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners\";\nfunction channel(buffer$1) {\n  if (buffer$1 === void 0) {\n    buffer$1 = expanding();\n  }\n\n  var closed = false;\n  var takers = [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(buffer$1, buffer, INVALID_BUFFER);\n  }\n\n  function checkForbiddenStates() {\n    if (closed && takers.length) {\n      throw internalErr(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n\n    if (takers.length && !buffer$1.isEmpty()) {\n      throw internalErr('Cannot have pending takers with non empty buffer');\n    }\n  }\n\n  function put(input) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(input, notUndef, UNDEFINED_INPUT_ERROR);\n    }\n\n    if (closed) {\n      return;\n    }\n\n    if (takers.length === 0) {\n      return buffer$1.put(input);\n    }\n\n    var cb = takers.shift();\n    cb(input);\n  }\n\n  function take(cb) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(cb, func, \"channel.take's callback must be a function\");\n    }\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n    } else if (!buffer$1.isEmpty()) {\n      cb(buffer$1.take());\n    } else {\n      takers.push(cb);\n\n      cb.cancel = function () {\n        remove(takers, cb);\n      };\n    }\n  }\n\n  function flush(cb) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(cb, func, \"channel.flush' callback must be a function\");\n    }\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n      return;\n    }\n\n    cb(buffer$1.flush());\n  }\n\n  function close() {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n    var arr = takers;\n    takers = [];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      var taker = arr[i];\n      taker(END);\n    }\n  }\n\n  return {\n    take: take,\n    put: put,\n    flush: flush,\n    close: close\n  };\n}\nfunction eventChannel(subscribe, buffer) {\n  if (buffer === void 0) {\n    buffer = none();\n  }\n\n  var closed = false;\n  var unsubscribe;\n  var chan = channel(buffer);\n\n  var close = function close() {\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n\n    if (func(unsubscribe)) {\n      unsubscribe();\n    }\n\n    chan.close();\n  };\n\n  unsubscribe = subscribe(function (input) {\n    if (isEnd(input)) {\n      close();\n      return;\n    }\n\n    chan.put(input);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(unsubscribe, func, 'in eventChannel: subscribe should return a function to unsubscribe');\n  }\n\n  unsubscribe = once(unsubscribe);\n\n  if (closed) {\n    unsubscribe();\n  }\n\n  return {\n    take: chan.take,\n    flush: chan.flush,\n    close: close\n  };\n}\nfunction multicastChannel() {\n  var _ref;\n\n  var closed = false;\n  var currentTakers = [];\n  var nextTakers = currentTakers;\n\n  function checkForbiddenStates() {\n    if (closed && nextTakers.length) {\n      throw internalErr(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n  }\n\n  var ensureCanMutateNextTakers = function ensureCanMutateNextTakers() {\n    if (nextTakers !== currentTakers) {\n      return;\n    }\n\n    nextTakers = currentTakers.slice();\n  };\n\n  var close = function close() {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    closed = true;\n    var takers = currentTakers = nextTakers;\n    nextTakers = [];\n    takers.forEach(function (taker) {\n      taker(END);\n    });\n  };\n\n  return _ref = {}, _ref[MULTICAST] = true, _ref.put = function put(input) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(input, notUndef, UNDEFINED_INPUT_ERROR);\n    }\n\n    if (closed) {\n      return;\n    }\n\n    if (isEnd(input)) {\n      close();\n      return;\n    }\n\n    var takers = currentTakers = nextTakers;\n\n    for (var i = 0, len = takers.length; i < len; i++) {\n      var taker = takers[i];\n\n      if (taker[MATCH](input)) {\n        taker.cancel();\n        taker(input);\n      }\n    }\n  }, _ref.take = function take(cb, matcher) {\n    if (matcher === void 0) {\n      matcher = wildcard;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    if (closed) {\n      cb(END);\n      return;\n    }\n\n    cb[MATCH] = matcher;\n    ensureCanMutateNextTakers();\n    nextTakers.push(cb);\n    cb.cancel = once(function () {\n      ensureCanMutateNextTakers();\n      remove(nextTakers, cb);\n    });\n  }, _ref.close = close, _ref;\n}\nfunction stdChannel() {\n  var chan = multicastChannel();\n  var put = chan.put;\n\n  chan.put = function (input) {\n    if (input[SAGA_ACTION]) {\n      put(input);\n      return;\n    }\n\n    asap(function () {\n      put(input);\n    });\n  };\n\n  return chan;\n}\n\nvar RUNNING = 0;\nvar CANCELLED = 1;\nvar ABORTED = 2;\nvar DONE = 3;\n\nfunction resolvePromise(promise, cb) {\n  var cancelPromise = promise[CANCEL];\n\n  if (func(cancelPromise)) {\n    cb.cancel = cancelPromise;\n  }\n\n  promise.then(cb, function (error) {\n    cb(error, true);\n  });\n}\n\nvar current = 0;\nvar nextSagaId = (function () {\n  return ++current;\n});\n\nvar _effectRunnerMap;\n\nfunction getIteratorMetaInfo(iterator, fn) {\n  if (iterator.isSagaIterator) {\n    return {\n      name: iterator.meta.name\n    };\n  }\n\n  return getMetaInfo(fn);\n}\n\nfunction createTaskIterator(_ref) {\n  var context = _ref.context,\n      fn = _ref.fn,\n      args = _ref.args;\n\n  // catch synchronous failures; see #152 and #441\n  try {\n    var result = fn.apply(context, args); // i.e. a generator function returns an iterator\n\n    if (iterator(result)) {\n      return result;\n    }\n\n    var resolved = false;\n\n    var next = function next(arg) {\n      if (!resolved) {\n        resolved = true; // Only promises returned from fork will be interpreted. See #1573\n\n        return {\n          value: result,\n          done: !promise(result)\n        };\n      } else {\n        return {\n          value: arg,\n          done: true\n        };\n      }\n    };\n\n    return makeIterator(next);\n  } catch (err) {\n    // do not bubble up synchronous failures for detached forks\n    // instead create a failed task. See #152 and #441\n    return makeIterator(function () {\n      throw err;\n    });\n  }\n}\n\nfunction runPutEffect(env, _ref2, cb) {\n  var channel = _ref2.channel,\n      action = _ref2.action,\n      resolve = _ref2.resolve;\n\n  /**\n   Schedule the put in case another saga is holding a lock.\n   The put will be executed atomically. ie nested puts will execute after\n   this put has terminated.\n   **/\n  asap(function () {\n    var result;\n\n    try {\n      result = (channel ? channel.put : env.dispatch)(action);\n    } catch (error) {\n      cb(error, true);\n      return;\n    }\n\n    if (resolve && promise(result)) {\n      resolvePromise(result, cb);\n    } else {\n      cb(result);\n    }\n  }); // Put effects are non cancellables\n}\n\nfunction runTakeEffect(env, _ref3, cb) {\n  var _ref3$channel = _ref3.channel,\n      channel = _ref3$channel === void 0 ? env.channel : _ref3$channel,\n      pattern = _ref3.pattern,\n      maybe = _ref3.maybe;\n\n  var takeCb = function takeCb(input) {\n    if (input instanceof Error) {\n      cb(input, true);\n      return;\n    }\n\n    if (isEnd(input) && !maybe) {\n      cb(TERMINATE);\n      return;\n    }\n\n    cb(input);\n  };\n\n  try {\n    channel.take(takeCb, notUndef(pattern) ? matcher(pattern) : null);\n  } catch (err) {\n    cb(err, true);\n    return;\n  }\n\n  cb.cancel = takeCb.cancel;\n}\n\nfunction runCallEffect(env, _ref4, cb, _ref5) {\n  var context = _ref4.context,\n      fn = _ref4.fn,\n      args = _ref4.args;\n  var task = _ref5.task;\n\n  // catch synchronous failures; see #152\n  try {\n    var result = fn.apply(context, args);\n\n    if (promise(result)) {\n      resolvePromise(result, cb);\n      return;\n    }\n\n    if (iterator(result)) {\n      // resolve iterator\n      proc(env, result, task.context, current, getMetaInfo(fn),\n      /* isRoot */\n      false, cb);\n      return;\n    }\n\n    cb(result);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runCPSEffect(env, _ref6, cb) {\n  var context = _ref6.context,\n      fn = _ref6.fn,\n      args = _ref6.args;\n\n  // CPS (ie node style functions) can define their own cancellation logic\n  // by setting cancel field on the cb\n  // catch synchronous failures; see #152\n  try {\n    var cpsCb = function cpsCb(err, res) {\n      if (undef(err)) {\n        cb(res);\n      } else {\n        cb(err, true);\n      }\n    };\n\n    fn.apply(context, args.concat(cpsCb));\n\n    if (cpsCb.cancel) {\n      cb.cancel = cpsCb.cancel;\n    }\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runForkEffect(env, _ref7, cb, _ref8) {\n  var context = _ref7.context,\n      fn = _ref7.fn,\n      args = _ref7.args,\n      detached = _ref7.detached;\n  var parent = _ref8.task;\n  var taskIterator = createTaskIterator({\n    context: context,\n    fn: fn,\n    args: args\n  });\n  var meta = getIteratorMetaInfo(taskIterator, fn);\n  immediately(function () {\n    var child = proc(env, taskIterator, parent.context, current, meta, detached, undefined);\n\n    if (detached) {\n      cb(child);\n    } else {\n      if (child.isRunning()) {\n        parent.queue.addTask(child);\n        cb(child);\n      } else if (child.isAborted()) {\n        parent.queue.abort(child.error());\n      } else {\n        cb(child);\n      }\n    }\n  }); // Fork effects are non cancellables\n}\n\nfunction runJoinEffect(env, taskOrTasks, cb, _ref9) {\n  var task = _ref9.task;\n\n  var joinSingleTask = function joinSingleTask(taskToJoin, cb) {\n    if (taskToJoin.isRunning()) {\n      var joiner = {\n        task: task,\n        cb: cb\n      };\n\n      cb.cancel = function () {\n        if (taskToJoin.isRunning()) remove(taskToJoin.joiners, joiner);\n      };\n\n      taskToJoin.joiners.push(joiner);\n    } else {\n      if (taskToJoin.isAborted()) {\n        cb(taskToJoin.error(), true);\n      } else {\n        cb(taskToJoin.result());\n      }\n    }\n  };\n\n  if (array$1(taskOrTasks)) {\n    if (taskOrTasks.length === 0) {\n      cb([]);\n      return;\n    }\n\n    var childCallbacks = createAllStyleChildCallbacks(taskOrTasks, cb);\n    taskOrTasks.forEach(function (t, i) {\n      joinSingleTask(t, childCallbacks[i]);\n    });\n  } else {\n    joinSingleTask(taskOrTasks, cb);\n  }\n}\n\nfunction cancelSingleTask(taskToCancel) {\n  if (taskToCancel.isRunning()) {\n    taskToCancel.cancel();\n  }\n}\n\nfunction runCancelEffect(env, taskOrTasks, cb, _ref10) {\n  var task = _ref10.task;\n\n  if (taskOrTasks === SELF_CANCELLATION) {\n    cancelSingleTask(task);\n  } else if (array$1(taskOrTasks)) {\n    taskOrTasks.forEach(cancelSingleTask);\n  } else {\n    cancelSingleTask(taskOrTasks);\n  }\n\n  cb(); // cancel effects are non cancellables\n}\n\nfunction runAllEffect(env, effects, cb, _ref11) {\n  var digestEffect = _ref11.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n\n  if (keys.length === 0) {\n    cb(array$1(effects) ? [] : {});\n    return;\n  }\n\n  var childCallbacks = createAllStyleChildCallbacks(effects, cb);\n  keys.forEach(function (key) {\n    digestEffect(effects[key], effectId, childCallbacks[key], key);\n  });\n}\n\nfunction runRaceEffect(env, effects, cb, _ref12) {\n  var digestEffect = _ref12.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n  var response = array$1(effects) ? createEmptyArray(keys.length) : {};\n  var childCbs = {};\n  var completed = false;\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        // Race Auto cancellation\n        cb.cancel();\n        cb(res, isErr);\n      } else {\n        cb.cancel();\n        completed = true;\n        response[key] = res;\n        cb(response);\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCbs[key] = chCbAtKey;\n  });\n\n  cb.cancel = function () {\n    // prevents unnecessary cancellation\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCbs[key].cancel();\n      });\n    }\n  };\n\n  keys.forEach(function (key) {\n    if (completed) {\n      return;\n    }\n\n    digestEffect(effects[key], effectId, childCbs[key], key);\n  });\n}\n\nfunction runSelectEffect(env, _ref13, cb) {\n  var selector = _ref13.selector,\n      args = _ref13.args;\n\n  try {\n    var state = selector.apply(void 0, [env.getState()].concat(args));\n    cb(state);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runChannelEffect(env, _ref14, cb) {\n  var pattern = _ref14.pattern,\n      buffer = _ref14.buffer;\n  var chan = channel(buffer);\n  var match = matcher(pattern);\n\n  var taker = function taker(action) {\n    if (!isEnd(action)) {\n      env.channel.take(taker, match);\n    }\n\n    chan.put(action);\n  };\n\n  var close = chan.close;\n\n  chan.close = function () {\n    taker.cancel();\n    close();\n  };\n\n  env.channel.take(taker, match);\n  cb(chan);\n}\n\nfunction runCancelledEffect(env, data, cb, _ref15) {\n  var task = _ref15.task;\n  cb(task.isCancelled());\n}\n\nfunction runFlushEffect(env, channel, cb) {\n  channel.flush(cb);\n}\n\nfunction runGetContextEffect(env, prop, cb, _ref16) {\n  var task = _ref16.task;\n  cb(task.context[prop]);\n}\n\nfunction runSetContextEffect(env, props, cb, _ref17) {\n  var task = _ref17.task;\n  assignWithSymbols(task.context, props);\n  cb();\n}\n\nvar effectRunnerMap = (_effectRunnerMap = {}, _effectRunnerMap[TAKE] = runTakeEffect, _effectRunnerMap[PUT] = runPutEffect, _effectRunnerMap[ALL] = runAllEffect, _effectRunnerMap[RACE] = runRaceEffect, _effectRunnerMap[CALL] = runCallEffect, _effectRunnerMap[CPS] = runCPSEffect, _effectRunnerMap[FORK] = runForkEffect, _effectRunnerMap[JOIN] = runJoinEffect, _effectRunnerMap[CANCEL$1] = runCancelEffect, _effectRunnerMap[SELECT] = runSelectEffect, _effectRunnerMap[ACTION_CHANNEL] = runChannelEffect, _effectRunnerMap[CANCELLED$1] = runCancelledEffect, _effectRunnerMap[FLUSH] = runFlushEffect, _effectRunnerMap[GET_CONTEXT] = runGetContextEffect, _effectRunnerMap[SET_CONTEXT] = runSetContextEffect, _effectRunnerMap);\n\n/**\n Used to track a parent task and its forks\n In the fork model, forked tasks are attached by default to their parent\n We model this using the concept of Parent task && main Task\n main task is the main flow of the current Generator, the parent tasks is the\n aggregation of the main tasks + all its forked tasks.\n Thus the whole model represents an execution tree with multiple branches (vs the\n linear execution tree in sequential (non parallel) programming)\n\n A parent tasks has the following semantics\n - It completes if all its forks either complete or all cancelled\n - If it's cancelled, all forks are cancelled as well\n - It aborts if any uncaught error bubbles up from forks\n - If it completes, the return value is the one returned by the main task\n **/\n\nfunction forkQueue(mainTask, onAbort, cont) {\n  var tasks = [];\n  var result;\n  var completed = false;\n  addTask(mainTask);\n\n  var getTasks = function getTasks() {\n    return tasks;\n  };\n\n  function abort(err) {\n    onAbort();\n    cancelAll();\n    cont(err, true);\n  }\n\n  function addTask(task) {\n    tasks.push(task);\n\n    task.cont = function (res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      remove(tasks, task);\n      task.cont = noop;\n\n      if (isErr) {\n        abort(res);\n      } else {\n        if (task === mainTask) {\n          result = res;\n        }\n\n        if (!tasks.length) {\n          completed = true;\n          cont(result);\n        }\n      }\n    };\n  }\n\n  function cancelAll() {\n    if (completed) {\n      return;\n    }\n\n    completed = true;\n    tasks.forEach(function (t) {\n      t.cont = noop;\n      t.cancel();\n    });\n    tasks = [];\n  }\n\n  return {\n    addTask: addTask,\n    cancelAll: cancelAll,\n    abort: abort,\n    getTasks: getTasks\n  };\n}\n\n// there can be only a single saga error created at any given moment\n\nfunction formatLocation(fileName, lineNumber) {\n  return fileName + \"?\" + lineNumber;\n}\n\nfunction effectLocationAsString(effect) {\n  var location = getLocation(effect);\n\n  if (location) {\n    var code = location.code,\n        fileName = location.fileName,\n        lineNumber = location.lineNumber;\n    var source = code + \"  \" + formatLocation(fileName, lineNumber);\n    return source;\n  }\n\n  return '';\n}\n\nfunction sagaLocationAsString(sagaMeta) {\n  var name = sagaMeta.name,\n      location = sagaMeta.location;\n\n  if (location) {\n    return name + \"  \" + formatLocation(location.fileName, location.lineNumber);\n  }\n\n  return name;\n}\n\nfunction cancelledTasksAsString(sagaStack) {\n  var cancelledTasks = flatMap(function (i) {\n    return i.cancelledTasks;\n  }, sagaStack);\n\n  if (!cancelledTasks.length) {\n    return '';\n  }\n\n  return ['Tasks cancelled due to error:'].concat(cancelledTasks).join('\\n');\n}\n\nvar crashedEffect = null;\nvar sagaStack = [];\nvar addSagaFrame = function addSagaFrame(frame) {\n  frame.crashedEffect = crashedEffect;\n  sagaStack.push(frame);\n};\nvar clear = function clear() {\n  crashedEffect = null;\n  sagaStack.length = 0;\n}; // this sets crashed effect for the soon-to-be-reported saga frame\n// this slightly streatches the singleton nature of this module into wrong direction\n// as it's even less obvious what's the data flow here, but it is what it is for now\n\nvar setCrashedEffect = function setCrashedEffect(effect) {\n  crashedEffect = effect;\n};\n/**\n  @returns {string}\n\n  @example\n  The above error occurred in task errorInPutSaga {pathToFile}\n  when executing effect put({type: 'REDUCER_ACTION_ERROR_IN_PUT'}) {pathToFile}\n      created by fetchSaga {pathToFile}\n      created by rootSaga {pathToFile}\n*/\n\nvar toString = function toString() {\n  var firstSaga = sagaStack[0],\n      otherSagas = sagaStack.slice(1);\n  var crashedEffectLocation = firstSaga.crashedEffect ? effectLocationAsString(firstSaga.crashedEffect) : null;\n  var errorMessage = \"The above error occurred in task \" + sagaLocationAsString(firstSaga.meta) + (crashedEffectLocation ? \" \\n when executing effect \" + crashedEffectLocation : '');\n  return [errorMessage].concat(otherSagas.map(function (s) {\n    return \"    created by \" + sagaLocationAsString(s.meta);\n  }), [cancelledTasksAsString(sagaStack)]).join('\\n');\n};\n\nfunction newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont) {\n  var _task;\n\n  if (cont === void 0) {\n    cont = noop;\n  }\n\n  var status = RUNNING;\n  var taskResult;\n  var taskError;\n  var deferredEnd = null;\n  var cancelledDueToErrorTasks = [];\n  var context = Object.create(parentContext);\n  var queue = forkQueue(mainTask, function onAbort() {\n    cancelledDueToErrorTasks.push.apply(cancelledDueToErrorTasks, queue.getTasks().map(function (t) {\n      return t.meta.name;\n    }));\n  }, end);\n  /**\n   This may be called by a parent generator to trigger/propagate cancellation\n   cancel all pending tasks (including the main task), then end the current task.\n    Cancellation propagates down to the whole execution tree held by this Parent task\n   It's also propagated to all joiners of this task and their execution tree/joiners\n    Cancellation is noop for terminated/Cancelled tasks tasks\n   **/\n\n  function cancel() {\n    if (status === RUNNING) {\n      // Setting status to CANCELLED does not necessarily mean that the task/iterators are stopped\n      // effects in the iterator's finally block will still be executed\n      status = CANCELLED;\n      queue.cancelAll(); // Ending with a TASK_CANCEL will propagate the Cancellation to all joiners\n\n      end(TASK_CANCEL, false);\n    }\n  }\n\n  function end(result, isErr) {\n    if (!isErr) {\n      // The status here may be RUNNING or CANCELLED\n      // If the status is CANCELLED, then we do not need to change it here\n      if (result === TASK_CANCEL) {\n        status = CANCELLED;\n      } else if (status !== CANCELLED) {\n        status = DONE;\n      }\n\n      taskResult = result;\n      deferredEnd && deferredEnd.resolve(result);\n    } else {\n      status = ABORTED;\n      addSagaFrame({\n        meta: meta,\n        cancelledTasks: cancelledDueToErrorTasks\n      });\n\n      if (task.isRoot) {\n        var sagaStack = toString(); // we've dumped the saga stack to string and are passing it to user's code\n        // we know that it won't be needed anymore and we need to clear it\n\n        clear();\n        env.onError(result, {\n          sagaStack: sagaStack\n        });\n      }\n\n      taskError = result;\n      deferredEnd && deferredEnd.reject(result);\n    }\n\n    task.cont(result, isErr);\n    task.joiners.forEach(function (joiner) {\n      joiner.cb(result, isErr);\n    });\n    task.joiners = null;\n  }\n\n  function setContext(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(props, object, createSetContextWarning('task', props));\n    }\n\n    assignWithSymbols(context, props);\n  }\n\n  function toPromise() {\n    if (deferredEnd) {\n      return deferredEnd.promise;\n    }\n\n    deferredEnd = deferred();\n\n    if (status === ABORTED) {\n      deferredEnd.reject(taskError);\n    } else if (status !== RUNNING) {\n      deferredEnd.resolve(taskResult);\n    }\n\n    return deferredEnd.promise;\n  }\n\n  var task = (_task = {}, _task[TASK] = true, _task.id = parentEffectId, _task.meta = meta, _task.isRoot = isRoot, _task.context = context, _task.joiners = [], _task.queue = queue, _task.cancel = cancel, _task.cont = cont, _task.end = end, _task.setContext = setContext, _task.toPromise = toPromise, _task.isRunning = function isRunning() {\n    return status === RUNNING;\n  }, _task.isCancelled = function isCancelled() {\n    return status === CANCELLED || status === RUNNING && mainTask.status === CANCELLED;\n  }, _task.isAborted = function isAborted() {\n    return status === ABORTED;\n  }, _task.result = function result() {\n    return taskResult;\n  }, _task.error = function error() {\n    return taskError;\n  }, _task);\n  return task;\n}\n\nfunction proc(env, iterator$1, parentContext, parentEffectId, meta, isRoot, cont) {\n  if (process.env.NODE_ENV !== 'production' && iterator$1[asyncIteratorSymbol]) {\n    throw new Error(\"redux-saga doesn't support async generators, please use only regular ones\");\n  }\n\n  var finalRunEffect = env.finalizeRunEffect(runEffect);\n  /**\n    Tracks the current effect cancellation\n    Each time the generator progresses. calling runEffect will set a new value\n    on it. It allows propagating cancellation to child effects\n  **/\n\n  next.cancel = noop;\n  /** Creates a main task to track the main flow */\n\n  var mainTask = {\n    meta: meta,\n    cancel: cancelMain,\n    status: RUNNING\n  };\n  /**\n   Creates a new task descriptor for this generator.\n   A task is the aggregation of it's mainTask and all it's forked tasks.\n   **/\n\n  var task = newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont);\n  var executingContext = {\n    task: task,\n    digestEffect: digestEffect\n  };\n  /**\n    cancellation of the main task. We'll simply resume the Generator with a TASK_CANCEL\n  **/\n\n  function cancelMain() {\n    if (mainTask.status === RUNNING) {\n      mainTask.status = CANCELLED;\n      next(TASK_CANCEL);\n    }\n  }\n  /**\n    attaches cancellation logic to this task's continuation\n    this will permit cancellation to propagate down the call chain\n  **/\n\n\n  if (cont) {\n    cont.cancel = task.cancel;\n  } // kicks up the generator\n\n\n  next(); // then return the task descriptor to the caller\n\n  return task;\n  /**\n   * This is the generator driver\n   * It's a recursive async/continuation function which calls itself\n   * until the generator terminates or throws\n   * @param {internal commands(TASK_CANCEL | TERMINATE) | any} arg - value, generator will be resumed with.\n   * @param {boolean} isErr - the flag shows if effect finished with an error\n   *\n   * receives either (command | effect result, false) or (any thrown thing, true)\n   */\n\n  function next(arg, isErr) {\n    try {\n      var result;\n\n      if (isErr) {\n        result = iterator$1.throw(arg); // user handled the error, we can clear bookkept values\n\n        clear();\n      } else if (shouldCancel(arg)) {\n        /**\n          getting TASK_CANCEL automatically cancels the main task\n          We can get this value here\n           - By cancelling the parent task manually\n          - By joining a Cancelled task\n        **/\n        mainTask.status = CANCELLED;\n        /**\n          Cancels the current effect; this will propagate the cancellation down to any called tasks\n        **/\n\n        next.cancel();\n        /**\n          If this Generator has a `return` method then invokes it\n          This will jump to the finally block\n        **/\n\n        result = func(iterator$1.return) ? iterator$1.return(TASK_CANCEL) : {\n          done: true,\n          value: TASK_CANCEL\n        };\n      } else if (shouldTerminate(arg)) {\n        // We get TERMINATE flag, i.e. by taking from a channel that ended using `take` (and not `takem` used to trap End of channels)\n        result = func(iterator$1.return) ? iterator$1.return() : {\n          done: true\n        };\n      } else {\n        result = iterator$1.next(arg);\n      }\n\n      if (!result.done) {\n        digestEffect(result.value, parentEffectId, next);\n      } else {\n        /**\n          This Generator has ended, terminate the main task and notify the fork queue\n        **/\n        if (mainTask.status !== CANCELLED) {\n          mainTask.status = DONE;\n        }\n\n        mainTask.cont(result.value);\n      }\n    } catch (error) {\n      if (mainTask.status === CANCELLED) {\n        throw error;\n      }\n\n      mainTask.status = ABORTED;\n      mainTask.cont(error, true);\n    }\n  }\n\n  function runEffect(effect, effectId, currCb) {\n    /**\n      each effect runner must attach its own logic of cancellation to the provided callback\n      it allows this generator to propagate cancellation downward.\n       ATTENTION! effect runners must setup the cancel logic by setting cb.cancel = [cancelMethod]\n      And the setup must occur before calling the callback\n       This is a sort of inversion of control: called async functions are responsible\n      of completing the flow by calling the provided continuation; while caller functions\n      are responsible for aborting the current flow by calling the attached cancel function\n       Library users can attach their own cancellation logic to promises by defining a\n      promise[CANCEL] method in their returned promises\n      ATTENTION! calling cancel must have no effect on an already completed or cancelled effect\n    **/\n    if (promise(effect)) {\n      resolvePromise(effect, currCb);\n    } else if (iterator(effect)) {\n      // resolve iterator\n      proc(env, effect, task.context, effectId, meta,\n      /* isRoot */\n      false, currCb);\n    } else if (effect && effect[IO]) {\n      var effectRunner = effectRunnerMap[effect.type];\n      effectRunner(env, effect.payload, currCb, executingContext);\n    } else {\n      // anything else returned as is\n      currCb(effect);\n    }\n  }\n\n  function digestEffect(effect, parentEffectId, cb, label) {\n    if (label === void 0) {\n      label = '';\n    }\n\n    var effectId = nextSagaId();\n    env.sagaMonitor && env.sagaMonitor.effectTriggered({\n      effectId: effectId,\n      parentEffectId: parentEffectId,\n      label: label,\n      effect: effect\n    });\n    /**\n      completion callback and cancel callback are mutually exclusive\n      We can't cancel an already completed effect\n      And We can't complete an already cancelled effectId\n    **/\n\n    var effectSettled; // Completion callback passed to the appropriate effect runner\n\n    function currCb(res, isErr) {\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      cb.cancel = noop; // defensive measure\n\n      if (env.sagaMonitor) {\n        if (isErr) {\n          env.sagaMonitor.effectRejected(effectId, res);\n        } else {\n          env.sagaMonitor.effectResolved(effectId, res);\n        }\n      }\n\n      if (isErr) {\n        setCrashedEffect(effect);\n      }\n\n      cb(res, isErr);\n    } // tracks down the current cancel\n\n\n    currCb.cancel = noop; // setup cancellation logic on the parent cb\n\n    cb.cancel = function () {\n      // prevents cancelling an already completed effect\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      currCb.cancel(); // propagates cancel downward\n\n      currCb.cancel = noop; // defensive measure\n\n      env.sagaMonitor && env.sagaMonitor.effectCancelled(effectId);\n    };\n\n    finalRunEffect(effect, effectId, currCb);\n  }\n}\n\nvar RUN_SAGA_SIGNATURE = 'runSaga(options, saga, ...args)';\nvar NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + \": saga argument must be a Generator function!\";\nfunction runSaga(_ref, saga) {\n  var _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      dispatch = _ref.dispatch,\n      getState = _ref.getState,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      sagaMonitor = _ref.sagaMonitor,\n      effectMiddlewares = _ref.effectMiddlewares,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? logError : _ref$onError;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(saga, func, NON_GENERATOR_ERR);\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var iterator$1 = saga.apply(void 0, args);\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(iterator$1, iterator, NON_GENERATOR_ERR);\n  }\n\n  var effectId = nextSagaId();\n\n  if (sagaMonitor) {\n    // monitors are expected to have a certain interface, let's fill-in any missing ones\n    sagaMonitor.rootSagaStarted = sagaMonitor.rootSagaStarted || noop;\n    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || noop;\n    sagaMonitor.effectResolved = sagaMonitor.effectResolved || noop;\n    sagaMonitor.effectRejected = sagaMonitor.effectRejected || noop;\n    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || noop;\n    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || noop;\n    sagaMonitor.rootSagaStarted({\n      effectId: effectId,\n      saga: saga,\n      args: args\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (notUndef(dispatch)) {\n      check(dispatch, func, 'dispatch must be a function');\n    }\n\n    if (notUndef(getState)) {\n      check(getState, func, 'getState must be a function');\n    }\n\n    if (notUndef(effectMiddlewares)) {\n      var MIDDLEWARE_TYPE_ERROR = 'effectMiddlewares must be an array of functions';\n      check(effectMiddlewares, array$1, MIDDLEWARE_TYPE_ERROR);\n      effectMiddlewares.forEach(function (effectMiddleware) {\n        return check(effectMiddleware, func, MIDDLEWARE_TYPE_ERROR);\n      });\n    }\n\n    check(onError, func, 'onError passed to the redux-saga is not a function!');\n  }\n\n  var finalizeRunEffect;\n\n  if (effectMiddlewares) {\n    var middleware = compose.apply(void 0, effectMiddlewares);\n\n    finalizeRunEffect = function finalizeRunEffect(runEffect) {\n      return function (effect, effectId, currCb) {\n        var plainRunEffect = function plainRunEffect(eff) {\n          return runEffect(eff, effectId, currCb);\n        };\n\n        return middleware(plainRunEffect)(effect);\n      };\n    };\n  } else {\n    finalizeRunEffect = identity;\n  }\n\n  var env = {\n    channel: channel,\n    dispatch: wrapSagaDispatch(dispatch),\n    getState: getState,\n    sagaMonitor: sagaMonitor,\n    onError: onError,\n    finalizeRunEffect: finalizeRunEffect\n  };\n  return immediately(function () {\n    var task = proc(env, iterator$1, context, effectId, getMetaInfo(saga),\n    /* isRoot */\n    true, undefined);\n\n    if (sagaMonitor) {\n      sagaMonitor.effectResolved(effectId, task);\n    }\n\n    return task;\n  });\n}\n\nfunction sagaMiddlewareFactory(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      sagaMonitor = _ref.sagaMonitor,\n      options = _objectWithoutPropertiesLoose(_ref, [\"context\", \"channel\", \"sagaMonitor\"]);\n\n  var boundRunSaga;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(channel, channel$1, 'options.channel passed to the Saga middleware is not a channel');\n  }\n\n  function sagaMiddleware(_ref2) {\n    var getState = _ref2.getState,\n        dispatch = _ref2.dispatch;\n    boundRunSaga = runSaga.bind(null, _extends({}, options, {\n      context: context,\n      channel: channel,\n      dispatch: dispatch,\n      getState: getState,\n      sagaMonitor: sagaMonitor\n    }));\n    return function (next) {\n      return function (action) {\n        if (sagaMonitor && sagaMonitor.actionDispatched) {\n          sagaMonitor.actionDispatched(action);\n        }\n\n        var result = next(action); // hit reducers\n\n        channel.put(action);\n        return result;\n      };\n    };\n  }\n\n  sagaMiddleware.run = function () {\n    if (process.env.NODE_ENV !== 'production' && !boundRunSaga) {\n      throw new Error('Before running a Saga, you must mount the Saga middleware on the Store using applyMiddleware');\n    }\n\n    return boundRunSaga.apply(void 0, arguments);\n  };\n\n  sagaMiddleware.setContext = function (props) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(props, object, createSetContextWarning('sagaMiddleware', props));\n    }\n\n    assignWithSymbols(context, props);\n  };\n\n  return sagaMiddleware;\n}\n\nexport default sagaMiddlewareFactory;\nexport { END, channel, eventChannel, isEnd, multicastChannel, runSaga, stdChannel };\n","import '@redux-saga/symbols';\nimport '@babel/runtime/helpers/esm/extends';\nimport { channel, stringableFunc, func, notUndef } from '@redux-saga/is';\nimport { q as makeIterator, K as take, L as fork, M as cancel, N as call, O as actionChannel, Q as sliding, U as delay, V as race, c as check } from './io-6de156f3.js';\nexport { O as actionChannel, _ as all, $ as apply, N as call, M as cancel, a4 as cancelled, a0 as cps, U as delay, W as effectTypes, a5 as flush, L as fork, a6 as getContext, a2 as join, Y as put, Z as putResolve, V as race, a3 as select, a7 as setContext, a1 as spawn, K as take, X as takeMaybe } from './io-6de156f3.js';\nimport '@redux-saga/delay-p';\n\nvar done = function done(value) {\n  return {\n    done: true,\n    value: value\n  };\n};\n\nvar qEnd = {};\nfunction safeName(patternOrChannel) {\n  if (channel(patternOrChannel)) {\n    return 'channel';\n  }\n\n  if (stringableFunc(patternOrChannel)) {\n    return String(patternOrChannel);\n  }\n\n  if (func(patternOrChannel)) {\n    return patternOrChannel.name;\n  }\n\n  return String(patternOrChannel);\n}\nfunction fsmIterator(fsm, startState, name) {\n  var stateUpdater,\n      errorState,\n      effect,\n      nextState = startState;\n\n  function next(arg, error) {\n    if (nextState === qEnd) {\n      return done(arg);\n    }\n\n    if (error && !errorState) {\n      nextState = qEnd;\n      throw error;\n    } else {\n      stateUpdater && stateUpdater(arg);\n      var currentState = error ? fsm[errorState](error) : fsm[nextState]();\n      nextState = currentState.nextState;\n      effect = currentState.effect;\n      stateUpdater = currentState.stateUpdater;\n      errorState = currentState.errorState;\n      return nextState === qEnd ? done(arg) : effect;\n    }\n  }\n\n  return makeIterator(next, function (error) {\n    return next(null, error);\n  }, name);\n}\n\nfunction takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q1',\n        effect: yFork(action)\n      };\n    }\n  }, 'q1', \"takeEvery(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction takeLatest(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yCancel = function yCancel(task) {\n    return {\n      done: false,\n      value: cancel(task)\n    };\n  };\n\n  var task, action;\n\n  var setTask = function setTask(t) {\n    return task = t;\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return task ? {\n        nextState: 'q3',\n        effect: yCancel(task)\n      } : {\n        nextState: 'q1',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: 'q1',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    }\n  }, 'q1', \"takeLatest(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction takeLeading(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yCall = function yCall(ac) {\n    return {\n      done: false,\n      value: call.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action;\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q1',\n        effect: yCall(action)\n      };\n    }\n  }, 'q1', \"takeLeading(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction throttle(delayLength, pattern, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, channel;\n  var yActionChannel = {\n    done: false,\n    value: actionChannel(pattern, sliding(1))\n  };\n\n  var yTake = function yTake() {\n    return {\n      done: false,\n      value: take(channel)\n    };\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yDelay = {\n    done: false,\n    value: delay(delayLength)\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setChannel = function setChannel(ch) {\n    return channel = ch;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yActionChannel,\n        stateUpdater: setChannel\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q3',\n        effect: yTake(),\n        stateUpdater: setAction\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: 'q4',\n        effect: yFork(action)\n      };\n    },\n    q4: function q4() {\n      return {\n        nextState: 'q2',\n        effect: yDelay\n      };\n    }\n  }, 'q1', \"throttle(\" + safeName(pattern) + \", \" + worker.name + \")\");\n}\n\nfunction retry(maxTries, delayLength, fn) {\n  var counter = maxTries;\n\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var yCall = {\n    done: false,\n    value: call.apply(void 0, [fn].concat(args))\n  };\n  var yDelay = {\n    done: false,\n    value: delay(delayLength)\n  };\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yCall,\n        errorState: 'q10'\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: qEnd\n      };\n    },\n    q10: function q10(error) {\n      counter -= 1;\n\n      if (counter <= 0) {\n        throw error;\n      }\n\n      return {\n        nextState: 'q1',\n        effect: yDelay\n      };\n    }\n  }, 'q1', \"retry(\" + fn.name + \")\");\n}\n\nfunction debounceHelper(delayLength, patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, raceOutput;\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n  var yRace = {\n    done: false,\n    value: race({\n      action: take(patternOrChannel),\n      debounce: delay(delayLength)\n    })\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yNoop = function yNoop(value) {\n    return {\n      done: false,\n      value: value\n    };\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setRaceOutput = function setRaceOutput(ro) {\n    return raceOutput = ro;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q3',\n        effect: yRace,\n        stateUpdater: setRaceOutput\n      };\n    },\n    q3: function q3() {\n      return raceOutput.debounce ? {\n        nextState: 'q1',\n        effect: yFork(action)\n      } : {\n        nextState: 'q2',\n        effect: yNoop(raceOutput.action),\n        stateUpdater: setAction\n      };\n    }\n  }, 'q1', \"debounce(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nvar validateTakeEffect = function validateTakeEffect(fn, patternOrChannel, worker) {\n  check(patternOrChannel, notUndef, fn.name + \" requires a pattern or channel\");\n  check(worker, notUndef, fn.name + \" requires a saga parameter\");\n};\n\nfunction takeEvery$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeEvery$1, patternOrChannel, worker);\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return fork.apply(void 0, [takeEvery, patternOrChannel, worker].concat(args));\n}\nfunction takeLatest$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLatest$1, patternOrChannel, worker);\n  }\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return fork.apply(void 0, [takeLatest, patternOrChannel, worker].concat(args));\n}\nfunction takeLeading$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLeading$1, patternOrChannel, worker);\n  }\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    args[_key3 - 2] = arguments[_key3];\n  }\n\n  return fork.apply(void 0, [takeLeading, patternOrChannel, worker].concat(args));\n}\nfunction throttle$1(ms, pattern, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(pattern, notUndef, 'throttle requires a pattern');\n    check(worker, notUndef, 'throttle requires a saga parameter');\n  }\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n    args[_key4 - 3] = arguments[_key4];\n  }\n\n  return fork.apply(void 0, [throttle, ms, pattern, worker].concat(args));\n}\nfunction retry$1(maxTries, delayLength, worker) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {\n    args[_key5 - 3] = arguments[_key5];\n  }\n\n  return call.apply(void 0, [retry, maxTries, delayLength, worker].concat(args));\n}\nfunction debounce(delayLength, pattern, worker) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n    args[_key6 - 3] = arguments[_key6];\n  }\n\n  return fork.apply(void 0, [debounceHelper, delayLength, pattern, worker].concat(args));\n}\n\nexport { debounce, retry$1 as retry, takeEvery$1 as takeEvery, takeLatest$1 as takeLatest, takeLeading$1 as takeLeading, throttle$1 as throttle };\n","function deferred() {\n  var def = {};\n  def.promise = new Promise(function (resolve, reject) {\n    def.resolve = resolve;\n    def.reject = reject;\n  });\n  return def;\n}\nfunction arrayOfDeferred(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(deferred());\n  }\n\n  return arr;\n}\n\nexport default deferred;\nexport { arrayOfDeferred };\n","import { CANCEL } from '@redux-saga/symbols';\n\nfunction delayP(ms, val) {\n  if (val === void 0) {\n    val = true;\n  }\n\n  var timeoutId;\n  var promise = new Promise(function (resolve) {\n    timeoutId = setTimeout(resolve, ms, val);\n  });\n\n  promise[CANCEL] = function () {\n    clearTimeout(timeoutId);\n  };\n\n  return promise;\n}\n\nexport default delayP;\n","import { TASK, SAGA_ACTION, MULTICAST, IO } from '@redux-saga/symbols';\n\nvar undef = function undef(v) {\n  return v === null || v === undefined;\n};\nvar notUndef = function notUndef(v) {\n  return v !== null && v !== undefined;\n};\nvar func = function func(f) {\n  return typeof f === 'function';\n};\nvar number = function number(n) {\n  return typeof n === 'number';\n};\nvar string = function string(s) {\n  return typeof s === 'string';\n};\nvar array = Array.isArray;\nvar object = function object(obj) {\n  return obj && !array(obj) && typeof obj === 'object';\n};\nvar promise = function promise(p) {\n  return p && func(p.then);\n};\nvar iterator = function iterator(it) {\n  return it && func(it.next) && func(it.throw);\n};\nvar iterable = function iterable(it) {\n  return it && func(Symbol) ? func(it[Symbol.iterator]) : array(it);\n};\nvar task = function task(t) {\n  return t && t[TASK];\n};\nvar sagaAction = function sagaAction(a) {\n  return Boolean(a && a[SAGA_ACTION]);\n};\nvar observable = function observable(ob) {\n  return ob && func(ob.subscribe);\n};\nvar buffer = function buffer(buf) {\n  return buf && func(buf.isEmpty) && func(buf.take) && func(buf.put);\n};\nvar pattern = function pattern(pat) {\n  return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));\n};\nvar channel = function channel(ch) {\n  return ch && func(ch.take) && func(ch.close);\n};\nvar stringableFunc = function stringableFunc(f) {\n  return func(f) && f.hasOwnProperty('toString');\n};\nvar symbol = function symbol(sym) {\n  return Boolean(sym) && typeof Symbol === 'function' && sym.constructor === Symbol && sym !== Symbol.prototype;\n};\nvar multicast = function multicast(ch) {\n  return channel(ch) && ch[MULTICAST];\n};\nvar effect = function effect(eff) {\n  return eff && eff[IO];\n};\n\nexport { array, buffer, channel, effect, func, iterable, iterator, multicast, notUndef, number, object, observable, pattern, promise, sagaAction, string, stringableFunc, symbol, task, undef };\n","var createSymbol = function createSymbol(name) {\n  return \"@@redux-saga/\" + name;\n};\n\nvar CANCEL =\n/*#__PURE__*/\ncreateSymbol('CANCEL_PROMISE');\nvar CHANNEL_END_TYPE =\n/*#__PURE__*/\ncreateSymbol('CHANNEL_END');\nvar IO =\n/*#__PURE__*/\ncreateSymbol('IO');\nvar MATCH =\n/*#__PURE__*/\ncreateSymbol('MATCH');\nvar MULTICAST =\n/*#__PURE__*/\ncreateSymbol('MULTICAST');\nvar SAGA_ACTION =\n/*#__PURE__*/\ncreateSymbol('SAGA_ACTION');\nvar SELF_CANCELLATION =\n/*#__PURE__*/\ncreateSymbol('SELF_CANCELLATION');\nvar TASK =\n/*#__PURE__*/\ncreateSymbol('TASK');\nvar TASK_CANCEL =\n/*#__PURE__*/\ncreateSymbol('TASK_CANCEL');\nvar TERMINATE =\n/*#__PURE__*/\ncreateSymbol('TERMINATE');\nvar SAGA_LOCATION =\n/*#__PURE__*/\ncreateSymbol('LOCATION');\n\nexport { CANCEL, CHANNEL_END_TYPE, IO, MATCH, MULTICAST, SAGA_ACTION, SAGA_LOCATION, SELF_CANCELLATION, TASK, TASK_CANCEL, TERMINATE };\n","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/map\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/define-properties\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/entries\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/freeze\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/reflect/set\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/set\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nrequire('../modules/es7.map.of');\nrequire('../modules/es7.map.from');\nmodule.exports = require('../modules/_core').Map;\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","require('../../modules/es6.object.define-properties');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperties(T, D) {\n  return $Object.defineProperties(T, D);\n};\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","require('../../modules/es6.object.freeze');\nmodule.exports = require('../../modules/_core').Object.freeze;\n","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","require('../../modules/es6.reflect.set');\nmodule.exports = require('../../modules/_core').Reflect.set;\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.set');\nrequire('../modules/es7.set.to-json');\nrequire('../modules/es7.set.of');\nrequire('../modules/es7.set.from');\nmodule.exports = require('../modules/_core').Set;\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","module.exports = function () { /* empty */ };\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var forOf = require('./_for-of');\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof');\nvar from = require('./_array-from-iterable');\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar meta = require('./_meta');\nvar fails = require('./_fails');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar setToStringTag = require('./_set-to-string-tag');\nvar dP = require('./_object-dp').f;\nvar each = require('./_array-methods')(0);\nvar DESCRIPTORS = require('./_descriptors');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, 'size', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","var core = module.exports = { version: '2.6.8' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = {};\n","module.exports = true;\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","exports.f = {}.propertyIsEnumerable;\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","module.exports = require('./_hide');\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = new Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","exports.f = require('./_wks');\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP = require('./_object-dp');\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar createDesc = require('./_property-desc');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\n\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDesc = gOPD.f(anObject(target), propertyKey);\n  var existingDescriptor, proto;\n  if (!ownDesc) {\n    if (isObject(proto = getPrototypeOf(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      dP.f(receiver, propertyKey, existingDescriptor);\n    } else dP.f(receiver, propertyKey, createDesc(0, V));\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', { set: set });\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toObject = require('./_to-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $GOPS = require('./_object-gops');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\nrequire('./_set-collection-from')('Map');\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\nrequire('./_set-collection-of')('Map');\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\nrequire('./_set-collection-from')('Set');\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\nrequire('./_set-collection-of')('Set');\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","module.exports = curry;\n\n/*\n  function add(a, b, c) {\n    return a + b + c;\n  }\n  curry(add)(1)(2)(3); // 6\n  curry(add)(1)(2)(2); // 5\n  curry(add)(2)(4, 3); // 9\n\n  function add(...args) {\n    return args.reduce((sum, n) => sum + n, 0)\n  }\n  var curryAdd4 = curry(add, 4)\n  curryAdd4(1)(2, 3)(4); // 10\n\n  function converter(ratio, input) {\n    return (input*ratio).toFixed(1);\n  }\n  const curriedConverter = curry(converter)\n  const milesToKm = curriedConverter(1.62);\n  milesToKm(35); // 56.7\n  milesToKm(10); // 16.2\n*/\n\nfunction curry(fn, arity) {\n  return function curried() {\n    if (arity == null) {\n      arity = fn.length;\n    }\n    var args = [].slice.call(arguments);\n    if (args.length >= arity) {\n      return fn.apply(this, args);\n    } else {\n      return function() {\n        return curried.apply(this, args.concat([].slice.call(arguments)));\n      };\n    }\n  };\n}\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n","var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n","'use strict';\n\nvar base64_url_decode = require('./base64_url_decode');\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n","var _ = require('./lodash.min').runInContext();\nmodule.exports = require('./fp/_baseConvert')(_, _);\n","var mapping = require('./_mapping'),\n    fallbackHolder = require('./placeholder');\n\n/** Built-in value reference. */\nvar push = Array.prototype.push;\n\n/**\n * Creates a function, with an arity of `n`, that invokes `func` with the\n * arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} n The arity of the new function.\n * @returns {Function} Returns the new function.\n */\nfunction baseArity(func, n) {\n  return n == 2\n    ? function(a, b) { return func.apply(undefined, arguments); }\n    : function(a) { return func.apply(undefined, arguments); };\n}\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments, ignoring\n * any additional arguments.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @param {number} n The arity cap.\n * @returns {Function} Returns the new function.\n */\nfunction baseAry(func, n) {\n  return n == 2\n    ? function(a, b) { return func(a, b); }\n    : function(a) { return func(a); };\n}\n\n/**\n * Creates a clone of `array`.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the cloned array.\n */\nfunction cloneArray(array) {\n  var length = array ? array.length : 0,\n      result = Array(length);\n\n  while (length--) {\n    result[length] = array[length];\n  }\n  return result;\n}\n\n/**\n * Creates a function that clones a given object using the assignment `func`.\n *\n * @private\n * @param {Function} func The assignment function.\n * @returns {Function} Returns the new cloner function.\n */\nfunction createCloner(func) {\n  return function(object) {\n    return func({}, object);\n  };\n}\n\n/**\n * A specialized version of `_.spread` which flattens the spread array into\n * the arguments of the invoked `func`.\n *\n * @private\n * @param {Function} func The function to spread arguments over.\n * @param {number} start The start position of the spread.\n * @returns {Function} Returns the new function.\n */\nfunction flatSpread(func, start) {\n  return function() {\n    var length = arguments.length,\n        lastIndex = length - 1,\n        args = Array(length);\n\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var array = args[start],\n        otherArgs = args.slice(0, start);\n\n    if (array) {\n      push.apply(otherArgs, array);\n    }\n    if (start != lastIndex) {\n      push.apply(otherArgs, args.slice(start + 1));\n    }\n    return func.apply(this, otherArgs);\n  };\n}\n\n/**\n * Creates a function that wraps `func` and uses `cloner` to clone the first\n * argument it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} cloner The function to clone arguments.\n * @returns {Function} Returns the new immutable function.\n */\nfunction wrapImmutable(func, cloner) {\n  return function() {\n    var length = arguments.length;\n    if (!length) {\n      return;\n    }\n    var args = Array(length);\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var result = args[0] = cloner.apply(undefined, args);\n    func.apply(undefined, args);\n    return result;\n  };\n}\n\n/**\n * The base implementation of `convert` which accepts a `util` object of methods\n * required to perform conversions.\n *\n * @param {Object} util The util object.\n * @param {string} name The name of the function to convert.\n * @param {Function} func The function to convert.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.cap=true] Specify capping iteratee arguments.\n * @param {boolean} [options.curry=true] Specify currying.\n * @param {boolean} [options.fixed=true] Specify fixed arity.\n * @param {boolean} [options.immutable=true] Specify immutable operations.\n * @param {boolean} [options.rearg=true] Specify rearranging arguments.\n * @returns {Function|Object} Returns the converted function or object.\n */\nfunction baseConvert(util, name, func, options) {\n  var isLib = typeof name == 'function',\n      isObj = name === Object(name);\n\n  if (isObj) {\n    options = func;\n    func = name;\n    name = undefined;\n  }\n  if (func == null) {\n    throw new TypeError;\n  }\n  options || (options = {});\n\n  var config = {\n    'cap': 'cap' in options ? options.cap : true,\n    'curry': 'curry' in options ? options.curry : true,\n    'fixed': 'fixed' in options ? options.fixed : true,\n    'immutable': 'immutable' in options ? options.immutable : true,\n    'rearg': 'rearg' in options ? options.rearg : true\n  };\n\n  var defaultHolder = isLib ? func : fallbackHolder,\n      forceCurry = ('curry' in options) && options.curry,\n      forceFixed = ('fixed' in options) && options.fixed,\n      forceRearg = ('rearg' in options) && options.rearg,\n      pristine = isLib ? func.runInContext() : undefined;\n\n  var helpers = isLib ? func : {\n    'ary': util.ary,\n    'assign': util.assign,\n    'clone': util.clone,\n    'curry': util.curry,\n    'forEach': util.forEach,\n    'isArray': util.isArray,\n    'isError': util.isError,\n    'isFunction': util.isFunction,\n    'isWeakMap': util.isWeakMap,\n    'iteratee': util.iteratee,\n    'keys': util.keys,\n    'rearg': util.rearg,\n    'toInteger': util.toInteger,\n    'toPath': util.toPath\n  };\n\n  var ary = helpers.ary,\n      assign = helpers.assign,\n      clone = helpers.clone,\n      curry = helpers.curry,\n      each = helpers.forEach,\n      isArray = helpers.isArray,\n      isError = helpers.isError,\n      isFunction = helpers.isFunction,\n      isWeakMap = helpers.isWeakMap,\n      keys = helpers.keys,\n      rearg = helpers.rearg,\n      toInteger = helpers.toInteger,\n      toPath = helpers.toPath;\n\n  var aryMethodKeys = keys(mapping.aryMethod);\n\n  var wrappers = {\n    'castArray': function(castArray) {\n      return function() {\n        var value = arguments[0];\n        return isArray(value)\n          ? castArray(cloneArray(value))\n          : castArray.apply(undefined, arguments);\n      };\n    },\n    'iteratee': function(iteratee) {\n      return function() {\n        var func = arguments[0],\n            arity = arguments[1],\n            result = iteratee(func, arity),\n            length = result.length;\n\n        if (config.cap && typeof arity == 'number') {\n          arity = arity > 2 ? (arity - 2) : 1;\n          return (length && length <= arity) ? result : baseAry(result, arity);\n        }\n        return result;\n      };\n    },\n    'mixin': function(mixin) {\n      return function(source) {\n        var func = this;\n        if (!isFunction(func)) {\n          return mixin(func, Object(source));\n        }\n        var pairs = [];\n        each(keys(source), function(key) {\n          if (isFunction(source[key])) {\n            pairs.push([key, func.prototype[key]]);\n          }\n        });\n\n        mixin(func, Object(source));\n\n        each(pairs, function(pair) {\n          var value = pair[1];\n          if (isFunction(value)) {\n            func.prototype[pair[0]] = value;\n          } else {\n            delete func.prototype[pair[0]];\n          }\n        });\n        return func;\n      };\n    },\n    'nthArg': function(nthArg) {\n      return function(n) {\n        var arity = n < 0 ? 1 : (toInteger(n) + 1);\n        return curry(nthArg(n), arity);\n      };\n    },\n    'rearg': function(rearg) {\n      return function(func, indexes) {\n        var arity = indexes ? indexes.length : 0;\n        return curry(rearg(func, indexes), arity);\n      };\n    },\n    'runInContext': function(runInContext) {\n      return function(context) {\n        return baseConvert(util, runInContext(context), options);\n      };\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Casts `func` to a function with an arity capped iteratee if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCap(name, func) {\n    if (config.cap) {\n      var indexes = mapping.iterateeRearg[name];\n      if (indexes) {\n        return iterateeRearg(func, indexes);\n      }\n      var n = !isLib && mapping.iterateeAry[name];\n      if (n) {\n        return iterateeAry(func, n);\n      }\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to a curried function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCurry(name, func, n) {\n    return (forceCurry || (config.curry && n > 1))\n      ? curry(func, n)\n      : func;\n  }\n\n  /**\n   * Casts `func` to a fixed arity function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the cast function.\n   */\n  function castFixed(name, func, n) {\n    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {\n      var data = mapping.methodSpread[name],\n          start = data && data.start;\n\n      return start  === undefined ? ary(func, n) : flatSpread(func, start);\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to an rearged function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castRearg(name, func, n) {\n    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))\n      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])\n      : func;\n  }\n\n  /**\n   * Creates a clone of `object` by `path`.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @param {Array|string} path The path to clone by.\n   * @returns {Object} Returns the cloned object.\n   */\n  function cloneByPath(object, path) {\n    path = toPath(path);\n\n    var index = -1,\n        length = path.length,\n        lastIndex = length - 1,\n        result = clone(Object(object)),\n        nested = result;\n\n    while (nested != null && ++index < length) {\n      var key = path[index],\n          value = nested[key];\n\n      if (value != null &&\n          !(isFunction(value) || isError(value) || isWeakMap(value))) {\n        nested[key] = clone(index == lastIndex ? value : Object(value));\n      }\n      nested = nested[key];\n    }\n    return result;\n  }\n\n  /**\n   * Converts `lodash` to an immutable auto-curried iteratee-first data-last\n   * version with conversion `options` applied.\n   *\n   * @param {Object} [options] The options object. See `baseConvert` for more details.\n   * @returns {Function} Returns the converted `lodash`.\n   */\n  function convertLib(options) {\n    return _.runInContext.convert(options)(undefined);\n  }\n\n  /**\n   * Create a converter function for `func` of `name`.\n   *\n   * @param {string} name The name of the function to convert.\n   * @param {Function} func The function to convert.\n   * @returns {Function} Returns the new converter function.\n   */\n  function createConverter(name, func) {\n    var realName = mapping.aliasToReal[name] || name,\n        methodName = mapping.remap[realName] || realName,\n        oldOptions = options;\n\n    return function(options) {\n      var newUtil = isLib ? pristine : helpers,\n          newFunc = isLib ? pristine[methodName] : func,\n          newOptions = assign(assign({}, oldOptions), options);\n\n      return baseConvert(newUtil, realName, newFunc, newOptions);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`\n   * arguments, ignoring any additional arguments.\n   *\n   * @private\n   * @param {Function} func The function to cap iteratee arguments for.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeAry(func, n) {\n    return overArg(func, function(func) {\n      return typeof func == 'function' ? baseAry(func, n) : func;\n    });\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee with arguments\n   * arranged according to the specified `indexes` where the argument value at\n   * the first index is provided as the first argument, the argument value at\n   * the second index is provided as the second argument, and so on.\n   *\n   * @private\n   * @param {Function} func The function to rearrange iteratee arguments for.\n   * @param {number[]} indexes The arranged argument indexes.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeRearg(func, indexes) {\n    return overArg(func, function(func) {\n      var n = indexes.length;\n      return baseArity(rearg(baseAry(func, n), indexes), n);\n    });\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function() {\n      var length = arguments.length;\n      if (!length) {\n        return func();\n      }\n      var args = Array(length);\n      while (length--) {\n        args[length] = arguments[length];\n      }\n      var index = config.rearg ? 0 : (length - 1);\n      args[index] = transform(args[index]);\n      return func.apply(undefined, args);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` and applys the conversions\n   * rules by `name`.\n   *\n   * @private\n   * @param {string} name The name of the function to wrap.\n   * @param {Function} func The function to wrap.\n   * @returns {Function} Returns the converted function.\n   */\n  function wrap(name, func, placeholder) {\n    var result,\n        realName = mapping.aliasToReal[name] || name,\n        wrapped = func,\n        wrapper = wrappers[realName];\n\n    if (wrapper) {\n      wrapped = wrapper(func);\n    }\n    else if (config.immutable) {\n      if (mapping.mutate.array[realName]) {\n        wrapped = wrapImmutable(func, cloneArray);\n      }\n      else if (mapping.mutate.object[realName]) {\n        wrapped = wrapImmutable(func, createCloner(func));\n      }\n      else if (mapping.mutate.set[realName]) {\n        wrapped = wrapImmutable(func, cloneByPath);\n      }\n    }\n    each(aryMethodKeys, function(aryKey) {\n      each(mapping.aryMethod[aryKey], function(otherName) {\n        if (realName == otherName) {\n          var data = mapping.methodSpread[realName],\n              afterRearg = data && data.afterRearg;\n\n          result = afterRearg\n            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)\n            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);\n\n          result = castCap(realName, result);\n          result = castCurry(realName, result, aryKey);\n          return false;\n        }\n      });\n      return !result;\n    });\n\n    result || (result = wrapped);\n    if (result == func) {\n      result = forceCurry ? curry(result, 1) : function() {\n        return func.apply(this, arguments);\n      };\n    }\n    result.convert = createConverter(realName, func);\n    result.placeholder = func.placeholder = placeholder;\n\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  if (!isObj) {\n    return wrap(name, func, defaultHolder);\n  }\n  var _ = func;\n\n  // Convert methods by ary cap.\n  var pairs = [];\n  each(aryMethodKeys, function(aryKey) {\n    each(mapping.aryMethod[aryKey], function(key) {\n      var func = _[mapping.remap[key] || key];\n      if (func) {\n        pairs.push([key, wrap(key, func, _)]);\n      }\n    });\n  });\n\n  // Convert remaining methods.\n  each(keys(_), function(key) {\n    var func = _[key];\n    if (typeof func == 'function') {\n      var length = pairs.length;\n      while (length--) {\n        if (pairs[length][0] == key) {\n          return;\n        }\n      }\n      func.convert = createConverter(key, func);\n      pairs.push([key, func]);\n    }\n  });\n\n  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.\n  each(pairs, function(pair) {\n    _[pair[0]] = pair[1];\n  });\n\n  _.convert = convertLib;\n  _.placeholder = _;\n\n  // Assign aliases.\n  each(keys(_), function(key) {\n    each(mapping.realToAlias[key] || [], function(alias) {\n      _[alias] = _[key];\n    });\n  });\n\n  return _;\n}\n\nmodule.exports = baseConvert;\n","/** Used to map aliases to their real names. */\nexports.aliasToReal = {\n\n  // Lodash aliases.\n  'each': 'forEach',\n  'eachRight': 'forEachRight',\n  'entries': 'toPairs',\n  'entriesIn': 'toPairsIn',\n  'extend': 'assignIn',\n  'extendAll': 'assignInAll',\n  'extendAllWith': 'assignInAllWith',\n  'extendWith': 'assignInWith',\n  'first': 'head',\n\n  // Methods that are curried variants of others.\n  'conforms': 'conformsTo',\n  'matches': 'isMatch',\n  'property': 'get',\n\n  // Ramda aliases.\n  '__': 'placeholder',\n  'F': 'stubFalse',\n  'T': 'stubTrue',\n  'all': 'every',\n  'allPass': 'overEvery',\n  'always': 'constant',\n  'any': 'some',\n  'anyPass': 'overSome',\n  'apply': 'spread',\n  'assoc': 'set',\n  'assocPath': 'set',\n  'complement': 'negate',\n  'compose': 'flowRight',\n  'contains': 'includes',\n  'dissoc': 'unset',\n  'dissocPath': 'unset',\n  'dropLast': 'dropRight',\n  'dropLastWhile': 'dropRightWhile',\n  'equals': 'isEqual',\n  'identical': 'eq',\n  'indexBy': 'keyBy',\n  'init': 'initial',\n  'invertObj': 'invert',\n  'juxt': 'over',\n  'omitAll': 'omit',\n  'nAry': 'ary',\n  'path': 'get',\n  'pathEq': 'matchesProperty',\n  'pathOr': 'getOr',\n  'paths': 'at',\n  'pickAll': 'pick',\n  'pipe': 'flow',\n  'pluck': 'map',\n  'prop': 'get',\n  'propEq': 'matchesProperty',\n  'propOr': 'getOr',\n  'props': 'at',\n  'symmetricDifference': 'xor',\n  'symmetricDifferenceBy': 'xorBy',\n  'symmetricDifferenceWith': 'xorWith',\n  'takeLast': 'takeRight',\n  'takeLastWhile': 'takeRightWhile',\n  'unapply': 'rest',\n  'unnest': 'flatten',\n  'useWith': 'overArgs',\n  'where': 'conformsTo',\n  'whereEq': 'isMatch',\n  'zipObj': 'zipObject'\n};\n\n/** Used to map ary to method names. */\nexports.aryMethod = {\n  '1': [\n    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',\n    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',\n    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',\n    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',\n    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',\n    'uniqueId', 'words', 'zipAll'\n  ],\n  '2': [\n    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',\n    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',\n    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',\n    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',\n    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',\n    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',\n    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',\n    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',\n    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',\n    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',\n    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',\n    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',\n    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',\n    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',\n    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',\n    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',\n    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',\n    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',\n    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',\n    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',\n    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',\n    'zipObjectDeep'\n  ],\n  '3': [\n    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',\n    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',\n    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',\n    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',\n    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',\n    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',\n    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',\n    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',\n    'xorWith', 'zipWith'\n  ],\n  '4': [\n    'fill', 'setWith', 'updateWith'\n  ]\n};\n\n/** Used to map ary to rearg configs. */\nexports.aryRearg = {\n  '2': [1, 0],\n  '3': [2, 0, 1],\n  '4': [3, 2, 0, 1]\n};\n\n/** Used to map method names to their iteratee ary. */\nexports.iterateeAry = {\n  'dropRightWhile': 1,\n  'dropWhile': 1,\n  'every': 1,\n  'filter': 1,\n  'find': 1,\n  'findFrom': 1,\n  'findIndex': 1,\n  'findIndexFrom': 1,\n  'findKey': 1,\n  'findLast': 1,\n  'findLastFrom': 1,\n  'findLastIndex': 1,\n  'findLastIndexFrom': 1,\n  'findLastKey': 1,\n  'flatMap': 1,\n  'flatMapDeep': 1,\n  'flatMapDepth': 1,\n  'forEach': 1,\n  'forEachRight': 1,\n  'forIn': 1,\n  'forInRight': 1,\n  'forOwn': 1,\n  'forOwnRight': 1,\n  'map': 1,\n  'mapKeys': 1,\n  'mapValues': 1,\n  'partition': 1,\n  'reduce': 2,\n  'reduceRight': 2,\n  'reject': 1,\n  'remove': 1,\n  'some': 1,\n  'takeRightWhile': 1,\n  'takeWhile': 1,\n  'times': 1,\n  'transform': 2\n};\n\n/** Used to map method names to iteratee rearg configs. */\nexports.iterateeRearg = {\n  'mapKeys': [1],\n  'reduceRight': [1, 0]\n};\n\n/** Used to map method names to rearg configs. */\nexports.methodRearg = {\n  'assignInAllWith': [1, 0],\n  'assignInWith': [1, 2, 0],\n  'assignAllWith': [1, 0],\n  'assignWith': [1, 2, 0],\n  'differenceBy': [1, 2, 0],\n  'differenceWith': [1, 2, 0],\n  'getOr': [2, 1, 0],\n  'intersectionBy': [1, 2, 0],\n  'intersectionWith': [1, 2, 0],\n  'isEqualWith': [1, 2, 0],\n  'isMatchWith': [2, 1, 0],\n  'mergeAllWith': [1, 0],\n  'mergeWith': [1, 2, 0],\n  'padChars': [2, 1, 0],\n  'padCharsEnd': [2, 1, 0],\n  'padCharsStart': [2, 1, 0],\n  'pullAllBy': [2, 1, 0],\n  'pullAllWith': [2, 1, 0],\n  'rangeStep': [1, 2, 0],\n  'rangeStepRight': [1, 2, 0],\n  'setWith': [3, 1, 2, 0],\n  'sortedIndexBy': [2, 1, 0],\n  'sortedLastIndexBy': [2, 1, 0],\n  'unionBy': [1, 2, 0],\n  'unionWith': [1, 2, 0],\n  'updateWith': [3, 1, 2, 0],\n  'xorBy': [1, 2, 0],\n  'xorWith': [1, 2, 0],\n  'zipWith': [1, 2, 0]\n};\n\n/** Used to map method names to spread configs. */\nexports.methodSpread = {\n  'assignAll': { 'start': 0 },\n  'assignAllWith': { 'start': 0 },\n  'assignInAll': { 'start': 0 },\n  'assignInAllWith': { 'start': 0 },\n  'defaultsAll': { 'start': 0 },\n  'defaultsDeepAll': { 'start': 0 },\n  'invokeArgs': { 'start': 2 },\n  'invokeArgsMap': { 'start': 2 },\n  'mergeAll': { 'start': 0 },\n  'mergeAllWith': { 'start': 0 },\n  'partial': { 'start': 1 },\n  'partialRight': { 'start': 1 },\n  'without': { 'start': 1 },\n  'zipAll': { 'start': 0 }\n};\n\n/** Used to identify methods which mutate arrays or objects. */\nexports.mutate = {\n  'array': {\n    'fill': true,\n    'pull': true,\n    'pullAll': true,\n    'pullAllBy': true,\n    'pullAllWith': true,\n    'pullAt': true,\n    'remove': true,\n    'reverse': true\n  },\n  'object': {\n    'assign': true,\n    'assignAll': true,\n    'assignAllWith': true,\n    'assignIn': true,\n    'assignInAll': true,\n    'assignInAllWith': true,\n    'assignInWith': true,\n    'assignWith': true,\n    'defaults': true,\n    'defaultsAll': true,\n    'defaultsDeep': true,\n    'defaultsDeepAll': true,\n    'merge': true,\n    'mergeAll': true,\n    'mergeAllWith': true,\n    'mergeWith': true,\n  },\n  'set': {\n    'set': true,\n    'setWith': true,\n    'unset': true,\n    'update': true,\n    'updateWith': true\n  }\n};\n\n/** Used to map real names to their aliases. */\nexports.realToAlias = (function() {\n  var hasOwnProperty = Object.prototype.hasOwnProperty,\n      object = exports.aliasToReal,\n      result = {};\n\n  for (var key in object) {\n    var value = object[key];\n    if (hasOwnProperty.call(result, value)) {\n      result[value].push(key);\n    } else {\n      result[value] = [key];\n    }\n  }\n  return result;\n}());\n\n/** Used to map method names to other names. */\nexports.remap = {\n  'assignAll': 'assign',\n  'assignAllWith': 'assignWith',\n  'assignInAll': 'assignIn',\n  'assignInAllWith': 'assignInWith',\n  'curryN': 'curry',\n  'curryRightN': 'curryRight',\n  'defaultsAll': 'defaults',\n  'defaultsDeepAll': 'defaultsDeep',\n  'findFrom': 'find',\n  'findIndexFrom': 'findIndex',\n  'findLastFrom': 'findLast',\n  'findLastIndexFrom': 'findLastIndex',\n  'getOr': 'get',\n  'includesFrom': 'includes',\n  'indexOfFrom': 'indexOf',\n  'invokeArgs': 'invoke',\n  'invokeArgsMap': 'invokeMap',\n  'lastIndexOfFrom': 'lastIndexOf',\n  'mergeAll': 'merge',\n  'mergeAllWith': 'mergeWith',\n  'padChars': 'pad',\n  'padCharsEnd': 'padEnd',\n  'padCharsStart': 'padStart',\n  'propertyOf': 'get',\n  'rangeStep': 'range',\n  'rangeStepRight': 'rangeRight',\n  'restFrom': 'rest',\n  'spreadFrom': 'spread',\n  'trimChars': 'trim',\n  'trimCharsEnd': 'trimEnd',\n  'trimCharsStart': 'trimStart',\n  'zipAll': 'zip'\n};\n\n/** Used to track methods that skip fixing their arity. */\nexports.skipFixed = {\n  'castArray': true,\n  'flow': true,\n  'flowRight': true,\n  'iteratee': true,\n  'mixin': true,\n  'rearg': true,\n  'runInContext': true\n};\n\n/** Used to track methods that skip rearranging arguments. */\nexports.skipRearg = {\n  'add': true,\n  'assign': true,\n  'assignIn': true,\n  'bind': true,\n  'bindKey': true,\n  'concat': true,\n  'difference': true,\n  'divide': true,\n  'eq': true,\n  'gt': true,\n  'gte': true,\n  'isEqual': true,\n  'lt': true,\n  'lte': true,\n  'matchesProperty': true,\n  'merge': true,\n  'multiply': true,\n  'overArgs': true,\n  'partial': true,\n  'partialRight': true,\n  'propertyOf': true,\n  'random': true,\n  'range': true,\n  'rangeRight': true,\n  'subtract': true,\n  'zip': true,\n  'zipObject': true,\n  'zipObjectDeep': true\n};\n","/**\n * The default argument placeholder value for methods.\n *\n * @type {Object}\n */\nmodule.exports = {};\n","/**\n * @license\n * Lodash lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE\n */\n;(function(){function n(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function t(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function r(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&false!==t(n[r],r,n););return n}function e(n,t){for(var r=null==n?0:n.length;r--&&false!==t(n[r],r,n););return n}function u(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return false;\nreturn true}function i(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function o(n,t){return!(null==n||!n.length)&&-1<v(n,t,0)}function f(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return true;return false}function c(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function a(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function l(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);\nreturn r}function s(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function h(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return true;return false}function p(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,false}),e}function _(n,t,r,e){var u=n.length;for(r+=e?1:-1;e?r--:++r<u;)if(t(n[r],r,n))return r;return-1}function v(n,t,r){if(t===t)n:{--r;for(var e=n.length;++r<e;)if(n[r]===t){n=r;break n}n=-1}else n=_(n,d,r);return n}function g(n,t,r,e){\n--r;for(var u=n.length;++r<u;)if(e(n[r],t))return r;return-1}function d(n){return n!==n}function y(n,t){var r=null==n?0:n.length;return r?m(n,t)/r:F}function b(n){return function(t){return null==t?T:t[n]}}function x(n){return function(t){return null==n?T:n[t]}}function j(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=false,n):t(r,n,u,i)}),r}function w(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].c;return n}function m(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);i!==T&&(r=r===T?i:r+i)}return r;\n}function A(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function k(n,t){return c(t,function(t){return[t,n[t]]})}function E(n){return function(t){return n(t)}}function S(n,t){return c(t,function(t){return n[t]})}function O(n,t){return n.has(t)}function I(n,t){for(var r=-1,e=n.length;++r<e&&-1<v(t,n[r],0););return r}function R(n,t){for(var r=n.length;r--&&-1<v(t,n[r],0););return r}function z(n){return\"\\\\\"+Ln[n]}function W(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n];\n}),r}function U(n,t){return function(r){return n(t(r))}}function B(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&\"__lodash_placeholder__\"!==o||(n[r]=\"__lodash_placeholder__\",i[u++]=r)}return i}function L(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=n}),r}function C(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function D(n){if(Rn.test(n)){for(var t=On.lastIndex=0;On.test(n);)++t;n=t}else n=Qn(n);return n}function M(n){return Rn.test(n)?n.match(On)||[]:n.split(\"\");\n}var T,$=1/0,F=NaN,N=[[\"ary\",128],[\"bind\",1],[\"bindKey\",2],[\"curry\",8],[\"curryRight\",16],[\"flip\",512],[\"partial\",32],[\"partialRight\",64],[\"rearg\",256]],P=/\\b__p\\+='';/g,Z=/\\b(__p\\+=)''\\+/g,q=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,V=/&(?:amp|lt|gt|quot|#39);/g,K=/[&<>\"']/g,G=RegExp(V.source),H=RegExp(K.source),J=/<%-([\\s\\S]+?)%>/g,Y=/<%([\\s\\S]+?)%>/g,Q=/<%=([\\s\\S]+?)%>/g,X=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,nn=/^\\w*$/,tn=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,rn=/[\\\\^$.*+?()[\\]{}|]/g,en=RegExp(rn.source),un=/^\\s+|\\s+$/g,on=/^\\s+/,fn=/\\s+$/,cn=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,an=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,ln=/,? & /,sn=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,hn=/\\\\(\\\\)?/g,pn=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,_n=/\\w*$/,vn=/^[-+]0x[0-9a-f]+$/i,gn=/^0b[01]+$/i,dn=/^\\[object .+?Constructor\\]$/,yn=/^0o[0-7]+$/i,bn=/^(?:0|[1-9]\\d*)$/,xn=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,jn=/($^)/,wn=/['\\n\\r\\u2028\\u2029\\\\]/g,mn=\"[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|\\\\ud83c[\\\\udffb-\\\\udfff])?(?:\\\\u200d(?:[^\\\\ud800-\\\\udfff]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|\\\\ud83c[\\\\udffb-\\\\udfff])?)*\",An=\"(?:[\\\\u2700-\\\\u27bf]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])\"+mn,kn=\"(?:[^\\\\ud800-\\\\udfff][\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]?|[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|[\\\\ud800-\\\\udfff])\",En=RegExp(\"['\\u2019]\",\"g\"),Sn=RegExp(\"[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]\",\"g\"),On=RegExp(\"\\\\ud83c[\\\\udffb-\\\\udfff](?=\\\\ud83c[\\\\udffb-\\\\udfff])|\"+kn+mn,\"g\"),In=RegExp([\"[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|$)|(?:[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde](?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])|$)|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?(?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?|\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])|\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])|\\\\d+\",An].join(\"|\"),\"g\"),Rn=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff\\\\ufe0e\\\\ufe0f]\"),zn=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Wn=\"Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout\".split(\" \"),Un={};\nUn[\"[object Float32Array]\"]=Un[\"[object Float64Array]\"]=Un[\"[object Int8Array]\"]=Un[\"[object Int16Array]\"]=Un[\"[object Int32Array]\"]=Un[\"[object Uint8Array]\"]=Un[\"[object Uint8ClampedArray]\"]=Un[\"[object Uint16Array]\"]=Un[\"[object Uint32Array]\"]=true,Un[\"[object Arguments]\"]=Un[\"[object Array]\"]=Un[\"[object ArrayBuffer]\"]=Un[\"[object Boolean]\"]=Un[\"[object DataView]\"]=Un[\"[object Date]\"]=Un[\"[object Error]\"]=Un[\"[object Function]\"]=Un[\"[object Map]\"]=Un[\"[object Number]\"]=Un[\"[object Object]\"]=Un[\"[object RegExp]\"]=Un[\"[object Set]\"]=Un[\"[object String]\"]=Un[\"[object WeakMap]\"]=false;\nvar Bn={};Bn[\"[object Arguments]\"]=Bn[\"[object Array]\"]=Bn[\"[object ArrayBuffer]\"]=Bn[\"[object DataView]\"]=Bn[\"[object Boolean]\"]=Bn[\"[object Date]\"]=Bn[\"[object Float32Array]\"]=Bn[\"[object Float64Array]\"]=Bn[\"[object Int8Array]\"]=Bn[\"[object Int16Array]\"]=Bn[\"[object Int32Array]\"]=Bn[\"[object Map]\"]=Bn[\"[object Number]\"]=Bn[\"[object Object]\"]=Bn[\"[object RegExp]\"]=Bn[\"[object Set]\"]=Bn[\"[object String]\"]=Bn[\"[object Symbol]\"]=Bn[\"[object Uint8Array]\"]=Bn[\"[object Uint8ClampedArray]\"]=Bn[\"[object Uint16Array]\"]=Bn[\"[object Uint32Array]\"]=true,\nBn[\"[object Error]\"]=Bn[\"[object Function]\"]=Bn[\"[object WeakMap]\"]=false;var Ln={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Cn=parseFloat,Dn=parseInt,Mn=typeof global==\"object\"&&global&&global.Object===Object&&global,Tn=typeof self==\"object\"&&self&&self.Object===Object&&self,$n=Mn||Tn||Function(\"return this\")(),Fn=typeof exports==\"object\"&&exports&&!exports.nodeType&&exports,Nn=Fn&&typeof module==\"object\"&&module&&!module.nodeType&&module,Pn=Nn&&Nn.exports===Fn,Zn=Pn&&Mn.process,qn=function(){\ntry{var n=Nn&&Nn.require&&Nn.require(\"util\").types;return n?n:Zn&&Zn.binding&&Zn.binding(\"util\")}catch(n){}}(),Vn=qn&&qn.isArrayBuffer,Kn=qn&&qn.isDate,Gn=qn&&qn.isMap,Hn=qn&&qn.isRegExp,Jn=qn&&qn.isSet,Yn=qn&&qn.isTypedArray,Qn=b(\"length\"),Xn=x({\"\\xc0\":\"A\",\"\\xc1\":\"A\",\"\\xc2\":\"A\",\"\\xc3\":\"A\",\"\\xc4\":\"A\",\"\\xc5\":\"A\",\"\\xe0\":\"a\",\"\\xe1\":\"a\",\"\\xe2\":\"a\",\"\\xe3\":\"a\",\"\\xe4\":\"a\",\"\\xe5\":\"a\",\"\\xc7\":\"C\",\"\\xe7\":\"c\",\"\\xd0\":\"D\",\"\\xf0\":\"d\",\"\\xc8\":\"E\",\"\\xc9\":\"E\",\"\\xca\":\"E\",\"\\xcb\":\"E\",\"\\xe8\":\"e\",\"\\xe9\":\"e\",\"\\xea\":\"e\",\"\\xeb\":\"e\",\n\"\\xcc\":\"I\",\"\\xcd\":\"I\",\"\\xce\":\"I\",\"\\xcf\":\"I\",\"\\xec\":\"i\",\"\\xed\":\"i\",\"\\xee\":\"i\",\"\\xef\":\"i\",\"\\xd1\":\"N\",\"\\xf1\":\"n\",\"\\xd2\":\"O\",\"\\xd3\":\"O\",\"\\xd4\":\"O\",\"\\xd5\":\"O\",\"\\xd6\":\"O\",\"\\xd8\":\"O\",\"\\xf2\":\"o\",\"\\xf3\":\"o\",\"\\xf4\":\"o\",\"\\xf5\":\"o\",\"\\xf6\":\"o\",\"\\xf8\":\"o\",\"\\xd9\":\"U\",\"\\xda\":\"U\",\"\\xdb\":\"U\",\"\\xdc\":\"U\",\"\\xf9\":\"u\",\"\\xfa\":\"u\",\"\\xfb\":\"u\",\"\\xfc\":\"u\",\"\\xdd\":\"Y\",\"\\xfd\":\"y\",\"\\xff\":\"y\",\"\\xc6\":\"Ae\",\"\\xe6\":\"ae\",\"\\xde\":\"Th\",\"\\xfe\":\"th\",\"\\xdf\":\"ss\",\"\\u0100\":\"A\",\"\\u0102\":\"A\",\"\\u0104\":\"A\",\"\\u0101\":\"a\",\"\\u0103\":\"a\",\"\\u0105\":\"a\",\n\"\\u0106\":\"C\",\"\\u0108\":\"C\",\"\\u010a\":\"C\",\"\\u010c\":\"C\",\"\\u0107\":\"c\",\"\\u0109\":\"c\",\"\\u010b\":\"c\",\"\\u010d\":\"c\",\"\\u010e\":\"D\",\"\\u0110\":\"D\",\"\\u010f\":\"d\",\"\\u0111\":\"d\",\"\\u0112\":\"E\",\"\\u0114\":\"E\",\"\\u0116\":\"E\",\"\\u0118\":\"E\",\"\\u011a\":\"E\",\"\\u0113\":\"e\",\"\\u0115\":\"e\",\"\\u0117\":\"e\",\"\\u0119\":\"e\",\"\\u011b\":\"e\",\"\\u011c\":\"G\",\"\\u011e\":\"G\",\"\\u0120\":\"G\",\"\\u0122\":\"G\",\"\\u011d\":\"g\",\"\\u011f\":\"g\",\"\\u0121\":\"g\",\"\\u0123\":\"g\",\"\\u0124\":\"H\",\"\\u0126\":\"H\",\"\\u0125\":\"h\",\"\\u0127\":\"h\",\"\\u0128\":\"I\",\"\\u012a\":\"I\",\"\\u012c\":\"I\",\"\\u012e\":\"I\",\"\\u0130\":\"I\",\n\"\\u0129\":\"i\",\"\\u012b\":\"i\",\"\\u012d\":\"i\",\"\\u012f\":\"i\",\"\\u0131\":\"i\",\"\\u0134\":\"J\",\"\\u0135\":\"j\",\"\\u0136\":\"K\",\"\\u0137\":\"k\",\"\\u0138\":\"k\",\"\\u0139\":\"L\",\"\\u013b\":\"L\",\"\\u013d\":\"L\",\"\\u013f\":\"L\",\"\\u0141\":\"L\",\"\\u013a\":\"l\",\"\\u013c\":\"l\",\"\\u013e\":\"l\",\"\\u0140\":\"l\",\"\\u0142\":\"l\",\"\\u0143\":\"N\",\"\\u0145\":\"N\",\"\\u0147\":\"N\",\"\\u014a\":\"N\",\"\\u0144\":\"n\",\"\\u0146\":\"n\",\"\\u0148\":\"n\",\"\\u014b\":\"n\",\"\\u014c\":\"O\",\"\\u014e\":\"O\",\"\\u0150\":\"O\",\"\\u014d\":\"o\",\"\\u014f\":\"o\",\"\\u0151\":\"o\",\"\\u0154\":\"R\",\"\\u0156\":\"R\",\"\\u0158\":\"R\",\"\\u0155\":\"r\",\"\\u0157\":\"r\",\n\"\\u0159\":\"r\",\"\\u015a\":\"S\",\"\\u015c\":\"S\",\"\\u015e\":\"S\",\"\\u0160\":\"S\",\"\\u015b\":\"s\",\"\\u015d\":\"s\",\"\\u015f\":\"s\",\"\\u0161\":\"s\",\"\\u0162\":\"T\",\"\\u0164\":\"T\",\"\\u0166\":\"T\",\"\\u0163\":\"t\",\"\\u0165\":\"t\",\"\\u0167\":\"t\",\"\\u0168\":\"U\",\"\\u016a\":\"U\",\"\\u016c\":\"U\",\"\\u016e\":\"U\",\"\\u0170\":\"U\",\"\\u0172\":\"U\",\"\\u0169\":\"u\",\"\\u016b\":\"u\",\"\\u016d\":\"u\",\"\\u016f\":\"u\",\"\\u0171\":\"u\",\"\\u0173\":\"u\",\"\\u0174\":\"W\",\"\\u0175\":\"w\",\"\\u0176\":\"Y\",\"\\u0177\":\"y\",\"\\u0178\":\"Y\",\"\\u0179\":\"Z\",\"\\u017b\":\"Z\",\"\\u017d\":\"Z\",\"\\u017a\":\"z\",\"\\u017c\":\"z\",\"\\u017e\":\"z\",\"\\u0132\":\"IJ\",\n\"\\u0133\":\"ij\",\"\\u0152\":\"Oe\",\"\\u0153\":\"oe\",\"\\u0149\":\"'n\",\"\\u017f\":\"s\"}),nt=x({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"}),tt=x({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"}),rt=function x(mn){function An(n){if(yu(n)&&!ff(n)&&!(n instanceof Ln)){if(n instanceof On)return n;if(oi.call(n,\"__wrapped__\"))return Fe(n)}return new On(n)}function kn(){}function On(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=T}function Ln(n){\nthis.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=false,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Mn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Tn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Fn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Nn(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new Fn;++t<r;)this.add(n[t]);\n}function Zn(n){this.size=(this.__data__=new Tn(n)).size}function qn(n,t){var r,e=ff(n),u=!e&&of(n),i=!e&&!u&&af(n),o=!e&&!u&&!i&&_f(n),u=(e=e||u||i||o)?A(n.length,ni):[],f=u.length;for(r in n)!t&&!oi.call(n,r)||e&&(\"length\"==r||i&&(\"offset\"==r||\"parent\"==r)||o&&(\"buffer\"==r||\"byteLength\"==r||\"byteOffset\"==r)||Se(r,f))||u.push(r);return u}function Qn(n){var t=n.length;return t?n[ir(0,t-1)]:T}function et(n,t){return De(Lr(n),pt(t,0,n.length))}function ut(n){return De(Lr(n))}function it(n,t,r){(r===T||lu(n[t],r))&&(r!==T||t in n)||st(n,t,r);\n}function ot(n,t,r){var e=n[t];oi.call(n,t)&&lu(e,r)&&(r!==T||t in n)||st(n,t,r)}function ft(n,t){for(var r=n.length;r--;)if(lu(n[r][0],t))return r;return-1}function ct(n,t,r,e){return uo(n,function(n,u,i){t(e,n,r(n),i)}),e}function at(n,t){return n&&Cr(t,Wu(t),n)}function lt(n,t){return n&&Cr(t,Uu(t),n)}function st(n,t,r){\"__proto__\"==t&&Ai?Ai(n,t,{configurable:true,enumerable:true,value:r,writable:true}):n[t]=r}function ht(n,t){for(var r=-1,e=t.length,u=Ku(e),i=null==n;++r<e;)u[r]=i?T:Ru(n,t[r]);return u;\n}function pt(n,t,r){return n===n&&(r!==T&&(n=n<=r?n:r),t!==T&&(n=n>=t?n:t)),n}function _t(n,t,e,u,i,o){var f,c=1&t,a=2&t,l=4&t;if(e&&(f=i?e(n,u,i,o):e(n)),f!==T)return f;if(!du(n))return n;if(u=ff(n)){if(f=me(n),!c)return Lr(n,f)}else{var s=vo(n),h=\"[object Function]\"==s||\"[object GeneratorFunction]\"==s;if(af(n))return Ir(n,c);if(\"[object Object]\"==s||\"[object Arguments]\"==s||h&&!i){if(f=a||h?{}:Ae(n),!c)return a?Mr(n,lt(f,n)):Dr(n,at(f,n))}else{if(!Bn[s])return i?n:{};f=ke(n,s,c)}}if(o||(o=new Zn),\ni=o.get(n))return i;if(o.set(n,f),pf(n))return n.forEach(function(r){f.add(_t(r,t,e,r,n,o))}),f;if(sf(n))return n.forEach(function(r,u){f.set(u,_t(r,t,e,u,n,o))}),f;var a=l?a?ve:_e:a?Uu:Wu,p=u?T:a(n);return r(p||n,function(r,u){p&&(u=r,r=n[u]),ot(f,u,_t(r,t,e,u,n,o))}),f}function vt(n){var t=Wu(n);return function(r){return gt(r,n,t)}}function gt(n,t,r){var e=r.length;if(null==n)return!e;for(n=Qu(n);e--;){var u=r[e],i=t[u],o=n[u];if(o===T&&!(u in n)||!i(o))return false}return true}function dt(n,t,r){if(typeof n!=\"function\")throw new ti(\"Expected a function\");\nreturn bo(function(){n.apply(T,r)},t)}function yt(n,t,r,e){var u=-1,i=o,a=true,l=n.length,s=[],h=t.length;if(!l)return s;r&&(t=c(t,E(r))),e?(i=f,a=false):200<=t.length&&(i=O,a=false,t=new Nn(t));n:for(;++u<l;){var p=n[u],_=null==r?p:r(p),p=e||0!==p?p:0;if(a&&_===_){for(var v=h;v--;)if(t[v]===_)continue n;s.push(p)}else i(t,_,e)||s.push(p)}return s}function bt(n,t){var r=true;return uo(n,function(n,e,u){return r=!!t(n,e,u)}),r}function xt(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(f===T?o===o&&!wu(o):r(o,f)))var f=o,c=i;\n}return c}function jt(n,t){var r=[];return uo(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function wt(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=Ee),u||(u=[]);++i<o;){var f=n[i];0<t&&r(f)?1<t?wt(f,t-1,r,e,u):a(u,f):e||(u[u.length]=f)}return u}function mt(n,t){return n&&oo(n,t,Wu)}function At(n,t){return n&&fo(n,t,Wu)}function kt(n,t){return i(t,function(t){return _u(n[t])})}function Et(n,t){t=Sr(t,n);for(var r=0,e=t.length;null!=n&&r<e;)n=n[Me(t[r++])];return r&&r==e?n:T}function St(n,t,r){return t=t(n),\nff(n)?t:a(t,r(n))}function Ot(n){if(null==n)return n===T?\"[object Undefined]\":\"[object Null]\";if(mi&&mi in Qu(n)){var t=oi.call(n,mi),r=n[mi];try{n[mi]=T;var e=true}catch(n){}var u=ai.call(n);e&&(t?n[mi]=r:delete n[mi]),n=u}else n=ai.call(n);return n}function It(n,t){return n>t}function Rt(n,t){return null!=n&&oi.call(n,t)}function zt(n,t){return null!=n&&t in Qu(n)}function Wt(n,t,r){for(var e=r?f:o,u=n[0].length,i=n.length,a=i,l=Ku(i),s=1/0,h=[];a--;){var p=n[a];a&&t&&(p=c(p,E(t))),s=Ci(p.length,s),\nl[a]=!r&&(t||120<=u&&120<=p.length)?new Nn(a&&p):T}var p=n[0],_=-1,v=l[0];n:for(;++_<u&&h.length<s;){var g=p[_],d=t?t(g):g,g=r||0!==g?g:0;if(v?!O(v,d):!e(h,d,r)){for(a=i;--a;){var y=l[a];if(y?!O(y,d):!e(n[a],d,r))continue n}v&&v.push(d),h.push(g)}}return h}function Ut(n,t,r,e){return mt(n,function(n,u,i){t(e,r(n),u,i)}),e}function Bt(t,r,e){return r=Sr(r,t),t=2>r.length?t:Et(t,hr(r,0,-1)),r=null==t?t:t[Me(Ve(r))],null==r?T:n(r,t,e)}function Lt(n){return yu(n)&&\"[object Arguments]\"==Ot(n)}function Ct(n){\nreturn yu(n)&&\"[object ArrayBuffer]\"==Ot(n)}function Dt(n){return yu(n)&&\"[object Date]\"==Ot(n)}function Mt(n,t,r,e,u){if(n===t)return true;if(null==n||null==t||!yu(n)&&!yu(t))return n!==n&&t!==t;n:{var i=ff(n),o=ff(t),f=i?\"[object Array]\":vo(n),c=o?\"[object Array]\":vo(t),f=\"[object Arguments]\"==f?\"[object Object]\":f,c=\"[object Arguments]\"==c?\"[object Object]\":c,a=\"[object Object]\"==f,o=\"[object Object]\"==c;if((c=f==c)&&af(n)){if(!af(t)){t=false;break n}i=true,a=false}if(c&&!a)u||(u=new Zn),t=i||_f(n)?se(n,t,r,e,Mt,u):he(n,t,f,r,e,Mt,u);else{\nif(!(1&r)&&(i=a&&oi.call(n,\"__wrapped__\"),f=o&&oi.call(t,\"__wrapped__\"),i||f)){n=i?n.value():n,t=f?t.value():t,u||(u=new Zn),t=Mt(n,t,r,e,u);break n}if(c)t:if(u||(u=new Zn),i=1&r,f=_e(n),o=f.length,c=_e(t).length,o==c||i){for(a=o;a--;){var l=f[a];if(!(i?l in t:oi.call(t,l))){t=false;break t}}if((c=u.get(n))&&u.get(t))t=c==t;else{c=true,u.set(n,t),u.set(t,n);for(var s=i;++a<o;){var l=f[a],h=n[l],p=t[l];if(e)var _=i?e(p,h,l,t,n,u):e(h,p,l,n,t,u);if(_===T?h!==p&&!Mt(h,p,r,e,u):!_){c=false;break}s||(s=\"constructor\"==l);\n}c&&!s&&(r=n.constructor,e=t.constructor,r!=e&&\"constructor\"in n&&\"constructor\"in t&&!(typeof r==\"function\"&&r instanceof r&&typeof e==\"function\"&&e instanceof e)&&(c=false)),u.delete(n),u.delete(t),t=c}}else t=false;else t=false}}return t}function Tt(n){return yu(n)&&\"[object Map]\"==vo(n)}function $t(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=Qu(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return false}for(;++u<i;){var f=r[u],c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===T&&!(c in n))return false;\n}else{if(f=new Zn,e)var s=e(a,l,c,n,t,f);if(s===T?!Mt(l,a,3,e,f):!s)return false}}return true}function Ft(n){return!(!du(n)||ci&&ci in n)&&(_u(n)?hi:dn).test(Te(n))}function Nt(n){return yu(n)&&\"[object RegExp]\"==Ot(n)}function Pt(n){return yu(n)&&\"[object Set]\"==vo(n)}function Zt(n){return yu(n)&&gu(n.length)&&!!Un[Ot(n)]}function qt(n){return typeof n==\"function\"?n:null==n?$u:typeof n==\"object\"?ff(n)?Jt(n[0],n[1]):Ht(n):Zu(n)}function Vt(n){if(!ze(n))return Bi(n);var t,r=[];for(t in Qu(n))oi.call(n,t)&&\"constructor\"!=t&&r.push(t);\nreturn r}function Kt(n,t){return n<t}function Gt(n,t){var r=-1,e=su(n)?Ku(n.length):[];return uo(n,function(n,u,i){e[++r]=t(n,u,i)}),e}function Ht(n){var t=xe(n);return 1==t.length&&t[0][2]?We(t[0][0],t[0][1]):function(r){return r===n||$t(r,n,t)}}function Jt(n,t){return Ie(n)&&t===t&&!du(t)?We(Me(n),t):function(r){var e=Ru(r,n);return e===T&&e===t?zu(r,n):Mt(t,e,3)}}function Yt(n,t,r,e,u){n!==t&&oo(t,function(i,o){if(du(i)){u||(u=new Zn);var f=u,c=Be(n,o),a=Be(t,o),l=f.get(a);if(!l){var l=e?e(c,a,o+\"\",n,t,f):T,s=l===T;\nif(s){var h=ff(a),p=!h&&af(a),_=!h&&!p&&_f(a),l=a;h||p||_?ff(c)?l=c:hu(c)?l=Lr(c):p?(s=false,l=Ir(a,true)):_?(s=false,l=zr(a,true)):l=[]:xu(a)||of(a)?(l=c,of(c)?l=Ou(c):du(c)&&!_u(c)||(l=Ae(a))):s=false}s&&(f.set(a,l),Yt(l,a,r,e,f),f.delete(a))}it(n,o,l)}else f=e?e(Be(n,o),i,o+\"\",n,t,u):T,f===T&&(f=i),it(n,o,f)},Uu)}function Qt(n,t){var r=n.length;if(r)return t+=0>t?r:0,Se(t,r)?n[t]:T}function Xt(n,t,r){var e=-1;return t=c(t.length?t:[$u],E(ye())),n=Gt(n,function(n,r,u){return{a:c(t,function(t){return t(n)}),\nb:++e,c:n}}),w(n,function(n,t){var e;n:{e=-1;for(var u=n.a,i=t.a,o=u.length,f=r.length;++e<o;){var c=Wr(u[e],i[e]);if(c){if(e>=f){e=c;break n}e=c*(\"desc\"==r[e]?-1:1);break n}}e=n.b-t.b}return e})}function nr(n,t){return tr(n,t,function(t,r){return zu(n,r)})}function tr(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=Et(n,o);r(f,o)&&lr(i,Sr(o,n),f)}return i}function rr(n){return function(t){return Et(t,n)}}function er(n,t,r,e){var u=e?g:v,i=-1,o=t.length,f=n;for(n===t&&(t=Lr(t)),r&&(f=c(n,E(r)));++i<o;)for(var a=0,l=t[i],l=r?r(l):l;-1<(a=u(f,l,a,e));)f!==n&&xi.call(f,a,1),\nxi.call(n,a,1);return n}function ur(n,t){for(var r=n?t.length:0,e=r-1;r--;){var u=t[r];if(r==e||u!==i){var i=u;Se(u)?xi.call(n,u,1):xr(n,u)}}return n}function ir(n,t){return n+Ii(Ti()*(t-n+1))}function or(n,t){var r=\"\";if(!n||1>t||9007199254740991<t)return r;do t%2&&(r+=n),(t=Ii(t/2))&&(n+=n);while(t);return r}function fr(n,t){return xo(Ue(n,t,$u),n+\"\")}function cr(n){return Qn(Lu(n))}function ar(n,t){var r=Lu(n);return De(r,pt(t,0,r.length))}function lr(n,t,r,e){if(!du(n))return n;t=Sr(t,n);for(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){\nvar c=Me(t[u]),a=r;if(u!=o){var l=f[c],a=e?e(l,c,f):T;a===T&&(a=du(l)?l:Se(t[u+1])?[]:{})}ot(f,c,a),f=f[c]}return n}function sr(n){return De(Lu(n))}function hr(n,t,r){var e=-1,u=n.length;for(0>t&&(t=-t>u?0:u+t),r=r>u?u:r,0>r&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0,r=Ku(u);++e<u;)r[e]=n[e+t];return r}function pr(n,t){var r;return uo(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function _r(n,t,r){var e=0,u=null==n?e:n.length;if(typeof t==\"number\"&&t===t&&2147483647>=u){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!wu(o)&&(r?o<=t:o<t)?e=i+1:u=i;\n}return u}return vr(n,t,$u,r)}function vr(n,t,r,e){t=r(t);for(var u=0,i=null==n?0:n.length,o=t!==t,f=null===t,c=wu(t),a=t===T;u<i;){var l=Ii((u+i)/2),s=r(n[l]),h=s!==T,p=null===s,_=s===s,v=wu(s);(o?e||_:a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):p||v?0:e?s<=t:s<t)?u=l+1:i=l}return Ci(i,4294967294)}function gr(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r],f=t?t(o):o;if(!r||!lu(f,c)){var c=f;i[u++]=0===o?0:o}}return i}function dr(n){return typeof n==\"number\"?n:wu(n)?F:+n}function yr(n){\nif(typeof n==\"string\")return n;if(ff(n))return c(n,yr)+\"\";if(wu(n))return ro?ro.call(n):\"\";var t=n+\"\";return\"0\"==t&&1/n==-$?\"-0\":t}function br(n,t,r){var e=-1,u=o,i=n.length,c=true,a=[],l=a;if(r)c=false,u=f;else if(200<=i){if(u=t?null:so(n))return L(u);c=false,u=O,l=new Nn}else l=t?[]:a;n:for(;++e<i;){var s=n[e],h=t?t(s):s,s=r||0!==s?s:0;if(c&&h===h){for(var p=l.length;p--;)if(l[p]===h)continue n;t&&l.push(h),a.push(s)}else u(l,h,r)||(l!==a&&l.push(h),a.push(s))}return a}function xr(n,t){return t=Sr(t,n),\nn=2>t.length?n:Et(n,hr(t,0,-1)),null==n||delete n[Me(Ve(t))]}function jr(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?hr(n,e?0:i,e?i+1:u):hr(n,e?i+1:0,e?u:i)}function wr(n,t){var r=n;return r instanceof Ln&&(r=r.value()),l(t,function(n,t){return t.func.apply(t.thisArg,a([n],t.args))},r)}function mr(n,t,r){var e=n.length;if(2>e)return e?br(n[0]):[];for(var u=-1,i=Ku(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=yt(i[u]||o,n[f],t,r));return br(wt(i,1),t,r)}function Ar(n,t,r){\nfor(var e=-1,u=n.length,i=t.length,o={};++e<u;)r(o,n[e],e<i?t[e]:T);return o}function kr(n){return hu(n)?n:[]}function Er(n){return typeof n==\"function\"?n:$u}function Sr(n,t){return ff(n)?n:Ie(n,t)?[n]:jo(Iu(n))}function Or(n,t,r){var e=n.length;return r=r===T?e:r,!t&&r>=e?n:hr(n,t,r)}function Ir(n,t){if(t)return n.slice();var r=n.length,r=gi?gi(r):new n.constructor(r);return n.copy(r),r}function Rr(n){var t=new n.constructor(n.byteLength);return new vi(t).set(new vi(n)),t}function zr(n,t){return new n.constructor(t?Rr(n.buffer):n.buffer,n.byteOffset,n.length);\n}function Wr(n,t){if(n!==t){var r=n!==T,e=null===n,u=n===n,i=wu(n),o=t!==T,f=null===t,c=t===t,a=wu(t);if(!f&&!a&&!i&&n>t||i&&o&&c&&!f&&!a||e&&o&&c||!r&&c||!u)return 1;if(!e&&!i&&!a&&n<t||a&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!c)return-1}return 0}function Ur(n,t,r,e){var u=-1,i=n.length,o=r.length,f=-1,c=t.length,a=Li(i-o,0),l=Ku(c+a);for(e=!e;++f<c;)l[f]=t[f];for(;++u<o;)(e||u<i)&&(l[r[u]]=n[u]);for(;a--;)l[f++]=n[u++];return l}function Br(n,t,r,e){var u=-1,i=n.length,o=-1,f=r.length,c=-1,a=t.length,l=Li(i-f,0),s=Ku(l+a);\nfor(e=!e;++u<l;)s[u]=n[u];for(l=u;++c<a;)s[l+c]=t[c];for(;++o<f;)(e||u<i)&&(s[l+r[o]]=n[u++]);return s}function Lr(n,t){var r=-1,e=n.length;for(t||(t=Ku(e));++r<e;)t[r]=n[r];return t}function Cr(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],c=e?e(r[f],n[f],f,r,n):T;c===T&&(c=n[f]),u?st(r,f,c):ot(r,f,c)}return r}function Dr(n,t){return Cr(n,po(n),t)}function Mr(n,t){return Cr(n,_o(n),t)}function Tr(n,r){return function(e,u){var i=ff(e)?t:ct,o=r?r():{};return i(e,n,ye(u,2),o);\n}}function $r(n){return fr(function(t,r){var e=-1,u=r.length,i=1<u?r[u-1]:T,o=2<u?r[2]:T,i=3<n.length&&typeof i==\"function\"?(u--,i):T;for(o&&Oe(r[0],r[1],o)&&(i=3>u?T:i,u=1),t=Qu(t);++e<u;)(o=r[e])&&n(t,o,e,i);return t})}function Fr(n,t){return function(r,e){if(null==r)return r;if(!su(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=Qu(r);(t?i--:++i<u)&&false!==e(o[i],i,o););return r}}function Nr(n){return function(t,r,e){var u=-1,i=Qu(t);e=e(t);for(var o=e.length;o--;){var f=e[n?o:++u];if(false===r(i[f],f,i))break;\n}return t}}function Pr(n,t,r){function e(){return(this&&this!==$n&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=1&t,i=Vr(n);return e}function Zr(n){return function(t){t=Iu(t);var r=Rn.test(t)?M(t):T,e=r?r[0]:t.charAt(0);return t=r?Or(r,1).join(\"\"):t.slice(1),e[n]()+t}}function qr(n){return function(t){return l(Mu(Du(t).replace(En,\"\")),n,\"\")}}function Vr(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:\nreturn new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=eo(n.prototype),t=n.apply(r,t);return du(t)?t:r}}function Kr(t,r,e){function u(){for(var o=arguments.length,f=Ku(o),c=o,a=de(u);c--;)f[c]=arguments[c];return c=3>o&&f[0]!==a&&f[o-1]!==a?[]:B(f,a),o-=c.length,o<e?ue(t,r,Jr,u.placeholder,T,f,c,T,T,e-o):n(this&&this!==$n&&this instanceof u?i:t,this,f);\n}var i=Vr(t);return u}function Gr(n){return function(t,r,e){var u=Qu(t);if(!su(t)){var i=ye(r,3);t=Wu(t),r=function(n){return i(u[n],n,u)}}return r=n(t,r,e),-1<r?u[i?t[r]:r]:T}}function Hr(n){return pe(function(t){var r=t.length,e=r,u=On.prototype.thru;for(n&&t.reverse();e--;){var i=t[e];if(typeof i!=\"function\")throw new ti(\"Expected a function\");if(u&&!o&&\"wrapper\"==ge(i))var o=new On([],true)}for(e=o?e:r;++e<r;)var i=t[e],u=ge(i),f=\"wrapper\"==u?ho(i):T,o=f&&Re(f[0])&&424==f[1]&&!f[4].length&&1==f[9]?o[ge(f[0])].apply(o,f[3]):1==i.length&&Re(i)?o[u]():o.thru(i);\nreturn function(){var n=arguments,e=n[0];if(o&&1==n.length&&ff(e))return o.plant(e).value();for(var u=0,n=r?t[u].apply(this,n):e;++u<r;)n=t[u].call(this,n);return n}})}function Jr(n,t,r,e,u,i,o,f,c,a){function l(){for(var d=arguments.length,y=Ku(d),b=d;b--;)y[b]=arguments[b];if(_){var x,j=de(l),b=y.length;for(x=0;b--;)y[b]===j&&++x}if(e&&(y=Ur(y,e,u,_)),i&&(y=Br(y,i,o,_)),d-=x,_&&d<a)return j=B(y,j),ue(n,t,Jr,l.placeholder,r,y,j,f,c,a-d);if(j=h?r:this,b=p?j[n]:n,d=y.length,f){x=y.length;for(var w=Ci(f.length,x),m=Lr(y);w--;){\nvar A=f[w];y[w]=Se(A,x)?m[A]:T}}else v&&1<d&&y.reverse();return s&&c<d&&(y.length=c),this&&this!==$n&&this instanceof l&&(b=g||Vr(b)),b.apply(j,y)}var s=128&t,h=1&t,p=2&t,_=24&t,v=512&t,g=p?T:Vr(n);return l}function Yr(n,t){return function(r,e){return Ut(r,n,t(e),{})}}function Qr(n,t){return function(r,e){var u;if(r===T&&e===T)return t;if(r!==T&&(u=r),e!==T){if(u===T)return e;typeof r==\"string\"||typeof e==\"string\"?(r=yr(r),e=yr(e)):(r=dr(r),e=dr(e)),u=n(r,e)}return u}}function Xr(t){return pe(function(r){\nreturn r=c(r,E(ye())),fr(function(e){var u=this;return t(r,function(t){return n(t,u,e)})})})}function ne(n,t){t=t===T?\" \":yr(t);var r=t.length;return 2>r?r?or(t,n):t:(r=or(t,Oi(n/D(t))),Rn.test(t)?Or(M(r),0,n).join(\"\"):r.slice(0,n))}function te(t,r,e,u){function i(){for(var r=-1,c=arguments.length,a=-1,l=u.length,s=Ku(l+c),h=this&&this!==$n&&this instanceof i?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++r];return n(h,o?e:this,s)}var o=1&r,f=Vr(t);return i}function re(n){return function(t,r,e){\ne&&typeof e!=\"number\"&&Oe(t,r,e)&&(r=e=T),t=Au(t),r===T?(r=t,t=0):r=Au(r),e=e===T?t<r?1:-1:Au(e);var u=-1;r=Li(Oi((r-t)/(e||1)),0);for(var i=Ku(r);r--;)i[n?r:++u]=t,t+=e;return i}}function ee(n){return function(t,r){return typeof t==\"string\"&&typeof r==\"string\"||(t=Su(t),r=Su(r)),n(t,r)}}function ue(n,t,r,e,u,i,o,f,c,a){var l=8&t,s=l?o:T;o=l?T:o;var h=l?i:T;return i=l?T:i,t=(t|(l?32:64))&~(l?64:32),4&t||(t&=-4),u=[n,t,u,h,s,i,o,f,c,a],r=r.apply(T,u),Re(n)&&yo(r,u),r.placeholder=e,Le(r,n,t)}function ie(n){\nvar t=Yu[n];return function(n,r){if(n=Su(n),r=null==r?0:Ci(ku(r),292)){var e=(Iu(n)+\"e\").split(\"e\"),e=t(e[0]+\"e\"+(+e[1]+r)),e=(Iu(e)+\"e\").split(\"e\");return+(e[0]+\"e\"+(+e[1]-r))}return t(n)}}function oe(n){return function(t){var r=vo(t);return\"[object Map]\"==r?W(t):\"[object Set]\"==r?C(t):k(t,n(t))}}function fe(n,t,r,e,u,i,o,f){var c=2&t;if(!c&&typeof n!=\"function\")throw new ti(\"Expected a function\");var a=e?e.length:0;if(a||(t&=-97,e=u=T),o=o===T?o:Li(ku(o),0),f=f===T?f:ku(f),a-=u?u.length:0,64&t){\nvar l=e,s=u;e=u=T}var h=c?T:ho(n);return i=[n,t,r,e,u,l,s,i,o,f],h&&(r=i[1],n=h[1],t=r|n,e=128==n&&8==r||128==n&&256==r&&i[7].length<=h[8]||384==n&&h[7].length<=h[8]&&8==r,131>t||e)&&(1&n&&(i[2]=h[2],t|=1&r?0:4),(r=h[3])&&(e=i[3],i[3]=e?Ur(e,r,h[4]):r,i[4]=e?B(i[3],\"__lodash_placeholder__\"):h[4]),(r=h[5])&&(e=i[5],i[5]=e?Br(e,r,h[6]):r,i[6]=e?B(i[5],\"__lodash_placeholder__\"):h[6]),(r=h[7])&&(i[7]=r),128&n&&(i[8]=null==i[8]?h[8]:Ci(i[8],h[8])),null==i[9]&&(i[9]=h[9]),i[0]=h[0],i[1]=t),n=i[0],t=i[1],\nr=i[2],e=i[3],u=i[4],f=i[9]=i[9]===T?c?0:n.length:Li(i[9]-a,0),!f&&24&t&&(t&=-25),c=t&&1!=t?8==t||16==t?Kr(n,t,f):32!=t&&33!=t||u.length?Jr.apply(T,i):te(n,t,r,e):Pr(n,t,r),Le((h?co:yo)(c,i),n,t)}function ce(n,t,r,e){return n===T||lu(n,ei[r])&&!oi.call(e,r)?t:n}function ae(n,t,r,e,u,i){return du(n)&&du(t)&&(i.set(t,n),Yt(n,t,T,ae,i),i.delete(t)),n}function le(n){return xu(n)?T:n}function se(n,t,r,e,u,i){var o=1&r,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return false;if((c=i.get(n))&&i.get(t))return c==t;\nvar c=-1,a=true,l=2&r?new Nn:T;for(i.set(n,t),i.set(t,n);++c<f;){var s=n[c],p=t[c];if(e)var _=o?e(p,s,c,t,n,i):e(s,p,c,n,t,i);if(_!==T){if(_)continue;a=false;break}if(l){if(!h(t,function(n,t){if(!O(l,t)&&(s===n||u(s,n,r,e,i)))return l.push(t)})){a=false;break}}else if(s!==p&&!u(s,p,r,e,i)){a=false;break}}return i.delete(n),i.delete(t),a}function he(n,t,r,e,u,i,o){switch(r){case\"[object DataView]\":if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)break;n=n.buffer,t=t.buffer;case\"[object ArrayBuffer]\":\nif(n.byteLength!=t.byteLength||!i(new vi(n),new vi(t)))break;return true;case\"[object Boolean]\":case\"[object Date]\":case\"[object Number]\":return lu(+n,+t);case\"[object Error]\":return n.name==t.name&&n.message==t.message;case\"[object RegExp]\":case\"[object String]\":return n==t+\"\";case\"[object Map]\":var f=W;case\"[object Set]\":if(f||(f=L),n.size!=t.size&&!(1&e))break;return(r=o.get(n))?r==t:(e|=2,o.set(n,t),t=se(f(n),f(t),e,u,i,o),o.delete(n),t);case\"[object Symbol]\":if(to)return to.call(n)==to.call(t)}\nreturn false}function pe(n){return xo(Ue(n,T,Ze),n+\"\")}function _e(n){return St(n,Wu,po)}function ve(n){return St(n,Uu,_o)}function ge(n){for(var t=n.name+\"\",r=Gi[t],e=oi.call(Gi,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function de(n){return(oi.call(An,\"placeholder\")?An:n).placeholder}function ye(){var n=An.iteratee||Fu,n=n===Fu?qt:n;return arguments.length?n(arguments[0],arguments[1]):n}function be(n,t){var r=n.__data__,e=typeof t;return(\"string\"==e||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==t:null===t)?r[typeof t==\"string\"?\"string\":\"hash\"]:r.map;\n}function xe(n){for(var t=Wu(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,u===u&&!du(u)]}return t}function je(n,t){var r=null==n?T:n[t];return Ft(r)?r:T}function we(n,t,r){t=Sr(t,n);for(var e=-1,u=t.length,i=false;++e<u;){var o=Me(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:(u=null==n?0:n.length,!!u&&gu(u)&&Se(o,u)&&(ff(n)||of(n)))}function me(n){var t=n.length,r=new n.constructor(t);return t&&\"string\"==typeof n[0]&&oi.call(n,\"index\")&&(r.index=n.index,r.input=n.input),r}function Ae(n){\nreturn typeof n.constructor!=\"function\"||ze(n)?{}:eo(di(n))}function ke(n,t,r){var e=n.constructor;switch(t){case\"[object ArrayBuffer]\":return Rr(n);case\"[object Boolean]\":case\"[object Date]\":return new e(+n);case\"[object DataView]\":return t=r?Rr(n.buffer):n.buffer,new n.constructor(t,n.byteOffset,n.byteLength);case\"[object Float32Array]\":case\"[object Float64Array]\":case\"[object Int8Array]\":case\"[object Int16Array]\":case\"[object Int32Array]\":case\"[object Uint8Array]\":case\"[object Uint8ClampedArray]\":\ncase\"[object Uint16Array]\":case\"[object Uint32Array]\":return zr(n,r);case\"[object Map]\":return new e;case\"[object Number]\":case\"[object String]\":return new e(n);case\"[object RegExp]\":return t=new n.constructor(n.source,_n.exec(n)),t.lastIndex=n.lastIndex,t;case\"[object Set]\":return new e;case\"[object Symbol]\":return to?Qu(to.call(n)):{}}}function Ee(n){return ff(n)||of(n)||!!(ji&&n&&n[ji])}function Se(n,t){var r=typeof n;return t=null==t?9007199254740991:t,!!t&&(\"number\"==r||\"symbol\"!=r&&bn.test(n))&&-1<n&&0==n%1&&n<t;\n}function Oe(n,t,r){if(!du(r))return false;var e=typeof t;return!!(\"number\"==e?su(r)&&Se(t,r.length):\"string\"==e&&t in r)&&lu(r[t],n)}function Ie(n,t){if(ff(n))return false;var r=typeof n;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=n&&!wu(n))||(nn.test(n)||!X.test(n)||null!=t&&n in Qu(t))}function Re(n){var t=ge(n),r=An[t];return typeof r==\"function\"&&t in Ln.prototype&&(n===r||(t=ho(r),!!t&&n===t[0]))}function ze(n){var t=n&&n.constructor;return n===(typeof t==\"function\"&&t.prototype||ei)}function We(n,t){\nreturn function(r){return null!=r&&(r[n]===t&&(t!==T||n in Qu(r)))}}function Ue(t,r,e){return r=Li(r===T?t.length-1:r,0),function(){for(var u=arguments,i=-1,o=Li(u.length-r,0),f=Ku(o);++i<o;)f[i]=u[r+i];for(i=-1,o=Ku(r+1);++i<r;)o[i]=u[i];return o[r]=e(f),n(t,this,o)}}function Be(n,t){if(\"__proto__\"!=t)return n[t]}function Le(n,t,r){var e=t+\"\";t=xo;var u,i=$e;return u=(u=e.match(an))?u[1].split(ln):[],r=i(u,r),(i=r.length)&&(u=i-1,r[u]=(1<i?\"& \":\"\")+r[u],r=r.join(2<i?\", \":\" \"),e=e.replace(cn,\"{\\n/* [wrapped with \"+r+\"] */\\n\")),\nt(n,e)}function Ce(n){var t=0,r=0;return function(){var e=Di(),u=16-(e-r);if(r=e,0<u){if(800<=++t)return arguments[0]}else t=0;return n.apply(T,arguments)}}function De(n,t){var r=-1,e=n.length,u=e-1;for(t=t===T?e:t;++r<t;){var e=ir(r,u),i=n[e];n[e]=n[r],n[r]=i}return n.length=t,n}function Me(n){if(typeof n==\"string\"||wu(n))return n;var t=n+\"\";return\"0\"==t&&1/n==-$?\"-0\":t}function Te(n){if(null!=n){try{return ii.call(n)}catch(n){}return n+\"\"}return\"\"}function $e(n,t){return r(N,function(r){var e=\"_.\"+r[0];\nt&r[1]&&!o(n,e)&&n.push(e)}),n.sort()}function Fe(n){if(n instanceof Ln)return n.clone();var t=new On(n.__wrapped__,n.__chain__);return t.__actions__=Lr(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function Ne(n,t,r){var e=null==n?0:n.length;return e?(r=null==r?0:ku(r),0>r&&(r=Li(e+r,0)),_(n,ye(t,3),r)):-1}function Pe(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e-1;return r!==T&&(u=ku(r),u=0>r?Li(e+u,0):Ci(u,e-1)),_(n,ye(t,3),u,true)}function Ze(n){return(null==n?0:n.length)?wt(n,1):[];\n}function qe(n){return n&&n.length?n[0]:T}function Ve(n){var t=null==n?0:n.length;return t?n[t-1]:T}function Ke(n,t){return n&&n.length&&t&&t.length?er(n,t):n}function Ge(n){return null==n?n:$i.call(n)}function He(n){if(!n||!n.length)return[];var t=0;return n=i(n,function(n){if(hu(n))return t=Li(n.length,t),true}),A(t,function(t){return c(n,b(t))})}function Je(t,r){if(!t||!t.length)return[];var e=He(t);return null==r?e:c(e,function(t){return n(r,T,t)})}function Ye(n){return n=An(n),n.__chain__=true,n;\n}function Qe(n,t){return t(n)}function Xe(){return this}function nu(n,t){return(ff(n)?r:uo)(n,ye(t,3))}function tu(n,t){return(ff(n)?e:io)(n,ye(t,3))}function ru(n,t){return(ff(n)?c:Gt)(n,ye(t,3))}function eu(n,t,r){return t=r?T:t,t=n&&null==t?n.length:t,fe(n,128,T,T,T,T,t)}function uu(n,t){var r;if(typeof t!=\"function\")throw new ti(\"Expected a function\");return n=ku(n),function(){return 0<--n&&(r=t.apply(this,arguments)),1>=n&&(t=T),r}}function iu(n,t,r){return t=r?T:t,n=fe(n,8,T,T,T,T,T,t),n.placeholder=iu.placeholder,\nn}function ou(n,t,r){return t=r?T:t,n=fe(n,16,T,T,T,T,T,t),n.placeholder=ou.placeholder,n}function fu(n,t,r){function e(t){var r=c,e=a;return c=a=T,_=t,s=n.apply(e,r)}function u(n){var r=n-p;return n-=_,p===T||r>=t||0>r||g&&n>=l}function i(){var n=Go();if(u(n))return o(n);var r,e=bo;r=n-_,n=t-(n-p),r=g?Ci(n,l-r):n,h=e(i,r)}function o(n){return h=T,d&&c?e(n):(c=a=T,s)}function f(){var n=Go(),r=u(n);if(c=arguments,a=this,p=n,r){if(h===T)return _=n=p,h=bo(i,t),v?e(n):s;if(g)return h=bo(i,t),e(p)}return h===T&&(h=bo(i,t)),\ns}var c,a,l,s,h,p,_=0,v=false,g=false,d=true;if(typeof n!=\"function\")throw new ti(\"Expected a function\");return t=Su(t)||0,du(r)&&(v=!!r.leading,l=(g=\"maxWait\"in r)?Li(Su(r.maxWait)||0,t):l,d=\"trailing\"in r?!!r.trailing:d),f.cancel=function(){h!==T&&lo(h),_=0,c=p=a=h=T},f.flush=function(){return h===T?s:o(Go())},f}function cu(n,t){if(typeof n!=\"function\"||null!=t&&typeof t!=\"function\")throw new ti(\"Expected a function\");var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;return i.has(u)?i.get(u):(e=n.apply(this,e),\nr.cache=i.set(u,e)||i,e)};return r.cache=new(cu.Cache||Fn),r}function au(n){if(typeof n!=\"function\")throw new ti(\"Expected a function\");return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:return!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}function lu(n,t){return n===t||n!==n&&t!==t}function su(n){return null!=n&&gu(n.length)&&!_u(n)}function hu(n){return yu(n)&&su(n)}function pu(n){if(!yu(n))return false;\nvar t=Ot(n);return\"[object Error]\"==t||\"[object DOMException]\"==t||typeof n.message==\"string\"&&typeof n.name==\"string\"&&!xu(n)}function _u(n){return!!du(n)&&(n=Ot(n),\"[object Function]\"==n||\"[object GeneratorFunction]\"==n||\"[object AsyncFunction]\"==n||\"[object Proxy]\"==n)}function vu(n){return typeof n==\"number\"&&n==ku(n)}function gu(n){return typeof n==\"number\"&&-1<n&&0==n%1&&9007199254740991>=n}function du(n){var t=typeof n;return null!=n&&(\"object\"==t||\"function\"==t)}function yu(n){return null!=n&&typeof n==\"object\";\n}function bu(n){return typeof n==\"number\"||yu(n)&&\"[object Number]\"==Ot(n)}function xu(n){return!(!yu(n)||\"[object Object]\"!=Ot(n))&&(n=di(n),null===n||(n=oi.call(n,\"constructor\")&&n.constructor,typeof n==\"function\"&&n instanceof n&&ii.call(n)==li))}function ju(n){return typeof n==\"string\"||!ff(n)&&yu(n)&&\"[object String]\"==Ot(n)}function wu(n){return typeof n==\"symbol\"||yu(n)&&\"[object Symbol]\"==Ot(n)}function mu(n){if(!n)return[];if(su(n))return ju(n)?M(n):Lr(n);if(wi&&n[wi]){n=n[wi]();for(var t,r=[];!(t=n.next()).done;)r.push(t.value);\nreturn r}return t=vo(n),(\"[object Map]\"==t?W:\"[object Set]\"==t?L:Lu)(n)}function Au(n){return n?(n=Su(n),n===$||n===-$?1.7976931348623157e308*(0>n?-1:1):n===n?n:0):0===n?n:0}function ku(n){n=Au(n);var t=n%1;return n===n?t?n-t:n:0}function Eu(n){return n?pt(ku(n),0,4294967295):0}function Su(n){if(typeof n==\"number\")return n;if(wu(n))return F;if(du(n)&&(n=typeof n.valueOf==\"function\"?n.valueOf():n,n=du(n)?n+\"\":n),typeof n!=\"string\")return 0===n?n:+n;n=n.replace(un,\"\");var t=gn.test(n);return t||yn.test(n)?Dn(n.slice(2),t?2:8):vn.test(n)?F:+n;\n}function Ou(n){return Cr(n,Uu(n))}function Iu(n){return null==n?\"\":yr(n)}function Ru(n,t,r){return n=null==n?T:Et(n,t),n===T?r:n}function zu(n,t){return null!=n&&we(n,t,zt)}function Wu(n){return su(n)?qn(n):Vt(n)}function Uu(n){if(su(n))n=qn(n,true);else if(du(n)){var t,r=ze(n),e=[];for(t in n)(\"constructor\"!=t||!r&&oi.call(n,t))&&e.push(t);n=e}else{if(t=[],null!=n)for(r in Qu(n))t.push(r);n=t}return n}function Bu(n,t){if(null==n)return{};var r=c(ve(n),function(n){return[n]});return t=ye(t),tr(n,r,function(n,r){\nreturn t(n,r[0])})}function Lu(n){return null==n?[]:S(n,Wu(n))}function Cu(n){return $f(Iu(n).toLowerCase())}function Du(n){return(n=Iu(n))&&n.replace(xn,Xn).replace(Sn,\"\")}function Mu(n,t,r){return n=Iu(n),t=r?T:t,t===T?zn.test(n)?n.match(In)||[]:n.match(sn)||[]:n.match(t)||[]}function Tu(n){return function(){return n}}function $u(n){return n}function Fu(n){return qt(typeof n==\"function\"?n:_t(n,1))}function Nu(n,t,e){var u=Wu(t),i=kt(t,u);null!=e||du(t)&&(i.length||!u.length)||(e=t,t=n,n=this,i=kt(t,Wu(t)));\nvar o=!(du(e)&&\"chain\"in e&&!e.chain),f=_u(n);return r(i,function(r){var e=t[r];n[r]=e,f&&(n.prototype[r]=function(){var t=this.__chain__;if(o||t){var r=n(this.__wrapped__);return(r.__actions__=Lr(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,a([this.value()],arguments))})}),n}function Pu(){}function Zu(n){return Ie(n)?b(Me(n)):rr(n)}function qu(){return[]}function Vu(){return false}mn=null==mn?$n:rt.defaults($n.Object(),mn,rt.pick($n,Wn));var Ku=mn.Array,Gu=mn.Date,Hu=mn.Error,Ju=mn.Function,Yu=mn.Math,Qu=mn.Object,Xu=mn.RegExp,ni=mn.String,ti=mn.TypeError,ri=Ku.prototype,ei=Qu.prototype,ui=mn[\"__core-js_shared__\"],ii=Ju.prototype.toString,oi=ei.hasOwnProperty,fi=0,ci=function(){\nvar n=/[^.]+$/.exec(ui&&ui.keys&&ui.keys.IE_PROTO||\"\");return n?\"Symbol(src)_1.\"+n:\"\"}(),ai=ei.toString,li=ii.call(Qu),si=$n._,hi=Xu(\"^\"+ii.call(oi).replace(rn,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),pi=Pn?mn.Buffer:T,_i=mn.Symbol,vi=mn.Uint8Array,gi=pi?pi.allocUnsafe:T,di=U(Qu.getPrototypeOf,Qu),yi=Qu.create,bi=ei.propertyIsEnumerable,xi=ri.splice,ji=_i?_i.isConcatSpreadable:T,wi=_i?_i.iterator:T,mi=_i?_i.toStringTag:T,Ai=function(){try{var n=je(Qu,\"defineProperty\");\nreturn n({},\"\",{}),n}catch(n){}}(),ki=mn.clearTimeout!==$n.clearTimeout&&mn.clearTimeout,Ei=Gu&&Gu.now!==$n.Date.now&&Gu.now,Si=mn.setTimeout!==$n.setTimeout&&mn.setTimeout,Oi=Yu.ceil,Ii=Yu.floor,Ri=Qu.getOwnPropertySymbols,zi=pi?pi.isBuffer:T,Wi=mn.isFinite,Ui=ri.join,Bi=U(Qu.keys,Qu),Li=Yu.max,Ci=Yu.min,Di=Gu.now,Mi=mn.parseInt,Ti=Yu.random,$i=ri.reverse,Fi=je(mn,\"DataView\"),Ni=je(mn,\"Map\"),Pi=je(mn,\"Promise\"),Zi=je(mn,\"Set\"),qi=je(mn,\"WeakMap\"),Vi=je(Qu,\"create\"),Ki=qi&&new qi,Gi={},Hi=Te(Fi),Ji=Te(Ni),Yi=Te(Pi),Qi=Te(Zi),Xi=Te(qi),no=_i?_i.prototype:T,to=no?no.valueOf:T,ro=no?no.toString:T,eo=function(){\nfunction n(){}return function(t){return du(t)?yi?yi(t):(n.prototype=t,t=new n,n.prototype=T,t):{}}}();An.templateSettings={escape:J,evaluate:Y,interpolate:Q,variable:\"\",imports:{_:An}},An.prototype=kn.prototype,An.prototype.constructor=An,On.prototype=eo(kn.prototype),On.prototype.constructor=On,Ln.prototype=eo(kn.prototype),Ln.prototype.constructor=Ln,Mn.prototype.clear=function(){this.__data__=Vi?Vi(null):{},this.size=0},Mn.prototype.delete=function(n){return n=this.has(n)&&delete this.__data__[n],\nthis.size-=n?1:0,n},Mn.prototype.get=function(n){var t=this.__data__;return Vi?(n=t[n],\"__lodash_hash_undefined__\"===n?T:n):oi.call(t,n)?t[n]:T},Mn.prototype.has=function(n){var t=this.__data__;return Vi?t[n]!==T:oi.call(t,n)},Mn.prototype.set=function(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=Vi&&t===T?\"__lodash_hash_undefined__\":t,this},Tn.prototype.clear=function(){this.__data__=[],this.size=0},Tn.prototype.delete=function(n){var t=this.__data__;return n=ft(t,n),!(0>n)&&(n==t.length-1?t.pop():xi.call(t,n,1),\n--this.size,true)},Tn.prototype.get=function(n){var t=this.__data__;return n=ft(t,n),0>n?T:t[n][1]},Tn.prototype.has=function(n){return-1<ft(this.__data__,n)},Tn.prototype.set=function(n,t){var r=this.__data__,e=ft(r,n);return 0>e?(++this.size,r.push([n,t])):r[e][1]=t,this},Fn.prototype.clear=function(){this.size=0,this.__data__={hash:new Mn,map:new(Ni||Tn),string:new Mn}},Fn.prototype.delete=function(n){return n=be(this,n).delete(n),this.size-=n?1:0,n},Fn.prototype.get=function(n){return be(this,n).get(n);\n},Fn.prototype.has=function(n){return be(this,n).has(n)},Fn.prototype.set=function(n,t){var r=be(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this},Nn.prototype.add=Nn.prototype.push=function(n){return this.__data__.set(n,\"__lodash_hash_undefined__\"),this},Nn.prototype.has=function(n){return this.__data__.has(n)},Zn.prototype.clear=function(){this.__data__=new Tn,this.size=0},Zn.prototype.delete=function(n){var t=this.__data__;return n=t.delete(n),this.size=t.size,n},Zn.prototype.get=function(n){\nreturn this.__data__.get(n)},Zn.prototype.has=function(n){return this.__data__.has(n)},Zn.prototype.set=function(n,t){var r=this.__data__;if(r instanceof Tn){var e=r.__data__;if(!Ni||199>e.length)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new Fn(e)}return r.set(n,t),this.size=r.size,this};var uo=Fr(mt),io=Fr(At,true),oo=Nr(),fo=Nr(true),co=Ki?function(n,t){return Ki.set(n,t),n}:$u,ao=Ai?function(n,t){return Ai(n,\"toString\",{configurable:true,enumerable:false,value:Tu(t),writable:true})}:$u,lo=ki||function(n){\nreturn $n.clearTimeout(n)},so=Zi&&1/L(new Zi([,-0]))[1]==$?function(n){return new Zi(n)}:Pu,ho=Ki?function(n){return Ki.get(n)}:Pu,po=Ri?function(n){return null==n?[]:(n=Qu(n),i(Ri(n),function(t){return bi.call(n,t)}))}:qu,_o=Ri?function(n){for(var t=[];n;)a(t,po(n)),n=di(n);return t}:qu,vo=Ot;(Fi&&\"[object DataView]\"!=vo(new Fi(new ArrayBuffer(1)))||Ni&&\"[object Map]\"!=vo(new Ni)||Pi&&\"[object Promise]\"!=vo(Pi.resolve())||Zi&&\"[object Set]\"!=vo(new Zi)||qi&&\"[object WeakMap]\"!=vo(new qi))&&(vo=function(n){\nvar t=Ot(n);if(n=(n=\"[object Object]\"==t?n.constructor:T)?Te(n):\"\")switch(n){case Hi:return\"[object DataView]\";case Ji:return\"[object Map]\";case Yi:return\"[object Promise]\";case Qi:return\"[object Set]\";case Xi:return\"[object WeakMap]\"}return t});var go=ui?_u:Vu,yo=Ce(co),bo=Si||function(n,t){return $n.setTimeout(n,t)},xo=Ce(ao),jo=function(n){n=cu(n,function(n){return 500===t.size&&t.clear(),n});var t=n.cache;return n}(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(\"\"),n.replace(tn,function(n,r,e,u){\nt.push(e?u.replace(hn,\"$1\"):r||n)}),t}),wo=fr(function(n,t){return hu(n)?yt(n,wt(t,1,hu,true)):[]}),mo=fr(function(n,t){var r=Ve(t);return hu(r)&&(r=T),hu(n)?yt(n,wt(t,1,hu,true),ye(r,2)):[]}),Ao=fr(function(n,t){var r=Ve(t);return hu(r)&&(r=T),hu(n)?yt(n,wt(t,1,hu,true),T,r):[]}),ko=fr(function(n){var t=c(n,kr);return t.length&&t[0]===n[0]?Wt(t):[]}),Eo=fr(function(n){var t=Ve(n),r=c(n,kr);return t===Ve(r)?t=T:r.pop(),r.length&&r[0]===n[0]?Wt(r,ye(t,2)):[]}),So=fr(function(n){var t=Ve(n),r=c(n,kr);return(t=typeof t==\"function\"?t:T)&&r.pop(),\nr.length&&r[0]===n[0]?Wt(r,T,t):[]}),Oo=fr(Ke),Io=pe(function(n,t){var r=null==n?0:n.length,e=ht(n,t);return ur(n,c(t,function(n){return Se(n,r)?+n:n}).sort(Wr)),e}),Ro=fr(function(n){return br(wt(n,1,hu,true))}),zo=fr(function(n){var t=Ve(n);return hu(t)&&(t=T),br(wt(n,1,hu,true),ye(t,2))}),Wo=fr(function(n){var t=Ve(n),t=typeof t==\"function\"?t:T;return br(wt(n,1,hu,true),T,t)}),Uo=fr(function(n,t){return hu(n)?yt(n,t):[]}),Bo=fr(function(n){return mr(i(n,hu))}),Lo=fr(function(n){var t=Ve(n);return hu(t)&&(t=T),\nmr(i(n,hu),ye(t,2))}),Co=fr(function(n){var t=Ve(n),t=typeof t==\"function\"?t:T;return mr(i(n,hu),T,t)}),Do=fr(He),Mo=fr(function(n){var t=n.length,t=1<t?n[t-1]:T,t=typeof t==\"function\"?(n.pop(),t):T;return Je(n,t)}),To=pe(function(n){var t=n.length,r=t?n[0]:0,e=this.__wrapped__,u=function(t){return ht(t,n)};return!(1<t||this.__actions__.length)&&e instanceof Ln&&Se(r)?(e=e.slice(r,+r+(t?1:0)),e.__actions__.push({func:Qe,args:[u],thisArg:T}),new On(e,this.__chain__).thru(function(n){return t&&!n.length&&n.push(T),\nn})):this.thru(u)}),$o=Tr(function(n,t,r){oi.call(n,r)?++n[r]:st(n,r,1)}),Fo=Gr(Ne),No=Gr(Pe),Po=Tr(function(n,t,r){oi.call(n,r)?n[r].push(t):st(n,r,[t])}),Zo=fr(function(t,r,e){var u=-1,i=typeof r==\"function\",o=su(t)?Ku(t.length):[];return uo(t,function(t){o[++u]=i?n(r,t,e):Bt(t,r,e)}),o}),qo=Tr(function(n,t,r){st(n,r,t)}),Vo=Tr(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),Ko=fr(function(n,t){if(null==n)return[];var r=t.length;return 1<r&&Oe(n,t[0],t[1])?t=[]:2<r&&Oe(t[0],t[1],t[2])&&(t=[t[0]]),\nXt(n,wt(t,1),[])}),Go=Ei||function(){return $n.Date.now()},Ho=fr(function(n,t,r){var e=1;if(r.length)var u=B(r,de(Ho)),e=32|e;return fe(n,e,t,r,u)}),Jo=fr(function(n,t,r){var e=3;if(r.length)var u=B(r,de(Jo)),e=32|e;return fe(t,e,n,r,u)}),Yo=fr(function(n,t){return dt(n,1,t)}),Qo=fr(function(n,t,r){return dt(n,Su(t)||0,r)});cu.Cache=Fn;var Xo=fr(function(t,r){r=1==r.length&&ff(r[0])?c(r[0],E(ye())):c(wt(r,1),E(ye()));var e=r.length;return fr(function(u){for(var i=-1,o=Ci(u.length,e);++i<o;)u[i]=r[i].call(this,u[i]);\nreturn n(t,this,u)})}),nf=fr(function(n,t){return fe(n,32,T,t,B(t,de(nf)))}),tf=fr(function(n,t){return fe(n,64,T,t,B(t,de(tf)))}),rf=pe(function(n,t){return fe(n,256,T,T,T,t)}),ef=ee(It),uf=ee(function(n,t){return n>=t}),of=Lt(function(){return arguments}())?Lt:function(n){return yu(n)&&oi.call(n,\"callee\")&&!bi.call(n,\"callee\")},ff=Ku.isArray,cf=Vn?E(Vn):Ct,af=zi||Vu,lf=Kn?E(Kn):Dt,sf=Gn?E(Gn):Tt,hf=Hn?E(Hn):Nt,pf=Jn?E(Jn):Pt,_f=Yn?E(Yn):Zt,vf=ee(Kt),gf=ee(function(n,t){return n<=t}),df=$r(function(n,t){\nif(ze(t)||su(t))Cr(t,Wu(t),n);else for(var r in t)oi.call(t,r)&&ot(n,r,t[r])}),yf=$r(function(n,t){Cr(t,Uu(t),n)}),bf=$r(function(n,t,r,e){Cr(t,Uu(t),n,e)}),xf=$r(function(n,t,r,e){Cr(t,Wu(t),n,e)}),jf=pe(ht),wf=fr(function(n,t){n=Qu(n);var r=-1,e=t.length,u=2<e?t[2]:T;for(u&&Oe(t[0],t[1],u)&&(e=1);++r<e;)for(var u=t[r],i=Uu(u),o=-1,f=i.length;++o<f;){var c=i[o],a=n[c];(a===T||lu(a,ei[c])&&!oi.call(n,c))&&(n[c]=u[c])}return n}),mf=fr(function(t){return t.push(T,ae),n(Of,T,t)}),Af=Yr(function(n,t,r){\nnull!=t&&typeof t.toString!=\"function\"&&(t=ai.call(t)),n[t]=r},Tu($u)),kf=Yr(function(n,t,r){null!=t&&typeof t.toString!=\"function\"&&(t=ai.call(t)),oi.call(n,t)?n[t].push(r):n[t]=[r]},ye),Ef=fr(Bt),Sf=$r(function(n,t,r){Yt(n,t,r)}),Of=$r(function(n,t,r,e){Yt(n,t,r,e)}),If=pe(function(n,t){var r={};if(null==n)return r;var e=false;t=c(t,function(t){return t=Sr(t,n),e||(e=1<t.length),t}),Cr(n,ve(n),r),e&&(r=_t(r,7,le));for(var u=t.length;u--;)xr(r,t[u]);return r}),Rf=pe(function(n,t){return null==n?{}:nr(n,t);\n}),zf=oe(Wu),Wf=oe(Uu),Uf=qr(function(n,t,r){return t=t.toLowerCase(),n+(r?Cu(t):t)}),Bf=qr(function(n,t,r){return n+(r?\"-\":\"\")+t.toLowerCase()}),Lf=qr(function(n,t,r){return n+(r?\" \":\"\")+t.toLowerCase()}),Cf=Zr(\"toLowerCase\"),Df=qr(function(n,t,r){return n+(r?\"_\":\"\")+t.toLowerCase()}),Mf=qr(function(n,t,r){return n+(r?\" \":\"\")+$f(t)}),Tf=qr(function(n,t,r){return n+(r?\" \":\"\")+t.toUpperCase()}),$f=Zr(\"toUpperCase\"),Ff=fr(function(t,r){try{return n(t,T,r)}catch(n){return pu(n)?n:new Hu(n)}}),Nf=pe(function(n,t){\nreturn r(t,function(t){t=Me(t),st(n,t,Ho(n[t],n))}),n}),Pf=Hr(),Zf=Hr(true),qf=fr(function(n,t){return function(r){return Bt(r,n,t)}}),Vf=fr(function(n,t){return function(r){return Bt(n,r,t)}}),Kf=Xr(c),Gf=Xr(u),Hf=Xr(h),Jf=re(),Yf=re(true),Qf=Qr(function(n,t){return n+t},0),Xf=ie(\"ceil\"),nc=Qr(function(n,t){return n/t},1),tc=ie(\"floor\"),rc=Qr(function(n,t){return n*t},1),ec=ie(\"round\"),uc=Qr(function(n,t){return n-t},0);return An.after=function(n,t){if(typeof t!=\"function\")throw new ti(\"Expected a function\");\nreturn n=ku(n),function(){if(1>--n)return t.apply(this,arguments)}},An.ary=eu,An.assign=df,An.assignIn=yf,An.assignInWith=bf,An.assignWith=xf,An.at=jf,An.before=uu,An.bind=Ho,An.bindAll=Nf,An.bindKey=Jo,An.castArray=function(){if(!arguments.length)return[];var n=arguments[0];return ff(n)?n:[n]},An.chain=Ye,An.chunk=function(n,t,r){if(t=(r?Oe(n,t,r):t===T)?1:Li(ku(t),0),r=null==n?0:n.length,!r||1>t)return[];for(var e=0,u=0,i=Ku(Oi(r/t));e<r;)i[u++]=hr(n,e,e+=t);return i},An.compact=function(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){\nvar i=n[t];i&&(u[e++]=i)}return u},An.concat=function(){var n=arguments.length;if(!n)return[];for(var t=Ku(n-1),r=arguments[0];n--;)t[n-1]=arguments[n];return a(ff(r)?Lr(r):[r],wt(t,1))},An.cond=function(t){var r=null==t?0:t.length,e=ye();return t=r?c(t,function(n){if(\"function\"!=typeof n[1])throw new ti(\"Expected a function\");return[e(n[0]),n[1]]}):[],fr(function(e){for(var u=-1;++u<r;){var i=t[u];if(n(i[0],this,e))return n(i[1],this,e)}})},An.conforms=function(n){return vt(_t(n,1))},An.constant=Tu,\nAn.countBy=$o,An.create=function(n,t){var r=eo(n);return null==t?r:at(r,t)},An.curry=iu,An.curryRight=ou,An.debounce=fu,An.defaults=wf,An.defaultsDeep=mf,An.defer=Yo,An.delay=Qo,An.difference=wo,An.differenceBy=mo,An.differenceWith=Ao,An.drop=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:ku(t),hr(n,0>t?0:t,e)):[]},An.dropRight=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:ku(t),t=e-t,hr(n,0,0>t?0:t)):[]},An.dropRightWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),true,true):[];\n},An.dropWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),true):[]},An.fill=function(n,t,r,e){var u=null==n?0:n.length;if(!u)return[];for(r&&typeof r!=\"number\"&&Oe(n,t,r)&&(r=0,e=u),u=n.length,r=ku(r),0>r&&(r=-r>u?0:u+r),e=e===T||e>u?u:ku(e),0>e&&(e+=u),e=r>e?0:Eu(e);r<e;)n[r++]=t;return n},An.filter=function(n,t){return(ff(n)?i:jt)(n,ye(t,3))},An.flatMap=function(n,t){return wt(ru(n,t),1)},An.flatMapDeep=function(n,t){return wt(ru(n,t),$)},An.flatMapDepth=function(n,t,r){return r=r===T?1:ku(r),\nwt(ru(n,t),r)},An.flatten=Ze,An.flattenDeep=function(n){return(null==n?0:n.length)?wt(n,$):[]},An.flattenDepth=function(n,t){return null!=n&&n.length?(t=t===T?1:ku(t),wt(n,t)):[]},An.flip=function(n){return fe(n,512)},An.flow=Pf,An.flowRight=Zf,An.fromPairs=function(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e},An.functions=function(n){return null==n?[]:kt(n,Wu(n))},An.functionsIn=function(n){return null==n?[]:kt(n,Uu(n))},An.groupBy=Po,An.initial=function(n){\nreturn(null==n?0:n.length)?hr(n,0,-1):[]},An.intersection=ko,An.intersectionBy=Eo,An.intersectionWith=So,An.invert=Af,An.invertBy=kf,An.invokeMap=Zo,An.iteratee=Fu,An.keyBy=qo,An.keys=Wu,An.keysIn=Uu,An.map=ru,An.mapKeys=function(n,t){var r={};return t=ye(t,3),mt(n,function(n,e,u){st(r,t(n,e,u),n)}),r},An.mapValues=function(n,t){var r={};return t=ye(t,3),mt(n,function(n,e,u){st(r,e,t(n,e,u))}),r},An.matches=function(n){return Ht(_t(n,1))},An.matchesProperty=function(n,t){return Jt(n,_t(t,1))},An.memoize=cu,\nAn.merge=Sf,An.mergeWith=Of,An.method=qf,An.methodOf=Vf,An.mixin=Nu,An.negate=au,An.nthArg=function(n){return n=ku(n),fr(function(t){return Qt(t,n)})},An.omit=If,An.omitBy=function(n,t){return Bu(n,au(ye(t)))},An.once=function(n){return uu(2,n)},An.orderBy=function(n,t,r,e){return null==n?[]:(ff(t)||(t=null==t?[]:[t]),r=e?T:r,ff(r)||(r=null==r?[]:[r]),Xt(n,t,r))},An.over=Kf,An.overArgs=Xo,An.overEvery=Gf,An.overSome=Hf,An.partial=nf,An.partialRight=tf,An.partition=Vo,An.pick=Rf,An.pickBy=Bu,An.property=Zu,\nAn.propertyOf=function(n){return function(t){return null==n?T:Et(n,t)}},An.pull=Oo,An.pullAll=Ke,An.pullAllBy=function(n,t,r){return n&&n.length&&t&&t.length?er(n,t,ye(r,2)):n},An.pullAllWith=function(n,t,r){return n&&n.length&&t&&t.length?er(n,t,T,r):n},An.pullAt=Io,An.range=Jf,An.rangeRight=Yf,An.rearg=rf,An.reject=function(n,t){return(ff(n)?i:jt)(n,au(ye(t,3)))},An.remove=function(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=ye(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),\nu.push(e))}return ur(n,u),r},An.rest=function(n,t){if(typeof n!=\"function\")throw new ti(\"Expected a function\");return t=t===T?t:ku(t),fr(n,t)},An.reverse=Ge,An.sampleSize=function(n,t,r){return t=(r?Oe(n,t,r):t===T)?1:ku(t),(ff(n)?et:ar)(n,t)},An.set=function(n,t,r){return null==n?n:lr(n,t,r)},An.setWith=function(n,t,r,e){return e=typeof e==\"function\"?e:T,null==n?n:lr(n,t,r,e)},An.shuffle=function(n){return(ff(n)?ut:sr)(n)},An.slice=function(n,t,r){var e=null==n?0:n.length;return e?(r&&typeof r!=\"number\"&&Oe(n,t,r)?(t=0,\nr=e):(t=null==t?0:ku(t),r=r===T?e:ku(r)),hr(n,t,r)):[]},An.sortBy=Ko,An.sortedUniq=function(n){return n&&n.length?gr(n):[]},An.sortedUniqBy=function(n,t){return n&&n.length?gr(n,ye(t,2)):[]},An.split=function(n,t,r){return r&&typeof r!=\"number\"&&Oe(n,t,r)&&(t=r=T),r=r===T?4294967295:r>>>0,r?(n=Iu(n))&&(typeof t==\"string\"||null!=t&&!hf(t))&&(t=yr(t),!t&&Rn.test(n))?Or(M(n),0,r):n.split(t,r):[]},An.spread=function(t,r){if(typeof t!=\"function\")throw new ti(\"Expected a function\");return r=null==r?0:Li(ku(r),0),\nfr(function(e){var u=e[r];return e=Or(e,0,r),u&&a(e,u),n(t,this,e)})},An.tail=function(n){var t=null==n?0:n.length;return t?hr(n,1,t):[]},An.take=function(n,t,r){return n&&n.length?(t=r||t===T?1:ku(t),hr(n,0,0>t?0:t)):[]},An.takeRight=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:ku(t),t=e-t,hr(n,0>t?0:t,e)):[]},An.takeRightWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),false,true):[]},An.takeWhile=function(n,t){return n&&n.length?jr(n,ye(t,3)):[]},An.tap=function(n,t){return t(n),\nn},An.throttle=function(n,t,r){var e=true,u=true;if(typeof n!=\"function\")throw new ti(\"Expected a function\");return du(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),fu(n,t,{leading:e,maxWait:t,trailing:u})},An.thru=Qe,An.toArray=mu,An.toPairs=zf,An.toPairsIn=Wf,An.toPath=function(n){return ff(n)?c(n,Me):wu(n)?[n]:Lr(jo(Iu(n)))},An.toPlainObject=Ou,An.transform=function(n,t,e){var u=ff(n),i=u||af(n)||_f(n);if(t=ye(t,4),null==e){var o=n&&n.constructor;e=i?u?new o:[]:du(n)&&_u(o)?eo(di(n)):{};\n}return(i?r:mt)(n,function(n,r,u){return t(e,n,r,u)}),e},An.unary=function(n){return eu(n,1)},An.union=Ro,An.unionBy=zo,An.unionWith=Wo,An.uniq=function(n){return n&&n.length?br(n):[]},An.uniqBy=function(n,t){return n&&n.length?br(n,ye(t,2)):[]},An.uniqWith=function(n,t){return t=typeof t==\"function\"?t:T,n&&n.length?br(n,T,t):[]},An.unset=function(n,t){return null==n||xr(n,t)},An.unzip=He,An.unzipWith=Je,An.update=function(n,t,r){return null!=n&&(r=Er(r),n=lr(n,t,r(Et(n,t)),void 0)),n},An.updateWith=function(n,t,r,e){\nreturn e=typeof e==\"function\"?e:T,null!=n&&(r=Er(r),n=lr(n,t,r(Et(n,t)),e)),n},An.values=Lu,An.valuesIn=function(n){return null==n?[]:S(n,Uu(n))},An.without=Uo,An.words=Mu,An.wrap=function(n,t){return nf(Er(t),n)},An.xor=Bo,An.xorBy=Lo,An.xorWith=Co,An.zip=Do,An.zipObject=function(n,t){return Ar(n||[],t||[],ot)},An.zipObjectDeep=function(n,t){return Ar(n||[],t||[],lr)},An.zipWith=Mo,An.entries=zf,An.entriesIn=Wf,An.extend=yf,An.extendWith=bf,Nu(An,An),An.add=Qf,An.attempt=Ff,An.camelCase=Uf,An.capitalize=Cu,\nAn.ceil=Xf,An.clamp=function(n,t,r){return r===T&&(r=t,t=T),r!==T&&(r=Su(r),r=r===r?r:0),t!==T&&(t=Su(t),t=t===t?t:0),pt(Su(n),t,r)},An.clone=function(n){return _t(n,4)},An.cloneDeep=function(n){return _t(n,5)},An.cloneDeepWith=function(n,t){return t=typeof t==\"function\"?t:T,_t(n,5,t)},An.cloneWith=function(n,t){return t=typeof t==\"function\"?t:T,_t(n,4,t)},An.conformsTo=function(n,t){return null==t||gt(n,t,Wu(t))},An.deburr=Du,An.defaultTo=function(n,t){return null==n||n!==n?t:n},An.divide=nc,An.endsWith=function(n,t,r){\nn=Iu(n),t=yr(t);var e=n.length,e=r=r===T?e:pt(ku(r),0,e);return r-=t.length,0<=r&&n.slice(r,e)==t},An.eq=lu,An.escape=function(n){return(n=Iu(n))&&H.test(n)?n.replace(K,nt):n},An.escapeRegExp=function(n){return(n=Iu(n))&&en.test(n)?n.replace(rn,\"\\\\$&\"):n},An.every=function(n,t,r){var e=ff(n)?u:bt;return r&&Oe(n,t,r)&&(t=T),e(n,ye(t,3))},An.find=Fo,An.findIndex=Ne,An.findKey=function(n,t){return p(n,ye(t,3),mt)},An.findLast=No,An.findLastIndex=Pe,An.findLastKey=function(n,t){return p(n,ye(t,3),At);\n},An.floor=tc,An.forEach=nu,An.forEachRight=tu,An.forIn=function(n,t){return null==n?n:oo(n,ye(t,3),Uu)},An.forInRight=function(n,t){return null==n?n:fo(n,ye(t,3),Uu)},An.forOwn=function(n,t){return n&&mt(n,ye(t,3))},An.forOwnRight=function(n,t){return n&&At(n,ye(t,3))},An.get=Ru,An.gt=ef,An.gte=uf,An.has=function(n,t){return null!=n&&we(n,t,Rt)},An.hasIn=zu,An.head=qe,An.identity=$u,An.includes=function(n,t,r,e){return n=su(n)?n:Lu(n),r=r&&!e?ku(r):0,e=n.length,0>r&&(r=Li(e+r,0)),ju(n)?r<=e&&-1<n.indexOf(t,r):!!e&&-1<v(n,t,r);\n},An.indexOf=function(n,t,r){var e=null==n?0:n.length;return e?(r=null==r?0:ku(r),0>r&&(r=Li(e+r,0)),v(n,t,r)):-1},An.inRange=function(n,t,r){return t=Au(t),r===T?(r=t,t=0):r=Au(r),n=Su(n),n>=Ci(t,r)&&n<Li(t,r)},An.invoke=Ef,An.isArguments=of,An.isArray=ff,An.isArrayBuffer=cf,An.isArrayLike=su,An.isArrayLikeObject=hu,An.isBoolean=function(n){return true===n||false===n||yu(n)&&\"[object Boolean]\"==Ot(n)},An.isBuffer=af,An.isDate=lf,An.isElement=function(n){return yu(n)&&1===n.nodeType&&!xu(n)},An.isEmpty=function(n){\nif(null==n)return true;if(su(n)&&(ff(n)||typeof n==\"string\"||typeof n.splice==\"function\"||af(n)||_f(n)||of(n)))return!n.length;var t=vo(n);if(\"[object Map]\"==t||\"[object Set]\"==t)return!n.size;if(ze(n))return!Vt(n).length;for(var r in n)if(oi.call(n,r))return false;return true},An.isEqual=function(n,t){return Mt(n,t)},An.isEqualWith=function(n,t,r){var e=(r=typeof r==\"function\"?r:T)?r(n,t):T;return e===T?Mt(n,t,T,r):!!e},An.isError=pu,An.isFinite=function(n){return typeof n==\"number\"&&Wi(n)},An.isFunction=_u,\nAn.isInteger=vu,An.isLength=gu,An.isMap=sf,An.isMatch=function(n,t){return n===t||$t(n,t,xe(t))},An.isMatchWith=function(n,t,r){return r=typeof r==\"function\"?r:T,$t(n,t,xe(t),r)},An.isNaN=function(n){return bu(n)&&n!=+n},An.isNative=function(n){if(go(n))throw new Hu(\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\");return Ft(n)},An.isNil=function(n){return null==n},An.isNull=function(n){return null===n},An.isNumber=bu,An.isObject=du,An.isObjectLike=yu,An.isPlainObject=xu,An.isRegExp=hf,\nAn.isSafeInteger=function(n){return vu(n)&&-9007199254740991<=n&&9007199254740991>=n},An.isSet=pf,An.isString=ju,An.isSymbol=wu,An.isTypedArray=_f,An.isUndefined=function(n){return n===T},An.isWeakMap=function(n){return yu(n)&&\"[object WeakMap]\"==vo(n)},An.isWeakSet=function(n){return yu(n)&&\"[object WeakSet]\"==Ot(n)},An.join=function(n,t){return null==n?\"\":Ui.call(n,t)},An.kebabCase=Bf,An.last=Ve,An.lastIndexOf=function(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e;if(r!==T&&(u=ku(r),u=0>u?Li(e+u,0):Ci(u,e-1)),\nt===t)n:{for(r=u+1;r--;)if(n[r]===t){n=r;break n}n=r}else n=_(n,d,u,true);return n},An.lowerCase=Lf,An.lowerFirst=Cf,An.lt=vf,An.lte=gf,An.max=function(n){return n&&n.length?xt(n,$u,It):T},An.maxBy=function(n,t){return n&&n.length?xt(n,ye(t,2),It):T},An.mean=function(n){return y(n,$u)},An.meanBy=function(n,t){return y(n,ye(t,2))},An.min=function(n){return n&&n.length?xt(n,$u,Kt):T},An.minBy=function(n,t){return n&&n.length?xt(n,ye(t,2),Kt):T},An.stubArray=qu,An.stubFalse=Vu,An.stubObject=function(){\nreturn{}},An.stubString=function(){return\"\"},An.stubTrue=function(){return true},An.multiply=rc,An.nth=function(n,t){return n&&n.length?Qt(n,ku(t)):T},An.noConflict=function(){return $n._===this&&($n._=si),this},An.noop=Pu,An.now=Go,An.pad=function(n,t,r){n=Iu(n);var e=(t=ku(t))?D(n):0;return!t||e>=t?n:(t=(t-e)/2,ne(Ii(t),r)+n+ne(Oi(t),r))},An.padEnd=function(n,t,r){n=Iu(n);var e=(t=ku(t))?D(n):0;return t&&e<t?n+ne(t-e,r):n},An.padStart=function(n,t,r){n=Iu(n);var e=(t=ku(t))?D(n):0;return t&&e<t?ne(t-e,r)+n:n;\n},An.parseInt=function(n,t,r){return r||null==t?t=0:t&&(t=+t),Mi(Iu(n).replace(on,\"\"),t||0)},An.random=function(n,t,r){if(r&&typeof r!=\"boolean\"&&Oe(n,t,r)&&(t=r=T),r===T&&(typeof t==\"boolean\"?(r=t,t=T):typeof n==\"boolean\"&&(r=n,n=T)),n===T&&t===T?(n=0,t=1):(n=Au(n),t===T?(t=n,n=0):t=Au(t)),n>t){var e=n;n=t,t=e}return r||n%1||t%1?(r=Ti(),Ci(n+r*(t-n+Cn(\"1e-\"+((r+\"\").length-1))),t)):ir(n,t)},An.reduce=function(n,t,r){var e=ff(n)?l:j,u=3>arguments.length;return e(n,ye(t,4),r,u,uo)},An.reduceRight=function(n,t,r){\nvar e=ff(n)?s:j,u=3>arguments.length;return e(n,ye(t,4),r,u,io)},An.repeat=function(n,t,r){return t=(r?Oe(n,t,r):t===T)?1:ku(t),or(Iu(n),t)},An.replace=function(){var n=arguments,t=Iu(n[0]);return 3>n.length?t:t.replace(n[1],n[2])},An.result=function(n,t,r){t=Sr(t,n);var e=-1,u=t.length;for(u||(u=1,n=T);++e<u;){var i=null==n?T:n[Me(t[e])];i===T&&(e=u,i=r),n=_u(i)?i.call(n):i}return n},An.round=ec,An.runInContext=x,An.sample=function(n){return(ff(n)?Qn:cr)(n)},An.size=function(n){if(null==n)return 0;\nif(su(n))return ju(n)?D(n):n.length;var t=vo(n);return\"[object Map]\"==t||\"[object Set]\"==t?n.size:Vt(n).length},An.snakeCase=Df,An.some=function(n,t,r){var e=ff(n)?h:pr;return r&&Oe(n,t,r)&&(t=T),e(n,ye(t,3))},An.sortedIndex=function(n,t){return _r(n,t)},An.sortedIndexBy=function(n,t,r){return vr(n,t,ye(r,2))},An.sortedIndexOf=function(n,t){var r=null==n?0:n.length;if(r){var e=_r(n,t);if(e<r&&lu(n[e],t))return e}return-1},An.sortedLastIndex=function(n,t){return _r(n,t,true)},An.sortedLastIndexBy=function(n,t,r){\nreturn vr(n,t,ye(r,2),true)},An.sortedLastIndexOf=function(n,t){if(null==n?0:n.length){var r=_r(n,t,true)-1;if(lu(n[r],t))return r}return-1},An.startCase=Mf,An.startsWith=function(n,t,r){return n=Iu(n),r=null==r?0:pt(ku(r),0,n.length),t=yr(t),n.slice(r,r+t.length)==t},An.subtract=uc,An.sum=function(n){return n&&n.length?m(n,$u):0},An.sumBy=function(n,t){return n&&n.length?m(n,ye(t,2)):0},An.template=function(n,t,r){var e=An.templateSettings;r&&Oe(n,t,r)&&(t=T),n=Iu(n),t=bf({},t,e,ce),r=bf({},t.imports,e.imports,ce);\nvar u,i,o=Wu(r),f=S(r,o),c=0;r=t.interpolate||jn;var a=\"__p+='\";r=Xu((t.escape||jn).source+\"|\"+r.source+\"|\"+(r===Q?pn:jn).source+\"|\"+(t.evaluate||jn).source+\"|$\",\"g\");var l=\"sourceURL\"in t?\"//# sourceURL=\"+t.sourceURL+\"\\n\":\"\";if(n.replace(r,function(t,r,e,o,f,l){return e||(e=o),a+=n.slice(c,l).replace(wn,z),r&&(u=true,a+=\"'+__e(\"+r+\")+'\"),f&&(i=true,a+=\"';\"+f+\";\\n__p+='\"),e&&(a+=\"'+((__t=(\"+e+\"))==null?'':__t)+'\"),c=l+t.length,t}),a+=\"';\",(t=t.variable)||(a=\"with(obj){\"+a+\"}\"),a=(i?a.replace(P,\"\"):a).replace(Z,\"$1\").replace(q,\"$1;\"),\na=\"function(\"+(t||\"obj\")+\"){\"+(t?\"\":\"obj||(obj={});\")+\"var __t,__p=''\"+(u?\",__e=_.escape\":\"\")+(i?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":\";\")+a+\"return __p}\",t=Ff(function(){return Ju(o,l+\"return \"+a).apply(T,f)}),t.source=a,pu(t))throw t;return t},An.times=function(n,t){if(n=ku(n),1>n||9007199254740991<n)return[];var r=4294967295,e=Ci(n,4294967295);for(t=ye(t),n-=4294967295,e=A(e,t);++r<n;)t(r);return e},An.toFinite=Au,An.toInteger=ku,An.toLength=Eu,An.toLower=function(n){\nreturn Iu(n).toLowerCase()},An.toNumber=Su,An.toSafeInteger=function(n){return n?pt(ku(n),-9007199254740991,9007199254740991):0===n?n:0},An.toString=Iu,An.toUpper=function(n){return Iu(n).toUpperCase()},An.trim=function(n,t,r){return(n=Iu(n))&&(r||t===T)?n.replace(un,\"\"):n&&(t=yr(t))?(n=M(n),r=M(t),t=I(n,r),r=R(n,r)+1,Or(n,t,r).join(\"\")):n},An.trimEnd=function(n,t,r){return(n=Iu(n))&&(r||t===T)?n.replace(fn,\"\"):n&&(t=yr(t))?(n=M(n),t=R(n,M(t))+1,Or(n,0,t).join(\"\")):n},An.trimStart=function(n,t,r){\nreturn(n=Iu(n))&&(r||t===T)?n.replace(on,\"\"):n&&(t=yr(t))?(n=M(n),t=I(n,M(t)),Or(n,t).join(\"\")):n},An.truncate=function(n,t){var r=30,e=\"...\";if(du(t))var u=\"separator\"in t?t.separator:u,r=\"length\"in t?ku(t.length):r,e=\"omission\"in t?yr(t.omission):e;n=Iu(n);var i=n.length;if(Rn.test(n))var o=M(n),i=o.length;if(r>=i)return n;if(i=r-D(e),1>i)return e;if(r=o?Or(o,0,i).join(\"\"):n.slice(0,i),u===T)return r+e;if(o&&(i+=r.length-i),hf(u)){if(n.slice(i).search(u)){var f=r;for(u.global||(u=Xu(u.source,Iu(_n.exec(u))+\"g\")),\nu.lastIndex=0;o=u.exec(f);)var c=o.index;r=r.slice(0,c===T?i:c)}}else n.indexOf(yr(u),i)!=i&&(u=r.lastIndexOf(u),-1<u&&(r=r.slice(0,u)));return r+e},An.unescape=function(n){return(n=Iu(n))&&G.test(n)?n.replace(V,tt):n},An.uniqueId=function(n){var t=++fi;return Iu(n)+t},An.upperCase=Tf,An.upperFirst=$f,An.each=nu,An.eachRight=tu,An.first=qe,Nu(An,function(){var n={};return mt(An,function(t,r){oi.call(An.prototype,r)||(n[r]=t)}),n}(),{chain:false}),An.VERSION=\"4.17.11\",r(\"bind bindKey curry curryRight partial partialRight\".split(\" \"),function(n){\nAn[n].placeholder=An}),r([\"drop\",\"take\"],function(n,t){Ln.prototype[n]=function(r){r=r===T?1:Li(ku(r),0);var e=this.__filtered__&&!t?new Ln(this):this.clone();return e.__filtered__?e.__takeCount__=Ci(r,e.__takeCount__):e.__views__.push({size:Ci(r,4294967295),type:n+(0>e.__dir__?\"Right\":\"\")}),e},Ln.prototype[n+\"Right\"]=function(t){return this.reverse()[n](t).reverse()}}),r([\"filter\",\"map\",\"takeWhile\"],function(n,t){var r=t+1,e=1==r||3==r;Ln.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({\niteratee:ye(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),r([\"head\",\"last\"],function(n,t){var r=\"take\"+(t?\"Right\":\"\");Ln.prototype[n]=function(){return this[r](1).value()[0]}}),r([\"initial\",\"tail\"],function(n,t){var r=\"drop\"+(t?\"\":\"Right\");Ln.prototype[n]=function(){return this.__filtered__?new Ln(this):this[r](1)}}),Ln.prototype.compact=function(){return this.filter($u)},Ln.prototype.find=function(n){return this.filter(n).head()},Ln.prototype.findLast=function(n){return this.reverse().find(n);\n},Ln.prototype.invokeMap=fr(function(n,t){return typeof n==\"function\"?new Ln(this):this.map(function(r){return Bt(r,n,t)})}),Ln.prototype.reject=function(n){return this.filter(au(ye(n)))},Ln.prototype.slice=function(n,t){n=ku(n);var r=this;return r.__filtered__&&(0<n||0>t)?new Ln(r):(0>n?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==T&&(t=ku(t),r=0>t?r.dropRight(-t):r.take(t-n)),r)},Ln.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Ln.prototype.toArray=function(){return this.take(4294967295);\n},mt(Ln.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=An[e?\"take\"+(\"last\"==t?\"Right\":\"\"):t],i=e||/^find/.test(t);u&&(An.prototype[t]=function(){var t=this.__wrapped__,o=e?[1]:arguments,f=t instanceof Ln,c=o[0],l=f||ff(t),s=function(n){return n=u.apply(An,a([n],o)),e&&h?n[0]:n};l&&r&&typeof c==\"function\"&&1!=c.length&&(f=l=false);var h=this.__chain__,p=!!this.__actions__.length,c=i&&!h,f=f&&!p;return!i&&l?(t=f?t:new Ln(this),t=n.apply(t,o),t.__actions__.push({\nfunc:Qe,args:[s],thisArg:T}),new On(t,h)):c&&f?n.apply(this,o):(t=this.thru(s),c?e?t.value()[0]:t.value():t)})}),r(\"pop push shift sort splice unshift\".split(\" \"),function(n){var t=ri[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(n);An.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(ff(u)?u:[],n)}return this[r](function(r){return t.apply(ff(r)?r:[],n)})}}),mt(Ln.prototype,function(n,t){var r=An[t];if(r){var e=r.name+\"\";\n(Gi[e]||(Gi[e]=[])).push({name:t,func:r})}}),Gi[Jr(T,2).name]=[{name:\"wrapper\",func:T}],Ln.prototype.clone=function(){var n=new Ln(this.__wrapped__);return n.__actions__=Lr(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Lr(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Lr(this.__views__),n},Ln.prototype.reverse=function(){if(this.__filtered__){var n=new Ln(this);n.__dir__=-1,n.__filtered__=true}else n=this.clone(),n.__dir__*=-1;return n;\n},Ln.prototype.value=function(){var n,t=this.__wrapped__.value(),r=this.__dir__,e=ff(t),u=0>r,i=e?t.length:0;n=0;for(var o=i,f=this.__views__,c=-1,a=f.length;++c<a;){var l=f[c],s=l.size;switch(l.type){case\"drop\":n+=s;break;case\"dropRight\":o-=s;break;case\"take\":o=Ci(o,n+s);break;case\"takeRight\":n=Li(n,o-s)}}if(n={start:n,end:o},o=n.start,f=n.end,n=f-o,o=u?f:o-1,f=this.__iteratees__,c=f.length,a=0,l=Ci(n,this.__takeCount__),!e||!u&&i==n&&l==n)return wr(t,this.__actions__);e=[];n:for(;n--&&a<l;){for(o+=r,\nu=-1,i=t[o];++u<c;){var h=f[u],s=h.type,h=(0,h.iteratee)(i);if(2==s)i=h;else if(!h){if(1==s)continue n;break n}}e[a++]=i}return e},An.prototype.at=To,An.prototype.chain=function(){return Ye(this)},An.prototype.commit=function(){return new On(this.value(),this.__chain__)},An.prototype.next=function(){this.__values__===T&&(this.__values__=mu(this.value()));var n=this.__index__>=this.__values__.length;return{done:n,value:n?T:this.__values__[this.__index__++]}},An.prototype.plant=function(n){for(var t,r=this;r instanceof kn;){\nvar e=Fe(r);e.__index__=0,e.__values__=T,t?u.__wrapped__=e:t=e;var u=e,r=r.__wrapped__}return u.__wrapped__=n,t},An.prototype.reverse=function(){var n=this.__wrapped__;return n instanceof Ln?(this.__actions__.length&&(n=new Ln(this)),n=n.reverse(),n.__actions__.push({func:Qe,args:[Ge],thisArg:T}),new On(n,this.__chain__)):this.thru(Ge)},An.prototype.toJSON=An.prototype.valueOf=An.prototype.value=function(){return wr(this.__wrapped__,this.__actions__)},An.prototype.first=An.prototype.head,wi&&(An.prototype[wi]=Xe),\nAn}();typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd?($n._=rt, define(function(){return rt})):Nn?((Nn.exports=rt)._=rt,Fn._=rt):$n._=rt}).call(this);","'use strict';\nmodule.exports = () => {\n\tconst ret = {};\n\n\tret.promise = new Promise((resolve, reject) => {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t});\n\n\treturn ret;\n};\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","export default (function () {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var initialState = typeof args[args.length - 1] !== 'function' && args.pop();\n  var reducers = args;\n\n  if (typeof initialState === 'undefined') {\n    throw new TypeError('The initial state may not be undefined. If you do not want to set a value for this reducer, you can use null instead of undefined.');\n  }\n\n  return function (prevState, value) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    var prevStateIsUndefined = typeof prevState === 'undefined';\n    var valueIsUndefined = typeof value === 'undefined';\n\n    if (prevStateIsUndefined && valueIsUndefined && initialState) {\n      return initialState;\n    }\n\n    return reducers.reduce(function (newState, reducer) {\n      return reducer.apply(undefined, [newState, value].concat(args));\n    }, prevStateIsUndefined && !valueIsUndefined && initialState ? initialState : prevState);\n  };\n});","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isSymbol from './utils/isSymbol';\nimport isEmpty from './utils/isEmpty';\nimport toString from './utils/toString';\nimport isString from './utils/isString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\n\nfunction isValidActionType(type) {\n  return isString(type) || isFunction(type) || isSymbol(type);\n}\n\nfunction isValidActionTypes(types) {\n  if (isEmpty(types)) {\n    return false;\n  }\n\n  return types.every(isValidActionType);\n}\n\nexport default function combineActions() {\n  for (var _len = arguments.length, actionsTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    actionsTypes[_key] = arguments[_key];\n  }\n\n  invariant(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');\n  var combinedActionType = actionsTypes.map(toString).join(ACTION_TYPE_DELIMITER);\n  return {\n    toString: function toString() {\n      return combinedActionType;\n    }\n  };\n}","export var DEFAULT_NAMESPACE = '/';\nexport var ACTION_TYPE_DELIMITER = '||';","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isNull from './utils/isNull';\nexport default function createAction(type, payloadCreator, metaCreator) {\n  if (payloadCreator === void 0) {\n    payloadCreator = identity;\n  }\n\n  invariant(isFunction(payloadCreator) || isNull(payloadCreator), 'Expected payloadCreator to be a function, undefined or null');\n  var finalPayloadCreator = isNull(payloadCreator) || payloadCreator === identity ? identity : function (head) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return head instanceof Error ? head : payloadCreator.apply(void 0, [head].concat(args));\n  };\n  var hasMeta = isFunction(metaCreator);\n  var typeString = type.toString();\n\n  var actionCreator = function actionCreator() {\n    var payload = finalPayloadCreator.apply(void 0, arguments);\n    var action = {\n      type: type\n    };\n\n    if (payload instanceof Error) {\n      action.error = true;\n    }\n\n    if (payload !== undefined) {\n      action.payload = payload;\n    }\n\n    if (hasMeta) {\n      action.meta = metaCreator.apply(void 0, arguments);\n    }\n\n    return action;\n  };\n\n  actionCreator.toString = function () {\n    return typeString;\n  };\n\n  return actionCreator;\n}","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isNil from './utils/isNil';\nimport getLastElement from './utils/getLastElement';\nimport camelCase from './utils/camelCase';\nimport arrayToObject from './utils/arrayToObject';\nimport flattenActionMap from './utils/flattenActionMap';\nimport unflattenActionCreators from './utils/unflattenActionCreators';\nimport createAction from './createAction';\nimport { DEFAULT_NAMESPACE } from './constants';\nexport default function createActions(actionMap) {\n  for (var _len = arguments.length, identityActions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    identityActions[_key - 1] = arguments[_key];\n  }\n\n  var options = isPlainObject(getLastElement(identityActions)) ? identityActions.pop() : {};\n  invariant(identityActions.every(isString) && (isString(actionMap) || isPlainObject(actionMap)), 'Expected optional object followed by string action types');\n\n  if (isString(actionMap)) {\n    return actionCreatorsFromIdentityActions([actionMap].concat(identityActions), options);\n  }\n\n  return _objectSpread({}, actionCreatorsFromActionMap(actionMap, options), actionCreatorsFromIdentityActions(identityActions, options));\n}\n\nfunction actionCreatorsFromActionMap(actionMap, options) {\n  var flatActionMap = flattenActionMap(actionMap, options);\n  var flatActionCreators = actionMapToActionCreators(flatActionMap);\n  return unflattenActionCreators(flatActionCreators, options);\n}\n\nfunction actionMapToActionCreators(actionMap, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      prefix = _ref.prefix,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace;\n\n  function isValidActionMapValue(actionMapValue) {\n    if (isFunction(actionMapValue) || isNil(actionMapValue)) {\n      return true;\n    }\n\n    if (isArray(actionMapValue)) {\n      var _actionMapValue$ = actionMapValue[0],\n          payload = _actionMapValue$ === void 0 ? identity : _actionMapValue$,\n          meta = actionMapValue[1];\n      return isFunction(payload) && isFunction(meta);\n    }\n\n    return false;\n  }\n\n  return arrayToObject(Object.keys(actionMap), function (partialActionCreators, type) {\n    var _objectSpread2;\n\n    var actionMapValue = actionMap[type];\n    invariant(isValidActionMapValue(actionMapValue), 'Expected function, undefined, null, or array with payload and meta ' + (\"functions for \" + type));\n    var prefixedType = prefix ? \"\" + prefix + namespace + type : type;\n    var actionCreator = isArray(actionMapValue) ? createAction.apply(void 0, [prefixedType].concat(actionMapValue)) : createAction(prefixedType, actionMapValue);\n    return _objectSpread({}, partialActionCreators, (_objectSpread2 = {}, _objectSpread2[type] = actionCreator, _objectSpread2));\n  });\n}\n\nfunction actionCreatorsFromIdentityActions(identityActions, options) {\n  var actionMap = arrayToObject(identityActions, function (partialActionMap, type) {\n    var _objectSpread3;\n\n    return _objectSpread({}, partialActionMap, (_objectSpread3 = {}, _objectSpread3[type] = identity, _objectSpread3));\n  });\n  var actionCreators = actionMapToActionCreators(actionMap, options);\n  return arrayToObject(Object.keys(actionCreators), function (partialActionCreators, type) {\n    var _objectSpread4;\n\n    return _objectSpread({}, partialActionCreators, (_objectSpread4 = {}, _objectSpread4[camelCase(type)] = actionCreators[type], _objectSpread4));\n  });\n}","import curry from 'just-curry-it';\nimport createAction from './createAction';\nexport default (function (type, payloadCreator) {\n  return curry(createAction(type, payloadCreator), payloadCreator.length);\n});","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isPlainObject from './utils/isPlainObject';\nimport identity from './utils/identity';\nimport isNil from './utils/isNil';\nimport isUndefined from './utils/isUndefined';\nimport toString from './utils/toString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\nexport default function handleAction(type, reducer, defaultState) {\n  if (reducer === void 0) {\n    reducer = identity;\n  }\n\n  var types = toString(type).split(ACTION_TYPE_DELIMITER);\n  invariant(!isUndefined(defaultState), \"defaultState for reducer handling \" + types.join(', ') + \" should be defined\");\n  invariant(isFunction(reducer) || isPlainObject(reducer), 'Expected reducer to be a function or object with next and throw reducers');\n\n  var _ref = isFunction(reducer) ? [reducer, reducer] : [reducer.next, reducer.throw].map(function (aReducer) {\n    return isNil(aReducer) ? identity : aReducer;\n  }),\n      nextReducer = _ref[0],\n      throwReducer = _ref[1];\n\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    var actionType = action.type;\n\n    if (!actionType || types.indexOf(toString(actionType)) === -1) {\n      return state;\n    }\n\n    return (action.error === true ? throwReducer : nextReducer)(state, action);\n  };\n}","import reduceReducers from 'reduce-reducers';\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isMap from './utils/isMap';\nimport ownKeys from './utils/ownKeys';\nimport flattenReducerMap from './utils/flattenReducerMap';\nimport handleAction from './handleAction';\nimport get from './utils/get';\nexport default function handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  invariant(isPlainObject(handlers) || isMap(handlers), 'Expected handlers to be a plain object.');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = ownKeys(flattenedReducerMap).map(function (type) {\n    return handleAction(type, get(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = reduceReducers.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    return reducer(state, action);\n  };\n}","import combineActions from './combineActions';\nimport createAction from './createAction';\nimport createActions from './createActions';\nimport createCurriedAction from './createCurriedAction';\nimport handleAction from './handleAction';\nimport handleActions from './handleActions';\nexport { combineActions, createAction, createActions, createCurriedAction, handleAction, handleActions };","export default (function (array, callback) {\n  return array.reduce(function (partialObject, element) {\n    return callback(partialObject, element);\n  }, {});\n});","import camelCase from 'to-camel-case';\nvar namespacer = '/';\nexport default (function (type) {\n  return type.indexOf(namespacer) === -1 ? camelCase(type) : type.split(namespacer).map(camelCase).join(namespacer);\n});","import isPlainObject from './isPlainObject';\nimport flattenWhenNode from './flattenWhenNode';\nexport default flattenWhenNode(isPlainObject);","import isPlainObject from './isPlainObject';\nimport isMap from './isMap';\nimport hasGeneratorInterface from './hasGeneratorInterface';\nimport flattenWhenNode from './flattenWhenNode';\nexport default flattenWhenNode(function (node) {\n  return (isPlainObject(node) || isMap(node)) && !hasGeneratorInterface(node);\n});","import { DEFAULT_NAMESPACE, ACTION_TYPE_DELIMITER } from '../constants';\nimport ownKeys from './ownKeys';\nimport get from './get';\nexport default (function (predicate) {\n  return function flatten(map, _temp, partialFlatMap, partialFlatActionType) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$namespace = _ref.namespace,\n        namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n        prefix = _ref.prefix;\n\n    if (partialFlatMap === void 0) {\n      partialFlatMap = {};\n    }\n\n    if (partialFlatActionType === void 0) {\n      partialFlatActionType = '';\n    }\n\n    function connectNamespace(type) {\n      var _ref2;\n\n      if (!partialFlatActionType) return type;\n      var types = type.toString().split(ACTION_TYPE_DELIMITER);\n      var partials = partialFlatActionType.split(ACTION_TYPE_DELIMITER);\n      return (_ref2 = []).concat.apply(_ref2, partials.map(function (p) {\n        return types.map(function (t) {\n          return \"\" + p + namespace + t;\n        });\n      })).join(ACTION_TYPE_DELIMITER);\n    }\n\n    function connectPrefix(type) {\n      if (partialFlatActionType || !prefix || prefix && new RegExp(\"^\" + prefix + namespace).test(type)) {\n        return type;\n      }\n\n      return \"\" + prefix + namespace + type;\n    }\n\n    ownKeys(map).forEach(function (type) {\n      var nextNamespace = connectPrefix(connectNamespace(type));\n      var mapValue = get(type, map);\n\n      if (predicate(mapValue)) {\n        flatten(mapValue, {\n          namespace: namespace,\n          prefix: prefix\n        }, partialFlatMap, nextNamespace);\n      } else {\n        partialFlatMap[nextNamespace] = mapValue;\n      }\n    });\n    return partialFlatMap;\n  };\n});","import isMap from './isMap';\nexport default function get(key, x) {\n  return isMap(x) ? x.get(key) : x[key];\n}","export default (function (array) {\n  return array[array.length - 1];\n});","import ownKeys from './ownKeys';\nexport default function hasGeneratorInterface(handler) {\n  var keys = ownKeys(handler);\n  var hasOnlyInterfaceNames = keys.every(function (ownKey) {\n    return ownKey === 'next' || ownKey === 'throw';\n  });\n  return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;\n}","export default (function (value) {\n  return value;\n});","export default (function (value) {\n  return Array.isArray(value);\n});","export default (function (value) {\n  return value.length === 0;\n});","export default (function (value) {\n  return typeof value === 'function';\n});","export default (function (value) {\n  return typeof Map !== 'undefined' && value instanceof Map;\n});","export default (function (value) {\n  return value === null || value === undefined;\n});","export default (function (value) {\n  return value === null;\n});","export default (function (value) {\n  if (typeof value !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n});","export default (function (value) {\n  return typeof value === 'string';\n});","export default (function (value) {\n  return typeof value === 'symbol' || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Symbol]';\n});","export default (function (value) {\n  return value === undefined;\n});","import isMap from './isMap';\nexport default function ownKeys(object) {\n  if (isMap(object)) {\n    // We are using loose transforms in babel. Here we are trying to convert an\n    // interable to an array. Loose mode expects everything to already be an\n    // array. The problem is that our eslint rules encourage us to prefer\n    // spread over Array.from.\n    //\n    // Instead of disabling loose mode we simply disable the warning.\n    // eslint-disable-next-line unicorn/prefer-spread\n    return Array.from(object.keys());\n  }\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    return Reflect.ownKeys(object);\n  }\n\n  var keys = Object.getOwnPropertyNames(object);\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    keys = keys.concat(Object.getOwnPropertySymbols(object));\n  }\n\n  return keys;\n}","export default (function (value) {\n  return value.toString();\n});","import { DEFAULT_NAMESPACE } from '../constants';\nimport isEmpty from './isEmpty';\nimport camelCase from './camelCase';\nexport default function unflattenActionCreators(flatActionCreators, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n      prefix = _ref.prefix;\n\n  function unflatten(flatActionType, partialNestedActionCreators, partialFlatActionTypePath) {\n    var nextNamespace = camelCase(partialFlatActionTypePath.shift());\n\n    if (isEmpty(partialFlatActionTypePath)) {\n      partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];\n    } else {\n      if (!partialNestedActionCreators[nextNamespace]) {\n        partialNestedActionCreators[nextNamespace] = {};\n      }\n\n      unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);\n    }\n  }\n\n  var nestedActionCreators = {};\n  Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {\n    var unprefixedType = prefix ? type.replace(\"\" + prefix + namespace, '') : type;\n    return unflatten(type, nestedActionCreators, unprefixedType.split(namespace));\n  });\n  return nestedActionCreators;\n}","\"use strict\";\n\nvar compose = require('redux').compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\n    function() {\n      if (arguments.length === 0) return undefined;\n      if (typeof arguments[0] === 'object') return compose;\n      return compose.apply(null, arguments);\n    }\n);\n\nexports.devToolsEnhancer = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION__ :\n    function() { return function(noop) { return noop; } }\n);\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){\"use strict\";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,\"kind\",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,\"path\",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,\"E\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,\"N\",e),Object.defineProperty(this,\"rhs\",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,\"D\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,\"A\",e),Object.defineProperty(this,\"index\",{value:t,enumerable:!0}),Object.defineProperty(this,\"item\",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t=\"undefined\"==typeof e?\"undefined\":N(e);return\"object\"!==t?t:e===Math?\"math\":null===e?\"null\":Array.isArray(e)?\"array\":\"[object Date]\"===Object.prototype.toString.call(e)?\"date\":\"function\"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?\"regexp\":\"object\"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if(\"undefined\"!=typeof d){if(c){if(\"function\"==typeof c&&c(g,d))return;if(\"object\"===(\"undefined\"==typeof c?\"undefined\":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}\"regexp\"===u(e)&&\"regexp\"===u(t)&&(e=e.toString(),t=t.toString());var y=\"undefined\"==typeof e?\"undefined\":N(e),v=\"undefined\"==typeof t?\"undefined\":N(t),b=\"undefined\"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m=\"undefined\"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if(\"date\"===u(e)&&e-t!==0)r(new n(g,e,t));else if(\"object\"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&(\"number\"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":s(o[r.path[n]],r.index,r.item);break;case\"D\":delete o[r.path[n]];break;case\"E\":case\"N\":o[r.path[n]]=r.rhs}}else switch(r.kind){case\"A\":s(e[t],r.index,r.item);break;case\"D\":e=f(e,t);break;case\"E\":case\"N\":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)\"undefined\"==typeof n[r.path[o]]&&(n[r.path[o]]=\"number\"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case\"A\":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case\"D\":delete n[r.path[o]];break;case\"E\":case\"N\":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":p(o[r.path[n]],r.index,r.item);break;case\"D\":o[r.path[n]]=r.lhs;break;case\"E\":o[r.path[n]]=r.lhs;break;case\"N\":delete o[r.path[n]]}}else switch(r.kind){case\"A\":p(e[t],r.index,r.item);break;case\"D\":e[t]=r.lhs;break;case\"E\":e[t]=r.lhs;break;case\"N\":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)\"undefined\"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case\"A\":p(i[r.path[n]],r.index,r.item);break;case\"D\":i[r.path[n]]=r.lhs;break;case\"E\":i[r.path[n]]=r.lhs;break;case\"N\":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return\"color: \"+F[e].color+\"; font-weight: bold\"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case\"E\":return[r.join(\".\"),n,\"→\",o];case\"N\":return[r.join(\".\"),o];case\"D\":return[r.join(\".\")];case\"A\":return[r.join(\".\")+\"[\"+i+\"]\",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed(\"diff\"):r.group(\"diff\")}catch(e){r.log(\"diff\")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,[\"%c \"+F[t].text,y(t)].concat(P(n)))}):r.log(\"—— no diff ——\");try{r.groupEnd()}catch(e){r.log(\"—— diff end —— \")}}function m(e,t,r,n){switch(\"undefined\"==typeof e?\"undefined\":N(e)){case\"object\":return\"function\"==typeof e[n]?e[n].apply(e,P(r)):e[n];case\"function\":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=[\"action\"];return i.push(\"%c\"+String(e.type)),t&&i.push(\"%c@ \"+n),r&&i.push(\"%c(in \"+o.toFixed(2)+\" ms)\"),i.join(\" \")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c=\"undefined\"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k=\"function\"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?\"color: \"+f.title(S)+\";\":\"\",A=[\"color: gray; font-weight: lighter;\"];A.push(E),t.timestamp&&A.push(\"color: gray; font-weight: lighter;\"),t.duration&&A.push(\"color: gray; font-weight: lighter;\");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,[\"%c \"+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,[\"%c \"+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],\"prevState\"),P=m(u,S,[S],\"action\"),C=m(u,S,[y,h],\"error\"),F=m(u,S,[w],\"nextState\");if(N)if(f.prevState){var L=\"color: \"+f.prevState(h)+\"; font-weight: bold\";r[N](\"%c prev state\",L,h)}else r[N](\"prev state\",h);if(P)if(f.action){var T=\"color: \"+f.action(S)+\"; font-weight: bold\";r[P](\"%c action    \",T,S)}else r[P](\"action    \",S);if(y&&C)if(f.error){var M=\"color: \"+f.error(y,h)+\"; font-weight: bold;\";r[C](\"%c error     \",M,y)}else r[C](\"error     \",y);if(F)if(f.nextState){var _=\"color: \"+f.nextState(w)+\"; font-weight: bold\";r[F](\"%c next state\",_,w)}else r[F](\"next state\",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log(\"—— log end ——\")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if(\"undefined\"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error(\"[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from 'redux-logger'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from 'redux-logger'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n\"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if(\"function\"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&\"function\"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E(\"0\",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+\":\"+A(e.getMinutes(),2)+\":\"+A(e.getSeconds(),2)+\".\"+A(e.getMilliseconds(),3)},O=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance:Date,N=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k=\"object\"===(\"undefined\"==typeof global?\"undefined\":N(global))&&global?global:\"undefined\"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){\"undefined\"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return\"undefined\"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:\"#2196F3\",text:\"CHANGED:\"},N:{color:\"#4CAF50\",text:\"ADDED:\"},D:{color:\"#F44336\",text:\"DELETED:\"},A:{color:\"#2196F3\",text:\"ARRAY:\"}},L={level:\"log\",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return\"inherit\"},prevState:function(){return\"#9E9E9E\"},action:function(){return\"#03A9F4\"},nextState:function(){return\"#4CAF50\"},error:function(){return\"#F20404\"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return\"function\"==typeof t||\"function\"==typeof r?S()({dispatch:t,getState:r}):void console.error(\"\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from 'redux-logger'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from 'redux-logger'\\n\")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,\"__esModule\",{value:!0})});\n","import createSagaMiddleware__default from '@redux-saga/core';\nexport * from '@redux-saga/core';\n\n\n\nexport default createSagaMiddleware__default;\n","export * from '@redux-saga/core/effects';\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  //k: [{}], // outdated thing ignored\n  t: [{ //t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{ //c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{ //b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    { //a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding) ?\n          'rtpmap:%d %s/%s/%s':\n          o.rate ?\n          'rtpmap:%d %s/%s':\n          'rtpmap:%d %s';\n      }\n    },\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      //a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    { //a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    { //a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null) ?\n          'rtcp:%d %s IP%d %s':\n          'rtcp:%d';\n      }\n    },\n    { //a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%d trr-int %d'\n    },\n    { //a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null) ?\n          'rtcp-fb:%s %s %s':\n          'rtcp-fb:%s %s';\n      }\n    },\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      //a=extmap:1/recvonly URI-gps-string\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'uri', 'config'],\n      format: function (o) {\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\n      }\n    },\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null) ?\n          'crypto:%d %s %s %s':\n          'crypto:%d %s %s';\n      }\n    },\n    { //a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    { //a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    { //a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*)/,\n      format: 'ptime:%d'\n    },\n    { //a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*)/,\n      format: 'maxptime:%d'\n    },\n    { //a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    { //a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    { //a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    { //a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    { //a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    { //a=ssrc-group:FEC 1 2\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    { //a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    { //a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    { //a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    { //a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null) ?\n          'sctpmap:%s %s %s' :\n          'sctpmap:%s %s';\n      }\n    },\n    { //a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      //a=imageattr:* send [x=800,y=640] recv *\n      //a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        //a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        //recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      //a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        //a=simulcast:\n        '^simulcast:' +\n        //send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        //space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        //end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //Old simulcast draft 03 (implemented by Firefox)\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      //a=simulcast: recv pt=97;98 send pt=97\n      //a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      //a=framerate:25\n      //a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    { // RFC4570\n      //a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    { //a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    { //a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name:'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name:'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    { // any a= that we don't understand is kepts verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseFmtpConfig = parser.parseFmtpConfig;\nexports.parseParams = parser.parseParams;\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/\\;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction isObject(obj) {\n  var type = typeof obj;\n  return !!obj && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(obj) {\n  return typeof obj === 'function';\n}\n\nvar assign = Object.assign || function assign(to) {\n  var args = arguments;\n  for (var s = 1; s < args.length; s += 1) {\n    var from = args[s];\n    if (from) {\n      var keys = Object.keys(from);\n      for (var i = 0; i < keys.length; i += 1) {\n        var key = keys[i];\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n};\n\nvar isArray = Array.isArray;\n\nfunction isPlainObject(value) {\n  return !!value && typeof value === 'object' &&\n    Object.getPrototypeOf(value) === Object.prototype;\n}\n\n\n\n\nfunction concatAssignFunctions(dstObject, srcArray, propName) {\n  if (!isArray(srcArray)) { return; }\n\n  var length = srcArray.length;\n  var dstArray = dstObject[propName] || [];\n  dstObject[propName] = dstArray;\n  for (var i = 0; i < length; i += 1) {\n    var fn = srcArray[i];\n    if (isFunction(fn) && dstArray.indexOf(fn) < 0) {\n      dstArray.push(fn);\n    }\n  }\n}\n\n\nfunction combineProperties(dstObject, srcObject, propName, action) {\n  if (!isObject(srcObject[propName])) { return; }\n  if (!isObject(dstObject[propName])) { dstObject[propName] = {}; }\n  action(dstObject[propName], srcObject[propName]);\n}\n\nfunction deepMergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, merge);\n}\nfunction mergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, assign);\n}\n\n/**\n * The 'src' argument plays the command role.\n * The returned values is always of the same type as the 'src'.\n * @param dst\n * @param src\n * @returns {*}\n */\nfunction mergeOne(dst, src) {\n  if (src === undefined) { return dst; }\n\n  // According to specification arrays must be concatenated.\n  // Also, the '.concat' creates a new array instance. Overrides the 'dst'.\n  if (isArray(src)) { return (isArray(dst) ? dst : []).concat(src); }\n\n  // Now deal with non plain 'src' object. 'src' overrides 'dst'\n  // Note that functions are also assigned! We do not deep merge functions.\n  if (!isPlainObject(src)) { return src; }\n\n  // See if 'dst' is allowed to be mutated. If not - it's overridden with a new plain object.\n  var returnValue = isObject(dst) ? dst : {};\n\n  var keys = Object.keys(src);\n  for (var i = 0; i < keys.length; i += 1) {\n    var key = keys[i];\n\n    var srcValue = src[key];\n    // Do not merge properties with the 'undefined' value.\n    if (srcValue !== undefined) {\n      var dstValue = returnValue[key];\n      // Recursive calls to mergeOne() must allow only plain objects or arrays in dst\n      var newDst = isPlainObject(dstValue) || isArray(srcValue) ? dstValue : {};\n\n      // deep merge each property. Recursion!\n      returnValue[key] = mergeOne(newDst, srcValue);\n    }\n  }\n\n  return returnValue;\n}\n\nvar merge = function (dst) {\n  var srcs = [], len = arguments.length - 1;\n  while ( len-- > 0 ) srcs[ len ] = arguments[ len + 1 ];\n\n  return srcs.reduce(mergeOne, dst);\n};\n\n/**\n * Creates new factory instance.\n * @param {Descriptor} descriptor The information about the object the factory will be creating.\n * @returns {Function} The new factory function.\n */\nfunction createFactory(descriptor) {\n  return function Stamp(options) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    // Next line was optimized for most JS VMs. Please, be careful here!\n    var obj = Object.create(descriptor.methods || null);\n\n    merge(obj, descriptor.deepProperties);\n    assign(obj, descriptor.properties);\n    Object.defineProperties(obj, descriptor.propertyDescriptors || {});\n\n    if (!descriptor.initializers || descriptor.initializers.length === 0) { return obj; }\n\n    if (options === undefined) { options = {}; }\n    var inits = descriptor.initializers;\n    var length = inits.length;\n    for (var i = 0; i < length; i += 1) {\n      var initializer = inits[i];\n      if (isFunction(initializer)) {\n        var returnedValue = initializer.call(obj, options,\n          {instance: obj, stamp: Stamp, args: [options].concat(args)});\n        obj = returnedValue === undefined ? obj : returnedValue;\n      }\n    }\n\n    return obj;\n  };\n}\n\n/**\n * Returns a new stamp given a descriptor and a compose function implementation.\n * @param {Descriptor} [descriptor={}] The information about the object the stamp will be creating.\n * @param {Compose} composeFunction The \"compose\" function implementation.\n * @returns {Stamp}\n */\nfunction createStamp(descriptor, composeFunction) {\n  var Stamp = createFactory(descriptor);\n\n  merge(Stamp, descriptor.staticDeepProperties);\n  assign(Stamp, descriptor.staticProperties);\n  Object.defineProperties(Stamp, descriptor.staticPropertyDescriptors || {});\n\n  var composeImplementation = isFunction(Stamp.compose) ? Stamp.compose : composeFunction;\n  Stamp.compose = function _compose() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return composeImplementation.apply(this, args);\n  };\n  assign(Stamp.compose, descriptor);\n\n  return Stamp;\n}\n\n/**\n * Mutates the dstDescriptor by merging the srcComposable data into it.\n * @param {Descriptor} dstDescriptor The descriptor object to merge into.\n * @param {Composable} [srcComposable] The composable\n * (either descriptor or stamp) to merge data form.\n * @returns {Descriptor} Returns the dstDescriptor argument.\n */\nfunction mergeComposable(dstDescriptor, srcComposable) {\n  var srcDescriptor = (srcComposable && srcComposable.compose) || srcComposable;\n  if (!isObject(srcDescriptor)) { return dstDescriptor; }\n\n  mergeAssign(dstDescriptor, srcDescriptor, 'methods');\n  mergeAssign(dstDescriptor, srcDescriptor, 'properties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'propertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticProperties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'staticDeepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticPropertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'configuration');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepConfiguration');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.initializers, 'initializers');\n\n  return dstDescriptor;\n}\n\n/**\n * Given the list of composables (stamp descriptors and stamps) returns\n * a new stamp (composable factory function).\n * @typedef {Function} Compose\n * @param {...(Composable)} [composables] The list of composables.\n * @returns {Stamp} A new stamp (aka composable factory function)\n */\nfunction compose() {\n  var composables = [], len = arguments.length;\n  while ( len-- ) composables[ len ] = arguments[ len ];\n\n  var descriptor = [this]\n    .concat(composables)\n    .filter(isObject)\n    .reduce(mergeComposable, {});\n  return createStamp(descriptor, compose);\n}\n\n\n/**\n * The Stamp Descriptor\n * @typedef {Function|Object} Descriptor\n * @returns {Stamp} A new stamp based on this Stamp\n * @property {Object} [methods] Methods or other data used as object instances' prototype\n * @property {Array<Function>} [initializers] List of initializers called for each object instance\n * @property {Object} [properties] Shallow assigned properties of object instances\n * @property {Object} [deepProperties] Deeply merged properties of object instances\n * @property {Object} [staticProperties] Shallow assigned properties of Stamps\n * @property {Object} [staticDeepProperties] Deeply merged properties of Stamps\n * @property {Object} [configuration] Shallow assigned properties of Stamp arbitrary metadata\n * @property {Object} [deepConfiguration] Deeply merged properties of Stamp arbitrary metadata\n * @property {Object} [propertyDescriptors] ES5 Property Descriptors applied to object instances\n * @property {Object} [staticPropertyDescriptors] ES5 Property Descriptors applied to Stamps\n */\n\n/**\n * The Stamp factory function\n * @typedef {Function} Stamp\n * @returns {*} Instantiated object\n * @property {Descriptor} compose - The Stamp descriptor and composition function\n */\n\n/**\n * A composable object - stamp or descriptor\n * @typedef {Stamp|Descriptor} Composable\n */\n\nexports['default'] = compose;\nmodule.exports = exports['default'];\n//# sourceMappingURL=compose.js.map\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toCamelCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n","\n/**\n * Export.\n */\n\nmodule.exports = toNoCase\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/\nvar hasSeparator = /(_|-|\\.|:)/\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase()\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()\n  return string.toLowerCase()\n}\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : ''\n  })\n}\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ')\n  })\n}\n","\nvar clean = require('to-no-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSpaceCase\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : ''\n  }).trim()\n}\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var i;\n  var x;\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  var hex;\n\n  for (i = 0; i < length32; i += 8) {\n    x = input[i >> 5] >>> i % 32 & 0xff;\n    hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(len + 64 >>> 9 << 4) + 14] = len;\n  var i;\n  var olda;\n  var oldb;\n  var oldc;\n  var oldd;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  var i;\n  var output = [];\n  output[(input.length >> 2) - 1] = undefined;\n\n  for (i = 0; i < output.length; i += 1) {\n    output[i] = 0;\n  }\n\n  var length8 = input.length * 8;\n\n  for (i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var i = 0; i < N; i++) {\n    M[i] = new Array(16);\n\n    for (var j = 0; j < 16; j++) {\n      M[i][j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var i = 0; i < N; i++) {\n    var W = new Array(80);\n\n    for (var t = 0; t < 16; t++) {\n      W[t] = M[i][t];\n    }\n\n    for (var t = 16; t < 80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t = 0; t < 80; t++) {\n      var s = Math.floor(t / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nexport default v1;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import bytesToUuid from './bytesToUuid.js';\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = new Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  var generateUUID = function generateUUID(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n    if (typeof value == 'string') value = stringToBytes(value);\n    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3\n\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  }; // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name;\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Rule = function () {\n  function Rule(name, fn, args, modifiers) {\n    classCallCheck(this, Rule);\n\n    this.name = name;\n    this.fn = fn;\n    this.args = args;\n    this.modifiers = modifiers;\n  }\n\n  createClass(Rule, [{\n    key: \"_test\",\n    value: function _test(value) {\n      var fn = this.fn;\n\n      try {\n        testAux(this.modifiers.slice(), fn)(value);\n      } catch (ex) {\n        fn = function fn() {\n          return false;\n        };\n      }\n\n      try {\n        return testAux(this.modifiers.slice(), fn)(value);\n      } catch (ex) {\n        return false;\n      }\n    }\n  }, {\n    key: \"_check\",\n    value: function _check(value) {\n      try {\n        testAux(this.modifiers.slice(), this.fn)(value);\n      } catch (ex) {\n        if (testAux(this.modifiers.slice(), function (it) {\n          return it;\n        })(false)) {\n          return;\n        }\n      }\n\n      if (!testAux(this.modifiers.slice(), this.fn)(value)) {\n        throw null;\n      }\n    }\n  }, {\n    key: \"_testAsync\",\n    value: function _testAsync(value) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        testAsyncAux(_this.modifiers.slice(), _this.fn)(value).then(function (valid) {\n          if (valid) {\n            resolve(value);\n          } else {\n            reject(null);\n          }\n        }).catch(function (ex) {\n          return reject(ex);\n        });\n      });\n    }\n  }]);\n  return Rule;\n}();\n\nfunction pickFn(fn) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"simple\";\n\n  return typeof fn === \"object\" ? fn[variant] : fn;\n}\n\nfunction testAux(modifiers, fn) {\n  if (modifiers.length) {\n    var modifier = modifiers.shift();\n    var nextFn = testAux(modifiers, fn);\n    return modifier.perform(nextFn);\n  } else {\n    return pickFn(fn);\n  }\n}\n\nfunction testAsyncAux(modifiers, fn) {\n  if (modifiers.length) {\n    var modifier = modifiers.shift();\n    var nextFn = testAsyncAux(modifiers, fn);\n    return modifier.performAsync(nextFn);\n  } else {\n    return function (value) {\n      return Promise.resolve(pickFn(fn, \"async\")(value));\n    };\n  }\n}\n\nvar Modifier = function Modifier(name, perform, performAsync) {\n  classCallCheck(this, Modifier);\n\n  this.name = name;\n  this.perform = perform;\n  this.performAsync = performAsync;\n};\n\nvar ValidationError = function (_Error) {\n  inherits(ValidationError, _Error);\n\n  function ValidationError(rule, value, cause, target) {\n    classCallCheck(this, ValidationError);\n\n    for (var _len = arguments.length, remaining = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n      remaining[_key - 4] = arguments[_key];\n    }\n\n    var _this = possibleConstructorReturn(this, (ValidationError.__proto__ || Object.getPrototypeOf(ValidationError)).call(this, remaining));\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_this, ValidationError);\n    }\n    _this.rule = rule;\n    _this.value = value;\n    _this.cause = cause;\n    _this.target = target;\n    return _this;\n  }\n\n  return ValidationError;\n}(Error);\n\nvar Context = function () {\n  function Context() {\n    var chain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var nextRuleModifiers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    classCallCheck(this, Context);\n\n    this.chain = chain;\n    this.nextRuleModifiers = nextRuleModifiers;\n  }\n\n  createClass(Context, [{\n    key: \"_applyRule\",\n    value: function _applyRule(ruleFn, name) {\n      var _this = this;\n\n      return function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.chain.push(new Rule(name, ruleFn.apply(_this, args), args, _this.nextRuleModifiers));\n        _this.nextRuleModifiers = [];\n        return _this;\n      };\n    }\n  }, {\n    key: \"_applyModifier\",\n    value: function _applyModifier(modifier, name) {\n      this.nextRuleModifiers.push(new Modifier(name, modifier.simple, modifier.async));\n      return this;\n    }\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Context(this.chain.slice(), this.nextRuleModifiers.slice());\n    }\n  }, {\n    key: \"test\",\n    value: function test(value) {\n      return this.chain.every(function (rule) {\n        return rule._test(value);\n      });\n    }\n  }, {\n    key: \"testAll\",\n    value: function testAll(value) {\n      var err = [];\n      this.chain.forEach(function (rule) {\n        try {\n          rule._check(value);\n        } catch (ex) {\n          err.push(new ValidationError(rule, value, ex));\n        }\n      });\n      return err;\n    }\n  }, {\n    key: \"check\",\n    value: function check(value) {\n      this.chain.forEach(function (rule) {\n        try {\n          rule._check(value);\n        } catch (ex) {\n          throw new ValidationError(rule, value, ex);\n        }\n      });\n    }\n  }, {\n    key: \"testAsync\",\n    value: function testAsync(value) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        executeAsyncRules(value, _this2.chain.slice(), resolve, reject);\n      });\n    }\n  }]);\n  return Context;\n}();\n\nfunction executeAsyncRules(value, rules, resolve, reject) {\n  if (rules.length) {\n    var rule = rules.shift();\n    rule._testAsync(value).then(function () {\n      executeAsyncRules(value, rules, resolve, reject);\n    }, function (cause) {\n      reject(new ValidationError(rule, value, cause));\n    });\n  } else {\n    resolve(value);\n  }\n}\n\nfunction v8n() {\n  return proxyContext(new Context());\n}\n\n// Custom rules\nvar customRules = {};\n\nv8n.extend = function (newRules) {\n  Object.assign(customRules, newRules);\n};\n\nv8n.clearCustomRules = function () {\n  customRules = {};\n};\n\nfunction proxyContext(context) {\n  return new Proxy(context, {\n    get: function get(obj, prop) {\n      if (prop in obj) {\n        return obj[prop];\n      }\n\n      var newContext = proxyContext(context._clone());\n\n      if (prop in availableModifiers) {\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      }\n      if (prop in customRules) {\n        return newContext._applyRule(customRules[prop], prop);\n      }\n      if (prop in availableRules) {\n        return newContext._applyRule(availableRules[prop], prop);\n      }\n    }\n  });\n}\n\nvar availableModifiers = {\n  not: {\n    simple: function simple(fn) {\n      return function (value) {\n        return !fn(value);\n      };\n    },\n    async: function async(fn) {\n      return function (value) {\n        return Promise.resolve(fn(value)).then(function (result) {\n          return !result;\n        }).catch(function (e) {\n          return true;\n        });\n      };\n    }\n  },\n\n  some: {\n    simple: function simple(fn) {\n      return function (value) {\n        return split(value).some(function (item) {\n          try {\n            return fn(item);\n          } catch (ex) {\n            return false;\n          }\n        });\n      };\n    },\n    async: function async(fn) {\n      return function (value) {\n        return Promise.all(split(value).map(function (item) {\n          try {\n            return fn(item).catch(function (e) {\n              return false;\n            });\n          } catch (ex) {\n            return false;\n          }\n        })).then(function (result) {\n          return result.some(Boolean);\n        });\n      };\n    }\n  },\n\n  every: {\n    simple: function simple(fn) {\n      return function (value) {\n        return split(value).every(fn);\n      };\n    },\n    async: function async(fn) {\n      return function (value) {\n        return Promise.all(split(value).map(fn)).then(function (result) {\n          return result.every(Boolean);\n        });\n      };\n    }\n  }\n};\n\nfunction split(value) {\n  if (typeof value === \"string\") {\n    return value.split(\"\");\n  }\n  return value;\n}\n\nvar availableRules = {\n  // Value\n\n  equal: function equal(expected) {\n    return function (value) {\n      return value == expected;\n    };\n  },\n\n  exact: function exact(expected) {\n    return function (value) {\n      return value === expected;\n    };\n  },\n\n  // Types\n\n  number: function number() {\n    var allowInfinite = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (value) {\n      return typeof value === \"number\" && (allowInfinite || isFinite(value));\n    };\n  },\n\n  integer: function integer() {\n    return function (value) {\n      var isInteger = Number.isInteger || isIntegerPolyfill;\n      return isInteger(value);\n    };\n  },\n\n  numeric: function numeric() {\n    return function (value) {\n      return !isNaN(parseFloat(value)) && isFinite(value);\n    };\n  },\n\n  string: function string() {\n    return testType(\"string\");\n  },\n\n  boolean: function boolean() {\n    return testType(\"boolean\");\n  },\n\n  undefined: function undefined() {\n    return testType(\"undefined\");\n  },\n\n  null: function _null() {\n    return testType(\"null\");\n  },\n\n  array: function array() {\n    return testType(\"array\");\n  },\n\n  object: function object() {\n    return testType(\"object\");\n  },\n\n  instanceOf: function instanceOf(instance) {\n    return function (value) {\n      return value instanceof instance;\n    };\n  },\n\n  // Pattern\n\n  pattern: function pattern(expected) {\n    return function (value) {\n      return expected.test(value);\n    };\n  },\n\n  lowercase: function lowercase() {\n    return function (value) {\n      return (/^([a-z]+\\s*)+$/.test(value)\n      );\n    };\n  },\n\n  uppercase: function uppercase() {\n    return function (value) {\n      return (/^([A-Z]+\\s*)+$/.test(value)\n      );\n    };\n  },\n\n  vowel: function vowel() {\n    return function (value) {\n      return (/^[aeiou]+$/i.test(value)\n      );\n    };\n  },\n\n  consonant: function consonant() {\n    return function (value) {\n      return (/^(?=[^aeiou])([a-z]+)$/i.test(value)\n      );\n    };\n  },\n\n  // Value at\n\n  first: function first(expected) {\n    return function (value) {\n      return value[0] == expected;\n    };\n  },\n\n  last: function last(expected) {\n    return function (value) {\n      return value[value.length - 1] == expected;\n    };\n  },\n\n  // Length\n\n  empty: function empty() {\n    return function (value) {\n      return value.length === 0;\n    };\n  },\n\n  length: function length(min, max) {\n    return function (value) {\n      return value.length >= min && value.length <= (max || min);\n    };\n  },\n\n  minLength: function minLength(min) {\n    return function (value) {\n      return value.length >= min;\n    };\n  },\n\n  maxLength: function maxLength(max) {\n    return function (value) {\n      return value.length <= max;\n    };\n  },\n\n  // Range\n\n  negative: function negative() {\n    return function (value) {\n      return value < 0;\n    };\n  },\n\n  positive: function positive() {\n    return function (value) {\n      return value >= 0;\n    };\n  },\n\n  between: function between(a, b) {\n    return function (value) {\n      return value >= a && value <= b;\n    };\n  },\n\n  range: function range(a, b) {\n    return function (value) {\n      return value >= a && value <= b;\n    };\n  },\n\n  lessThan: function lessThan(n) {\n    return function (value) {\n      return value < n;\n    };\n  },\n\n  lessThanOrEqual: function lessThanOrEqual(n) {\n    return function (value) {\n      return value <= n;\n    };\n  },\n\n  greaterThan: function greaterThan(n) {\n    return function (value) {\n      return value > n;\n    };\n  },\n\n  greaterThanOrEqual: function greaterThanOrEqual(n) {\n    return function (value) {\n      return value >= n;\n    };\n  },\n\n  // Divisible\n\n  even: function even() {\n    return function (value) {\n      return value % 2 === 0;\n    };\n  },\n\n  odd: function odd() {\n    return function (value) {\n      return value % 2 !== 0;\n    };\n  },\n\n  includes: function includes(expected) {\n    return function (value) {\n      return ~value.indexOf(expected);\n    };\n  },\n\n  schema: function schema(_schema) {\n    return testSchema(_schema);\n  },\n\n  // branching\n\n  passesAnyOf: function passesAnyOf() {\n    for (var _len = arguments.length, validations = Array(_len), _key = 0; _key < _len; _key++) {\n      validations[_key] = arguments[_key];\n    }\n\n    return function (value) {\n      return validations.some(function (validation) {\n        return validation.test(value);\n      });\n    };\n  },\n\n  optional: function optional(validation) {\n    var considerTrimmedEmptyString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return function (value) {\n      if (considerTrimmedEmptyString && typeof value === \"string\" && value.trim() === \"\") {\n        return true;\n      }\n\n      if (value !== undefined && value !== null) validation.check(value);\n      return true;\n    };\n  }\n};\n\nfunction testType(expected) {\n  return function (value) {\n    return Array.isArray(value) && expected === \"array\" || value === null && expected === \"null\" || typeof value === expected;\n  };\n}\n\nfunction isIntegerPolyfill(value) {\n  return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction testSchema(schema) {\n  return {\n    simple: function simple(value) {\n      var causes = [];\n      Object.keys(schema).forEach(function (key) {\n        var nestedValidation = schema[key];\n        try {\n          nestedValidation.check((value || {})[key]);\n        } catch (ex) {\n          ex.target = key;\n          causes.push(ex);\n        }\n      });\n      if (causes.length > 0) {\n        throw causes;\n      }\n      return true;\n    },\n    async: function async(value) {\n      var causes = [];\n      var nested = Object.keys(schema).map(function (key) {\n        var nestedValidation = schema[key];\n        return nestedValidation.testAsync((value || {})[key]).catch(function (ex) {\n          ex.target = key;\n          causes.push(ex);\n        });\n      });\n      return Promise.all(nested).then(function (values) {\n        if (causes.length > 0) {\n          throw causes;\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nexport default v8n;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.adapter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n\n},{}],3:[function(require,module,exports){\n(function (global){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar adapterFactory = require('./adapter_factory.js');\nmodule.exports = adapterFactory({window: global.window});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./adapter_factory.js\":4}],4:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar utils = require('./utils');\n// Shimming starts here.\nmodule.exports = function(dependencies, opts) {\n  var window = dependencies && dependencies.window;\n\n  var options = {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true,\n  };\n\n  for (var key in opts) {\n    if (hasOwnProperty.call(opts, key)) {\n      options[key] = opts[key];\n    }\n  }\n\n  // Utils.\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n\n  // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n\n  // Browser shims.\n  var chromeShim = require('./chrome/chrome_shim') || null;\n  var edgeShim = require('./edge/edge_shim') || null;\n  var firefoxShim = require('./firefox/firefox_shim') || null;\n  var safariShim = require('./safari/safari_shim') || null;\n  var commonShim = require('./common_shim') || null;\n\n  // Export to the adapter global object visible in the browser.\n  var adapter = {\n    browserDetails: browserDetails,\n    commonShim: commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimSourceObject(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n      commonShim.shimCreateObjectURL(window);\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimSourceObject(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n      edgeShim.shimGetDisplayMedia(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n      commonShim.shimCreateObjectURL(window);\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n};\n\n},{\"./chrome/chrome_shim\":5,\"./common_shim\":7,\"./edge/edge_shim\":1,\"./firefox/firefox_shim\":8,\"./safari/safari_shim\":10,\"./utils\":11}],5:[function(require,module,exports){\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n/* iterates the stats graph recursively. */\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(function(name) {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(function(id) {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nfunction filterStats(result, track, outbound) {\n  var streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  var filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  var trackStats = [];\n  result.forEach(function(value) {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(function(trackStat) {\n    result.forEach(function(stats) {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimMediaStream: function(window) {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n          }\n          this.addEventListener('track', this._ontrack = f);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!pc._ontrackpoly) {\n          pc._ontrackpoly = function(e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function(te) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === te.track.id;\n                });\n              } else {\n                receiver = {track: te.track};\n              }\n\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function(track) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === track.id;\n                });\n              } else {\n                receiver = {track: track};\n              }\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n          };\n          pc.addEventListener('addstream', pc._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    } else {\n      // even if RTCRtpTransceiver is in window, it is only used and\n      // emitted in unified-plan. Unfortunately this means we need\n      // to unconditionally wrap the event.\n      utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n        if (!e.transceiver) {\n          Object.defineProperty(e, 'transceiver',\n            {value: {receiver: e.receiver}});\n        }\n        return e;\n      });\n    }\n  },\n\n  shimGetSendersWithDtmf: function(window) {\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\n      var shimSenderWithDtmf = function(pc, track) {\n        return {\n          track: track,\n          get dtmf() {\n            if (this._dtmf === undefined) {\n              if (track.kind === 'audio') {\n                this._dtmf = pc.createDTMFSender(track);\n              } else {\n                this._dtmf = null;\n              }\n            }\n            return this._dtmf;\n          },\n          _pc: pc\n        };\n      };\n\n      // augment addTrack when getSenders is not available.\n      if (!window.RTCPeerConnection.prototype.getSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          this._senders = this._senders || [];\n          return this._senders.slice(); // return a copy of the internal state.\n        };\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n          var pc = this;\n          var sender = origAddTrack.apply(pc, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(pc, track);\n            pc._senders.push(sender);\n          }\n          return sender;\n        };\n\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n          var pc = this;\n          origRemoveTrack.apply(pc, arguments);\n          var idx = pc._senders.indexOf(sender);\n          if (idx !== -1) {\n            pc._senders.splice(idx, 1);\n          }\n        };\n      }\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origAddStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function(track) {\n          pc._senders.push(shimSenderWithDtmf(pc, track));\n        });\n      };\n\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origRemoveStream.apply(pc, [stream]);\n\n        stream.getTracks().forEach(function(track) {\n          var sender = pc._senders.find(function(s) {\n            return s.track === track;\n          });\n          if (sender) {\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n          }\n        });\n      };\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\n               'getSenders' in window.RTCPeerConnection.prototype &&\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\n               window.RTCRtpSender &&\n               !('dtmf' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = this._pc.createDTMFSender(this.track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n  },\n\n  shimSenderReceiverGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender && window.RTCRtpReceiver)) {\n      return;\n    }\n\n    // shim sender stats.\n    if (!('getStats' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      if (origGetSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          var pc = this;\n          var senders = origGetSenders.apply(pc, []);\n          senders.forEach(function(sender) {\n            sender._pc = pc;\n          });\n          return senders;\n        };\n      }\n\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      if (origAddTrack) {\n        window.RTCPeerConnection.prototype.addTrack = function() {\n          var sender = origAddTrack.apply(this, arguments);\n          sender._pc = this;\n          return sender;\n        };\n      }\n      window.RTCRtpSender.prototype.getStats = function() {\n        var sender = this;\n        return this._pc.getStats().then(function(result) {\n          /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n          return filterStats(result, sender.track, true);\n        });\n      };\n    }\n\n    // shim receiver stats.\n    if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n      var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n      if (origGetReceivers) {\n        window.RTCPeerConnection.prototype.getReceivers = function() {\n          var pc = this;\n          var receivers = origGetReceivers.apply(pc, []);\n          receivers.forEach(function(receiver) {\n            receiver._pc = pc;\n          });\n          return receivers;\n        };\n      }\n      utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n        e.receiver._pc = e.srcElement;\n        return e;\n      });\n      window.RTCRtpReceiver.prototype.getStats = function() {\n        var receiver = this;\n        return this._pc.getStats().then(function(result) {\n          return filterStats(result, receiver.track, false);\n        });\n      };\n    }\n\n    if (!('getStats' in window.RTCRtpSender.prototype &&\n        'getStats' in window.RTCRtpReceiver.prototype)) {\n      return;\n    }\n\n    // shim RTCPeerConnection.getStats(track).\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function() {\n      var pc = this;\n      if (arguments.length > 0 &&\n          arguments[0] instanceof window.MediaStreamTrack) {\n        var track = arguments[0];\n        var sender;\n        var receiver;\n        var err;\n        pc.getSenders().forEach(function(s) {\n          if (s.track === track) {\n            if (sender) {\n              err = true;\n            } else {\n              sender = s;\n            }\n          }\n        });\n        pc.getReceivers().forEach(function(r) {\n          if (r.track === track) {\n            if (receiver) {\n              err = true;\n            } else {\n              receiver = r;\n            }\n          }\n          return r.track === track;\n        });\n        if (err || (sender && receiver)) {\n          return Promise.reject(new DOMException(\n            'There are more than one sender or receiver for the track.',\n            'InvalidAccessError'));\n        } else if (sender) {\n          return sender.getStats();\n        } else if (receiver) {\n          return receiver.getStats();\n        }\n        return Promise.reject(new DOMException(\n          'There is no sender or receiver for the track.',\n          'InvalidAccessError'));\n      }\n      return origGetStats.apply(pc, arguments);\n    };\n  },\n\n  shimSourceObject: function(window) {\n    var URL = window && window.URL;\n\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this._srcObject;\n          },\n          set: function(stream) {\n            var self = this;\n            // Use _srcObject as a private property for this shim\n            this._srcObject = stream;\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return undefined;\n            }\n            this.src = URL.createObjectURL(stream);\n            // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n            stream.addEventListener('addtrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n\n  shimAddTrackRemoveTrackWithNative: function(window) {\n    // shim addTrack/removeTrack with native variants in order to make\n    // the interactions with legacy getLocalStreams behave as in other browsers.\n    // Keeps a mapping stream.id => [stream, rtpsenders...]\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams).map(function(streamId) {\n        return pc._shimmedLocalStreams[streamId][0];\n      });\n    };\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      var sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      var existingSenders = pc.getSenders();\n      origAddStream.apply(this, arguments);\n      var newSenders = pc.getSenders().filter(function(newSender) {\n        return existingSenders.indexOf(newSender) === -1;\n      });\n      this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n    var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(function(streamId) {\n          var idx = pc._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            pc._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (pc._shimmedLocalStreams[streamId].length === 1) {\n            delete pc._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n  },\n\n  shimAddTrackRemoveTrack: function(window) {\n    if (!window.RTCPeerConnection) {\n      return;\n    }\n    var browserDetails = utils.detectBrowser(window);\n    // shim addTrack and removeTrack.\n    if (window.RTCPeerConnection.prototype.addTrack &&\n        browserDetails.version >= 65) {\n      return this.shimAddTrackRemoveTrackWithNative(window);\n    }\n\n    // also shim pc.getLocalStreams when addTrack is shimmed\n    // to return the original streams.\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\n        .getLocalStreams;\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var pc = this;\n      var nativeStreams = origGetLocalStreams.apply(this);\n      pc._reverseStreams = pc._reverseStreams || {};\n      return nativeStreams.map(function(stream) {\n        return pc._reverseStreams[stream.id];\n      });\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      // Add identity mapping for consistency with addTrack.\n      // Unless this is being used with a stream from addTrack.\n      if (!pc._reverseStreams[stream.id]) {\n        var newStream = new window.MediaStream(stream.getTracks());\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        stream = newStream;\n      }\n      origAddStream.apply(pc, [stream]);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\n          pc._streams[stream.id].id : stream.id)];\n      delete pc._streams[stream.id];\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      var streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(function(t) {\n            return t === track;\n          })) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      var alreadyExists = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      var oldStream = pc._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(function() {\n          pc.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        var newStream = new window.MediaStream([track]);\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        pc.addStream(newStream);\n      }\n      return pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n    };\n\n    // replace the internal stream id with the external one and\n    // vice versa.\n    function replaceInternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n            externalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    function replaceExternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n            internalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    ['createOffer', 'createAnswer'].forEach(function(method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      window.RTCPeerConnection.prototype[method] = function() {\n        var pc = this;\n        var args = arguments;\n        var isLegacyCall = arguments.length &&\n            typeof arguments[0] === 'function';\n        if (isLegacyCall) {\n          return nativeMethod.apply(pc, [\n            function(description) {\n              var desc = replaceInternalStreamId(pc, description);\n              args[0].apply(null, [desc]);\n            },\n            function(err) {\n              if (args[1]) {\n                args[1].apply(null, err);\n              }\n            }, arguments[2]\n          ]);\n        }\n        return nativeMethod.apply(pc, arguments)\n        .then(function(description) {\n          return replaceInternalStreamId(pc, description);\n        });\n      };\n    });\n\n    var origSetLocalDescription =\n        window.RTCPeerConnection.prototype.setLocalDescription;\n    window.RTCPeerConnection.prototype.setLocalDescription = function() {\n      var pc = this;\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(pc, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\n      return origSetLocalDescription.apply(pc, arguments);\n    };\n\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n    var origLocalDescription = Object.getOwnPropertyDescriptor(\n        window.RTCPeerConnection.prototype, 'localDescription');\n    Object.defineProperty(window.RTCPeerConnection.prototype,\n        'localDescription', {\n          get: function() {\n            var pc = this;\n            var description = origLocalDescription.get.apply(this);\n            if (description.type === '') {\n              return description;\n            }\n            return replaceInternalStreamId(pc, description);\n          }\n        });\n\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      var isLocal = sender._pc === pc;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      pc._streams = pc._streams || {};\n      var stream;\n      Object.keys(pc._streams).forEach(function(streamid) {\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\n          return sender.track === track;\n        });\n        if (hasTrack) {\n          stream = pc._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          pc.removeStream(pc._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        pc.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\n        logging('PeerConnection');\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.webkitRTCPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      if (window.webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n    }\n    if (!window.RTCPeerConnection) {\n      return;\n    }\n\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(selector,\n        successCallback, errorCallback) {\n      var pc = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats.apply(this, arguments);\n      }\n\n      // When spec-style getStats is supported, return those when called with\n      // either no arguments or the selector argument is null.\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\n          typeof arguments[0] !== 'function')) {\n        return origGetStats.apply(this, []);\n      }\n\n      var fixChromeStats_ = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: {\n              localcandidate: 'local-candidate',\n              remotecandidate: 'remote-candidate'\n            }[report.type] || report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        return new Map(Object.keys(stats).map(function(key) {\n          return [key, stats[key]];\n        }));\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper_ = function(response) {\n          args[1](makeMapStats(fixChromeStats_(response)));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper_,\n          arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        origGetStats.apply(pc, [\n          function(response) {\n            resolve(makeMapStats(fixChromeStats_(response)));\n          }, reject]);\n      }).then(successCallback, errorCallback);\n    };\n\n    // add promise support -- natively available in Chrome 51\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\n            window.RTCPeerConnection.prototype[method] = function() {\n              var args = arguments;\n              var pc = this;\n              var promise = new Promise(function(resolve, reject) {\n                nativeMethod.apply(pc, [args[0], resolve, reject]);\n              });\n              if (args.length < 2) {\n                return promise;\n              }\n              return promise.then(function() {\n                args[1].apply(null, []);\n              },\n              function(err) {\n                if (args.length >= 3) {\n                  args[2].apply(null, [err]);\n                }\n              });\n            };\n          });\n    }\n\n    // promise support for createOffer and createAnswer. Available (without\n    // bugs) since M52: crbug/619289\n    if (browserDetails.version < 52) {\n      ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          var pc = this;\n          if (arguments.length < 1 || (arguments.length === 1 &&\n              typeof arguments[0] === 'object')) {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function(resolve, reject) {\n              nativeMethod.apply(pc, [resolve, reject, opts]);\n            });\n          }\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n    }\n\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  },\n\n  fixNegotiationNeeded: function(window) {\n    utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function(e) {\n      var pc = e.target;\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n      return e;\n    });\n  },\n\n  shimGetDisplayMedia: function(window, getSourceId) {\n    if (!window.navigator || !window.navigator.mediaDevices ||\n        'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n    // getSourceId is a function that returns a promise resolving with\n    // the sourceId of the screen/window/tab to be shared.\n    if (typeof getSourceId !== 'function') {\n      console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n          'a function');\n      return;\n    }\n    window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n      return getSourceId(constraints)\n        .then(function(sourceId) {\n          var widthSpecified = constraints.video && constraints.video.width;\n          var heightSpecified = constraints.video && constraints.video.height;\n          var frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n    window.navigator.getDisplayMedia = function(constraints) {\n      utils.deprecated('navigator.getDisplayMedia',\n          'navigator.mediaDevices.getDisplayMedia');\n      return window.navigator.mediaDevices.getDisplayMedia(constraints);\n    };\n  }\n};\n\n},{\"../utils.js\":11,\"./getusermedia\":6}],6:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n\n  var constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      var remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(function(devices) {\n            devices = devices.filter(function(d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function(d) {\n              return matches.some(function(match) {\n                return d.label.toLowerCase().indexOf(match) !== -1;\n              });\n            });\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function(c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_;\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return window.MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                kind: kinds[device.kind],\n                deviceId: device.id,\n                groupId: ''};\n            }));\n          });\n        });\n      },\n      getSupportedConstraints: function() {\n        return {\n          deviceId: true, echoCancellation: true, facingMode: true,\n          frameRate: true, height: true, width: true\n        };\n      }\n    };\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, function(c) {\n        return origGetUserMedia(c).then(function(stream) {\n          if (c.audio && !stream.getAudioTracks().length ||\n              c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function(track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n\n},{\"../utils.js\":11}],7:[function(require,module,exports){\n/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nvar utils = require('./utils');\n\nmodule.exports = {\n  shimRTCIceCandidate: function(window) {\n    // foundation is arbitrarily chosen as an indicator for full support for\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n    if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n        window.RTCIceCandidate.prototype)) {\n      return;\n    }\n\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\n    window.RTCIceCandidate = function(args) {\n      // Remove the a= which shouldn't be part of the candidate string.\n      if (typeof args === 'object' && args.candidate &&\n          args.candidate.indexOf('a=') === 0) {\n        args = JSON.parse(JSON.stringify(args));\n        args.candidate = args.candidate.substr(2);\n      }\n\n      if (args.candidate && args.candidate.length) {\n        // Augment the native candidate with the parsed fields.\n        var nativeCandidate = new NativeRTCIceCandidate(args);\n        var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n        var augmentedCandidate = Object.assign(nativeCandidate,\n            parsedCandidate);\n\n        // Add a serializer that does not serialize the extra attributes.\n        augmentedCandidate.toJSON = function() {\n          return {\n            candidate: augmentedCandidate.candidate,\n            sdpMid: augmentedCandidate.sdpMid,\n            sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n            usernameFragment: augmentedCandidate.usernameFragment,\n          };\n        };\n        return augmentedCandidate;\n      }\n      return new NativeRTCIceCandidate(args);\n    };\n    window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n    // Hook up the augmented candidate in onicecandidate and\n    // addEventListener('icecandidate', ...)\n    utils.wrapPeerConnectionEvent(window, 'icecandidate', function(e) {\n      if (e.candidate) {\n        Object.defineProperty(e, 'candidate', {\n          value: new window.RTCIceCandidate(e.candidate),\n          writable: 'false'\n        });\n      }\n      return e;\n    });\n  },\n\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n\n  shimCreateObjectURL: function(window) {\n    var URL = window && window.URL;\n\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\n          'srcObject' in window.HTMLMediaElement.prototype &&\n        URL.createObjectURL && URL.revokeObjectURL)) {\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\n      return undefined;\n    }\n\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n    var streams = new Map(), newId = 0;\n\n    URL.createObjectURL = function(stream) {\n      if ('getTracks' in stream) {\n        var url = 'polyblob:' + (++newId);\n        streams.set(url, stream);\n        utils.deprecated('URL.createObjectURL(stream)',\n            'elem.srcObject = stream');\n        return url;\n      }\n      return nativeCreateObjectURL(stream);\n    };\n    URL.revokeObjectURL = function(url) {\n      nativeRevokeObjectURL(url);\n      streams.delete(url);\n    };\n\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\n                                              'src');\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n      get: function() {\n        return dsc.get.apply(this);\n      },\n      set: function(url) {\n        this.srcObject = streams.get(url) || null;\n        return dsc.set.apply(this, [url]);\n      }\n    });\n\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\n    window.HTMLMediaElement.prototype.setAttribute = function() {\n      if (arguments.length === 2 &&\n          ('' + arguments[0]).toLowerCase() === 'src') {\n        this.srcObject = streams.get(arguments[1]) || null;\n      }\n      return nativeSetAttribute.apply(this, arguments);\n    };\n  },\n\n  shimMaxMessageSize: function(window) {\n    if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n      return;\n    }\n    var browserDetails = utils.detectBrowser(window);\n\n    if (!('sctp' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n        get: function() {\n          return typeof this._sctp === 'undefined' ? null : this._sctp;\n        }\n      });\n    }\n\n    var sctpInDescription = function(description) {\n      var sections = SDPUtils.splitSections(description.sdp);\n      sections.shift();\n      return sections.some(function(mediaSection) {\n        var mLine = SDPUtils.parseMLine(mediaSection);\n        return mLine && mLine.kind === 'application'\n            && mLine.protocol.indexOf('SCTP') !== -1;\n      });\n    };\n\n    var getRemoteFirefoxVersion = function(description) {\n      // TODO: Is there a better solution for detecting Firefox?\n      var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n      if (match === null || match.length < 2) {\n        return -1;\n      }\n      var version = parseInt(match[1], 10);\n      // Test for NaN (yes, this is ugly)\n      return version !== version ? -1 : version;\n    };\n\n    var getCanSendMaxMessageSize = function(remoteIsFirefox) {\n      // Every implementation we know can send at least 64 KiB.\n      // Note: Although Chrome is technically able to send up to 256 KiB, the\n      //       data does not reach the other peer reliably.\n      //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n      var canSendMaxMessageSize = 65536;\n      if (browserDetails.browser === 'firefox') {\n        if (browserDetails.version < 57) {\n          if (remoteIsFirefox === -1) {\n            // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n            // fragmentation.\n            canSendMaxMessageSize = 16384;\n          } else {\n            // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n            // messages. Thus, supporting ~2 GiB when sending.\n            canSendMaxMessageSize = 2147483637;\n          }\n        } else if (browserDetails.version < 60) {\n          // Currently, all FF >= 57 will reset the remote maximum message size\n          // to the default value when a data channel is created at a later\n          // stage. :(\n          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n          canSendMaxMessageSize =\n            browserDetails.version === 57 ? 65535 : 65536;\n        } else {\n          // FF >= 60 supports sending ~2 GiB\n          canSendMaxMessageSize = 2147483637;\n        }\n      }\n      return canSendMaxMessageSize;\n    };\n\n    var getMaxMessageSize = function(description, remoteIsFirefox) {\n      // Note: 65536 bytes is the default value from the SDP spec. Also,\n      //       every implementation we know supports receiving 65536 bytes.\n      var maxMessageSize = 65536;\n\n      // FF 57 has a slightly incorrect default remote max message size, so\n      // we need to adjust it here to avoid a failure when sending.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n      if (browserDetails.browser === 'firefox'\n           && browserDetails.version === 57) {\n        maxMessageSize = 65535;\n      }\n\n      var match = SDPUtils.matchPrefix(description.sdp, 'a=max-message-size:');\n      if (match.length > 0) {\n        maxMessageSize = parseInt(match[0].substr(19), 10);\n      } else if (browserDetails.browser === 'firefox' &&\n                  remoteIsFirefox !== -1) {\n        // If the maximum message size is not present in the remote SDP and\n        // both local and remote are Firefox, the remote peer can receive\n        // ~2 GiB.\n        maxMessageSize = 2147483637;\n      }\n      return maxMessageSize;\n    };\n\n    var origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      var pc = this;\n      pc._sctp = null;\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        var maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        var sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get: function() {\n            return maxMessageSize;\n          }\n        });\n        pc._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  },\n\n  shimSendThrowTypeError: function(window) {\n    if (!(window.RTCPeerConnection &&\n        'createDataChannel' in window.RTCPeerConnection.prototype)) {\n      return;\n    }\n\n    // Note: Although Firefox >= 57 has a native implementation, the maximum\n    //       message size can be reset for all data channels at a later stage.\n    //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n    function wrapDcSend(dc, pc) {\n      var origDataChannelSend = dc.send;\n      dc.send = function() {\n        var data = arguments[0];\n        var length = data.length || data.size || data.byteLength;\n        if (dc.readyState === 'open' &&\n            pc.sctp && length > pc.sctp.maxMessageSize) {\n          throw new TypeError('Message too large (can send a maximum of ' +\n            pc.sctp.maxMessageSize + ' bytes)');\n        }\n        return origDataChannelSend.apply(dc, arguments);\n      };\n    }\n    var origCreateDataChannel =\n      window.RTCPeerConnection.prototype.createDataChannel;\n    window.RTCPeerConnection.prototype.createDataChannel = function() {\n      var pc = this;\n      var dataChannel = origCreateDataChannel.apply(pc, arguments);\n      wrapDcSend(dataChannel, pc);\n      return dataChannel;\n    };\n    utils.wrapPeerConnectionEvent(window, 'datachannel', function(e) {\n      wrapDcSend(e.channel, e.target);\n      return e;\n    });\n  }\n};\n\n},{\"./utils\":11,\"sdp\":2}],8:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.transceiver = {receiver: event.receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n    if (typeof window === 'object' && window.RTCTrackEvent &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        !('transceiver' in window.RTCTrackEvent.prototype)) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this.mozSrcObject;\n          },\n          set: function(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n        window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    }\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.mozRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (window.mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\n    }\n\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function(stats) {\n      var map = new Map();\n      Object.keys(stats).forEach(function(key) {\n        map.set(key, stats[key]);\n        map[key] = stats[key];\n      });\n      return map;\n    };\n\n    var modernStatsTypes = {\n      inboundrtp: 'inbound-rtp',\n      outboundrtp: 'outbound-rtp',\n      candidatepair: 'candidate-pair',\n      localcandidate: 'local-candidate',\n      remotecandidate: 'remote-candidate'\n    };\n\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(\n      selector,\n      onSucc,\n      onErr\n    ) {\n      return nativeGetStats.apply(this, [selector || null])\n        .then(function(stats) {\n          if (browserDetails.version < 48) {\n            stats = makeMapStats(stats);\n          }\n          if (browserDetails.version < 53 && !onSucc) {\n            // Shim only promise getStats with spec-hyphens in type names\n            // Leave callback version alone; misc old uses of forEach before Map\n            try {\n              stats.forEach(function(stat) {\n                stat.type = modernStatsTypes[stat.type] || stat.type;\n              });\n            } catch (e) {\n              if (e.name !== 'TypeError') {\n                throw e;\n              }\n              // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n              stats.forEach(function(stat, i) {\n                stats.set(i, Object.assign({}, stat, {\n                  type: modernStatsTypes[stat.type] || stat.type\n                }));\n              });\n            }\n          }\n          return stats;\n        })\n        .then(onSucc, onErr);\n    };\n  },\n\n  shimSenderGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender)) {\n      return;\n    }\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n      return;\n    }\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n    }\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function() {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function() {\n      return this.track ? this._pc.getStats(this.track) :\n          Promise.resolve(new Map());\n    };\n  },\n\n  shimReceiverGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender)) {\n      return;\n    }\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n      return;\n    }\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function() {\n        var pc = this;\n        var receivers = origGetReceivers.apply(pc, []);\n        receivers.forEach(function(receiver) {\n          receiver._pc = pc;\n        });\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function() {\n      return this._pc.getStats(this.track);\n    };\n  },\n\n  shimRemoveStream: function(window) {\n    if (!window.RTCPeerConnection ||\n        'removeStream' in window.RTCPeerConnection.prototype) {\n      return;\n    }\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(function(sender) {\n        if (sender.track && stream.getTracks().indexOf(sender.track) !== -1) {\n          pc.removeTrack(sender);\n        }\n      });\n    };\n  },\n\n  shimRTCDataChannel: function(window) {\n    // rename DataChannel to RTCDataChannel (native fix in FF60):\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n    if (window.DataChannel && !window.RTCDataChannel) {\n      window.RTCDataChannel = window.DataChannel;\n    }\n  },\n\n  shimGetDisplayMedia: function(window, preferredMediaSource) {\n    if (!window.navigator || !window.navigator.mediaDevices ||\n        'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n    window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n      if (!(constraints && constraints.video)) {\n        var err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n    window.navigator.getDisplayMedia = function(constraints) {\n      utils.deprecated('navigator.getDisplayMedia',\n          'navigator.mediaDevices.getDisplayMedia');\n      return window.navigator.mediaDevices.getDisplayMedia(constraints);\n    };\n  }\n};\n\n},{\"../utils\":11,\"./getusermedia\":9}],9:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        InternalError: 'NotReadableError',\n        NotSupportedError: 'TypeError',\n        PermissionDeniedError: 'NotAllowedError',\n        SecurityError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' +\n        'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  // getUserMedia constraints shim.\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r. min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n      onError(shimError_(e));\n    });\n  };\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  };\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n        return new Promise(function(resolve) {\n          var infos = [\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n          ];\n          resolve(infos);\n        });\n      };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).then(function(stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function(track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.',\n                                 'NotFoundError');\n        }\n        return stream;\n      }, function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    }\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n\n},{\"../utils\":11}],10:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nvar utils = require('../utils');\n\nmodule.exports = {\n  shimLocalStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n    }\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\n        var result = null;\n        if (this._localStreams) {\n          this._localStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        if (this._remoteStreams) {\n          this._remoteStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        return result;\n      };\n    }\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        if (this._localStreams.indexOf(stream) === -1) {\n          this._localStreams.push(stream);\n        }\n        var pc = this;\n        stream.getTracks().forEach(function(track) {\n          _addTrack.call(pc, track, stream);\n        });\n      };\n\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (this._localStreams.indexOf(stream) === -1) {\n            this._localStreams.push(stream);\n          }\n        }\n        return _addTrack.call(this, track, stream);\n      };\n    }\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        var index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        var pc = this;\n        var tracks = stream.getTracks();\n        this.getSenders().forEach(function(sender) {\n          if (tracks.indexOf(sender.track) !== -1) {\n            pc.removeTrack(sender);\n          }\n        });\n      };\n    }\n  },\n  shimRemoteStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n    }\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n        get: function() {\n          return this._onaddstream;\n        },\n        set: function(f) {\n          if (this._onaddstream) {\n            this.removeEventListener('addstream', this._onaddstream);\n          }\n          this.addEventListener('addstream', this._onaddstream = f);\n        }\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(function(stream) {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              var event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    }\n  },\n  shimCallbacksAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    var prototype = window.RTCPeerConnection.prototype;\n    var createOffer = prototype.createOffer;\n    var createAnswer = prototype.createAnswer;\n    var setLocalDescription = prototype.setLocalDescription;\n    var setRemoteDescription = prototype.setRemoteDescription;\n    var addIceCandidate = prototype.addIceCandidate;\n\n    prototype.createOffer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.createAnswer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    var withCallback = function(description, successCallback, failureCallback) {\n      var promise = setLocalDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setLocalDescription = withCallback;\n\n    withCallback = function(description, successCallback, failureCallback) {\n      var promise = setRemoteDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setRemoteDescription = withCallback;\n\n    withCallback = function(candidate, successCallback, failureCallback) {\n      var promise = addIceCandidate.apply(this, [candidate]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.addIceCandidate = withCallback;\n  },\n  shimGetUserMedia: function(window) {\n    var navigator = window && window.navigator;\n\n    if (!navigator.getUserMedia) {\n      if (navigator.webkitGetUserMedia) {\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n      } else if (navigator.mediaDevices &&\n          navigator.mediaDevices.getUserMedia) {\n        navigator.getUserMedia = function(constraints, cb, errcb) {\n          navigator.mediaDevices.getUserMedia(constraints)\n          .then(cb, errcb);\n        }.bind(navigator);\n      }\n    }\n  },\n  shimRTCIceServerUrls: function(window) {\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n    var OrigPeerConnection = window.RTCPeerConnection;\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n    // wrap static methods. Currently just generateCertificate.\n    if ('generateCertificate' in window.RTCPeerConnection) {\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n  },\n  shimTrackEventTransceiver: function(window) {\n    // Add event.transceiver member over deprecated event.receiver\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n        // defined for some reason even when window.RTCTransceiver is not.\n        !window.RTCTransceiver) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimCreateOfferLegacy: function(window) {\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n    window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n      var pc = this;\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n        }\n        var audioTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'audio';\n        });\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          pc.addTransceiver('audio');\n        }\n\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n        }\n        var videoTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'video';\n        });\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            videoTransceiver.setDirection('sendonly');\n          } else if (videoTransceiver.direction === 'recvonly') {\n            videoTransceiver.setDirection('inactive');\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          pc.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(pc, arguments);\n    };\n  }\n};\n\n},{\"../utils\":11}],11:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nfunction extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    var wrappedCallback = function(e) {\n      var modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\n// Utility methods.\nmodule.exports = {\n  extractVersion: extractVersion,\n  wrapPeerConnectionEvent: wrapPeerConnectionEvent,\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function(oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n        ' instead.');\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function(window) {\n    var navigator = window && window.navigator;\n\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    if (navigator.mozGetUserMedia) { // Firefox.\n      result.browser = 'firefox';\n      result.version = extractVersion(navigator.userAgent,\n          /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera.\n      // Version matches Chrome/WebRTC version.\n      result.browser = 'chrome';\n      result.version = extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n      result.browser = 'edge';\n      result.version = extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (window.RTCPeerConnection &&\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n      result.browser = 'safari';\n      result.version = extractVersion(navigator.userAgent,\n          /AppleWebKit\\/(\\d+)\\./, 1);\n    } else { // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  }\n};\n\n},{}]},{},[3])(3)\n});\n","import { cloneDeep } from 'lodash/fp';\n\n/**\n * returns a function with params object\n * @param  {Array} An array of strings or objects representing the desired codecs to be removed,\n * can be passed in as a string or as objects with the following signature:\n *  [{\n *      name: 'codecname',\n *      fmtpParams: 'specific ftmp parameter target'\n *  }]\n * @return {Function}        [description]\n *\n * INSTRUCTIONS FOR EXPOSING FUNCTION TO UC VERSION OF THE SDK:\n * the following code will need to be added to the appropriate index files (ie: kandy.uc.js)\n * this will expose the createCodecRemover function in the browser\n    import createCodecRemover from '../../fcs/src/js/sdp/codecRemover';\n    kandy.sdpHandlers = {\n        createCodecRemover\n    };\n    module.exports = kandy;\n\n * INSTRUCTIONS USING RUNNING FUNCTION ONCE EXPOSED\n * From the browser Devtools run the following:\n * const codecRemover = createKandy.sdpHandlers.createCodecRemover(['VP8', 'VP9'])\n * const newSdp = codecRemover(<SDP Object>); // the incoming SDP object\n * console.log(newSdp)\n */\nexport default function createCodecRemover(codecs) {\n    if(!codecs){\n        codecs = [];\n    }\n    // We allow the user to pass in a codecs of objects or strings, so here we format the strings into objects for uniformity.\n    codecs = codecs.map(item => (typeof item === 'string' ? { name: item } : item));\n\n    return function(...params) {\n        // Adding support for new callstack sdp handlers\n        // Old callstack sdp pipeline passes an object to each sdp\n        // handler that contains the currentSdp\n        // New callstack passes 3 arguments to each sdp handler\n        // newSdp, info, originalSdp\n        let oldCallstack = true;\n        let currentSdp;\n        if (params[0].currentSdp) {\n            currentSdp = params[0].currentSdp;\n        } else if (params.length === 3) {\n            oldCallstack = false;\n            currentSdp = params[0];\n        }\n\n        let newSdp = cloneDeep(currentSdp);\n\n        // This is an array of strings representing codec names we want to remove.\n        let codecStringsToRemove = codecs.map(codec => codec.name);\n\n        newSdp.media.forEach(media => {\n            // This is an array of just the codes (codec payloads) that we FOR SURE want to remove.\n            let finalRemoveList = [];\n            // This is an array of RTP objects who have codecs that are the same as strings passed in via codecs.\n            let filteredRtp = [];\n\n            // If the current rtp.codec is in the codecStringsToRemove list, add the rtp to filteredRtp\n            filteredRtp = media.rtp.filter(rtp => codecStringsToRemove.includes(rtp.codec));\n\n            filteredRtp.forEach(rtp => {\n                // We grab the relevantCodec codecs object from the passed in codecs, based on the name string.\n                const relevantCodecs = codecs.filter(codec => codec.name === rtp.codec);\n\n                // We check the relevantCodec. If it is not present, then we have no codecs info for this specific rtp.\n                relevantCodecs.forEach(relevantCodec => {\n                    // If fmtpParams doesnt exist or is of length 0 then we assume we can remove all instances of this codec\n                    if (\n                        !relevantCodec.fmtpParams ||\n                        (relevantCodec.fmtpParams && relevantCodec.fmtpParams.length === 0)\n                    ) {\n                        // We want to delete this codec no matter what, since no fmtp params were included.\n                        finalRemoveList.push(rtp.payload);\n                    } else {\n                        // There are fmtp values for this codec. Therefore we have to check each media.fmtp object to see if it is the right one.\n                        // Then when we find the right fmtp object, we check its config to see if it has the parameters specified in the input.\n                        media.fmtp.forEach(fmtp => {\n                            // We check each iteration to see if we found the right fmtp object.\n                            if (fmtp.payload === rtp.payload) {\n                                // If we found the right fmtp object, we have to make sure each config param is in the fmtp.config.\n                                if (relevantCodec.fmtpParams.every(c => fmtp.config.includes(c))) {\n                                    finalRemoveList.push(rtp.payload);\n                                }\n                            }\n                        });\n                    }\n                });\n            });\n\n            // At this point we should have an array (finalRemoveList) that contains all ORIGINAL codec payloads that we need to remove.\n            // We now need to check fmtp for all rtx payloads ASSOCIATED with the original codec payload.\n            media.fmtp.forEach(fmtp => {\n                // Check if the config contains apt=, which indicates this fmtp is associated with another.\n                if (fmtp.config.includes('apt=')) {\n                    // If so, lets grab the whole string WITHOUT the apt= part, and convet it into an integer. This should be a payload number.\n                    var payload = parseInt(fmtp.config.replace('apt=', ''));\n\n                    // Check if the finalRemoveList contains the payload that this fmtp is associated with.\n                    if (finalRemoveList.includes(payload)) {\n                        // If so, then we need to add this fmtp.payload to the finalRemoveList\n                        finalRemoveList.push(fmtp.payload);\n                    }\n                }\n            });\n\n            // We assume past this point that the finalRemoveList is all powerful.\n            // For each codec in the media.payloads string, if it is in our finalRemoveList list, we remove it.\n            let isNumber = false;\n            if (typeof media.payloads === 'number') {\n                media.payloads = media.payloads.toString();\n                isNumber = true;\n            }\n            if (media.payloads) {\n                media.payloads = media.payloads\n                    .split(' ')\n                    .filter(payload => !finalRemoveList.includes(parseInt(payload)))\n                    .join(' ');\n            }\n            if (media.payloads && isNumber) {\n                media.payloads = parseInt(media.payloads);\n            }\n\n            // For each codec object, if the payload is in our filteredCodes list, we remove the object.\n            if (media.rtp) {\n                media.rtp = media.rtp.filter(rtp => !finalRemoveList.includes(rtp.payload));\n            }\n\n            if (media.fmtp) {\n                media.fmtp = media.fmtp.filter(fmtp => !finalRemoveList.includes(fmtp.payload));\n            }\n            if (media.rtcpFb) {\n                media.rtcpFb = media.rtcpFb.filter(\n                    rtcpFb => !finalRemoveList.includes(rtcpFb.payload)\n                );\n            }\n        });\n\n        // If old callstack, then return the results of the next sdp handler\n        // If new callstack, then just return the modified sdp\n        return oldCallstack ? params[0].next(newSdp) : newSdp;\n    };\n}\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn key => (result, value, index) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(',')];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;\n\t\t\t\tconst newValue = isArray ? value.split(',') : value;\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(param.replace(/\\+/g, ' '), '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\treturn Object.keys(ret).sort().reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = encoderForArrayFormat(options);\n\tconst keys = Object.keys(object);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: removeHash(input).split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","/**\n * Possible subscription states.\n * @name SUBSCRIPTION_STATE\n * @type {Object}\n */\nexport const SUBSCRIPTION_STATE = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n  NONE: 'NONE'\n}\n\n/**\n * Possible disconnect reasons.\n * @name DISCONNECT_REASONS\n * @type {Object}\n */\nexport const DISCONNECT_REASONS = {\n  GONE: 'GONE',\n  LOST_CONNECTION: 'LOST_CONNECTION'\n}\n","const prefix = '@@KANDY/'\n\nexport const CONNECT = prefix + 'CONNECT'\nexport const SET_CONNECTION_INFO = prefix + 'SET_CONNECTION_INFO'\nexport const CONNECTION_OCCURRED = prefix + 'CONNECTION_OCCURRED'\nexport const CONNECT_FINISHED = prefix + 'CONNECT_FINISHED'\nexport const GET_USER_DETAILS = prefix + 'GET_USER_DETAILS'\nexport const USER_DETAILS_RECEIVED = prefix + 'USER_DETAILS_RECEIVED'\nexport const DISCONNECT = prefix + 'DISCONNECT'\nexport const DISCONNECT_FINISHED = prefix + 'DISCONNECT_FINISHED'\nexport const RESUBSCRIPTION_FINISHED = prefix + 'RESUBSCRIPTION_FINISHED'\nexport const REFRESH_TOKENS = prefix + 'REFRESH_TOKENS'\nexport const REFRESH_TOKENS_FINISHED = prefix + 'REFRESH_TOKENS_FINISHED'\n\nexport const UPDATE_SUBSCRIPTION = prefix + 'UPDATE_SUBSCRIPTION'\nexport const UPDATE_SUBSCRIPTION_FINISH = prefix + 'UPDATE_SUBSCRIPTION_FINISH'\n\nexport const SET_TOKEN = prefix + 'SET_TOKEN'\n\nexport const SET_CREDENTIALS = prefix + 'SET_CREDENTIALS'\nexport const SET_CREDENTIALS_FINISH = prefix + 'SET_CREDENTIALS_FINISH'\n","import * as actionTypes from './actionTypes'\n\n/**\n * Creates a connect action that takes a credentials object.\n *\n * @method connect\n * @param {Object} credentials The credentials to pass to the connect action.\n * @param {Object} [options] Any parameters that aren't credentials.\n * @return {Object} A flux standard action.\n */\nexport function connect (credentials, options) {\n  return {\n    type: actionTypes.CONNECT,\n    payload: { credentials, options },\n    meta: {\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Create a set connection info action that takes a connection and user info object\n *\n * @method connectFinished\n * @param {Object} $0\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @return {Object} A flux standard action.\n */\nexport function setConnectionInfo ({ userInfo, connection }, platform) {\n  return {\n    type: actionTypes.SET_CONNECTION_INFO,\n    payload: { userInfo, connection },\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Connection occurred action.\n * Signifies that a connection has been made to a service, but that the connection\n *      workflow has not finished yet. Intended for use in scenarios where the\n *      workflow connects to multiple services, to represent the \"intermediate\"\n *      connections.\n *\n * @method connectionOccurred\n * @param  {Object} $0\n * @param  {Object} $0.subscription\n * @param  {Object} $0.connection\n * @param  {Object} [$0.error] An error message. Only present if an error occurred.\n * @param  {string} platform The backend platform used for the connection.\n * @return {Object} A flux standard action.\n */\nexport function connectionOccurred ({ subscription, connection, error }, platform) {\n  // TODO: Is this action used anywhere?\n  var action = {\n    type: actionTypes.CONNECTION_OCCURRED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { subscription, connection }\n  }\n\n  return action\n}\n\n/**\n * Create a connect finished action that takes a userInfo object on success and possibly\n * an error object.\n *\n * @method connectFinished\n * @param {Object} $0\n * @param {Object} $0.subscription A subscription object. Contains what services to subscribe to.\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} platform The backend platform we are currently on.\n * @param {boolean} isSSO Boolean for whether the current connection scenario is SSO or not.\n * @return {Object} A flux standard action.\n */\nexport function connectFinished ({ subscription, userInfo, connection, error }, platform, isSSO = false) {\n  var action = {\n    type: actionTypes.CONNECT_FINISHED,\n    meta: {\n      platform,\n      isSSO,\n      isSensitive: true\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { subscription, userInfo, connection }\n  }\n\n  return action\n}\n\n/**\n * Creates a getUserDetails action\n *\n * @method getUserDetails\n * @return {Object} A flux standard action.\n */\nexport function getUserDetails () {\n  return { type: actionTypes.GET_USER_DETAILS }\n}\n\n/**\n * Create a user details received action\n *\n * @method userDetailsReceived\n * @param  {Object} userDetailsResponse An object representing the REST response of a user details request.\n * @return {Object} A flux standard action.\n */\nexport function userDetailsReceived (userDetailsResponse) {\n  var action = {\n    type: actionTypes.USER_DETAILS_RECEIVED,\n    payload: {\n      firstName: userDetailsResponse.firstName || userDetailsResponse.user_first_name,\n      user_first_name: userDetailsResponse.user_first_name || userDetailsResponse.firstName,\n      lastName: userDetailsResponse.lastName || userDetailsResponse.user_last_name,\n      user_last_name: userDetailsResponse.user_last_name || userDetailsResponse.lastName,\n      photoURL: userDetailsResponse.photoURL,\n      emailAddress: userDetailsResponse.emailAddress || userDetailsResponse.user_email,\n      user_email: userDetailsResponse.user_email || userDetailsResponse.emailAddress,\n      username: userDetailsResponse.username\n    }\n  }\n\n  return action\n}\n\n/**\n * Creates a disconnect action.\n *\n * @method disconnect\n * @return {Object} A flux standard action.\n */\nexport function disconnect () {\n  return { type: actionTypes.DISCONNECT }\n}\n\n/**\n * Create a disconnectFinished action that possibly takes an error object on failure.\n *\n * @method disconnectFinished\n * @param {Object} params\n * @param {string} [params.error] An error message. Only present if an error occurred.\n * @param {string} [params.reason] Why the disconnectFinished action is being dispatched.\n * @return {Object} A flux standard action.\n */\nexport function disconnectFinished ({ error, reason } = {}) {\n  let action = {\n    type: actionTypes.DISCONNECT_FINISHED,\n    payload: {}\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  }\n\n  if (reason) {\n    action.payload.reason = reason\n  }\n\n  return action\n}\n\n/**\n * Action creator representing the finish of a resubscription request.\n * Payload mirrors a connect finished action.\n *\n * @method resubscribeFinished\n * @param {Object} $0\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} [$0.attemptNum] The attempt number of this resubscription.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function resubscribeFinished ({ error, attemptNum }, platform) {\n  var action = {\n    type: actionTypes.RESUBSCRIPTION_FINISHED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n    action.payload.attemptNum = attemptNum\n  } else {\n    action.payload = {\n      attemptNum\n    }\n  }\n\n  return action\n}\n\n/**\n * Creates a refreshTokens action with the given credentials as a payload.\n *\n * @method refreshTokens\n * @param {Object} credentials A crendetials object containing tokens.\n * @return {Object} A flux standard action.\n */\nexport function refreshTokens (credentials) {\n  var action = {\n    type: actionTypes.REFRESH_TOKENS,\n    payload: { credentials }\n  }\n  return action\n}\n\n/**\n * Creates a refreshTokensFinished action with connection and platform information.\n * Optionally includes an error.\n *\n * @method refreshTokensFinished\n * @param {Object} $0\n * @param {Object} [$0.error] An optional error object.\n * @param {Object} $0.connection Connection information.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function refreshTokensFinished ({ error, connection }, platform) {\n  var action = {\n    type: actionTypes.REFRESH_TOKENS_FINISHED,\n    payload: { connection },\n    meta: { platform }\n  }\n  if (error) {\n    action.error = true\n    action.payload = error\n  }\n\n  return action\n}\n\n/**\n * Represents a request to update a current subscription.\n * @method updateSubscription\n * @param  {Object} subscription Information used to update subscription.\n * @return {Object} A flux standard action.\n */\nexport function updateSubscription (subscription) {\n  return {\n    type: actionTypes.UPDATE_SUBSCRIPTION,\n    payload: subscription\n  }\n}\n\n/**\n * Represents that the current subscription has been updated.\n * @method updateSubscriptionFinished\n * @param  {Object} $0\n * @param  {Object} $0.subscription New subscription state to be updated.\n * @param  {Object} [$0.error] Error object, in the case of an error.\n * @param  {string} platform The backend platform used for the subscription.\n * @return {Object} A flux standard action.\n */\nexport function updateSubscriptionFinished ({ subscription, error }, platform) {\n  var action = {\n    type: actionTypes.UPDATE_SUBSCRIPTION_FINISH,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = subscription\n  }\n  return action\n}\n\n/**\n * Sets the token information in the state.\n * @method setTokens\n * @param {Object} params Dictionary object of parameters.\n * @param {string} accessToken An access token retrieved using the authentication APIs of the platform.\n * @param {string} idToken An identity token retrieved using the authentication APIs of the platform.\n * @return {Object} A flux standard action.\n */\nexport function setTokens ({ accessToken, idToken }) {\n  return {\n    type: actionTypes.SET_TOKEN,\n    payload: { accessToken, idToken }\n  }\n}\n\n/**\n * Creates a setCredentials action that takes a credentials object.\n *\n * @method connect\n * @param {Object} $0\n * @param {string} $0.username The username.\n * @param {string} $0.password The user's password.\n * @param {string} $0.authname The user's authorization name.\n * @param {string} $0.hmacToken An HMAC token for the user with the provided user ID.\n * @param {string} $0.bearerAccessToken An access token retrieved using the authentication APIs of the platform.\n * @param {string} $0.idToken An identity token retrieved using the authentication APIs of the platform.\n * @return {Object} A flux standard action.\n */\nexport function setCredentials ({ username, password, authname, hmacToken, bearerAccessToken, idToken }) {\n  return {\n    type: actionTypes.SET_CREDENTIALS,\n    payload: { username, password, authname, hmacToken, bearerAccessToken, idToken },\n    meta: {\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Create a setCredentials finished action that takes a userInfo object on success and possibly\n * an error object.\n *\n * @method connectFinished\n * @param {Object} $0\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function setCredentialsFinished ({ userInfo, connection, error }, platform) {\n  var action = {\n    type: actionTypes.SET_CREDENTIALS_FINISH,\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { userInfo, connection }\n  }\n\n  return action\n}\n","import * as actions from './actions'\nimport { getUserInfo as selectUserInfo, getServices } from './selectors'\nimport { SUBSCRIPTION_STATE, DISCONNECT_REASONS } from '../constants'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\nimport jwtDecode from 'jwt-decode'\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Authentication API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch - The redux store's dispatch function.\n * @param  {Function} $0.getState - The redux store's getState function.\n * @return {Object} api - The authentication API object.\n */\nexport default function api ({ dispatch, getState }) {\n  return {\n    /**\n     * Connect with user credentials to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @memberof api\n     * @requires userCredentialsAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username including the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {string} [credentials.authname] The user's authorization name.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {boolean} [options.forceLogOut] Force the oldest connection to log out if too many simultaneous connections. Link only.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   password: '********'\n     *   authname: '********'\n     * }, {\n     *   forceLogOut: true\n     * });\n     */\n    /**\n     * Connect with user credentials to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @memberof api\n     * @requires userCredentialsDAKAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.domainApiKey The Api key for the application's domain.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   domainApiKey: 'DAK1111111111111111111',\n     *   username: 'alfred',\n     *   password: '********'\n     * });\n     */\n    /**\n     * Connect by providing an access token to any backend services that the SDK instance deals with.\n     * You can optionally provide a refresh token and the SDK will automatically get new access tokens.\n     *\n     * @public\n     * @memberof api\n     * @requires accessTokenAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.accessToken An access token for the user with the provided user Id.\n     * @param {string} [credentials.refreshToken] A refresh token for the same user.\n     * @param {number} [credentials.expires] The time in seconds until the access token will expire.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   accessToken: 'AT0V1fswAiJadokx1iJMQdG04pRf',\n     *   refreshToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT',\n     *   expires: 3600\n     * });\n     */\n    /**\n     * Connect by providing a username and HMAC token. This connects to any backend services that the SDK instance deals with.\n     * An HMAC token is used to verify a user via the user's authorization within an organization.\n     * HMAC tokens are generated by using the HmacSHA1 algorithm and a key on a data object\n     * containing an `authenticationTokenRequest` object with the following properties:\n     * - subscriberId - The user's subscriber ID in the organization.\n     * - organizationId - The ID of the organization the user is a part of.\n     *\n     * @public\n     * @memberof api\n     * @requires hmacTokenAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username.\n     * @param {string} credentials.hmacToken An HMAC token for the user with the provided user ID.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {boolean} [options.forceLogOut] Force the oldest connection to log out if too many simultaneous connections.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * const hmacToken = HmacSHA1Algorithm({\n     *   authenticationTokenRequest: {\n     *     subscriberId: 'alfred',\n     *     organizationId: 'example.com'\n     *   }\n     * }, key)\n     *\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   hmacToken\n     * }, {\n     *   forceLogOut: true\n     * });\n     */\n    /**\n     * Connect by providing a refresh token, to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @memberof api\n     * @requires accessTokenAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.refreshToken A refresh token for the same user.\n     * @param {number} [credentials.expires] The time in seconds until the access token will expire.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   refreshToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     *   expires: 3600\n     * });\n     */\n    /**\n     * Connect by providing an OAuth token, to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @memberof api\n     * @requires oauthToken\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.oauthToken An OAuth token provided by an outside service.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   oauthToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     * });\n     */\n    connect (credentials, options) {\n      // We won't expose oauthToken because it essentially acts as a password being used in conjunction with username\n      // ..and passwords should NOT be logged.\n      log.debug(API_LOG_TAG + 'connect: ', credentials.username)\n      dispatch(actions.connect(credentials, options))\n    },\n\n    /**\n     * Disconnects from the backend. This will close the websocket and you will stop receiving events.\n     *\n     * @public\n     * @requires userCredentialsAuth\n     * @requires userCredentialsDAKAuth\n     * @requires accessTokenAuth\n     * @memberof api\n     * @method disconnect\n     */\n    disconnect () {\n      log.debug(API_LOG_TAG + 'disconnect')\n      dispatch(actions.disconnect())\n    },\n\n    /**\n     * If you're authenticating with tokens that expire and have not provided a refresh token to the `connect` function, you can update your access token with `updateToken` before it expires to stay connected.\n     *\n     * @public\n     * @memberof api\n     * @requires accessTokenAuth\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.accessToken The new access token.\n     * @method updateToken\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.accessToken An access token for the user with the provided user Id.\n     */\n    /**\n     * If you're authenticating with tokens that expire and have not provided a refresh token to the `connect` function, you can update your access token with `updateToken` before it expires to stay connected.\n     *\n     * @public\n     * @memberof api\n     * @requires oauthToken\n     * @method updateToken\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.oauthToken An OAuth token provided by an outside service.\n     * @example\n     * client.updateToken({\n     *   username: 'alfred@example.com',\n     *   oauthToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     * });\n     */\n    updateToken (credentials) {\n      // We won't expose oauthToken because it essentially acts as a password being used in conjunction with username\n      // ..and passwords should NOT be logged.\n      log.debug(API_LOG_TAG + 'updateToken: ', credentials.username)\n      dispatch(actions.refreshTokens(credentials))\n    },\n\n    /**\n     * Updates the current connection.\n     *\n     * @public\n     * @memberof api\n     * @requires updateConnection\n     * @method updateConnection\n     * @param {Object} connection\n     * @param {Array} connection.services Services to subscribe to for notifications.\n     * @example\n     * client.updateConnection({\n     *   services: ['IM', 'Presence', 'call']\n     * })\n     */\n    updateConnection (connection) {\n      log.debug(API_LOG_TAG + 'updateConnection: ', connection)\n      dispatch(actions.updateSubscription(connection))\n    },\n\n    /**\n     * Retrieves information about the current user.\n     *\n     * @public\n     * @memberof api\n     * @method getUserInfo\n     * @returns {Object} user The user data.\n     * @returns {string} user.username The username of the current user. Note that this username can take different encoded forms.\n     *                                 It's not meant to be displayed to a user.\n     * @returns {string} user.token The current access token.\n     */\n    getUserInfo () {\n      log.debug(API_LOG_TAG + 'getUserInfo')\n      return selectUserInfo(getState())\n    },\n\n    /**\n     * Get the connection state.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @method getConnection\n     * @returns {Object} connection The connection state.\n     * @returns {boolean} connection.isConnected Whether the authenticated user is currently connected.\n     * @returns {boolean} connection.isPending Whether the authenticated user's connection is currently pending.\n     * @returns {Object} connection.error The error object if an error occurred.\n     * @returns {string} connection.error.message The error message.\n     * @returns {string} connection.error.stack The stack trace of the error.\n     */\n    getConnection () {\n      log.debug(API_LOG_TAG + 'getConnection')\n      const { isConnected, isPending, error } = getState().authentication\n      return {\n        isConnected,\n        isPending,\n        error,\n        subscription: getServices(getState())\n      }\n    },\n\n    /**\n     * Retrieves the services that the user is subscribed for.\n     *\n     * @public\n     * @memberof api\n     * @requires services\n     * @method getServices\n     * @return {Array} A list of subscribed-to services.\n     */\n    getServices () {\n      log.debug(API_LOG_TAG + 'getServices')\n      return getServices(getState())\n    },\n\n    /**\n     * Possible subscription states of the user.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @property {string} FULL All requested feature subscriptions exist.\n     * @property {string} PARTIAL Some feature subscriptions exist.\n     * @property {string} NONE No feature subscriptions exist.\n     */\n    subscriptionStates: SUBSCRIPTION_STATE,\n\n    /**\n     * Possible reasons for disconnecting.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @property {string} GONE Connection was terminated by the server\n     * @property {string} LOST_CONNECTION Internet connection was lost\n     */\n    disconnectReasons: DISCONNECT_REASONS,\n\n    /**\n     * Sets the authentication tokens necessary to make requests to the platform. The access token\n     * provided establishes what can be accessed by the SDK. The identity token represents who is authenticated.\n     *\n     * @public\n     * @memberof api\n     * @requires cpaasAuth\n     * @method setTokens\n     * @param {Object} params Dictionary object of parameters.\n     * @param {string} params.accessToken An access token retrieved using the authentication APIs of the platform.\n     * @param {string} params.idToken An identity token retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setTokens({\n     *   accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n     *   idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * })\n     */\n    setTokens ({ accessToken, idToken }) {\n      // We won't log both tokens, just the id one, so that we can still be able to debug.\n      log.debug(API_LOG_TAG + 'setTokens: ', idToken)\n\n      // validate token\n      try {\n        const jwt = jwtDecode(idToken)\n        dispatch(actions.setTokens({ accessToken, idToken: jwt }))\n      } catch (error) {\n        log.error(`${idToken} is not a valid JWT`)\n      }\n    },\n\n    /**\n     * Sets the user credentials necessary to make requests to the platform.\n     *\n     * @public\n     * @memberof api\n     * @requires userCredentialsAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username including the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {string} [credentials.authname] The user's authorization name.\n     * @example\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   password: '********'\n     *   authname: '********'\n     * });\n     */\n    /**\n     * Sets the username and HMAC token necessary to make requests to the platform.\n     * An HMAC token is used to verify a user via the user's authorization within an of organization.\n     * HMAC tokens are generated by using the HmacSHA1 algorithm and a key on a data object\n     * containing an `authenticationTokenRequest` object with the following properties:\n     * - subscriberId - The user's subscriber ID in the organization.\n     * - organizationId - The ID of the organization the user is a part of.\n     *\n     * @public\n     * @memberof api\n     * @requires hmacTokenAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username.\n     * @param {string} credentials.hmacToken An HMAC token for the user with the provided user ID.\n     * @example\n     * const hmacToken = HmacSHA1Algorithm({\n     *   authenticationTokenRequest: {\n     *     subscriberId: 'alfred',\n     *     organizationId: 'example.com'\n     *   }\n     * }, key)\n     *\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   hmacToken\n     * });\n     */\n    /**\n     * Provides a bearerAccessToken to any backend services that the SDK instance deals with.\n     * The bearerAccessToken provided establishes what can be accessed by the SDK.\n     *\n     * @public\n     * @memberof api\n     * @requires bearerAccessTokenAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.bearerAccessToken A bearerAccessToken retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * });\n     */\n    /**\n     * Sets the authentication tokens necessary to make requests to the platform. The bearerAccessToken\n     * provided establishes what can be accessed by the SDK. The identity token represents who is authenticated.\n     *\n     * @public\n     * @memberof api\n     * @requires cpaasAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.bearerAccessToken A bearerAccessToken retrieved using the authentication APIs of the platform.\n     *                                               The bearerAccessToken is same as the access token for the cpaas platform.\n     * @param {string} credentials.idToken An identity token retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setCredentials({\n     *   bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n     *   idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * });\n     */\n    setCredentials ({ username, password, authname, hmacToken, bearerAccessToken, idToken }) {\n      log.debug(API_LOG_TAG + 'setCredentials: ', username)\n      // TODO: Refactor into multiple actions for each credential mode\n      // TODO: Validation of two authentication possibility scenerio\n      dispatch(\n        actions.setCredentials({\n          username,\n          password,\n          authname,\n          hmacToken,\n          bearerAccessToken,\n          idToken\n        })\n      )\n    }\n  }\n}\n","/**\n * Authentication state has changed. You can get the new state by calling `getConnection()`.\n *\n * @public\n * @memberof api\n * @requires connect\n * @event auth:change\n * @param {Object} params\n * @param {string} params.reason The cause of the authentication change, provided in the event of an unsolicited disconnection. See the `disconnectReasons` API for possible values.\n */\nexport const AUTH_CHANGE = 'auth:change'\n\n/**\n * There was an error with authentication.\n *\n * @public\n * @memberof api\n * @requires connect\n * @event auth:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n *\n */\nexport const AUTH_ERROR = 'auth:error'\n\n/**\n * An attempt to extend the current user's subscription was made.\n *\n * In a failure scenario, the current user is still connected, and further\n * resubscription attempts will be made, but may become disconnected if the\n * session expires.\n * @public\n * @memberof api\n * @requires connect\n * @event auth:resub\n * @param {Object} params\n * @param {number} params.attemptNum The attempt number of this resubscription.\n * @param {boolean} params.isFailure Whether the resubscription failed or not.\n * @param {api.BasicError} [params.error] The Basic error object.\n */\nexport const AUTH_RESUB = 'auth:resub'\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nfunction authChangedEvent (action) {\n  return {\n    type: action.error ? eventTypes.AUTH_ERROR : eventTypes.AUTH_CHANGE,\n    args: action.error ? { error: action.payload } : {}\n  }\n}\n\nconst eventsMap = {}\n\neventsMap[actionTypes.CONNECT_FINISHED] = authChangedEvent\neventsMap[actionTypes.USER_DETAILS_RECEIVED] = authChangedEvent\neventsMap[actionTypes.CONNECT] = authChangedEvent\neventsMap[actionTypes.DISCONNECT] = authChangedEvent\neventsMap[actionTypes.REFRESH_TOKENS_FINISHED] = authChangedEvent\neventsMap[actionTypes.UPDATE_SUBSCRIPTION_FINISH] = authChangedEvent\neventsMap[actionTypes.SET_CREDENTIALS_FINISH] = authChangedEvent\n\neventsMap[actionTypes.DISCONNECT_FINISHED] = function (action) {\n  let discEvent = authChangedEvent(action)\n  if (action.payload.reason === 'GONE') {\n    discEvent.args.forced = true\n  }\n  discEvent.args.reason = action.payload.reason\n  return discEvent\n}\n\neventsMap[actionTypes.RESUBSCRIPTION_FINISHED] = function (action) {\n  let resubEvent = {\n    type: eventTypes.AUTH_RESUB,\n    args: {\n      attemptNum: action.payload.attemptNum,\n      isFailure: action.error || false\n    }\n  }\n\n  if (action.error) {\n    resubEvent.args.error = action.payload\n  }\n  return resubEvent\n}\n\nexport default eventsMap\n","import reducer from './reducers'\nimport name from './name'\nimport api from './api'\n\nexport { reducer, name, api }\n","/**\n * This interface is for an authentication plugin.\n * @type {string}\n */\nconst name = 'authentication'\nexport default name\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\n\nimport { merge } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.CONNECT] = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true,\n      error: undefined\n    }\n  }\n}\n\nreducers[actionTypes.SET_CONNECTION_INFO] = {\n  next (state, action) {\n    return {\n      ...state,\n      platform: action.meta.platform,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      },\n      userInfo: action.payload.userInfo\n    }\n  }\n}\n\nreducers[actionTypes.CONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      isConnected: true,\n      isPending: false,\n      error: undefined,\n      isSSO: action.meta.isSSO,\n      platform: action.meta.platform,\n      // Separate subscription, connection info based on the platform used.\n      // Store platform subscription information.\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: action.payload.subscription\n      },\n      // Store platform connection information to be procided to other plugins.\n      connection: action.payload.connection\n        ? {\n          ...state.connection,\n          [action.meta.platform]: action.payload.connection\n        }\n        : {\n          ...state.connection\n        },\n      // Store user information to be provided to developers.\n      userInfo: action.payload.userInfo ? action.payload.userInfo : state.userInfo\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isConnected: false,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\n// On connection occurred, store the connection information into state, but do\n// not update any status state. The connection has not yet finished.\nreducers[actionTypes.CONNECTION_OCCURRED] = {\n  next (state, action) {\n    return {\n      ...state,\n      // Separate subscription, connection info based on the platform used.\n      // Store platform subscription information.\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: action.payload.subscription\n      },\n      // Store platform connection information to be procided to other plugins.\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      }\n    }\n  }\n}\n\nreducers[actionTypes.DISCONNECT] = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true,\n      error: undefined\n    }\n  }\n}\n\nreducers[actionTypes.DISCONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      isConnected: false,\n      isPending: false,\n      error: undefined\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      // Treat an error as if we are still disconnected.\n      isConnected: false,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\nreducers[actionTypes.REFRESH_TOKENS_FINISHED] = {\n  next (state, action) {\n    // Merge the updated requestOptions into the current state.\n    let requestOptions = merge(\n      state.connection[action.meta.platform].requestOptions,\n      action.payload.connection.requestOptions\n    )\n\n    return {\n      ...state,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: {\n          ...state.connection[action.meta.platform],\n          ...action.payload.connection,\n          requestOptions\n        }\n      },\n      userInfo: {\n        ...state.userInfo,\n        accessToken: action.payload.connection.accessToken,\n        refreshToken: action.payload.connection.refreshToken\n      }\n    }\n  }\n}\n\n/*\n * Updates the subscription information for a specified platform.\n */\nreducers[actionTypes.UPDATE_SUBSCRIPTION_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: {\n          ...state.subscription[action.meta.platform],\n          ...action.payload\n        }\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SET_TOKEN] = {\n  next (state, action) {\n    // We received an idToken which is a JWT token that represents the identity of\n    // the user. This token contains information about the user. For now we only need\n    // the username. In the future we might use more from this token.\n    const idTokenPayload = action.payload.idToken\n    return {\n      ...state,\n      userInfo: {\n        ...state.userInfo,\n        accessToken: action.payload.accessToken,\n        username: idTokenPayload.preferred_username,\n        identity: idTokenPayload['services-identity']\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SET_CREDENTIALS_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      error: undefined,\n      platform: action.meta.platform,\n      // Store platform connection information to be procided to other plugins.\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      },\n      // Store user information to be provided to developers.\n      userInfo: action.payload.userInfo\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      error: action.payload\n    }\n  }\n}\n\n/**\n * Auth Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n * @example\n * Auth state structure example; connected.\n * authState = {\n *     isConnected: true,\n *     isPending: false,\n *     error: undefined,\n *     subscription: { ... },\n *     connection: { ... },\n *     userInfo: { ... }\n * }\n */\nconst reducer = handleActions(reducers, {\n  isConnected: false,\n  isPending: false\n})\nexport default reducer\n","import { cloneDeep } from 'lodash/fp'\nimport { SUBSCRIPTION_STATE } from '../constants'\nimport { platforms } from '../../constants'\n\n/**\n * Plugin selector function to expose state globally\n * @param  {Object} pluginState The localized (plugin) state\n * @return {Object}             The exposed state\n */\nexport function getExposedState (pluginState) {\n  // TODO: Filter out unwanted auth stuff from public state.\n  return cloneDeep(pluginState)\n}\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to Retrieves\n *      specific portions of the state.\n */\n\n/**\n * Retrieves the config options provided by the auth plugin.\n * @method getAuthConfig\n * @return {Object}\n */\nexport function getAuthConfig (state) {\n  return cloneDeep(state.config.authentication)\n}\n\n/**\n * Retrieves the subscription information of a platform.\n * @method getSubscriptionInfo\n * @param  {string} [platform] - The backend platform in use.\n * @return {Object}\n */\nexport function getSubscriptionInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  if (state.authentication.subscription) {\n    return cloneDeep(state.authentication.subscription[platform])\n  } else {\n    return undefined\n  }\n}\n\n/**\n * Retrieves the connection information of a platform.\n * Includes the info needed to make requests to that platform.\n * @method getConnectionInfo\n * @param  {string} [platform] - The backend platform in use.\n * @return {Object}\n */\nexport function getConnectionInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  if (state.authentication.connection) {\n    return cloneDeep(state.authentication.connection[platform])\n  } else {\n    return undefined\n  }\n}\n\n/**\n * Retrieves the domain of the callee address information of a platform.\n * @method getDomain\n * @return {string}\n */\nexport function getDomain (state) {\n  const { username = '', identity = username } = getUserInfo(state)\n  const [, domain = ''] = identity.split('@')\n  return domain\n}\n\n/**\n * Retrieves the identity of the currently logged-in user.\n * The identity is of the form: <userName>@<domain>\n * @method getIdentity\n * @return {string}\n */\nexport function getIdentity (state) {\n  const userInfo = getUserInfo(state)\n  return userInfo.identity || userInfo.username || ''\n}\n\n/**\n * Retrieves the user information.\n * @method getUserInfo\n * @return {Object} An object whose properties are: accessToken, identity & username. Identity is user's primary contact address.\n */\nexport function getUserInfo (state) {\n  return cloneDeep(state.authentication.userInfo) || {}\n}\n\n/**\n * Retrieves a flag from the store representing if the login scenario was SSO or not.\n * @method getAuthScenario\n * @return {boolean}\n */\nexport function getAuthScenario (state) {\n  return cloneDeep(state.authentication.isSSO)\n}\n\n/**\n * Retrieves information about the services that the user is subscribed for.\n * @method getServices\n * @return {Object}\n */\nexport function getServices (state, platform) {\n  let subscription = getSubscriptionInfo(state, platform)\n\n  if (subscription && subscription.servicesInfo) {\n    return subscription.servicesInfo\n  } else {\n    return {\n      // TODO: Have default as part of the reducer.\n      requested: [],\n      received: [],\n      missing: [],\n      status: SUBSCRIPTION_STATE.NONE,\n      services: {}\n    }\n  }\n}\n\n/**\n * Retrieves the name of the backend platform the user is currently subscribed to.\n * @method getPlatform\n * @return {string}\n */\nexport function getPlatform (state) {\n  return cloneDeep(state.authentication.platform)\n}\n\n/**\n * Retrieves info needed to make a REST request for the different platforms.\n * @method getRequestInfo\n * @return {Object}\n */\nexport function getRequestInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  const { subscription, clientCorrelator } = getAuthConfig(state)\n  let { server } = getAuthConfig(state)\n  const { userInfo } = cloneDeep(state.authentication)\n\n  // For backwards compatability, we need to fall back to\n  // subscription for the server connection details\n  if (!server) {\n    server = {\n      protocol: subscription.protocol,\n      base: subscription.server,\n      port: subscription.port,\n      version: subscription.version\n    }\n  }\n\n  let requestInfo\n\n  if (platform === platforms.CPAAS) {\n    requestInfo = {\n      baseURL: `${server.protocol}://${server.base}:${server.port}`,\n      version: server.version,\n      username: userInfo.username,\n      // TODO: Token doesn't need to be here if its in requestOptions.\n      token: userInfo.accessToken,\n      clientCorrelator,\n      // TODO: DO NOT hardcode this here (?). The original idea was that this\n      //    is set in state after connection.\n      options: {\n        headers: {\n          Accept: 'application/json',\n          Authorization: `Bearer ${userInfo.accessToken}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    }\n  } else if (platform === platforms.UC) {\n    requestInfo = {\n      baseURL: `${subscription.protocol}://${subscription.server}:${subscription.port}`,\n      version: subscription.version,\n      username: userInfo.username\n    }\n  } else if (platform === platforms.LINK) {\n    requestInfo = {\n      baseURL: `${server.protocol}://${server.base}:${server.port}`,\n      version: server.version,\n      username: userInfo.username\n    }\n\n    /*\n     * If the requested platform was Link but the platform set in state is\n     *    UC, and so we're using UC but making a request for SPiDR.\n     * Change the requestInfo provided to ensure the URL will be valid for\n     *    SPiDR and authentication will be valid for CIM.\n     */\n    const setPlatform = getPlatform(state)\n    if (setPlatform === platforms.UC) {\n      requestInfo.version = '1'\n\n      const connInfo = getConnectionInfo(state, setPlatform)\n      if (connInfo && connInfo.requestOptions) {\n        requestInfo.requestOptions = connInfo.requestOptions\n      }\n      return requestInfo\n    }\n  } else {\n    // Platform is not supported\n    return {}\n  }\n\n  const connInfo = getConnectionInfo(state, platform)\n  if (connInfo && connInfo.requestOptions) {\n    requestInfo.requestOptions = connInfo.requestOptions\n  }\n\n  return requestInfo\n}\n","// Redux-Saga\nimport { put } from 'redux-saga/effects'\n// Events\nimport eventsMap from '../interface/events'\nimport { mapEvents } from '../../events/interface/actions'\n\n// The interface to follow.\nimport { api, reducer, name } from '../interface'\n\n// State setters.\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Utilities.\nimport { mergeValues } from '../../common/utils'\nimport { logManager } from '../../logs'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../../../src/common/validation'\n\n/**\n * selector for exposed authentication state\n */\nimport { getExposedState } from '../interface/selectors'\n\nimport { connectFlow, setCredentialsEntry, onSubscriptionGone, onConnectionLostEntry } from './sagas'\n\n// Get the logger\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Configuration options for the Authentication feature.\n * @public\n * @name config.authentication\n * @memberof config\n * @instance\n * @param {Object} authentication Authentication configs.\n * @param {Object} authentication.server\n * @param {string} authentication.server.base Hostname of the server to be used for requests.\n * @param {string} [authentication.server.protocol='https'] Protocol to be used for requests.\n * @param {Number} [authentication.server.port=443] Port to be used for requests.\n */\n\nconst defaultOptions = {\n  server: {\n    protocol: 'https',\n    base: null,\n    port: 443,\n    version: '1' // not documented, but important\n  }\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  server: v8n.schema({\n    protocol: enums(['http', 'https']),\n    base: v8n.string(),\n    port: v8n.positive(),\n    version: enums(['1']) // not documented, but important\n  })\n})\nconst parseOptions = parse('authentication', v8nValidation)\n\n/**\n * On link authentication implementation factory.\n * @method authLink\n * @param {Object} options - Configuration options for authentication. See above.\n * @return {Object} plugin - An authentication plugin.\n */\nexport default function authLink (options = {}) {\n  if (options.subscription || options.websocket) {\n    log.warn('Authentication configuration is being replaced, see docs. Please update to the config.')\n  }\n\n  // For backwards compatibility we check if the server is defined under subscription\n  if (options.subscription) {\n    if (!options.server) {\n      options.server = {}\n    }\n\n    options.server.base = options.server.base || options.subscription.server\n    options.server.protocol = options.server.protocol || options.subscription.protocol\n    options.server.port = options.server.port || options.subscription.port\n  }\n\n  options = mergeValues(defaultOptions, options)\n\n  parseOptions(options)\n\n  if (!options.server.base) {\n    log.error('No server configuration provided. Please provide proper authentication configurations.')\n  }\n\n  function * init () {\n    // Send the provided options to the store.\n    // This will be `state.config[name]`.\n    yield put(updateConfig(options, name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  const capabilities = ['userCredentialsAuth', 'hmacTokenAuth', 'bearerAccessTokenAuth']\n\n  return {\n    sagas: [connectFlow, setCredentialsEntry, onSubscriptionGone, onConnectionLostEntry],\n    capabilities,\n    init,\n    api,\n    selector: getExposedState,\n    reducer,\n    name\n  }\n}\n","// Redux-Saga\nimport { cancel, call, fork, put, select, takeEvery, take } from 'redux-saga/effects'\n\n// Auth\nimport * as actions from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport { DISCONNECT_REASONS } from '../constants'\n\n// Other plugins\nimport { NOTIFICATION_RECEIVED } from '../../notifications/interface/actionTypes'\nimport * as subscribeActions from '../../subscription/interface/actions'\nimport * as subscribeActionTypes from '../../subscription/interface/actionTypes'\nimport * as connectivityActionTypes from '../../connectivity/interface/actionTypes'\nimport { getSubscriptionInfo } from '../../subscription/interface/selectors'\n\n// State selectors\nimport { getAuthConfig, getUserInfo as selectUserInfo } from '../interface/selectors'\n\n// Constants\nimport { platforms } from '../../constants'\n\n// Errors\nimport BasicError, { authCodes } from '../../errors'\n\n// Libraries\nimport base64 from 'base-64'\nimport utf8 from 'utf8'\nimport { normalizeServices } from '../../common/utils'\n\n// Logging\nimport { logManager } from '../../logs'\n\n// Get the logger\nconst log = logManager.getLogger('AUTH')\n\n// This is an Link plugin.\nconst platform = platforms.LINK\n\n// Taker-saga that watches for \"set credential\" actions.\nexport function * setCredentialsEntry () {\n  yield takeEvery(actionTypes.SET_CREDENTIALS, setCredentials)\n}\n\n/**\n * Link connect saga. This Saga is in charge of the flow for connecting and disconnecting.\n * Handles the workflow of connecting or disconnecting to SPiDR.\n * @method connectFlow\n */\nexport function * connectFlow () {\n  while (true) {\n    // Wait for a CONNECT action.\n    const action = yield take(actionTypes.CONNECT)\n\n    // Fork off and try to connect\n    const task = yield fork(connect, action)\n\n    // Take the actions for if an error or disconnect occurs.\n    const finishOrError = yield take([actionTypes.CONNECT_FINISHED, actionTypes.DISCONNECT])\n\n    /**\n     * This if block covers 2 of the 3 flows of connect / disconnect.\n     * 1. The first block covers what happens when we receive a DISCONNECT action before we finish connecting.\n     *        IE DISCONNECT comes before a CONNECT_FINISHED.\n     * 2. The second block covers what happens when we get a successful CONNECT_FINISHED event before any DISCONNECT events.\n     * 3. The third scenario is not explicitly covered here. That scenario is when we received a CONNECT_FINISHED event with an error before any disconnect events.\n     *      In this case, there is nothing that we explicitly have to do, since a CONNECT_FINISHED event with an error doesn't place anything into the state.\n     *      Therefore there is no real cleanup for us to do in this scenario. We then want to wait for the next CONNECT ( which we do via the next iteration of the while loop).\n     **/\n    if (finishOrError.type === actionTypes.DISCONNECT) {\n      log.debug('Cancelling task')\n      yield cancel(task)\n    } else if (finishOrError.type === actionTypes.CONNECT_FINISHED && !finishOrError.error) {\n      const disconnectAction = yield take([actionTypes.DISCONNECT, actionTypes.DISCONNECT_FINISHED])\n\n      // if disconnect has finished, we dont need to do a teardown of auth state, or disconnect the websocket, so reset connectFlow\n      if (disconnectAction.type === actionTypes.DISCONNECT_FINISHED) {\n        continue\n      }\n      log.debug('Disconnecting')\n      yield call(disconnect)\n    }\n  }\n}\n\n/**\n * Link connect function.\n * Performs the workflow of connecting to SPiDR.\n * @method connect\n */\nexport function * connect (action) {\n  // Set connection info\n  const { credentials, options } = action.payload\n  yield put(actions.setCredentials(credentials))\n\n  // Wait for action SET_CREDENTIALS_FINISH\n  const setCredentialsFinishOrError = yield take(actionTypes.SET_CREDENTIALS_FINISH)\n\n  if (setCredentialsFinishOrError.error) {\n    log.info('Failed to apply credentials. Error: ', setCredentialsFinishOrError.payload)\n    yield put(\n      actions.connectFinished({\n        error: setCredentialsFinishOrError.payload\n      })\n    )\n    return\n  }\n  log.info('Successfully applied credentials.')\n\n  // Retrieve the connection info.  We need this to support old configurations\n  const authConfig = yield select(getAuthConfig)\n\n  const service = authConfig.subscription.service\n\n  if (service) {\n    const userInfo = yield select(selectUserInfo)\n    if (userInfo && (userInfo.username || userInfo.accessToken)) {\n      // Normalize services array\n      const services = normalizeServices(service)\n\n      log.info('Subscribing to services: ', services)\n      yield put(subscribeActions.subscribe(services, options))\n\n      // Wait for action SUBSCRIBE_FINISH\n      const subscribeFinishOrError = yield take(subscribeActionTypes.SUBSCRIBE_FINISHED)\n      if (subscribeFinishOrError.error) {\n        log.info('Failed to subscribe to services. Error: ', subscribeFinishOrError.payload.error)\n        yield put(actions.connectFinished({ error: subscribeFinishOrError.payload.error }))\n        return\n      }\n      log.info('Successfully subscribed to services.')\n    }\n  } else {\n    // No services found in config\n    yield put(\n      actions.connectFinished({\n        error: new BasicError({\n          message: 'No services found in configuration.',\n          code: authCodes.MISSING_SERVICE\n        })\n      })\n    )\n    return\n  }\n\n  yield put(\n    actions.connectFinished(\n      // SET_CREDENTIALS_FINISH action will store connection and userInfo\n      // SUBSCRIBE_FINISH action will store subscription\n      {},\n      platform\n    )\n  )\n}\n\n/**\n * Link disconnect function.\n * Performs the actions for actually disconnecting from SPiDR.\n * @method disconnect\n */\nexport function * disconnect () {\n  log.info('Unsubscribing from services.')\n\n  // The backwards compatible `disconnect` is to unsubscribe from all services.\n  //    So get the list of current services to give to the new subscription flow.\n  const subscription = yield select(getSubscriptionInfo)\n  const { service, notificationType } = subscription[0]\n  yield put(subscribeActions.unsubscribe(service, notificationType))\n\n  const disconnectFinishAction = yield take([subscribeActionTypes.UNSUBSCRIBE_FINISHED])\n  if (disconnectFinishAction.type === subscribeActionTypes.UNSUBSCRIBE_FINISHED && disconnectFinishAction.error) {\n    log.info('Failed to unsubscribe from services. Error: ', disconnectFinishAction.error)\n    yield put(actions.disconnectFinished({ error: disconnectFinishAction.error }))\n  }\n\n  // Successfully unsubscribed, now finish disconnecting\n  log.info('Successfully unsubscribed from services. Disconnecting.')\n  yield put(actions.disconnectFinished())\n}\n\n// Functionality for setting / validating user credentials.\nexport function * setCredentials (action) {\n  // Retrieve the connection info.\n  const config = yield select(getAuthConfig)\n\n  // Common request options, to be used for all subsequent requests after connect.\n  let requestOptions = {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n  }\n\n  // Determine what extra information needs to be added to the request.\n  let { username, password, authname, hmacToken, bearerAccessToken } = action.payload\n\n  if (hmacToken) {\n    // Only need the hmacToken in the x-token header when subscribing.\n    log.info('Setting the info for hmacToken scenario.')\n    requestOptions.headers['x-token'] = hmacToken\n  } else if (authname && password) {\n    log.info('Setting the info for authname/password scenario.')\n    requestOptions.headers['Authorization'] = 'Basic ' + base64.encode(utf8.encode(authname + ':' + password))\n  } else if (bearerAccessToken && username) {\n    log.info('Setting the info for bearerAccessToken/username scenario.')\n    requestOptions.headers['Authorization'] = `Bearer ${bearerAccessToken}`\n  } else if (username && password) {\n    log.info('Setting the info for username/password scenario.')\n    requestOptions.headers['Authorization'] = 'Basic ' + base64.encode(utf8.encode(username + ':' + password))\n  } else {\n    log.info('Unexpected credentials scenario.')\n    const error = new BasicError({\n      message: 'This credentials signature is not valid.',\n      code: authCodes.INVALID_CREDENTIALS\n    })\n    yield put(actions.setCredentialsFinished({ error }, platform))\n    return\n  }\n\n  // Gather information to provide externally.\n  const userInfo = {\n    username\n  }\n\n  // Gather information to provide internally, to other plugins.\n  const connection = {\n    server: {\n      server: config.server.base,\n      port: config.server.port,\n      protocol: config.server.protocol,\n      version: config.server.version\n    },\n    username,\n    bearerAccessToken,\n    // Request options that all other (Link) plugins will use.\n    requestOptions\n  }\n\n  yield put(\n    actions.setCredentialsFinished(\n      {\n        userInfo,\n        connection\n      },\n      platform\n    )\n  )\n}\n\n/**\n * Saga that handles a \"subscription gone\" notification.\n * Treat the notification as a forced disconnect.\n * @method onSubscriptionGone\n */\nexport function * onSubscriptionGone () {\n  // Redux-saga take() pattern.\n  // Take notifications about the subscription being 'gone'.\n  function takeGoneSubscription (action) {\n    return (\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage &&\n      action.payload.notificationMessage.eventType === 'gone'\n    )\n  }\n\n  while (true) {\n    yield take(takeGoneSubscription)\n\n    // Subscription plugin will handle the 'gone' notification as well and make\n    // sure the websocket is disconnected.  Here we only disconnect the user with\n    // reason GONE to trigger the auth:changed event for the client.\n    // This is for backwards compatibility with 3.x connect flow.  If you\n    // are using the new method of connecting, using setCredentials or setToken\n    // and subscribe, then you should be using the 'subscription:change' event\n    // instead of the 'auth:change' event.\n\n    // Dispatch a disconnect finished action to trigger \"user disconnected\" logic.\n    yield put(actions.disconnectFinished({ reason: DISCONNECT_REASONS.GONE }))\n  }\n}\n\n/**\n * Triggers onConnectionLost saga when a connectivity.WS_RECONNECT_FAILED actionType occurs.\n * This is only here to maintain backwards compatibility with the auth connect flow. Moving\n * forward, this will be handled by the subscription plugin instead.\n * @method onConnectionLostEntry\n */\nexport function * onConnectionLostEntry () {\n  yield takeEvery(connectivityActionTypes.WS_RECONNECT_FAILED, onConnectionLost)\n}\n\n/**\n * Handles lost connections from the connectivity plugin\n * @method onConnectionLost\n */\nexport function * onConnectionLost () {\n  yield put(actions.disconnectFinished({ reason: DISCONNECT_REASONS.LOST_CONNECTION }))\n}\n","import { mapKeys } from 'lodash/fp'\n\n/**\n * Helper function. Converts an object so that its keys are the same as its values.\n * @method mapValuesToKeys\n * @param  {Object} source\n * @return {Object}\n */\nfunction mapValuesToKeys (source) {\n  return mapKeys(function (value) {\n    return source[value]\n  })(source)\n}\n\n/**\n * Enum of FCS call states.\n * Key is the \"code\" that FCS uses, and value is the text representation.\n * These are taken from FCS callManager.js, but inversed.\n *      See `fcs.call.States`.\n * @type {Object}\n */\nexport const FCS_CALL_STATES = {\n  0: 'IN_CALL',\n  1: 'ON_HOLD',\n  2: 'RINGING',\n  3: 'ENDED',\n  4: 'REJECTED',\n  5: 'OUTGOING',\n  6: 'INCOMING',\n  7: 'ANSWERING',\n  8: 'JOINED',\n  9: 'RENEGOTIATION',\n  10: 'TRANSFERRED',\n  11: 'ON_REMOTE_HOLD',\n  12: 'CALL_IN_PROGRESS',\n  13: 'EARLY_MEDIA',\n  14: 'TRANSFER_FAILURE',\n  15: 'REPLACING'\n}\n\n/**\n * Call states.\n * Same as FCS_CALL_STATES, except both key and value are the text representation.\n * @name CALL_STATES_FCS\n */\nexport const CALL_STATES_FCS = mapValuesToKeys(FCS_CALL_STATES)\n\n/**\n * Call states\n * Call states used in the cpaas and link call plugins\n * @name CALL_STATES\n */\nexport const CALL_STATES = {\n  INITIATING: 'Initiating',\n  INITIATED: 'Initiated',\n  EARLY_MEDIA: 'Early Media',\n  RINGING: 'Ringing',\n  CANCELLED: 'Cancelled',\n  CONNECTED: 'Connected',\n  ON_HOLD: 'On Hold',\n  ENDED: 'Ended'\n}\n\n/**\n * Possible states a call's media can be in.\n * Describes whether media is flowing or if an endpoint is preventing media flow.\n * @name CALL_MEDIA_STATES\n * @type {Object}\n * @property {string} CONNECTED Both call endpoints allow for media to flow.\n * @property {string} LOCAL_HOLD Local endpoint disallows media from flowing.\n * @property {string} REMOTE_HOLD Remote endpoint disallows media from flowing.\n * @property {string} DUAL_HOLD Both endpoints disallow media from flowing.\n */\nexport const CALL_MEDIA_STATES = {\n  CONNECTED: 'Connected',\n  LOCAL_HOLD: 'Local Hold',\n  REMOTE_HOLD: 'Remote Hold',\n  DUAL_HOLD: 'Dual Hold'\n}\n\n/**\n * Call operations that require negotiation.\n * @name OPERATIONS\n * @type {Object}\n * @property {string} CHANGE_MEDIA Media flow remains the same, includes non-flow related media changes.\n * @property {string} HOLD_MEDIA   Media flow stops. May include non-flow related media changes.\n * @property {string} UNHOLD_MEDIA Media flow restarts. May include non-flow related media changes.\n * @property {string} MUSIC_ON_HOLD Media flow changes to sendonly.\n */\nexport const OPERATIONS = {\n  CHANGE_MEDIA: 'Change Media',\n  HOLD_MEDIA: 'Hold Media',\n  UNHOLD_MEDIA: 'Unhold Media',\n  MUSIC_ON_HOLD: 'Music on hold'\n}\n\n/**\n * Complex call operations.\n * @name COMPLEX_OPERATIONS\n * @type {Object}\n * @property {string} DIRECT_TRANSFER\n * @property {string} CONSULTATIVE_TRANSFER\n * @property {string} JOIN\n */\nexport const COMPLEX_OPERATIONS = {\n  DIRECT_TRANSFER: 'Direct Transfer',\n  CONSULTATIVE_TRANSFER: 'Consultative Transfer',\n  JOIN: 'Join'\n}\n\n/**\n * Complex call operation messages.\n * @name COMPLEX_OPERATION_MESSAGES\n * @type {Object}\n * @property {string} DIRECT_TRANSFER_SUCCESS Success message for direct transfer.\n * @property {string} CONSULTATIVE_TRANSFER_SUCCESS Success message for consultative transfer (matches reasonText from notification).\n * @property {string} JOIN_SUCCESS Success message for join.\n * @property {string} DIRECT_TRANSFER_FAILURE Failure message for direct transfer.\n * @property {string} CONSULTATIVE_TRANSFER_FAILURE Failure message for consultative transfer.\n * @property {string} JOIN_FAILURE Failure message for join.\n */\nexport const COMPLEX_OPERATION_MESSAGES = {\n  DIRECT_TRANSFER_SUCCESS: 'Direct Transfer Successful',\n  CONSULTATIVE_TRANSFER_SUCCESS: 'Transfer Successful',\n  JOIN_SUCCESS: 'Join Successful',\n  DIRECT_TRANSFER_FAILURE: 'Direct Transfer Failed',\n  CONSULTATIVE_TRANSFER_FAILURE: 'Transfer Failed',\n  JOIN_FAILURE: 'Join Failed'\n}\n\n/**\n * Status codes that match success messsages.\n * @name STATUS_CODES\n * @type {Object}\n * @property {number} DIRECT_TRANSFER_SUCCESS Status code for successful direct transfer.\n * @property {number} CONSULTATIVE_TRANSFER_SUCCESS Status code for successful consultative transfer.\n * @property {number} JOIN_SUCCESS Status code for successful join.\n * @property {number} DIRECT_TRANSFER_FAILURE Status code for failed direct transfer.\n * @property {number} CONSULTATIVE_TRANSFER_FAILURE Status code for failed consultative transfer.\n * @property {number} JOIN_FAILURE Status code for failed join.\n */\nexport const STATUS_CODES = {\n  DIRECT_TRANSFER_SUCCESS: 9905,\n  CONSULTATIVE_TRANSFER_SUCCESS: 9905,\n  JOIN_SUCCESS: 9906,\n  DIRECT_TRANSFER_FAILURE: -1,\n  CONSULTATIVE_TRANSFER_FAILURE: -1,\n  JOIN_FAILURE: -2\n}\n\n/**\n * Call direction\n * Indication of which direction the call is going\n * @name CALL_DIRECTION\n */\nexport const CALL_DIRECTION = {\n  INCOMING: 'incoming',\n  OUTGOING: 'outgoing'\n}\n\n/**\n * The default bandwidth limits to use for a track type.\n * @name BANDWIDTH_DEFAULTS\n */\nexport const BANDWIDTH_DEFAULTS = {\n  AUDIO: 5000,\n  VIDEO: 5000\n}\n\n/*\n * A conversion from MediaDeviceInfo.kind values to their more common terms.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/kind\n */\nexport const WEBRTC_DEVICE_KINDS = {\n  audioinput: 'microphone',\n  videoinput: 'camera',\n  audiooutput: 'speaker'\n}\n\n/**\n * Enum of ICE media states.\n * These are taken from FCS call, but inversed.\n *      See `fcs.call.MediaStates`.\n * @name FCS_ICE_MEDIA_STATES\n * @type {Object}\n */\nexport const FCS_ICE_MEDIA_STATES = {\n  0: 'NEW',\n  1: 'CHECKING',\n  2: 'CONNECTED',\n  3: 'COMPLETED',\n  4: 'FAILED',\n  5: 'DISCONNECTED',\n  6: 'CLOSED'\n}\n\n/**\n * ICE media states.\n * Same as FCS_ICE_MEDIA_STATES, except both key and value are the text representation.\n * @name ICE_MEDIA_STATES\n */\nexport const ICE_MEDIA_STATES = mapValuesToKeys(FCS_ICE_MEDIA_STATES)\n","// Call plugin.\nimport { getCallById } from '../../../call/interfaceNew/selectors'\nimport { CALL_STATES } from '../../constants'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../errors'\n\n// Libraries.\nimport { call, select } from 'redux-saga/effects'\nimport { difference, isArray, isObject } from 'lodash/fp'\n\n/**\n * Helper function for sagas that need to perform an operation\n *    on a webRTC session. Checks for common \"error scenarios\".\n * Retrieves information about a \"session\" associated with the\n *    provided call id. \"Session info\" includes the call state\n *    object and webRTC stack session object. Includes an error\n *    if the session is not \"usable\".\n * @method getSessionInfoByCallId\n * @param  {Object} webRTC The webRTC stack.\n * @param  {string} callId The ID of the call.\n * @return {Object} An object with session, targetCall, and/or error objects.\n * @example\n * const callId = action.payload.id\n * const { session, targetCall, error } = yield call(getSessionInfoByCallId, webRTC, callId)\n *\n * if (error) {\n *  // Handle session not being retrievable / common error scenarios.\n * } else if (...) {\n *   // Check for specific error scenarios.\n * } else {\n *   // Operate on session.\n * }\n */\nexport function * getSessionInfoByCallId (webRTC, callId) {\n  const targetCall = yield select(getCallById, callId)\n\n  if (!targetCall) {\n    return {\n      error: new BasicError({\n        message: 'Call state not found: invalid call ID.',\n        code: callCodes.INVALID_PARAM\n      })\n    }\n  } else if (targetCall.state === CALL_STATES.ENDED) {\n    return {\n      targetCall,\n      error: new BasicError({\n        message: 'Call is wrong state: call is already ended.',\n        code: callCodes.INVALID_STATE\n      })\n    }\n  } else if (!targetCall.webrtcSessionId) {\n    return {\n      targetCall,\n      error: new BasicError({\n        message: 'State issue: Call has no webrtcSessionId.',\n        code: callCodes.STATE_DESYNC\n      })\n    }\n  }\n\n  const session = yield call([webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n\n  if (!session) {\n    return {\n      targetCall,\n      error: new BasicError({\n        message: 'Session not found: no active webRTC session for call.',\n        code: callCodes.STATE_DESYNC\n      })\n    }\n  }\n\n  return { targetCall, session }\n}\n\n/**\n * Helper function: Check that the call is in an expected state.\n * @method validateCallState\n * @param  {string} callId ID for the call to validate.\n * @param  {Object} expected  Properties that the call state is expected to have.\n * @return {BasicError}\n */\nexport function * validateCallState (callId, expected) {\n  /**\n   * Checks whether set is contained within whole.\n   * Tracks which properties of set are not the same as whole.\n   * @method isSubsetOf\n   * @param  {Object} set\n   * @param  {Object} whole\n   * @return {Array} List of set properties that are not the same as whole.\n   */\n  function isSubsetOf (set, whole) {\n    const differences = []\n    // Ensure that each property in the set is also part of the whole.\n    for (let prop in set) {\n      if (isArray(set[prop])) {\n        // Compare arrays.\n        if (difference(set[prop], whole[prop]).length > 0) {\n          differences.push(prop)\n        }\n      } else if (isObject(set[prop])) {\n        // Compare objects (recursively).\n        if (isSubsetOf(set[prop], whole[prop]).length > 0) {\n          // Don't recursively add to differences.\n          differences.push(prop)\n        }\n      } else {\n        // Compare everything else.\n        if (set[prop] !== whole[prop]) {\n          differences.push(prop)\n        }\n      }\n    }\n\n    return differences\n  }\n\n  const targetCall = yield select(getCallById, callId)\n\n  // Ensure the call state exists.\n  if (!targetCall) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  }\n\n  // Check whether the expected properties are a subset of the call properties.\n  const differences = isSubsetOf(expected, targetCall)\n\n  if (differences.length === 0) {\n    return false\n  } else {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state (${differences}).`\n    })\n  }\n}\n\n/**\n * SDP handler function that should be passed into session object's `processOffer` and `processAnswer` function.\n * This function disables old media encryption method SDES (Modifies sdp by removing crypto).\n * However, if only SDES is available, don't disable it.\n * @method sanitizeSdesFromSdp\n * @param {Object} newSdp The sdp so far (could have been modified by previous handlers).\n * @param {Object} info Information about the session description.\n * @param {RTCSdpType} info.type The session description's type.\n * @param {string} info.step The step that will occur after the Pipeline is run.\n * @param {string} info.endpoint Which end of the connection created the SDP.\n * @param {Object} originalSdp The sdp in its initial state.\n * @return {Object} The sanitized sdp with crypto removed (if fingerprint exists)\n */\nexport function sanitizeSdesFromSdp (newSdp, info, originalSdp) {\n  for (let mLine of newSdp.media) {\n    if (mLine.crypto && mLine.fingerprint) {\n      delete mLine.crypto\n    }\n  }\n  return newSdp\n}\n","const PREFIX = '@@KANDY/'\n\nexport const MAKE_CALL = PREFIX + 'MAKE_CALL'\nexport const MAKE_CALL_FINISH = PREFIX + 'MAKE_CALL_FINISH'\nexport const CALL_INCOMING = PREFIX + 'CALL_INCOMING'\nexport const ANSWER_CALL = PREFIX + 'ANSWER_CALL'\nexport const ANSWER_CALL_FINISH = PREFIX + 'ANSWER_CALL_FINISH'\nexport const IGNORE_CALL = PREFIX + 'IGNORE_CALL'\nexport const IGNORE_CALL_FINISH = PREFIX + 'IGNORE_CALL_FINISH'\nexport const REJECT_CALL = PREFIX + 'REJECT_CALL'\nexport const REJECT_CALL_FINISH = PREFIX + 'REJECT_CALL_FINISH'\nexport const END_CALL = PREFIX + 'END_CALL'\nexport const END_CALL_FINISH = PREFIX + 'END_CALL_FINISH'\n\nexport const CALL_STATE_CHANGE = PREFIX + 'CALL_STATE_CHANGE'\nexport const CALL_MEDIA_STATE_CHANGE = PREFIX + 'CALL_MEDIA_STATE_CHANGE'\n\nexport const START_LOCAL_VIDEO = PREFIX + 'START_LOCAL_VIDEO'\nexport const START_LOCAL_VIDEO_FINISH = PREFIX + 'START_LOCAL_VIDEO_FINISH'\nexport const STOP_LOCAL_VIDEO = PREFIX + 'STOP_LOCAL_VIDEO'\nexport const STOP_LOCAL_VIDEO_FINISH = PREFIX + 'STOP_LOCAL_VIDEO_FINISH'\n\n/*\n *   Mid-Call operations.\n */\nexport const MUTE_CALL = PREFIX + 'MUTE_CALL'\nexport const MUTE_CALL_FINISH = PREFIX + 'MUTE_CALL_FINISH'\nexport const UNMUTE_CALL = PREFIX + 'UNMUTE_CALL'\nexport const UNMUTE_CALL_FINISH = PREFIX + 'UNMUTE_CALL_FINISH'\n\nexport const SILENCE_CALL = PREFIX + 'SILENCE_CALL'\nexport const SILENCE_CALL_FINISH = PREFIX + 'SILENCE_CALL_FINISH'\nexport const UNSILENCE_CALL = PREFIX + 'UNSILENCE_CALL'\nexport const UNSILENCE_CALL_FINISH = PREFIX + 'UNSILENCE_CALL_FINISH'\n\nexport const SET_CUSTOM_PARAMETERS = PREFIX + 'SET_CUSTOM_PARAMETERS'\n\nexport const START_VIDEO = PREFIX + 'START_VIDEO'\nexport const START_VIDEO_FINISH = PREFIX + 'START_VIDEO_FINISH'\nexport const STOP_VIDEO = PREFIX + 'STOP_VIDEO'\nexport const STOP_VIDEO_FINISH = PREFIX + 'STOP_VIDEO_FINISH'\n\nexport const HOLD_CALL = PREFIX + 'HOLD_CALL'\nexport const HOLD_CALL_FINISH = PREFIX + 'HOLD_CALL_FINISH'\nexport const UNHOLD_CALL = PREFIX + 'UNHOLD_CALL'\nexport const UNHOLD_CALL_FINISH = PREFIX + 'UNHOLD_CALL_FINISH'\n\nexport const START_SCREENSHARE = PREFIX + 'START_SCREENSHARE'\nexport const START_SCREENSHARE_FINISH = PREFIX + 'START_SCREENSHARE_FINISH'\nexport const STOP_SCREENSHARE = PREFIX + 'STOP_SCREENSHARE'\nexport const STOP_SCREENSHARE_FINISH = PREFIX + 'STOP_SCREENSHARE_FINISH'\n\nexport const FORWARD_CALL = PREFIX + 'FORWARD_CALL'\nexport const FORWARD_CALL_FINISH = PREFIX + 'FORWARD_CALL_FINISH'\n\nexport const DIRECT_TRANSFER = PREFIX + 'DIRECT_TRANSFER'\nexport const DIRECT_TRANSFER_FINISH = PREFIX + 'DIRECT_TRANSFER_FINISH'\n\nexport const CONSULTATIVE_TRANSFER = PREFIX + 'CONSULTATIVE_TRANSFER'\nexport const CONSULTATIVE_TRANSFER_FINISH = PREFIX + 'CONSULTATIVE_TRANSFER_FINISH'\n\nexport const JOIN_CALL = PREFIX + 'JOIN_CALL'\nexport const JOIN_CALL_FINISH = PREFIX + 'JOIN_CALL_FINISH'\n\nexport const SEND_CUSTOM_PARAMETERS = PREFIX + 'SEND_CUSTOM_PARAMETERS'\nexport const SEND_CUSTOM_PARAMETERS_FINISH = PREFIX + 'SEND_CUSTOM_PARAMETERS_FINISH'\n\nexport const SEND_DTMF = PREFIX + 'SEND_DTMF'\nexport const SEND_DTMF_FINISH = PREFIX + 'SEND_DTMF_FINISH'\n\n// Media devices.\nexport const CHECK_DEVICES = PREFIX + 'CHECK_DEVICES'\nexport const CHECK_DEVICES_FINISH = PREFIX + 'CHECK_DEVICES_FINISH'\n\nexport const SET_DEFAULT_DEVICES = PREFIX + 'SET_DEFAULT_DEVICES'\nexport const SET_DEFAULT_DEVICES_FINISH = PREFIX + 'SET_DEFAULT_DEVICES_FINISH'\n\nexport const PROMPT_USER_MEDIA = PREFIX + 'PROMPT_USER_MEDIA'\nexport const PROMPT_USER_MEDIA_FINISH = PREFIX + 'PROMPT_USER_MEDIA_FINISH'\n\nexport const CHANGE_SPEAKER = PREFIX + 'CHANGE_SPEAKER'\nexport const CHANGE_SPEAKER_FINISH = PREFIX + 'CHANGE_SPEAKER_FINISH'\n\nexport const CHANGE_INPUT_DEVICES = PREFIX + 'CHANGE_INPUT_DEVICES'\nexport const CHANGE_INPUT_DEVICES_FINISH = PREFIX + 'CHANGE_INPUT_DEVICES_FINISH'\n\n// Media\nexport const INIT_MEDIA = PREFIX + 'INIT_MEDIA'\nexport const INIT_MEDIA_FINISH = PREFIX + 'INIT_MEDIA_FINISH'\n\n// Call Me\nexport const MAKE_CALL_ANONYMOUS = PREFIX + 'MAKE_CALL_ANONYMOUS'\n\n// Audio Bridge\nexport const CREATE_AUDIO_BRIDGE = PREFIX + 'CREATE_AUDIO_BRIDGE'\nexport const CREATE_AUDIO_BRIDGE_FINISH = PREFIX + 'CREATE_AUDIO_BRIDGE_FINISH'\n\nexport const CLOSE_AUDIO_BRIDGE = PREFIX + 'CLOSE_AUDIO_BRIDGE'\nexport const CLOSE_AUDIO_BRIDGE_FINISH = PREFIX + 'CLOSE_AUDIO_BRIDGE_FINISH'\n\nexport const BRIDGE_ADD_CALL = PREFIX + 'BRIDGE_ADD_CALL'\nexport const BRIDGE_ADD_CALL_FINISH = PREFIX + 'BRIDGE_ADD_CALL_FINISH'\n\nexport const BRIDGE_REMOVE_CALL = PREFIX + 'BRIDGE_REMOVE_CALL'\nexport const BRIDGE_REMOVE_CALL_FINISH = PREFIX + 'BRIDGE_REMOVE_CALL_FINISH'\n\nexport const MUTE_AUDIO_BRIDGE = PREFIX + 'MUTE_AUDIO_BRIDGE'\nexport const MUTE_AUDIO_BRIDGE_FINISH = PREFIX + 'MUTE_AUDIO_BRIDGE_FINISH'\n\nexport const UNMUTE_AUDIO_BRIDGE = PREFIX + 'UNMUTE_AUDIO_BRIDGE'\nexport const UNMUTE_AUDIO_BRIDGE_FINISH = PREFIX + 'UNMUTE_AUDIO_BRIDGE_FINISH'\n\nexport const SILENCE_AUDIO_BRIDGE = PREFIX + 'SILENCE_AUDIO_BRIDGE'\nexport const SILENCE_AUDIO_BRIDGE_FINISH = PREFIX + 'SILENCE_AUDIO_BRIDGE_FINISH'\n\nexport const UNSILENCE_AUDIO_BRIDGE = PREFIX + 'UNSILENCE_AUDIO_BRIDGE'\nexport const UNSILENCE_AUDIO_BRIDGE_FINISH = PREFIX + 'UNSILENCE_AUDIO_BRIDGE_FINISH'\n\nexport const UPDATE_AUDIO_BRIDGE_CALLS = PREFIX + 'UPDATE_AUDIO_BRIDGE_CALLS'\n","import { cloneDeep, find } from 'lodash/fp'\n\n/**\n * Retrieves the config options provided by the call plugin.\n * @method getCallConfig\n * @return {Object}\n */\nexport function getCallConfig (state) {\n  return cloneDeep(state.config.call)\n}\n\n/**\n * Retrieves all calls in state.\n * @method getCalls\n * @param  {Object} state    Redux state.\n * @return {Array} Call objects.\n */\nexport function getCalls (state) {\n  return cloneDeep(state.call.calls)\n}\n\n/**\n * Retrieves a call from state with a specific call ID.\n * @method getCallById\n * @param  {Object}    state  Redux state.\n * @param  {string}    callId The ID of the call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallById (state, callId) {\n  return find(call => call.id === callId, getCalls(state))\n}\n\n/**\n * Retrieves custom parameters from a call with a specific call ID.\n * @method getCustomParametersById\n * @param  {Object}    state  Redux state.\n * @param  {string}    callId The ID of the call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCustomParametersById (state, callId) {\n  let call = find(call => call.id === callId, getCalls(state))\n  if (call && call.customParameters) {\n    return call.customParameters\n  }\n  return []\n}\n\n/**\n * Retrieves media devices available on the system.\n * @method getDevices\n * @param  {Object}    state  Redux state.\n * @return {Object}\n */\nexport function getDevices (state) {\n  return cloneDeep(state.call.devices)\n}\n\n/**\n * Retrieves media support information.\n * @method getMediaInfo\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getMediaInfo (state) {\n  return cloneDeep(state.call.media)\n}\n\n/**\n * Retrieves audio bridge information.\n * @method getAudioBridges\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getAudioBridges (state) {\n  return cloneDeep(state.call.audioBridges)\n}\n\n/**\n * Retrieve all calls currently part of an audio bridge.\n * @method getBridgeCalls\n * @param state\n * @param bridgeId\n * @return {Array} List of calls currently part of the specified audio bridge.\n */\nexport function getBridgeCalls (state, bridgeId) {\n  return cloneDeep(find(bridge => bridge.id === bridgeId, getAudioBridges(state)).calls)\n}\n","const callPrefix = '@@KANDY/CALL/'\n\n/**\n * Basic call operation actions.\n */\nexport const MAKE_CALL = callPrefix + 'MAKE'\nexport const PENDING_MAKE_CALL = callPrefix + 'PENDING_MAKE'\nexport const SESSION_CREATED = callPrefix + 'SESSION_CREATED'\nexport const MAKE_CALL_FINISH = callPrefix + 'MAKE_FINISH'\n\nexport const MAKE_ANONYMOUS_CALL = callPrefix + 'MAKE_ANONYMOUS_CALL'\nexport const MAKE_ANONYMOUS_CALL_FINISH = callPrefix + 'MAKE_ANONYMOUS_CALL_FINISH'\n\nexport const CALL_INCOMING = callPrefix + 'INCOMING'\n\nexport const CALL_RINGING = callPrefix + 'RINGING'\nexport const SESSION_PROGRESS = callPrefix + 'SESSION_PROGRESS'\nexport const CALL_CANCELLED = callPrefix + 'CANCELLED'\n\nexport const CALL_AUDIT = callPrefix + 'AUDIT'\n\nexport const ANSWER_CALL = callPrefix + 'ANSWER'\nexport const ANSWER_CALL_FINISH = callPrefix + 'ANSWER_FINISH'\n\nexport const REJECT_CALL = callPrefix + 'REJECT'\nexport const REJECT_CALL_FINISH = callPrefix + 'REJECT_FINISH'\n\nexport const IGNORE_CALL = callPrefix + 'IGNORE'\nexport const IGNORE_CALL_FINISH = callPrefix + 'IGNORE_FINISH'\n\nexport const CALL_ACCEPTED = callPrefix + 'ACCEPTED'\n\nexport const END_CALL = callPrefix + 'END'\nexport const END_CALL_FINISH = callPrefix + 'END_FINISH'\n\nexport const FORWARD_CALL = callPrefix + 'FORWARD_CALL'\nexport const FORWARD_CALL_FINISH = callPrefix + 'FORWARD_CALL_FINISH'\n\nexport const PENDING_OPERATION = callPrefix + 'PENDING_OPERATION'\n\n/**\n * Mid-call operation actions.\n */\n\nexport const UPDATE_CALL = callPrefix + 'UPDATE_CALL'\n\nexport const CALL_HOLD = callPrefix + 'HOLD'\nexport const CALL_HOLD_FINISH = callPrefix + 'HOLD_FINISH'\n\nexport const CALL_UNHOLD = callPrefix + 'UNHOLD'\nexport const CALL_UNHOLD_FINISH = callPrefix + 'UNHOLD_FINISH'\n\nexport const SET_CUSTOM_PARAMETERS = callPrefix + 'SET_CUSTOM_PARAMETERS'\n\nexport const SEND_CUSTOM_PARAMETERS = callPrefix + 'SEND_CUSTOM_PARAMETERS'\nexport const SEND_CUSTOM_PARAMETERS_FINISH = callPrefix + 'SEND_CUSTOM_PARAMETERS_FINISH'\n\nexport const ADD_MEDIA = callPrefix + 'ADD_MEDIA'\nexport const ADD_MEDIA_FINISH = callPrefix + 'ADD_MEDIA_FINISH'\nexport const ADD_BASIC_MEDIA = callPrefix + 'ADD_BASIC_MEDIA'\n\nexport const REMOVE_MEDIA = callPrefix + 'REMOVE_MEDIA'\nexport const REMOVE_MEDIA_FINISH = callPrefix + 'REMOVE_MEDIA_FINISH'\nexport const REMOVE_BASIC_MEDIA = callPrefix + 'REMOVE_BASIC_MEDIA'\n\nexport const RENEGOTIATE = callPrefix + 'RENEGOTIATE'\nexport const RENEGOTIATE_FINISH = callPrefix + 'RENEGOTIATE_FINISH'\n\nexport const MUSIC_ON_HOLD = callPrefix + 'MUSIC_ON_HOLD'\n\nexport const SEND_DTMF = callPrefix + 'SEND_DTMF'\nexport const SEND_DTMF_FINISH = callPrefix + 'SEND_DTMF_FINISH'\n\nexport const GET_STATS = callPrefix + 'GET_STATS'\nexport const GET_STATS_FINISH = callPrefix + 'GET_STATS_FINISH'\n\nexport const CONSULTATIVE_TRANSFER = callPrefix + 'CONSULTATIVE_TRANSFER'\nexport const PENDING_CONSULTATIVE_TRANSFER = callPrefix + 'PENDING_CONSULTATIVE_TRANSFER'\nexport const CONSULTATIVE_TRANSFER_FINISH = callPrefix + 'CONSULTATIVE_TRANSFER_FINISH'\n\nexport const DIRECT_TRANSFER = callPrefix + 'DIRECT_TRANSFER'\nexport const DIRECT_TRANSFER_FINISH = callPrefix + 'DIRECT_TRANSFER_FINISH'\n\nexport const JOIN = callPrefix + 'JOIN'\nexport const PENDING_JOIN = callPrefix + 'PENDING_JOIN'\nexport const JOIN_FINISH = callPrefix + 'JOIN_FINISH'\n\nexport const REPLACE_TRACK = callPrefix + 'REPLACE_TRACK'\nexport const REPLACE_TRACK_FINISH = callPrefix + 'REPLACE_TRACK_FINISH'\n\n/**\n * Miscellaneous call actions\n */\nexport const CUSTOM_PARAMETERS_RECEIVED = callPrefix + 'CUSTOM_PARAMETERS_RECEIVED'\nexport const GET_AVAILABLE_CODECS = callPrefix + 'GET_AVAILABLE_CODECS'\nexport const AVAILABLE_CODECS_RETRIEVED = callPrefix + 'AVAILABLE_CODECS_RETRIEVED'\n\n/**\n * Remote operation actions.\n */\nexport const CALL_REMOTE_HOLD_FINISH = callPrefix + 'REMOTE_HOLD_FINISH'\nexport const CALL_REMOTE_UNHOLD_FINISH = callPrefix + 'REMOTE_UNHOLD_FINISH'\nexport const REMOTE_ADD_MEDIA_FINISH = callPrefix + 'REMOTE_ADD_MEDIA_FINISH'\nexport const REMOTE_REMOVE_MEDIA_FINISH = callPrefix + 'REMOTE_REMOVE_MEDIA_FINISH'\nexport const REMOTE_START_MOH_FINISH = callPrefix + 'REMOTE_START_MOH_FINISH'\nexport const REMOTE_STOP_MOH_FINISH = callPrefix + 'REMOTE_STOP_MOH_FINISH'\nexport const REMOTE_SLOW_START = callPrefix + 'REMOTE_SLOW_START'\n\n/**\n * Turn action types.\n */\nconst turnPrefix = callPrefix + 'TURN/'\n\nexport const TURN_CHANGED = turnPrefix + 'CHANGED'\n\n/**\n * Track action types.\n */\nconst trackPrefix = callPrefix + 'TRACK/'\n\nexport const TRACK_ADDED = trackPrefix + 'ADDED'\nexport const TRACK_REMOVED = trackPrefix + 'REMOVED'\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { isEmpty } from 'lodash/fp'\n\n/**\n * Helper function for formatting call actions.\n * @method callActionHelper\n * @param  {string} type Action type.\n * @param  {string} id Id of the call being acted on.\n * @param  {Object} [payload={}]\n * @param  {BasicError} [payload.error]\n * @param  {Object} [meta={}]\n * @return {Object} An action.\n */\nexport function callActionHelper (type, id, payload = {}, meta = {}) {\n  /**\n   * Call action format.\n   * Call actions are not FSA-compliant because there are cases where we need\n   *    to provide useful info (for the SDK) and an error object (for the app).\n   *    FSA would require the error object to be the entirety of the payload.\n   * @type {Object}\n   * {\n   *   type,\n   *   payload: {\n   *    ...usefulInfo,\n   *    errorObject\n   *   },\n   *   error,\n   *   meta\n   * }\n   */\n  const action = {\n    type,\n    payload: {\n      ...payload,\n      id\n    }\n  }\n  // Only have meta and error properties on the action if they're needed.\n  if (!isEmpty(meta)) {\n    action.meta = meta\n  }\n  if (payload.error) {\n    action.error = true\n  }\n  return action\n}\n\nexport function makeCall (id, options) {\n  return callActionHelper(actionTypes.MAKE_CALL, id, options)\n}\n\nexport function sessionCreated (id, params) {\n  return callActionHelper(actionTypes.SESSION_CREATED, id, params)\n}\n\nexport function pendingMakeCall (id, options) {\n  return callActionHelper(actionTypes.PENDING_MAKE_CALL, id, options)\n}\n\nexport function makeCallFinish (id, params) {\n  return callActionHelper(actionTypes.MAKE_CALL_FINISH, id, params)\n}\n\nexport function makeAnonymousCall (id, params) {\n  return {\n    type: actionTypes.MAKE_ANONYMOUS_CALL,\n    payload: {\n      id,\n      callee: params.callee,\n      credentials: params.credentials,\n      mediaConstraints: params.mediaConstraints,\n      callOptions: params.callOptions\n    }\n  }\n}\n\nexport function makeAnonymousCallFinish (id, params) {\n  return callActionHelper(actionTypes.MAKE_ANONYMOUS_CALL_FINISH, id, params)\n}\n\nexport function callIncoming (id, params) {\n  return callActionHelper(actionTypes.CALL_INCOMING, id, params)\n}\n\nexport function callRinging (id, params) {\n  return callActionHelper(actionTypes.CALL_RINGING, id, params)\n}\n\nexport function sessionProgress (id, params) {\n  return callActionHelper(actionTypes.SESSION_PROGRESS, id, params)\n}\n\nexport function callCancelled (id, params) {\n  return callActionHelper(actionTypes.CALL_CANCELLED, id, params)\n}\n\nexport function sendCallAudit (id, params) {\n  return callActionHelper(actionTypes.CALL_AUDIT, id, params)\n}\n\nexport function answerCall (id, options) {\n  return callActionHelper(actionTypes.ANSWER_CALL, id, options)\n}\n\nexport function answerCallFinish (id, params, meta) {\n  return callActionHelper(actionTypes.ANSWER_CALL_FINISH, id, params, meta)\n}\n\nexport function rejectCall (id, options) {\n  return callActionHelper(actionTypes.REJECT_CALL, id, options)\n}\n\nexport function rejectCallFinish (id, params) {\n  return callActionHelper(actionTypes.REJECT_CALL_FINISH, id, params)\n}\n\nexport function callAccepted (id, params) {\n  return callActionHelper(actionTypes.CALL_ACCEPTED, id, params)\n}\n\nexport function ignoreCall (id, params) {\n  return callActionHelper(actionTypes.IGNORE_CALL, id, params)\n}\n\nexport function ignoreCallFinish (id, params) {\n  return callActionHelper(actionTypes.IGNORE_CALL_FINISH, id, params)\n}\n\nexport function endCall (id, params) {\n  return callActionHelper(actionTypes.END_CALL, id, params)\n}\n\nexport function endCallFinish (id, params) {\n  return callActionHelper(actionTypes.END_CALL_FINISH, id, params)\n}\n\nexport function holdCall (id, options) {\n  return callActionHelper(actionTypes.CALL_HOLD, id, options)\n}\n\nexport function holdCallFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_HOLD_FINISH, id, params)\n}\n\nexport function unholdCall (id, options) {\n  return callActionHelper(actionTypes.CALL_UNHOLD, id, options)\n}\n\nexport function unholdCallFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_UNHOLD_FINISH, id, params)\n}\n\nexport function setCustomParameters (id, customParameters) {\n  const action = {\n    type: actionTypes.SET_CUSTOM_PARAMETERS,\n    payload: {\n      id,\n      customParameters\n    }\n  }\n  return action\n}\n\nexport function sendCustomParameters (id, options) {\n  return callActionHelper(actionTypes.SEND_CUSTOM_PARAMETERS, id, options)\n}\n\nexport function sendCustomParametersFinish (id, params) {\n  return callActionHelper(actionTypes.SEND_CUSTOM_PARAMETERS_FINISH, id, params)\n}\n\nexport function customParametersReceived (id, params) {\n  return callActionHelper(actionTypes.CUSTOM_PARAMETERS_RECEIVED, id, params)\n}\n\nexport function addMedia (id, params) {\n  return callActionHelper(actionTypes.ADD_MEDIA, id, params)\n}\n\nexport function addMediaFinish (id, params) {\n  return callActionHelper(actionTypes.ADD_MEDIA_FINISH, id, params)\n}\n\nexport function addBasicMedia (id, params) {\n  return callActionHelper(actionTypes.ADD_BASIC_MEDIA, id, params)\n}\n\nexport function removeMedia (id, params) {\n  return callActionHelper(actionTypes.REMOVE_MEDIA, id, params)\n}\n\nexport function removeMediaFinish (id, params) {\n  return callActionHelper(actionTypes.REMOVE_MEDIA_FINISH, id, params)\n}\n\nexport function removeBasicMedia (id, params) {\n  return callActionHelper(actionTypes.REMOVE_BASIC_MEDIA, id, params)\n}\n\nexport function renegotiate (id, params) {\n  return callActionHelper(actionTypes.RENEGOTIATE, id, params)\n}\n\nexport function renegotiateFinish (id, params) {\n  return callActionHelper(actionTypes.RENEGOTIATE_FINISH, id, params)\n}\n\nexport function sendDTMF (id, params) {\n  return callActionHelper(actionTypes.SEND_DTMF, id, params)\n}\n\nexport function sendDTMFFinish (id, params) {\n  return callActionHelper(actionTypes.SEND_DTMF_FINISH, id, params)\n}\n\nexport function getStats (id, params) {\n  return callActionHelper(actionTypes.GET_STATS, id, params)\n}\n\nexport function getStatsFinish (id, params) {\n  return callActionHelper(actionTypes.GET_STATS_FINISH, id, params)\n}\n\nexport function forwardCall (id, params) {\n  return callActionHelper(actionTypes.FORWARD_CALL, id, params)\n}\n\nexport function forwardCallFinish (id, params) {\n  return callActionHelper(actionTypes.FORWARD_CALL_FINISH, id, params)\n}\n\nexport function consultativeTransfer (id, params) {\n  return callActionHelper(actionTypes.CONSULTATIVE_TRANSFER, id, params)\n}\n\nexport function pendingConsultativeTransfer (id, params) {\n  return callActionHelper(actionTypes.PENDING_CONSULTATIVE_TRANSFER, id, params)\n}\n\nexport function consultativeTransferFinish (id, params) {\n  return callActionHelper(actionTypes.CONSULTATIVE_TRANSFER_FINISH, id, params)\n}\n\nexport function directTransfer (id, params) {\n  return callActionHelper(actionTypes.DIRECT_TRANSFER, id, params)\n}\n\nexport function directTransferFinish (id, params) {\n  return callActionHelper(actionTypes.DIRECT_TRANSFER_FINISH, id, params)\n}\n\nexport function join (id, params) {\n  return callActionHelper(actionTypes.JOIN, id, params)\n}\n\nexport function pendingJoin (id, params) {\n  return callActionHelper(actionTypes.PENDING_JOIN, id, params)\n}\n\nexport function joinFinish (id, params) {\n  return callActionHelper(actionTypes.JOIN_FINISH, id, params)\n}\n\nexport function replaceTrack (id, params) {\n  return callActionHelper(actionTypes.REPLACE_TRACK, id, params)\n}\n\nexport function replaceTrackFinish (id, params) {\n  return callActionHelper(actionTypes.REPLACE_TRACK_FINISH, id, params)\n}\n\nexport function pendingOperation (id, params) {\n  return callActionHelper(actionTypes.PENDING_OPERATION, id, params)\n}\n\nexport function getAvailableCodecs (params, deferred) {\n  const action = {\n    type: actionTypes.GET_AVAILABLE_CODECS,\n    payload: {\n      ...params\n    },\n    meta: {\n      deferred\n    }\n  }\n  return action\n}\n\nexport function availableCodecsRetrieved (params) {\n  return callActionHelper(actionTypes.AVAILABLE_CODECS_RETRIEVED, undefined, params)\n}\n\n/*\n * Remote operations.\n */\n\nexport function remoteHoldFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_REMOTE_HOLD_FINISH, id, params)\n}\n\nexport function remoteUnholdFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_REMOTE_UNHOLD_FINISH, id, params)\n}\n\nexport function remoteAddMediaFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_ADD_MEDIA_FINISH, id, params)\n}\n\nexport function remoteRemoveMediaFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_REMOVE_MEDIA_FINISH, id, params)\n}\n\nexport function remoteStartMohFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_START_MOH_FINISH, id, params)\n}\n\nexport function remoteStopMohFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_STOP_MOH_FINISH, id, params)\n}\n\nexport function remoteSlowStart (id, params) {\n  return callActionHelper(actionTypes.REMOTE_SLOW_START, id, params)\n}\n\n// Generic action.\nexport function updateCall (id, params) {\n  return callActionHelper(actionTypes.UPDATE_CALL, id, params)\n}\n","import * as callActionsImport from './call'\nimport * as turnActionsImport from './turn'\n\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\nexport const callActions = callActionsImport\nexport const turnActions = turnActionsImport\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n/**\n * Represents that TURN information has changed.\n * @method turnChanged\n * @return {Object}\n */\nexport function turnChanged ({ servers, credentials }) {\n  return {\n    type: actionTypes.TURN_CHANGED,\n    payload: {\n      servers,\n      credentials\n    }\n  }\n}\n","// Call plugin.\nimport { callActions as actions } from '../actions'\nimport { getCalls, getCallById, getOptions } from '../selectors'\nimport { normalizeSipUri } from '../../utils/normalization'\n\n// Other plugins.\nimport { getUserInfo, getDomain } from '../../../auth/interface/selectors'\nimport { setSdpHandlers } from '../../../config/interface/actions'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\nimport { isEmpty } from 'lodash/fp'\nimport pDefer from 'p-defer'\n\nimport { CALL_STATES } from '../../constants'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\n\nconst log = logManager.getLogger('CALL')\n\nexport default function callAPI ({ dispatch, getState }) {\n  return {\n    /**\n     * Starts an outgoing call to a {@link call.UserID UserID} or a\n     *    {@link call.PhoneNumber PhoneNumber}.\n     *\n     * The call will be tracked by a unique ID that is returned by the API. The\n     *    application will use this ID to identify and control the call after it\n     *    has been initiated.\n     *\n     * The {@link call.getById} API can be used to retrieve the\n     *    current information about the call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:start call:start} event\n     *    locally when the operation completes. When the remote participant\n     *    receives the call, a {@link call.event:call:receive call:receive}\n     *    event will be emitted remotely for them.\n     *\n     * The SDK requires access to the machine's media devices (e.g. microphone)\n     *    in order to make a call. If it does not already have permissions to\n     *    use the devices, the user may be prompted by the browser to give\n     *    permissions.\n     * @public\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method make\n     * @param {call.UserID|call.PhoneNumber} destination The desired destination.\n     * @param {Object} media The media options the call should be initialized with.\n     * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n     * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether the call should have video on start.\n     * @param {Object} [media.videoOptions] Options for configuring the call's video.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     * @returns {string} The generated ID of the newly created call.\n     * @example\n     * // Listen for the event emitted after making a call.\n     * client.on('call:start', function (params) {\n     *   const { callId, error } = params\n     *   if (error) {\n     *     // Call failed to initialize.\n     *   } else {\n     *     // Call was initialized, and the recipient user will be notified.\n     *   }\n     * })\n     * // Make an audio-only call.\n     * const newCallId = client.call.make(destination, { audio: true })\n     */\n\n    /**\n     * Starts an outgoing call to a {@link call.SIP_URI SIP_URI} or a\n     *    {@link call.TEL_URI TEL_URI}.\n     *\n     * The call will be tracked by a unique ID that is returned by the API. The\n     *    application will use this ID to identify and control the call after it\n     *    has been initiated.\n     *\n     * The {@link call.getById} API can be used to retrieve\n     *    the current information about the call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:start call:start} event\n     *    locally when the operation completes. When the remote participant\n     *    receives the call, a {@link call.event:call:receive call:receive}\n     *    event will be emitted remotely for them.\n     *\n     * The SDK requires access to the machine's media devices (eg. microphone)\n     *    in order to make a call. If it does not already have permissions to\n     *    use the devices, the user may be prompted by the browser to give\n     *    permissions.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method make\n     * @param {call.SIP_URI|call.TEL_URI} destination The desired destination.\n     * @param {Object} media The media options the call should be initialized with.\n     * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n     * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether the call should have video on start.\n     * @param {boolean} [media.screen=false] Whether the call should have screenshare on start.\n     * @param {Object} [media.videoOptions] Options for configuring the call's video.\n     * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {string} [options.displayName] Custom display name to be provided to the destination. Not supported in all environments and may use default display name.\n     * @param {Array<call.CustomParameter>} [options.customParameters] Custom SIP header parameters for the SIP backend.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     * @returns {string} The generated ID of the newly created call.\n     * @example\n     * // Listen for the event emitted after making a call.\n     * client.on('call:start', function (params) {\n     *   const { callId, error } = params\n     *   if (error) {\n     *     // Call failed to initialize.\n     *   } else {\n     *     // Call was initialized, and the recipient user will be notified.\n     *   }\n     * })\n     * // Make an audio-only call.\n     * const newCallId = client.call.make(destination, { audio: true })\n     */\n    make (destination, media, options = {}) {\n      log.debug(API_LOG_TAG + 'call.make: ', destination, media, options)\n\n      const callId = uuidV4()\n      const from = getUserInfo(getState()).username\n\n      const mediaConstraints = {\n        audio: media.audio && !isEmpty(media.audioOptions) ? media.audioOptions : media.audio,\n        video: media.video && !isEmpty(media.videoOptions) ? media.videoOptions : media.video,\n        screenShare: media.screen && !isEmpty(media.screenOptions) ? media.screenOptions : media.screen\n      }\n\n      const config = getOptions(getState())\n      if (config.normalizeDestination) {\n        // Normalize callee addresses\n        destination = normalizeSipUri(destination, getDomain(getState()))\n        log.info('Address normalized to: ', destination)\n      }\n\n      dispatch(\n        actions.makeCall(callId, {\n          participantAddress: destination,\n          // TODO: Have better property names.\n          from,\n          mediaConstraints,\n          ...options\n        })\n      )\n      return callId\n    },\n\n    /**\n     * Rejects an incoming call.\n     *\n     * The specified call to reject must be in a ringing state with an incoming\n     *    direction. The call will be ended as a result of the operation.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will be notified, through their own\n     *    {@link call.event:call:stateChange call:stateChange} event, that the\n     *    call was rejected.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @method reject\n     * @param {string} callId The ID of the call to reject.\n     */\n    reject (callId) {\n      log.debug(API_LOG_TAG + 'call.reject: ', callId)\n      dispatch(actions.rejectCall(callId))\n    },\n\n    /**\n     * Answers an incoming call.\n     *\n     * The specified call to answer must be in a ringing state with an incoming\n     *    direction. The call will become connected as a result of the operation.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. This indicates that the\n     *    call has connected with the remote participant. The\n     *    {@link call.getById} API can be used to retrieve the latest call state\n     *    after the change. Further events will be emitted to indicate that the\n     *    call has received media from the remote participant. See the\n     *    {@link call.event:call:newTrack call:newTrack} event for more\n     *    information about this.\n     *\n     * The SDK requires access to the system's media devices (eg. microphone)\n     *    in order to answer a call. If it does not already have permissions to\n     *    use the devices, the user may be prompted by the browser to give\n     *    permissions.\n     * @public\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method answer\n     * @param {string} callId The ID of the call to answer.\n     * @param {Object} media The media options the call should be initialized with.\n     * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n     * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether the call should have video on start.\n     * @param {boolean} [media.screen=false] Whether the call should have screenshare on start.\n     * @param {Object} [media.videoOptions] Options for configuring the call's video.\n     * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     */\n\n    /**\n     * Answers an incoming call.\n     *\n     * The specified call to answer must be in a ringing state with an incoming\n     *    direction. The call will become connected as a result of the operation.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. This indicates that the\n     *    call has connected with the remote participant. The\n     *    {@link call.getById} API can be used to retrieve the latest call state\n     *    after the change. Further events will be emitted to indicate that the\n     *    call has received media from the remote participant. See the\n     *    {@link call.event:call:newTrack call:newTrack} event for more\n     *    information about this.\n     *\n     * The SDK requires access to the system's media devices (eg. microphone)\n     *    in order to answer a call. If it does not already have permissions to\n     *    use the devices, the user may be prompted by the browser to give\n     *    permissions.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method answer\n     * @param {string} callId The ID of the call to answer.\n     * @param {Object} media The media options the call should be initialized with.\n     * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n     * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether the call should have video on start.\n     * @param {boolean} [media.screen=false] Whether the call should have screenshare on start.\n     * @param {Object} [media.videoOptions] Options for configuring the call's video.\n     * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {Array<call.CustomParameter>} [options.customParameters] Custom SIP header parameters for the SIP backend.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     */\n    answer (callId, media, options = {}) {\n      log.debug(API_LOG_TAG + 'call.answer: ', callId, media, options)\n\n      const mediaConstraints = {\n        audio: media.audio && !isEmpty(media.audioOptions) ? media.audioOptions : media.audio,\n        video: media.video && !isEmpty(media.videoOptions) ? media.videoOptions : media.video,\n        screenShare: media.screen && !isEmpty(media.screenOptions) ? media.screenOptions : media.screen\n      }\n\n      dispatch(\n        actions.answerCall(callId, {\n          mediaConstraints,\n          ...options\n        })\n      )\n    },\n\n    /**\n     * Ignores an incoming call.\n     *\n     * The specified call to ignore must be in a ringing state with an incoming\n     *    direction. The call will be ended as a result of the operation.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will not be notified that the call was ignored.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @method ignore\n     * @param {string} callId The ID of the call to ignore.\n     */\n    ignore (callId) {\n      log.debug(API_LOG_TAG + 'call.ignore: ', callId)\n      dispatch(actions.ignoreCall(callId))\n    },\n\n    /**\n     * Puts a call on hold.\n     *\n     * The specified call to hold must not already be locally held. Any/all\n     *    media received from the remote participant will stop being received,\n     *    and any/all media being sent to the remote participant will stop\n     *    being sent.\n     *\n     * Some call operations cannot be performed while the call is on hold. The\n     *    call can be taken off hold with the {@link call.unhold} API.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will be notified of the operation through a\n     *    {@link call.event:call:stateChange call:stateChange} event as well.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method hold\n     * @param {string} callId The ID of the call to hold.\n     */\n    hold (callId) {\n      log.debug(API_LOG_TAG + 'call.hold: ', callId)\n      dispatch(actions.holdCall(callId))\n    },\n\n    /**\n     * Takes a call off hold.\n     *\n     * The specified call to unhold must be locally held. If the call is not\n     *    also remotely held, call media will be reconnected as it was before\n     *    the call was held.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will be notified of the operation through a\n     *    {@link call.event:call:stateChange call:stateChange} event as well.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method unhold\n     * @param {string} callId The ID of the call to unhold.\n     */\n    unhold (callId) {\n      log.debug(API_LOG_TAG + 'call.unhold: ', callId)\n      dispatch(actions.unholdCall(callId))\n    },\n\n    /**\n     * Set the custom parameters of a call.\n     *\n     * The specified parameters will be saved as part of the call's information throughout the duration of the call.\n     * All subsequent call operations will include these custom parameters.\n     * Therefore, invalid parameters, or parameters not previously configured on the server, will cause subsequent call operations to fail.\n     *\n     * A Call's custom parameters are a property of the Call's {@link call.CallObject CallObject},\n     *    which can be retrieved using the {@link call.getById} or\n     *    {@link call.getAll} APIs.\n     *\n     * The custom parameters set on a call can be sent directly with the {@link call.sendCustomParameters} API.\n     *\n     * Custom parameters can be removed from a call's information by setting them as undefined (e.g., `call.setCustomParameters(callId)`).\n     * Subsequent call operations will no longer send custom parameters.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @requires callMe\n     * @method setCustomParameters\n     * @param {string} callId The ID of the call.\n     * @param {Array<call.CustomParameter>} customParameters The custom parameters to set.\n     */\n    setCustomParameters (callId, customParameters) {\n      log.debug(API_LOG_TAG + 'call.setCustomParameters: ', callId, customParameters)\n      dispatch(actions.setCustomParameters(callId, customParameters))\n    },\n\n    /**\n     * Send the custom parameters on an ongoing call to the server. The server may either consume the headers or relay them\n     * to another endpoint, depending on how the server is configured.\n     *\n     * A Call's custom parameters are a property of the Call's {@link call.CallObject CallObject},\n     *    which can be retrieved using the {@link call.getById} or\n     *    {@link call.getAll} APIs.\n     *\n     * To change or remove the custom parameters on a call, use the {@link call.setCustomParameters} API.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @requires callMe\n     * @method sendCustomParameters\n     * @param {string} callId The ID of the call being acted on.\n     */\n    sendCustomParameters (callId) {\n      log.debug(API_LOG_TAG + 'call.sendCustomParameters: ', callId)\n      dispatch(actions.sendCustomParameters(callId))\n    },\n\n    /**\n     * Retrieves the information of all calls made during the current session.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method getAll\n     * @return {Array<call.CallObject>} Call objects.\n     * @example\n     * let calls = client.call.getAll()\n     * let currentCalls = calls.filter(call => {\n     *     return call.state === client.call.states.CONNECTED\n     * })\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'call.getAll')\n      return getCalls(getState())\n    },\n\n    /**\n     * Retrieves the information of a single call with a specific call ID.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @static\n     * @method getById\n     * @param {string} callId The ID of the call to retrieve.\n     * @return {call.CallObject} A call object.\n     */\n    getById (callId) {\n      log.debug(API_LOG_TAG + 'call.getById: ', callId)\n      return getCallById(getState(), callId)\n    },\n\n    /**\n     * Ends an ongoing call.\n     *\n     * The SDK will stop any/all local media associated with the call. Events\n     *    will be emitted to indicate which media tracks were stopped. See the\n     *    {@link call.event:call:trackEnded call:trackEnded} event for more\n     *    information.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will be notified, through their own\n     *    {@link call.event:call:stateChange call:stateChange} event, that the\n     *    call was ended.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method end\n     * @param {string} callId The ID of the call to end.\n     */\n    end (callId) {\n      log.debug(API_LOG_TAG + 'call.end: ', callId)\n      dispatch(actions.endCall(callId))\n    },\n\n    /**\n     * Add new media tracks to an ongoing call.\n     * Will get new media tracks from the specific sources to add to the call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:newTrack call:newTrack} event\n     *    both for the local and remote users to indicate a track has been\n     *    added to the Call.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string}  callId The ID of the call to add media to.\n     * @param {Object}  [media={}] The media options to add to the call.\n     * @param {boolean} [media.audio=false] Whether to add audio to the call.\n     * @param {boolean} [media.video=false] Whether to add video to the call.\n     * @param {boolean} [media.screen=false] Whether to add the screenshare to the call.\n     * @param {Object}  [media.audioOptions] Options for configuring the call's audio.\n     * @param {Object}  [media.videoOptions] Options for configuring the call's video.\n     * @param {Object}  [media.screenOptions] Options for configuring the call's screenShare.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     */\n    addMedia (callId, media = {}, options = {}) {\n      log.debug(API_LOG_TAG + 'call.addMedia: ', callId, media)\n      const mediaConstraints = {\n        audio: media.audio && !isEmpty(media.audioOptions) ? media.audioOptions : media.audio,\n        video: media.video && !isEmpty(media.videoOptions) ? media.videoOptions : media.video,\n        screenShare: media.screen && !isEmpty(media.screenOptions) ? media.screenOptions : media.screen\n      }\n\n      dispatch(actions.addMedia(callId, { mediaConstraints, ...options }))\n    },\n\n    /**\n     * Remove tracks from an ongoing call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:trackEnded call:trackEnded}\n     *    event for both the local and remote users to indicate that a track\n     *    has been removed.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} callId The ID of the call to remove media from.\n     * @param {Array} tracks A list of track IDs to remove.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     */\n    removeMedia (callId, tracks, options = {}) {\n      log.debug(API_LOG_TAG + 'call.removeMedia: ', callId, tracks)\n      dispatch(actions.removeMedia(callId, { tracks, ...options }))\n    },\n\n    /**\n     * Adds local video to an ongoing Call, to start sending to the remote\n     *    participant.\n     *\n     * Can only be used in a basic media scenario, where the Call does not\n     *    already have video. For more advanced scenarios, the\n     *    {@link call.addMedia} API can be used.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:newTrack call:newTrack} event\n     *    both for the local and remote users to indicate a track has been\n     *    added to the Call.\n     *\n     * @public\n     * @static\n     * @method startVideo\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string}                 callId              ID of the call being acted on.\n     * @param {Object}                 [videoOptions]           Options for configuring the call's video.\n     * @param {call.MediaConstraint}   [videoOptions.deviceId]  ID of the camera to receive video from.\n     * @param {call.MediaConstraint}   [videoOptions.height]    The height of the video.\n     * @param {call.MediaConstraint}   [videoOptions.width]     The width of the video.\n     * @param {call.MediaConstraint}   [videoOptions.frameRate] The frame rate of the video.\n     * @param {Object}                 [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {call.DSCPControls}      [options.dscpControls] Options for configuring DSCP markings on the media traffic.\n     */\n    startVideo (callId, videoOptions = {}, options = {}) {\n      log.debug(API_LOG_TAG + 'call.startVideo: ', callId, options)\n\n      const mediaConstraints = {\n        audio: false,\n        video: !isEmpty(videoOptions) ? videoOptions : true,\n        screenShare: false\n      }\n      dispatch(actions.addBasicMedia(callId, { mediaConstraints, kind: 'video', ...options }))\n    },\n\n    /**\n     * Removes local video from an ongoing Call, stopping it from being sent\n     *    to the remote participant.\n     *\n     * Can only be used in a basic media scenario, where the Call has only one\n     *    video track. For more advanced scenarios, the\n     *    {@link call.removeMedia} API can be used.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:trackEnded call:trackEnded}\n     *    event for both the local and remote users to indicate that a track\n     *    has been removed.\n     *\n     * @public\n     * @static\n     * @method stopVideo\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} callId ID of the call being acted on.\n     */\n    stopVideo (callId) {\n      log.debug(API_LOG_TAG + 'call.stopVideo: ', callId)\n      dispatch(actions.removeBasicMedia(callId, { kind: 'video' }))\n    },\n\n    /**\n     * Adds local screenshare to an ongoing Call, to start sending to the remote\n     *    participant.\n     *\n     * The latest SDK release (v4.X+) has not yet implemented this API in the\n     *    same way that it was available in previous releases (v3.X). In place\n     *    of this API, the SDK has a more general API that can be used for this\n     *    same behaviour.\n     *\n     * The {@link call.addMedia} API can be used to perform the same behaviour\n     *    as `startScreenshare`. {@link call.addMedia} is a general-purpose API\n     *    for adding media to a call, which covers the same functionality as\n     *    `startScreenshare`. Selecting only screen options when using\n     *    {@link call.addMedia} will perform the same behaviour as using\n     *    `startScreenshare`.\n     *\n     * @public\n     * @static\n     * @method startScreenshare\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @example\n     * // Select media options for adding only screenshare.\n     * const media = {\n     *    audio: false,\n     *    video: false,\n     *    screen: true,\n     *    screenOptions: { ... }\n     * }\n     *\n     * // Add the selected media to the call.\n     * client.call.addMedia(callId, media)\n     */\n\n    /**\n     * Removes local screenshare from an ongoing Call, stopping it from being\n     *    sent to the remote participant.\n     *\n     * The latest SDK release (v4.X+) has not yet implemented this API in the\n     *    same way that it was available in previous releases (v3.X). In place\n     *    of this API, the SDK has a more general API that can be used for this\n     *    same behaviour.\n     *\n     * The {@link call.removeMedia} API can be used to perform the same\n     *    behaviour as `stopScreenshare`. {@link call.removeMedia} is a\n     *    general-purpose API for removing media from a call, which covers the\n     *    same functionality as `stopScreenshare`. Specifying only the screen\n     *    track when using {@link call.removeMedia} will perform the same\n     *    behaviour as using `stopScreenshare`.\n     *\n     * There is a caveat that if a Call has multiple video tracks (for example,\n     *    both a video and a screen track), the SDK itself cannot yet\n     *    differentiate one from the other. The application will need to know\n     *    which track was the screen track in this scenario.\n     * @public\n     * @static\n     * @method stopScreenshare\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @example\n     * const call = client.call.getById(callId)\n     * // Get the ID of any/all video tracks on the call.\n     * const videoTracks = call.localTracks.filter(trackId => {\n     *    const track = call.media.getTrackById(trackId)\n     *    // Both video and screen tracks have kind of 'video'.\n     *    return track.kind === 'video'\n     * })\n     *\n     * // Pick out the screen track.\n     * const screenTrack = videoTracks[0]\n     *\n     * // Remove screen from the call.\n     * client.call.removeMedia(callId, [ screenTrack ])\n     */\n\n    /**\n     * Send DTMF tones to a call's audio.\n     *\n     * The provided tone can either be a single DTMF tone (eg. '1') or a\n     *    sequence of DTMF tones (eg. '123') which will be played one after the\n     *    other.\n     *\n     * The specified call must be either in Connected, Ringing, or Early Media\n     *    state, otherwise invoking this API will have no effect.\n     *\n     * The tones will be sent as out-of-band tones if supported by the call,\n     *    otherwise they will be added in-band to the call's audio.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method sendDTMF\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} tone DTMF tone(s) to send. Valid chracters are ['0','1','2','3','4','5','6','7','8','9','#','*' and ','].\n     * @param {number} [duration=100] The amount of time, in milliseconds, that each DTMF tone should last.\n     * @param {number} [intertoneGap=70] The length of time, in milliseconds, to wait between tones.\n     *\n     */\n    sendDTMF (callId, tone, duration = 100, intertoneGap = 70) {\n      log.debug(API_LOG_TAG + 'call.sendDTMF: ', callId, tone, duration, intertoneGap)\n      dispatch(actions.sendDTMF(callId, { tone, duration, intertoneGap }))\n    },\n\n    /**\n     * Get a report about low-level call statistical information.\n     *\n     * A Track ID can optionally be provided to get a report for a specific\n     *    Track of the Call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a\n     *    {@link call.event:call:statsReceived call:statsReceived} event, after\n     *    the operation completes, that has the report.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} callId The ID of the Call to retrieve the report.\n     * @param {string} [trackId] ID of a Track being used by the Call. If not\n     *    provided, RTCStatsReport is generated for the Call itself.\n     */\n    getStats (callId, trackId) {\n      log.debug(API_LOG_TAG + 'call.getStats: ', callId, trackId)\n      dispatch(actions.getStats(callId, { trackId }))\n    },\n\n    /**\n     * Forwards an incoming call to another user.\n     *\n     * The specified destination will receive the Call instead of the current\n     *    user.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event after the operation completes.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method forward\n     * @param {string} callId ID of the call being acted on.\n     * @param {call.SIP_URI|call.TEL_URI} destination The destination to forward the call to.\n     */\n\n    /**\n     * Forwards an incoming call to another user.\n     *\n     * The specified destination will receive the Call instead of the current\n     *    user.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event after the operation completes.\n     * @private\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method forward\n     * @param {string} callId ID of the call being acted on.\n     * @param {call.UserID|call.PhoneNumber} destination The destination to forward the call to.\n     */\n    forward (callId, destination) {\n      const config = getOptions(getState())\n      if (config.normalizeDestination) {\n        // Normalize callee addresses\n        destination = normalizeSipUri(destination, getDomain(getState()))\n        log.info('Address normalized to: ', destination)\n      }\n\n      dispatch(actions.forwardCall(callId, { destination }))\n    },\n\n    /**\n     * Performs a \"consultative\" transfer between two ongoing calls (also known\n     *    as an announced or warm transfer). This allows the current user to\n     *    transfer the remote participant of a call to another user, after\n     *    having spoken to both users.\n     *\n     * Both calls used for the transfer must be locally held. After the\n     *    operation, these calls will be ended, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * Both remote participants will see their call be unheld by the operation,\n     *    as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event, and will\n     *    be connected to one another afterwards.\n     *\n     * The progression of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. Both local\n     *    calls will receive this event, since it is an operation on both calls,\n     *    and the remote calls will receive it as if it were a \"remote unhold\"\n     *    operation.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method consultativeTransfer\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} otherCallId ID of the other call being acted on.\n     */\n\n    /**\n     * Performs a \"consultative\" transfer between two ongoing calls (also known\n     *    as an announced or warm transfer). This allows the current user to\n     *    transfer the remote participant of a call to another user, after\n     *    having spoken to both users.\n     *\n     * Both calls used for the transfer must be locally held. After the\n     *    operation, these calls will be ended, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * Both remote participants will see their call be unheld by the operation,\n     *    as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event, and will\n     *    be connected to one another afterwards.\n     *\n     * The progression of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. Both local\n     *    calls will receive this event, since it is an operation on both calls,\n     *    and the remote calls will receive it as if it were a \"remote unhold\"\n     *    operation.\n     * @private\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method consultativeTransfer\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} otherCallId ID of the other call being acted on.\n     */\n    consultativeTransfer (callId, otherCallId) {\n      dispatch(actions.consultativeTransfer(callId, { otherCallId }))\n    },\n\n    /**\n     * Performs a \"direct\" transfer on a call (also known as an unannounced or\n     *    blind transfer). This allows the current user to transfer the remote\n     *    participant of a call to another user, similar to a \"forward\"\n     *    operation.\n     *\n     * The specified call must be locally held. After the operation, this call\n     *    will be ended, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * The \"destination\" user will receive an incoming call, and when answered,\n     *    they will be connected with the remote participant of the specified\n     *    call.\n     *\n     * The progression of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. The remote\n     *    participant being transferred will receive it as if it were a \"remote\n     *    unhold\" operation.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method directTransfer\n     * @param {string} callId ID of the call being acted on.\n     * @param {call.SIP_URI|call.TEL_URI} destination The destination to transfer the call to.\n     */\n\n    /**\n     * Performs a \"direct\" transfer on a call (also known as an unannounced or\n     *    blind transfer). This allows the current user to transfer the remote\n     *    participant of a call to another user, similar to a \"forward\"\n     *    operation.\n     *\n     * The specified call must be locally held. After the operation, this call\n     *    will be ended, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * The \"destination\" user will receive an incoming call, and when answered,\n     *    they will be connected with the remote participant of the specified\n     *    call.\n     *\n     * The progression of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. The remote\n     *    participant being transferred will receive it as if it were a \"remote\n     *    unhold\" operation.\n     * @private\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method directTransfer\n     * @param {string} callId ID of the call being acted on.\n     * @param {call.UserID|call.PhoneNumber} destination The destination to transfer the call to.\n     */\n    directTransfer (callId, destination) {\n      const config = getOptions(getState())\n      if (config.normalizeDestination) {\n        // Normalize callee addresses\n        destination = normalizeSipUri(destination, getDomain(getState()))\n        log.info('Address normalized to: ', destination)\n      }\n\n      dispatch(actions.directTransfer(callId, { destination }))\n    },\n\n    /**\n     * Performs a \"join\" on two ongoing calls.\n     * This allows the current user to establish a call with audio with two\n     *    remote users.\n     *\n     * Both specified calls must be locally held. The new, \"joined\" call will be\n     *    audio-only, even if either previous call had video. Video cannot be\n     *    added to the \"joined\" call. Both remote participants will see their\n     *    call taken off hold, and will receive additional audio from other\n     *    participants after the operation. Both previous calls for the current\n     *    user will be ended after the operation, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * If the first call specified has custom parameters set, these parameters will be carried over to the new call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. Both remote\n     *    participants will also receive this event as if it were a \"remote\n     *    unhold\" operation.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method join\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} otherCallId ID of the other call being acted on.\n     */\n\n    /**\n     * Performs a \"join\" on two ongoing calls.\n     * This allows the current user to establish a call with audio with two\n     *    remote users.\n     *\n     * Both specified calls must be locally held. The new, \"joined\" call will be\n     *    audio-only, even if either previous call had video. Video cannot be\n     *    added to the \"joined\" call. Both remote participants will see their\n     *    call taken off hold, and will receive additional audio from other\n     *    participants after the operation. Both previous calls for the current\n     *    user will be ended after the operation, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * If the first call specified has custom parameters set, these parameters will be carried over to the new call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. Both remote\n     *    participants will also receive this event as if it were a \"remote\n     *    unhold\" operation.\n     * @private\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method join\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} otherCallId ID of the other call being acted on.\n     */\n    join (callId, otherCallId) {\n      const newCallId = uuidV4()\n      const from = getUserInfo(getState()).username\n      dispatch(actions.join(callId, { otherCallId, newCallId, from }))\n    },\n\n    /**\n     * Replace a call's track with a new track of the same media type.\n     *\n     * The operation will remove the old track from the call and add a\n     *    new track to the call. This effectively allows for changing the\n     *    track constraints (eg. device used) for an ongoing call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a\n     *    {@link call.event:call:trackReplaced call:trackReplaced} event\n     *    locally when the operation completes. The newly added track will need\n     *    to be handled by the local application. The track will be replaced\n     *    seamlessly for the remote application, which will not receive an event.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} callId The ID of the call to replace the track of.\n     * @param {string} trackId The ID of the track to replace.\n     * @param {Object} [media={}] The media options.\n     * @param {boolean} [media.audio=false] Whether to create an audio track.\n     * @param {Object} [media.audioOptions] Options for configuring the audio track.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether to create a video track.\n     * @param {Object} [media.videoOptions] Options for configuring the video track.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @example\n     * const callId = ...\n     * // Get the video track used by the call.\n     * const videoTrack = ...\n     *\n     * // Replace the specified video track of the call with a new\n     * //    video track.\n     * client.call.replaceTrack(callId, videoTrack.id, {\n     *   // The track should be replaced with a video track using\n     *   //    a specific device. This effectively changes the input\n     *   //    device for an ongoing call.\n     *   video: true,\n     *   videoOptions: {\n     *     deviceId: cameraId\n     *   }\n     * })\n     *\n     * @example\n     * const callId = ...\n     * // Get the video track used by the call.\n     * const videoTrack = ...\n     *\n     * // Can also replace the specified video track of the call with a new\n     * // screen sharing track because screen sharing is delivered as a video stream to remote peer.\n     * // User will then be prompted to pick a specific screen to share and thus the device id will be selected.\n     * client.call.replaceTrack(callId, videoTrack.id, {\n     *   // The track should be replaced with a screen sharing track.\n     *   // Note that 'screenOptions' property is not mandatory, as API will use default values\n     *   // for properties like: width, height, frameRate.\n     *   screen: true\n     * })\n     */\n    replaceTrack (callId, trackId, media) {\n      const mediaConstraints = {\n        audio: media.audio && !isEmpty(media.audioOptions) ? media.audioOptions : media.audio,\n        video: media.video && !isEmpty(media.videoOptions) ? media.videoOptions : media.video,\n        screenShare: media.screen && !isEmpty(media.screenOptions) ? media.screenOptions : media.screen\n      }\n      dispatch(actions.replaceTrack(callId, { trackId, mediaConstraints }))\n    },\n\n    /**\n     * Retrieve the list of available and supported codecs based on the browser's capabilities for sending media.\n     *\n     * This API will return a promise which, when resolved, it will contain the list of available and supported codecs.\n     * In addition, the SDK emits a {@link call.event:call:availableCodecs call:availableCodecs} event\n     *  upon retrieving that list of codecs.\n     *\n     * This API is a wrapper for the static method {@link https://w3c.github.io/webrtc-pc/#dom-rtcrtpsender-getcapabilities RTCRtpSender.getCapabilities()}.\n     *  Firefox browser does not currently support this method. Therefore, this API will not work on Firefox.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} kind The kind of media, i.e., 'audio' or 'video', to get the list of available codecs of.\n     */\n    getAvailableCodecs (kind) {\n      log.debug(`${API_LOG_TAG}call.getAvailableCodecs, kind: ${kind}`)\n\n      const deferredResult = pDefer()\n\n      // Trigger the action, but include a defered result which caller can use when\n      // we actually obtain the data (i.e. list of codecs) from WebRTCManager.\n      dispatch(actions.getAvailableCodecs({ kind }, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Set {@link call.SdpHandlerFunction SDP Handler Functions} that will be run as part of a pipeline for all future calls.\n     *  This will replace any SDP Handlers that were previously set.\n     *\n     * SDP handlers can be used to make modifications to the SDP (e.g., removing certain codecs)\n     *  before they are processed or sent to the other side.\n     *\n     * This is an advanced feature, changing the SDP handlers mid-call may cause\n     *  unexpected behaviour in future call operations for that call.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {Array<call.SdpHandlerFunction>} sdpHandlers The list of SDP handler functions to modify SDP.\n     */\n    setSdpHandlers (sdpHandlers) {\n      log.debug(`${API_LOG_TAG}call.setSdpHandlers, sdpHandlers:`, sdpHandlers)\n\n      const config = getOptions(getState())\n      const options = {\n        removeH264Codecs: config.removeH264Codecs\n      }\n      dispatch(setSdpHandlers(sdpHandlers, options))\n    },\n\n    /**\n     * Possible states that a Call can be in.\n     *\n     * A Call's state describes the current status of the Call. An application\n     *    should use the state to understand how the Call, and any media\n     *    associated with the Call, should be handled. Which state the Call is\n     *    in defines how it can be interacted with, as certain operations can\n     *    only be performed while in specific states, and tells an application\n     *    whether the Call currently has media flowing between users.\n     * Unless stated otherwise, the Call's state pertains to both caller & callee.\n     *\n     * The Call's state is a property of the {@link call.CallObject CallObject},\n     *    which can be retrieved using the {@link call.getById} or\n     *    {@link call.getAll} APIs.\n     *\n     * The SDK emits a {@link call.event:call:stateChange call:stateChange}\n     *    event when a Call's state changes from one state to another.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires callMe\n     * @requires call\n     * @type {Object}\n     * @property {string} INITIATING The (outgoing) call is being started. While in this state, no Call operations can be performed until Call gets into Initiated state.\n     * @property {string} INITIATED The (outgoing) call has been sent over the network, but has not been received. This is a state valid only for caller's side.\n     * @property {string} RINGING The call has been received by both parties, and is waiting to be answered.\n     * @property {string} EARLY_MEDIA The call has not been answered, but media\n     *    is already being received. This may be network-ringing media, IVR\n     *    system media, or other pre-answer medias. When early media is\n     *    supported, this state may replace the Ringing state. This is a state valid only for caller's side.\n     * @property {string} CANCELLED The call was disconnected before it could be answered. This is a state valid only for callee's side.\n     * @property {string} CONNECTED Both parties are connected and media is flowing.\n     * @property {string} ON_HOLD Both parties are connected but no media is flowing.\n     * @property {string} ENDED The call has ended.\n     * @example\n     * // Use the call states to know how to handle a change in the call.\n     * client.on('call:stateChange', function (params) {\n     *    const call = client.call.getById(params.callId)\n     *    // Check if the call now has media flowing.\n     *    if (call.state === client.call.states.CONNECTED) {\n     *      // The call is now active, and can perform midcall operations.\n     *    }\n     * })\n     */\n    states: CALL_STATES\n\n    /**\n     * The `setDefaultDevices` API from previous SDK releases (3.X) has been\n     *    deprecated in the latest releases (4.X+). The SDK no longer keeps\n     *    track of \"default devices\" on behalf of the application.\n     *\n     * The devices used for a call can be selected as part of the APIs for\n     *    starting the call. Microphone and/or camera can be chosen in the\n     *    {@link call.make} and {@link call.answer} APIs, and speaker can be\n     *    chosen when the audio track is rendered with the\n     *    {@link media.renderTracks} API.\n     * @public\n     * @static\n     * @method setDefaultDevices\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     */\n\n    /**\n     * Changes the camera and/or microphone used for a Call's media input.\n     *\n     * The latest SDK release (v4.X+) has not yet implemented this API in the\n     *    same way that it was available in previous releases (v3.X). In place\n     *    of this API, the SDK has a more general API that can be used for this\n     *    same behaviour.\n     *\n     * The same behaviour as the `changeInputDevices` API can be implemented\n     *    using the general-purpose {@link call.replaceTrack} API. This API can\n     *    be used to replace an existing media track with a new track of the\n     *    same type, allowing an application to change certain aspects of the\n     *    media, such as input device.\n     * @public\n     * @static\n     * @method changeInputDevices\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @example\n     * const call = client.call.getById(callId)\n     * // Get the ID of the Call's video track.\n     * const videoTrack = call.localTracks.find(trackId => {\n     *    const track = client.media.getTrackById(trackId)\n     *    return track.kind === 'video'\n     * })\n     *\n     * // Select the new video options.\n     * const media = {\n     *    video: true,\n     *    videoOptions: {\n     *        deviceId: 'cameraId'\n     *    }\n     * }\n     *\n     * // Change the call's camera by replacing the video track.\n     * client.call.replaceTrack(callId, videoTrack, media)\n     */\n\n    /**\n     * Changes the speaker used for a Call's audio output. Supported on\n     *    browser's that support HTMLMediaElement.setSinkId().\n     *\n     * The latest SDK release (v4.X+) has not yet implemented this API in the\n     *    same way that it was available in previous releases (v3.X). In place\n     *    of this API, the SDK has a more general API that can be used for this\n     *    same behaviour.\n     *\n     * The same behaviour as the `changeSpeaker` API can be implemented by\n     *    re-rendering the Call's audio track.  A speaker can be selected when\n     *    rendering an audio track, so changing a speaker can be simulated\n     *    by unrendering the track with {@link media.removeTracks}, then\n     *    re-rendering it with a new speaker with {@link media.renderTracks}.\n     * @public\n     * @static\n     * @method changeSpeaker\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @example\n     * const call = client.call.getById(callId)\n     * // Get the ID of the Call's audio track.\n     * const audioTrack = call.localTracks.find(trackId => {\n     *    const track = client.media.getTrackById(trackId)\n     *    return track.kind === 'audio'\n     * })\n     *\n     * // Where the audio track was previously rendered.\n     * const audioContainer = ...\n     *\n     * // Unrender the audio track we want to change speaker for.\n     * client.media.removeTrack([ audioTrack ], audioContainer)\n     * // Re-render the audio track with a new speaker.\n     * client.media.renderTrack([ audioTrack ], audioContainer, {\n     *    speakerId: 'speakerId'\n     * })\n     */\n  }\n}\n","import callAPI from './call'\n\n/**\n * The 'call' namespace (within the 'api' type) is used to make audio and video calls to and from\n * SIP users and PSTN phones.\n *\n * Call functions are all part of the 'call' namespace.\n *\n * @public\n * @namespace call\n */\n\n/**\n * Information about a Call.\n *\n * Can be retrieved using the {@link call.getAll} or {@link call.getById} APIs.\n *\n * @public\n * @static\n * @typedef {Object} CallObject\n * @memberof call\n * @requires cpaas_call\n * @property {string} id The ID of the call.\n * @property {user.UserID} from A unique identifier (uri) of the person who made the call.\n * @property {user.UserID} to A unique identifier (uri) of the person who receives the call.\n * @property {string} direction The direction in which the call was created. Can be 'outgoing' or 'incoming'.\n * @property {string} state The current state of the call. See {@link call.states} for possible states.\n * @property {boolean} localHold Indicates whether this call is currently being held locally.\n * @property {boolean} remoteHold Indicates whether this call is currently being held remotely.\n * @property {Array<string>} localTracks A list of Track IDs that the call is sending to the remote participant.\n * @property {Array<string>} remoteTracks A list of Track IDs that the call is receiving from the remote participant.\n * @property {Object} remoteParticipant Information about the other call participant.\n * @property {string} [remoteParticipant.displayNumber] The User ID of the remote participant in the form \"username@domain\".\n * @property {string} [remoteParticipant.displayName] The display name of the remote participant.\n * @property {call.BandwidthControls} bandwidth The bandwidth limitations set for the call.\n * @property {number} startTime The start time of the call in milliseconds since the epoch.\n * @property {number} [endTime] The end time of the call in milliseconds since the epoch.\n */\n\n/**\n * Information about a Call.\n *\n * Can be retrieved using the {@link call.getAll} or {@link call.getById} APIs.\n *\n * @public\n * @static\n * @module CallObject\n * @typedef {Object} CallObject\n * @memberof call\n * @requires link_call\n * @requires callMe\n * @property {string} id The ID of the call.\n * @property {user.UserID} from A unique identifier (uri) of the person who made the call.\n * @property {user.UserID} to A unique identifier (uri) of the person who receives the call.\n * @property {string} direction The direction in which the call was created. Can be 'outgoing' or 'incoming'.\n * @property {string} state The current state of the call. See {@link call.states} for possible states.\n * @property {boolean} localHold Indicates whether this call is currently being held locally.\n * @property {boolean} remoteHold Indicates whether this call is currently being held remotely.\n * @property {Array<string>} localTracks A list of Track IDs that the call is sending to the remote participant.\n * @property {Array<string>} remoteTracks A list of Track IDs that the call is receiving from the remote participant.\n * @property {Object} remoteParticipant Information about the other call participant.\n * @property {string} [remoteParticipant.displayNumber] The User ID of the remote participant in the form \"username@domain\".\n * @property {string} [remoteParticipant.displayName] The display name of the remote participant.\n * @property {call.BandwidthControls} bandwidth The bandwidth limitations set for the call.\n * @property {Array<call.CustomParameter>} customParameters The custom parameters set for the call.\n * @property {number} startTime The start time of the call in milliseconds since the epoch.\n * @property {number} [endTime] The end time of the call in milliseconds since the epoch.\n */\n\n/**\n * The 'media' namespace provides an interface for interacting with Media that the\n *    SDK has access to. Media is used in conjunction with the {@link call Calls}\n *    feature to manipulate and render the Tracks sent and received from a Call.\n *\n * Media and Track objects are not created directly, but are created as part of\n *    Call operations. Media and Tracks will either be marked as \"local\" or\n *    \"remote\" depending on whether their source is the local user's machine\n *    or a remote user's machine.\n *\n * The Media feature also keeps track of media devices that the user's machine\n *    can access. Any media device (eg. USB headset) connected to the machine\n *    can be used as a source for media. Available devices can be found using\n *    the {@link media.getDevices} API.\n *\n * @public\n * @namespace media\n */\n\n/**\n * The MediaConstraint type defines the format for configuring media options.\n * Either the `exact` or `ideal` property should be provided. If both are present, the\n *    `exact` value will be used.\n *\n * When the `exact` value is provided, it will be the only value considered for the option.\n *    If it cannot be used, the constraint will be considered an error.\n *\n * When the `ideal` value is provided, it will be considered as the optimal value for the option.\n *    If it cannot be used, the closest acceptable value will be used instead.\n *\n * @public\n * @static\n * @typedef {Object} MediaConstraint\n * @memberof call\n * @property {string} [exact] The required value for the constraint. Other values will not be accepted.\n * @property {string} [ideal] The ideal value for the constraint. Other values will be considered if necessary.\n * @example\n * // Specify video resolution when making a call.\n * client.call.make(destination, {\n *    audio: true,\n *    video: true,\n *    videoOptions: {\n *      // Set height and width constraints to ideally be 1280x720.\n *      height: { ideal: 720 },\n *      width: { ideal: 1280 }\n *    }\n * })\n */\n\n/**\n * The BandwidthControls type defines the format for configuring media and/or track bandwidth options.\n * BandwidthControls only affect received remote tracks of the specified type.\n *\n * @public\n * @static\n * @typedef {Object} BandwidthControls\n * @memberof call\n * @property {number} [audio] The desired bandwidth bitrate in kilobits per second for received remote audio.\n * @property {number} [video] The desired bandwidth bitrate in kilobits per second for received remote video.\n * @example\n * // Specify received remote video bandwidth limits when making a call.\n * client.call.make(destination, mediaConstraints,\n *  {\n *    bandwidth: {\n *      video: 5\n *    }\n *  }\n * )\n */\n\n/**\n * The DSCPControls type defines the format for configuring network priorities (DSCP marking) for the media traffic.\n *\n * If DSCPControls are not configured for a call the network priority of the traffic for all media kinds will be the default (i.e., \"low\").\n *\n * @public\n * @static\n * @typedef {Object} DSCPControls\n * @memberof call\n * @property {RTCPriorityType} [audioNetworkPriority='low'] The desired network priority for audio traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).\n * @property {RTCPriorityType} [videoNetworkPriority='low'] The desired network priority for video traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).\n * @property {RTCPriorityType} [screenNetworkPriority='low'] The desired network priority for screen share traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).\n */\n\n/**\n * @public\n * @static\n * @typedef {Object} IceServer\n * @memberof call\n * @property {Array<string>|string} urls Either an array of URLs for reaching out several ICE servers or a single URL for reaching one ICE server. See {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer/urls RTCIceServers.urls documentation} to learn more about the actual url format.\n * @property {string} [credential] The credential needed by the ICE server.\n */\n\n/**\n * @public\n * @static\n * @typedef {Object} SdpHandlerInfo\n * @memberof call\n * @property {string} callId The id corresponding to the call for which the handler is being run.\n * @property {RTCSdpType} type The session description's type.\n * @property {string} step The step that will occur after the SDP Handlers are run.\n *    Will be either 'set' (the SDP will be set locally) or 'send' (the SDP will\n *    be sent to the remote endpoint).\n * @property {string} endpoint Which end of the connection created the SDP.\n */\n\n/**\n * The form of an SDP handler function and the expected arguments that it receives.\n * @public\n * @static\n * @typedef {Function} SdpHandlerFunction\n * @memberof call\n * @param {Object} newSdp The SDP so far (could have been modified by previous handlers).\n * @param {call.SdpHandlerInfo} info Additional information that might be useful when making SDP modifications.\n * @param {Object} originalSdp The SDP in its initial state.\n * @returns {Object} The resulting modified SDP based on the changes made by this function.\n */\n\n/**\n * The state representation of a Media object.\n * Media is a collection of Track objects.\n *\n * @public\n * @static\n * @typedef {Object} MediaObject\n * @memberof call\n * @property {string} id The ID of the Media object.\n * @property {boolean} local Indicator on whether this media is local or remote.\n * @property {Array<call.TrackObject>} tracks A list of Track objects that are contained in this Media object.\n */\n\n/**\n * A Track is a stream of audio or video media from a single source.\n * Tracks can be retrieved using the Media module's `getTrackById` API and manipulated with other functions of the Media module.\n *\n * @public\n * @static\n * @typedef {Object} TrackObject\n * @memberof call\n * @property {Array<string>} containers The list of CSS selectors that were used to render this Track.\n * @property {boolean} disabled Indicator of whether this Track is disabled or not. If disabled, it cannot be re-enabled.\n * @property {string} id The ID of the Track.\n * @property {string} kind The kind of Track this is (audio, video).\n * @property {string} label The label of the device this Track uses.\n * @property {boolean} muted Indicator on whether this Track is muted or not.\n * @property {boolean} sourceMuted Indicator on whether this Track is receiving media from its source or not.\n *    When true, the Track can be considered removed. This indicator is affected by actions outside the\n *    control of the SDK, such as the remote endpoint of a Call stopping to send media for a remote Track,\n *    or the browser temporarily disabling the SDK's access to a local Track's source.\n * @property {string} state The state of this Track. Can be 'live' or 'ended'.\n * @property {string} streamId The ID of the Media Stream that includes this Track.\n */\n\n/**\n * A collection of media devices and their information.\n *\n * @public\n * @static\n * @typedef {Object} DevicesObject\n * @memberof call\n * @property {Array<call.DeviceInfo>} camera A list of camera device information.\n * @property {Array<call.DeviceInfo>} microphone A list of microphone device information.\n * @property {Array<call.DeviceInfo>} speaker A list of speaker device information.\n */\n\n/**\n * Contains information about a device.\n *\n * @public\n * @static\n * @typedef {Object} DeviceInfo\n * @memberof call\n * @property {string} deviceId The ID of the device.\n * @property {string} groupId The group ID of the device. Devices that share a `groupId` belong to the same physical device.\n * @property {string} kind The type of the device (audioinput, audiooutput, videoinput).\n * @property {string} label The name of the device.\n */\n\n/**\n * Custom SIP headers can be used to convey additional information to a SIP endpoint.\n *\n * These headers must be configured on the server prior to making a request, otherwise the request will fail when trying to set the headers.\n *\n * These headers can be specified with the {@link call.make} and {@link call.answer} APIs.\n * They can also be set on a call using the {@link call.setCustomParameters}, and sent using the {@link call.sendCustomParameters} API.\n *\n * Custom headers may be received anytime throughout the duration a call. A remote endpoint may send custom headers when starting a call,\n *  answering a call, or during call updates such as hold/unhold and addition/removal of media in the call.\n *  When these custom headers are received, the SDK will emit a {@link call.event:call:customParameters call:customParameters} event\n *  which will contain the custom parameters that were received.\n *\n * A Call's custom parameters are a property of the Call's {@link call.CallObject CallObject},\n *  which can be retrieved using the {@link call.getById} or\n *  {@link call.getAll} APIs.\n *\n * @public\n * @static\n * @module CustomParameter\n * @typedef {Object} CustomParameter\n * @memberof call\n * @requires link_call\n * @requires callMe\n * @property {string} name - The name of the custom parameter\n * @property {string} value - The value of the custom parameter\n * @example\n * // Specify custom parameters when making a call.\n * client.call.make(destination, mediaConstraints,\n *  {\n *    customParameters: [\n *      {\n *        name: 'X-GPS',\n *        value: '42.686032,23.344565'\n *      }\n *    ]\n *  }\n * )\n */\n\n/**\n * Call API index.\n * APIs are organized by their namespacing.\n * @method api\n * @param {Object} context\n * @param {Function} context.dispatch The redux store's dispatch function.\n * @param {Function} context.getState The redux store's getState function.\n * @return {Object} The plugin's API object.\n */\nexport default function api (context) {\n  return {\n    call: callAPI(context)\n  }\n}\n","/**\n * Blocking operations that can be performed on a call.\n * ie. no two of thes operations, either local or remote,\n *    can be performed at the same time.\n * TODO: Should all operations just be listed here? Probably.\n */\nexport const OPERATIONS = {\n  // Establishment.\n  MAKE: 'MAKE',\n  ANSWER: 'ANSWER',\n  REJECT: 'REJECT',\n  IGNORE: 'IGNORE',\n  END: 'END',\n  // TODO: Make sure these constants and actionTypes are in-sync with each\n  //    other. Use one to build the other.\n  FORWARD_CALL: 'FORWARD_CALL',\n  // Midcall.\n  HOLD: 'HOLD',\n  UNHOLD: 'UNHOLD',\n  SEND_CUSTOM_PARAMETERS: 'SEND_CUSTOM_PARAMETERS',\n  ADD_MEDIA: 'ADD_MEDIA',\n  ADD_BASIC_MEDIA: 'ADD_BASIC_MEDIA',\n  REMOVE_MEDIA: 'REMOVE_MEDIA',\n  REMOVE_BASIC_MEDIA: 'REMOVE_BASIC_MEDIA',\n  RENEGOTIATE: 'RENEGOTIATE',\n  GET_STATS: 'GET_STATS',\n  SEND_DTMF: 'SEND_DTMF',\n  CONSULTATIVE_TRANSFER: 'CONSULTATIVE_TRANSFER',\n  DIRECT_TRANSFER: 'DIRECT_TRANSFER',\n  JOIN: 'JOIN',\n  REPLACE_TRACK: 'REPLACE_TRACK',\n  // Remote-only.\n  START_MOH: 'START_MOH',\n  STOP_MOH: 'STOP_MOH',\n  SLOW_START: 'SLOW_START'\n}\n\n/*\n * Endpoints that can perform operations.\n */\nexport const ENDPOINTS = {\n  LOCAL: 'LOCAL',\n  REMOTE: 'REMOTE'\n  // SERVER: 'SERVER' ?\n}\n\n/*\n * Statuses of an operation.\n */\nexport const OP_STATUS = {\n  ONGOING: 'ONGOING', // The operation is ongoing locally.\n  PENDING: 'PENDING' // The operation is pending remotely.\n}\n\n/*\n * Transitions of an operation.\n */\nexport const OP_TRANSITIONS = {\n  START: 'START', // The operation is starting.\n  UPDATE: 'UPDATE', // The operation is ongoing.\n  FINISH: 'FINISH' // The operation has finished.\n}\n\n/*\n * Operations that don't have a corresponding finish operation\n */\nexport const NO_FINISH_OPS = [OPERATIONS.ADD_BASIC_MEDIA, OPERATIONS.REMOVE_BASIC_MEDIA]\n","/**\n * A call operation has either started, been updated, or finished.\n *\n * Information about ongoing call operations are stored with the call\n *    information (see the {@link call.getById} API). This event indicates that\n *    an operation's information has been changed.\n *\n * Local call operations will be tracked from start to finish. An operation may\n *    be updated as it progresses, based on the status of the operation. The\n *    operation status may be ongoing or pending, depending if the operation is\n *    waiting on activity on the local or remote end of the call, respectively.\n *\n * Except in the case of slow-start operations, remote operations will only be\n *    tracked as a \"finish\", to indicate that it occurred.\n * @public\n * @memberof call\n * @event call:operation\n * @param {Object} params\n * @param {string} params.operation The call operation causing this event.\n * @param {string} params.transition The transition reason for the operation change.\n * @param {boolean} params.isLocal Flag indicating whether the operation was local or not.\n * @param {Object} [params.previous] The operation information before this change.\n *    If the transition is to \"start\" the operation, there will be no previous information.\n * @param {string} [params.previous.operation] The operation that was ongoing.\n * @param {string} [params.previous.status] The operation status before this change.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_OPERATION = 'call:operation'\n\n/**\n * An outgoing call has been started.\n *\n * Information about the Call can be retrieved using the {@link call.getById}\n *    API.\n *\n * @public\n * @memberof call\n * @event call:start\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_STARTED = 'call:start'\n\n/**\n * A new joined call has been started.\n *\n * Information about the Call can be retrieved using the {@link call.getById}\n *    API.\n *\n * @public\n * @memberof call\n * @requires link_call\n * @event call:join\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_JOIN = 'call:join'\n\n/**\n * A new incoming call has been received.\n *\n * Information about the Call can be retrieved using the {@link call.getById}\n *    API.\n *\n * @public\n * @memberof call\n * @event call:receive\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:receive', function(params) {\n *     // We have received a call, prompt the user to respond.\n *     promptUser(client.call.getById(params.callId));\n * });\n */\nexport const CALL_INCOMING = 'call:receive'\n\n/**\n * A Call's state has changed.\n *\n * See {@link call.states} for information about call states.\n * @public\n * @memberof call\n * @event call:stateChange\n * @param {Object} params\n * @param {string} params.callId The ID of the Media object that was operated on.\n * @param {Object} params.previous The call's properties before the operation changed it.\n * @param {string} params.previous.state The previous state of the call.\n * @param {Object} [params.transition]\n * @param {number} [params.transition.statusCode] The status code associated with the particular state change's reason.\n * @param {string} [params.transition.reasonText] The reason for the state change.\n * @param {boolean} [params.previous.localHold] The previous local hold state. Present when the state change was a hold/unhold operation.\n * @param {boolean} [params.previous.remoteHold] The previous remote hold state. Present when the state change was a hold/unhold operation.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:stateChange', function (params) {\n *     const call = client.call.getById(params.callId)\n *     const prevState = params.previous.state\n *     log(`Call changed from ${prevState} to ${call.state} state.`)\n *\n *     // Handle the event depending on the new call state.\n *     switch (call.state) {\n *         case client.call.states.CONNECTED:\n *             // Handle being on call with media.\n *             break\n *         case client.call.states.ENDED:\n *             // Handle call ending.\n *             break\n *         ...\n *     }\n * })\n */\nexport const CALL_STATE_CHANGE = 'call:stateChange'\n\n/**\n * New media has been added to the call.\n * @public\n * @memberof call\n * @event call:newMedia\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {boolean} params.local Whether the new media is local or not.\n * @param {Array} params.tracks The list of new Tracks.\n * @param {string} params.mediaId The ID of the Media object the Tracks belong to.\n */\nexport const CALL_ADDED_MEDIA = 'call:newMedia'\n\n/**\n * Media has been removed from the call.\n * @public\n * @memberof call\n * @event call:removedMedia\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {boolean} params.local Whether the removed Media was local or not.\n * @param {Array} params.tracks The list of removed Tracks.\n */\nexport const CALL_REMOVED_MEDIA = 'call:removedMedia'\n\n/**\n * A new Track has been added to the Call.\n *\n * The Track may have been added by either the local user or remote user using\n *    the {@link call.addMedia} API.\n *\n * Information about the Track can be retrieved using the\n *    {@link media.getTrackById} API.\n *\n * @public\n * @memberof call\n * @event call:newTrack\n * @param {Object} params\n * @param {string} params.callId The ID of the call the track was added to.\n * @param {string} params.mediaId The ID of the media the track was added to.\n * @param {string} params.trackId The ID of the newly added track.\n * @param {boolean} params.local Whether the track is local or not (remote)\n */\nexport const CALL_NEW_TRACK = 'call:newTrack'\n\n/**\n * A Track has been removed from a Call.\n *\n * The Track may have been removed by either the local user or remote user using\n *    the {@link call.removeMedia} API. Tracks are also removed from Calls\n *    automatically while the Call is on hold.\n *\n * @public\n * @memberof call\n * @event call:trackEnded\n * @param {Object} params\n * @param {string} params.callId The ID of the call the track was removed from.\n * @param {string} params.mediaId The ID of the media the track was removed from.\n * @param {string} params.trackId The ID of the removed track.\n * @param {boolean} params.local Whether the track was local or not (remote)\n */\nexport const CALL_TRACK_ENDED = 'call:trackEnded'\n\n/**\n * Stats have been retrieved for a Call or specific Track of a Call.\n *\n * See the {@link call.getStats} API for more information.\n *\n * @public\n * @memberof call\n * @event call:statsReceived\n * @param {Object} params\n * @param {string} params.callId The ID of the Call to retrieve stats for.\n * @param {string} [params.trackId] The ID of the Track to retrieve stats for.\n * @param {string} params.result The RTCStatsReport.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const STATS_RECEIVED = 'call:statsReceived'\n\n/**\n * A Track has been replaced on the Call.\n *\n * A Track is replaced by the local user using the {@link call.replaceTrack}\n *    API.\n *\n * This event is similar to the {@link call.event:call:newTrack call:newTrack}\n *    event, where the call has a new Track, except that an existing Track has\n *    been removed at the same time. The event includes information about the\n *    Track that was replaced to help an application replace it seamlessly.\n *\n * @public\n * @memberof call\n * @event call:trackReplaced\n * @param {Object} params\n * @param {string} params.callId The ID of the call where a track was replaced.\n * @param {string} [params.newTrackId] The ID of the new track that replaced the old track.\n * @param {call.TrackObject} [params.oldTrack] State of the replaced track.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_TRACK_REPLACED = 'call:trackReplaced'\n\n/**\n * Custom Parameters have been received for a Call.\n *\n * Please refer to {@link call.CustomParameter CustomParameter} for information on when this event may be emitted.\n * @public\n * @memberof call\n * @event call:customParameters\n * @param {Object} params\n * @param {string} params.callId The ID of the Call in which custom parameters were received.\n * @param {Array<call.CustomParameter>} params.customParameters The custom parameters received.\n */\nexport const CUSTOM_PARAMETERS = 'call:customParameters'\n\n/**\n * The list of available and supported codecs by the browser have been retrieved.\n *\n * This event is emitted as a result of the {@link call.getAvailableCodecs} API. Please refer to the API for more\n *  information.\n * @public\n * @memberof call\n * @event call:availableCodecs\n * @param {Object} params\n * @param {string} params.kind The kind of media the codecs are for.\n * @param {Array<Object>} params.codecs The list of codecs.\n */\nexport const AVAILABLE_CODECS = 'call:availableCodecs'\n","// Call plugin.\nimport * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\nimport { OPERATIONS, OP_TRANSITIONS } from './constants'\n\n// Webrtc plugin.\nimport * as webrtcActionTypes from '../../webrtc/interface/actionTypes'\n\n// Helpers\nimport { getCallById, getCallByWebrtcSessionId, getOptions } from './selectors'\nimport { cloneDeep } from 'lodash/fp'\n\n/**\n * Helper function to format call events.\n * @method callEventHandler\n * @param  {string} type        The type of event.\n * @param  {Object} action      The action that triggered the event.\n * @param  {Object} [params={}] Any non-consistent information to be included in the event.\n * @return {Object} An event object.\n */\nfunction callEventHandler (type, action, params = {}) {\n  /**\n   * Call event format.\n   * Call events follow a consistent format, based on the consistent format of\n   *    their actions.\n   */\n  const args = {\n    ...params\n  }\n  // There are cases where there is a callId in the params, in that case don't use the payload's id\n  // Example: See call event for SESSION_NEW_TRACK\n  if (!args.hasOwnProperty('callId') && action.payload.id) {\n    args.callId = action.payload.id\n  }\n\n  return {\n    type,\n    args\n  }\n}\n\n/**\n * Helper function for converting an action to a \"call state change\" event.\n * Ensures that all such events have consistent parameters.\n * @method stateChangeHandler\n * @param  {Object} action\n * @param  {Object} params\n * @param  {Object} params.prevState Redux state from before the action was processed by reducers.\n * @param  {Object} params.state     Redux state from after the action was processed by reducers.\n * @return {Object} An event object.\n */\nfunction stateChangeHandler (action, params) {\n  // Get the call state before this action updated state.\n  const prevCall = getCallById(params.prevState, action.payload.id)\n\n  return callEventHandler(eventTypes.CALL_STATE_CHANGE, action, {\n    error: action.payload.error,\n    transition: action.payload.transition,\n    previous: {\n      state: prevCall.state,\n      localHold: prevCall.localHold,\n      remoteHold: prevCall.remoteHold\n    }\n  })\n}\n\n/**\n * Helper function for converting an action to a \"call operation\" event.\n * Ensures that all such events have consistent parameters.\n * @method callOperationHandler\n * @param {Object} action\n * @param {Object} params\n * @param {Object} params.prevState The SDK state before this action updated state.\n * @param {string} params.operation The currently occurring operation.\n * @param {string} params.transition The transition reason for the operation change.\n * @param {string} params.isLocal Flag indicating whether the operation is local or not.\n * @param {Object} [any] Additional data provided depending on the operation.\n * @return {Object} An event object.\n */\nfunction callOperationHandler (action, params) {\n  // Get the call state before this action updated state.\n  const prevCall = getCallById(params.prevState, action.payload.id)\n  let previous\n\n  if (prevCall) {\n    previous = params.isLocal ? prevCall.localOp : prevCall.remoteOp\n  }\n\n  return callEventHandler(eventTypes.CALL_OPERATION, action, {\n    // operation params\n    operation: params.operation,\n    transition: params.transition,\n    isLocal: params.isLocal,\n    // previous operation state data\n    previous,\n    // error\n    error: action.payload.error\n  })\n}\n\nexport const callEvents = {}\n\n// START actions\nconst startActionTypesAndOperations = [\n  { type: actionTypes.ANSWER_CALL, operation: OPERATIONS.ANSWER },\n  { type: actionTypes.REJECT_CALL, operation: OPERATIONS.REJECT },\n  { type: actionTypes.IGNORE_CALL, operation: OPERATIONS.IGNORE },\n  { type: actionTypes.END_CALL, operation: OPERATIONS.END },\n  { type: actionTypes.FORWARD_CALL, operation: OPERATIONS.FORWARD_CALL },\n  { type: actionTypes.CALL_HOLD, operation: OPERATIONS.HOLD },\n  { type: actionTypes.CALL_UNHOLD, operation: OPERATIONS.UNHOLD },\n  { type: actionTypes.SEND_CUSTOM_PARAMETERS, operation: OPERATIONS.SEND_CUSTOM_PARAMETERS },\n  { type: actionTypes.ADD_MEDIA, operation: OPERATIONS.ADD_MEDIA },\n  { type: actionTypes.ADD_BASIC_MEDIA, operation: OPERATIONS.ADD_BASIC_MEDIA },\n  { type: actionTypes.REMOVE_MEDIA, operation: OPERATIONS.REMOVE_MEDIA },\n  { type: actionTypes.REMOVE_BASIC_MEDIA, operation: OPERATIONS.REMOVE_BASIC_MEDIA },\n  { type: actionTypes.RENEGOTIATE, operation: OPERATIONS.RENEGOTIATE },\n  { type: actionTypes.SEND_DTMF, operation: OPERATIONS.SEND_DTMF },\n  { type: actionTypes.GET_STATS, operation: OPERATIONS.GET_STATS },\n  { type: actionTypes.CONSULTATIVE_TRANSFER, operation: OPERATIONS.CONSULTATIVE_TRANSFER },\n  { type: actionTypes.DIRECT_TRANSFER, operation: OPERATIONS.DIRECT_TRANSFER },\n  { type: actionTypes.JOIN, operation: OPERATIONS.JOIN },\n  { type: actionTypes.REPLACE_TRACK, operation: OPERATIONS.REPLACE_TRACK }\n]\nstartActionTypesAndOperations.forEach(startActionTypeAndOperation => {\n  callEvents[startActionTypeAndOperation.type] = (action, params) => {\n    return callOperationHandler(action, {\n      ...params,\n      operation: startActionTypeAndOperation.operation,\n      transition: OP_TRANSITIONS.START,\n      isLocal: true\n    })\n  }\n})\n\ncallEvents[actionTypes.MAKE_CALL] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.MAKE,\n      transition: OP_TRANSITIONS.START,\n      isLocal: true\n    }),\n    callEventHandler(eventTypes.CALL_STARTED, action, {\n      error: action.payload.error\n    })\n  ]\n}\n\n// PENDING actions\ncallEvents[actionTypes.PENDING_MAKE_CALL] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.MAKE,\n      transition: OP_TRANSITIONS.UPDATE,\n      isLocal: true\n    }),\n    stateChangeHandler(action, params)\n  ]\n}\n\ncallEvents[actionTypes.PENDING_OPERATION] = (action, params) => {\n  return callOperationHandler(action, {\n    ...params,\n    operation: action.payload.operation,\n    transition: OP_TRANSITIONS.UPDATE,\n    isLocal: true\n  })\n}\n\ncallEvents[actionTypes.PENDING_CONSULTATIVE_TRANSFER] = (action, params) => {\n  const otherCallAction = cloneDeep(action)\n  otherCallAction.payload.id = action.payload.otherCallId\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.CONSULTATIVE_TRANSFER,\n      transition: OP_TRANSITIONS.UPDATE,\n      isLocal: true\n    }),\n    callOperationHandler(otherCallAction, {\n      ...params,\n      operation: OPERATIONS.CONSULTATIVE_TRANSFER,\n      transition: OP_TRANSITIONS.UPDATE,\n      isLocal: true\n    })\n  ]\n}\n\ncallEvents[actionTypes.PENDING_JOIN] = (action, params) => {\n  const operationEvents = action.payload.usedCallIds.map(callId => {\n    const newAction = cloneDeep(action)\n    newAction.payload.id = callId\n    return callOperationHandler(newAction, {\n      ...params,\n      operation: OPERATIONS.JOIN,\n      transition: OP_TRANSITIONS.UPDATE,\n      isLocal: true\n    })\n  })\n  operationEvents.push(callEventHandler(eventTypes.CALL_JOIN, action))\n  return operationEvents\n}\n\n// FINISH actions\nconst finishActionTypesAndData = [\n  { type: actionTypes.MAKE_CALL_FINISH, operation: OPERATIONS.MAKE, isLocal: true },\n  { type: actionTypes.CALL_HOLD_FINISH, operation: OPERATIONS.HOLD, isLocal: true },\n  { type: actionTypes.CALL_UNHOLD_FINISH, operation: OPERATIONS.UNHOLD, isLocal: true },\n  { type: actionTypes.CALL_REMOTE_HOLD_FINISH, operation: OPERATIONS.HOLD, isLocal: false },\n  { type: actionTypes.CALL_REMOTE_UNHOLD_FINISH, operation: OPERATIONS.UNHOLD, isLocal: false },\n  { type: actionTypes.REJECT_CALL_FINISH, operation: OPERATIONS.REJECT, isLocal: true },\n  { type: actionTypes.IGNORE_CALL_FINISH, operation: OPERATIONS.IGNORE, isLocal: true },\n  { type: actionTypes.DIRECT_TRANSFER_FINISH, operation: OPERATIONS.DIRECT_TRANSFER, isLocal: true },\n  { type: actionTypes.CONSULTATIVE_TRANSFER_FINISH, operation: OPERATIONS.CONSULTATIVE_TRANSFER, isLocal: true },\n  { type: actionTypes.JOIN_FINISH, operation: OPERATIONS.JOIN, isLocal: true },\n  { type: actionTypes.FORWARD_CALL_FINISH, operation: OPERATIONS.FORWARD_CALL, isLocal: true }\n]\nfinishActionTypesAndData.forEach(finishActionTypeAndData => {\n  callEvents[finishActionTypeAndData.type] = (action, params) => {\n    return [\n      callOperationHandler(action, {\n        ...params,\n        operation: finishActionTypeAndData.operation,\n        isLocal: finishActionTypeAndData.isLocal,\n        transition: OP_TRANSITIONS.FINISH\n      }),\n      stateChangeHandler(action, params)\n    ]\n  }\n})\n\ncallEvents[actionTypes.END_CALL_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.END,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: action.payload.isLocal\n    }),\n    stateChangeHandler(action, params)\n  ]\n}\n\ncallEvents[actionTypes.ANSWER_CALL_FINISH] = (action, params) => {\n  const events = []\n  // Emit Call Operation Event\n  events.push(\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.ANSWER,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: true\n    })\n  )\n\n  // Don't emit a stateChange event if it was a slow start answer. The call isn't actually\n  //    answered yet, so state hasn't changed.\n  // TODO: Don't have this in meta?\n  if (action.meta && action.meta.isSlowStart) {\n    return events\n  }\n\n  events.push(stateChangeHandler(action, params))\n  return events\n}\n\ncallEvents[actionTypes.ADD_MEDIA_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.ADD_MEDIA,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: action.payload.local\n    }),\n    callEventHandler(eventTypes.CALL_ADDED_MEDIA, action, {\n      local: action.payload.local,\n      tracks: action.payload.tracks,\n      mediaId: action.payload.mediaId,\n      error: action.payload.error\n    })\n  ]\n}\n\ncallEvents[actionTypes.REMOVE_MEDIA_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.REMOVE_MEDIA,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: action.payload.local\n    }),\n    callEventHandler(eventTypes.CALL_REMOVED_MEDIA, action, {\n      local: action.payload.local,\n      tracks: action.payload.tracks,\n      error: action.payload.error\n    })\n  ]\n}\n\n/*\n * Currently the RENEGOTIATE operation is only triggered after an unsolicited removal of media,\n *  hence the CALL_REMOVED_MEDIA event handler is used\n */\ncallEvents[actionTypes.RENEGOTIATE_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.RENEGOTIATE,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: action.payload.local\n    }),\n    callEventHandler(eventTypes.CALL_REMOVED_MEDIA, action, {\n      local: action.payload.local,\n      tracks: action.payload.tracks,\n      error: action.payload.error\n    })\n  ]\n}\n\ncallEvents[actionTypes.GET_STATS_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.GET_STATS,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: true\n    }),\n    callEventHandler(eventTypes.STATS_RECEIVED, action, {\n      result: action.payload.result,\n      error: action.payload.error,\n      trackId: action.payload.trackId\n    })\n  ]\n}\n\ncallEvents[actionTypes.REPLACE_TRACK_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.REPLACE_TRACK,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: true\n    }),\n    callEventHandler(eventTypes.CALL_TRACK_REPLACED, action, {\n      error: action.payload.error,\n      newTrackId: action.payload.newTrackId,\n      oldTrack: action.payload.oldTrackState\n    })\n  ]\n}\n\ncallEvents[actionTypes.SEND_DTMF_FINISH] = (action, params) => {\n  return callOperationHandler(action, {\n    ...params,\n    operation: OPERATIONS.SEND_DTMF,\n    transition: OP_TRANSITIONS.FINISH,\n    isLocal: true\n  })\n}\n\ncallEvents[actionTypes.SEND_CUSTOM_PARAMETERS_FINISH] = (action, params) => {\n  return callOperationHandler(action, {\n    ...params,\n    operation: OPERATIONS.SEND_CUSTOM_PARAMETERS,\n    isLocal: true,\n    transition: OP_TRANSITIONS.FINISH\n  })\n}\n\n// other actions\ncallEvents[actionTypes.CUSTOM_PARAMETERS_RECEIVED] = action => {\n  return callEventHandler(eventTypes.CUSTOM_PARAMETERS, action, {\n    customParameters: action.payload.customParameters\n  })\n}\n\ncallEvents[actionTypes.AVAILABLE_CODECS_RETRIEVED] = action => {\n  return callEventHandler(eventTypes.AVAILABLE_CODECS, action, {\n    kind: action.payload.kind,\n    codecs: action.payload.codecs\n  })\n}\n\ncallEvents[actionTypes.CALL_INCOMING] = action => {\n  return callEventHandler(eventTypes.CALL_INCOMING, action, {\n    error: action.payload.error\n  })\n}\n\ncallEvents[actionTypes.CALL_RINGING] = stateChangeHandler\ncallEvents[actionTypes.SESSION_PROGRESS] = stateChangeHandler\ncallEvents[actionTypes.CALL_CANCELLED] = stateChangeHandler\ncallEvents[actionTypes.CALL_ACCEPTED] = stateChangeHandler\n// TODO: Have a proper event for this since UPDATE_CALL does not change the call's state property.\ncallEvents[actionTypes.UPDATE_CALL] = stateChangeHandler\n\ncallEvents[webrtcActionTypes.SESSION_NEW_TRACK] = (action, context) => {\n  const state = context.state\n  // The webrtc session should have been already created (by handling SESSION_CREATED action -- see above)\n  const call = getCallByWebrtcSessionId(state, action.payload.id)\n\n  if (call) {\n    // By passing callId in the params object it will overwrite\n    // callId that is set in callEventHandler\n    return callEventHandler(eventTypes.CALL_NEW_TRACK, action, {\n      ...action.payload,\n      callId: call.id\n    })\n  }\n  return null\n}\n\ncallEvents[webrtcActionTypes.SESSION_TRACK_REMOVED] = (action, context) => {\n  const state = context.state\n  const call = getCallByWebrtcSessionId(state, action.payload.id)\n\n  if (call) {\n    const callOptions = getOptions(state)\n    if (callOptions.sdpSemantics === 'plan-b') {\n      // For plan-b we won't trigger another 'call:trackEnded' event because it\n      // is already triggered by the SESSION_TRACK_ENDED action.\n      return null\n    }\n    return callEventHandler(eventTypes.CALL_TRACK_ENDED, action, {\n      ...action.payload,\n      callId: call.id\n    })\n  }\n}\n\ncallEvents[webrtcActionTypes.SESSION_TRACK_ENDED] = (action, context) => {\n  const state = context.state\n  const call = getCallByWebrtcSessionId(state, action.payload.id)\n\n  if (call) {\n    return callEventHandler(eventTypes.CALL_TRACK_ENDED, action, {\n      ...action.payload,\n      callId: call.id\n    })\n  }\n}\n\ncallEvents[actionTypes.MAKE_ANONYMOUS_CALL_FINISH] = (action, context) => {\n  return callEventHandler(eventTypes.CALL_STARTED, action)\n}\n\nexport default {\n  ...callEvents\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a call plugin.\n * @type {string}\n */\nconst name = 'call'\n\n// Export the interface as a single object.\nexport default {\n  name,\n  api,\n  reducer\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\nimport { CALL_STATES, CALL_DIRECTION } from '../../constants'\nimport { setOperationState } from '../utils'\n\n// Libraries.\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat } from 'lodash/fp'\n\n/**\n * A no-op reducer.\n * Some reducers don't need to change state, but need to exist so their actions\n *    can be handled the same way as other actions (eg. wrapped to update local\n *    operation).\n * @method noop\n */\nconst noop = (state, action) => state\n\n/**\n * The reducer logic used for finish operations that end a call.\n * @method callEnder\n */\nconst callEnder = (state, action) => {\n  const now = Date.now()\n  return {\n    ...state,\n    state: CALL_STATES.ENDED,\n    // If there isn't a start time, then the call was never completed.\n    //    Meaning it's duration was 0, so set the start time appropriately.\n    startTime: state.startTime || now,\n    endTime: now,\n    remoteParticipant: {\n      ...state.remoteParticipant,\n      ...action.payload.remoteParticipant\n    },\n    // TODO: Remove this later.\n    isPending: undefined\n  }\n}\n\n// Top-tier reducers: Handles the whole call state.\nconst reducers = {}\n// Call-tier reducers: Handles only a specific call's state.\nconst callReducers = {}\n\n/*\n * Top-tier reducers.\n * Receives the entire call substate as state.\n */\n\n// Add the new call to state.\nreducers[actionTypes.MAKE_CALL] = {\n  next (state, action) {\n    // TODO: Call model? (with defaults for call state)\n    let newCall = {\n      id: action.payload.id,\n      remoteParticipant: {\n        displayNumber: action.payload.participantAddress,\n        displayName: action.payload.participantName\n      },\n      // Number of the remote participant when the call was established.\n      to: action.payload.participantAddress,\n      from: action.payload.from,\n      mediaConstraints: action.payload.mediaConstraints,\n      dscpControls: action.payload.dscpControls,\n      // TODO: Proper constants.\n      state: CALL_STATES.INITIATING,\n      direction: CALL_DIRECTION.OUTGOING,\n      // Hold status.\n      localHold: false,\n      remoteHold: false,\n      isCaller: true,\n      // Flag indicating whether the call is anonymous or not\n      isAnonymous: action.payload.isAnonymous,\n      // The account token used to make the anonymous call\n      account: action.payload.account\n    }\n\n    // Set the call's operation substate.\n    newCall = setOperationState(newCall, action)\n\n    return concat(state, newCall)\n  }\n}\n\n// Add the new call to state.\nreducers[actionTypes.CALL_INCOMING] = {\n  next (state, action) {\n    return concat(state, {\n      isCaller: false,\n      ...action.payload\n    })\n  }\n}\n\n/*\n * Call-tier reducers.\n * Receive a single call's state as state.\n */\n\ncallReducers[actionTypes.CALL_RINGING] = {\n  next (state, action) {\n    if (action.payload.remoteParticipant) {\n      return {\n        ...state,\n        state: CALL_STATES.RINGING,\n        remoteParticipant: action.payload.remoteParticipant\n      }\n    } else {\n      return {\n        ...state,\n        state: CALL_STATES.RINGING\n      }\n    }\n  }\n}\n\n// Handle Early Media the same as Ringing, just with a different state.\ncallReducers[actionTypes.SESSION_PROGRESS] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.EARLY_MEDIA,\n      remoteParticipant: action.payload.remoteParticipant\n    }\n  }\n}\n\n/*\n * Call-tier reducers.\n * Receive a single call's state as state.\n */\n\n/*\n * Some reducers don't need to change state directly, but need to exist.\n * Call-specific reducers are wrapped to keep information about on-going\n *    operations up-to-date.\n */\ncallReducers[actionTypes.PENDING_OPERATION] = noop\ncallReducers[actionTypes.ANSWER_CALL] = noop\ncallReducers[actionTypes.CALL_HOLD] = noop\ncallReducers[actionTypes.CALL_UNHOLD] = noop\ncallReducers[actionTypes.SEND_CUSTOM_PARAMETERS] = noop\ncallReducers[actionTypes.END_CALL] = noop\ncallReducers[actionTypes.ADD_MEDIA] = noop\ncallReducers[actionTypes.REMOVE_MEDIA] = noop\ncallReducers[actionTypes.ADD_BASIC_MEDIA] = noop\ncallReducers[actionTypes.REMOVE_BASIC_MEDIA] = noop\ncallReducers[actionTypes.RENEGOTIATE] = noop\ncallReducers[actionTypes.FORWARD_CALL] = noop\ncallReducers[actionTypes.REJECT_CALL] = noop\ncallReducers[actionTypes.SEND_DTMF] = noop\ncallReducers[actionTypes.SEND_DTMF_FINISH] = noop\ncallReducers[actionTypes.IGNORE_CALL] = noop\ncallReducers[actionTypes.DIRECT_TRANSFER] = noop\ncallReducers[actionTypes.REPLACE_TRACK] = noop\ncallReducers[actionTypes.REPLACE_TRACK_FINISH] = noop\ncallReducers[actionTypes.REMOTE_SLOW_START] = noop\ncallReducers[actionTypes.REMOTE_START_MOH_FINISH] = noop\ncallReducers[actionTypes.REMOTE_STOP_MOH_FINISH] = noop\ncallReducers[actionTypes.GET_STATS] = noop\ncallReducers[actionTypes.GET_STATS_FINISH] = noop\n\ncallReducers[actionTypes.CALL_CANCELLED] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.CANCELLED\n    }\n  }\n}\n\ncallReducers[actionTypes.IGNORE_CALL_FINISH] = {\n  next (state, action) {\n    // The call being ignored means it was not completed. Ensure there are times\n    //    in state, and they reflect that the call was not completed.\n    // TODO: Better call times.\n    const now = Date.now()\n\n    return {\n      ...state,\n      startTime: now,\n      endTime: now,\n      state: CALL_STATES.ENDED\n    }\n  }\n}\n\ncallReducers[actionTypes.REJECT_CALL_FINISH] = {\n  next (state, action) {\n    // The call being rejected means it was not completed. Ensure there are\n    //    times in state, and they reflect that the call was not completed.\n    // TODO: Better call times.\n    const now = Date.now()\n\n    return {\n      ...state,\n      startTime: now,\n      endTime: now,\n      state: CALL_STATES.ENDED\n    }\n  }\n}\n\ncallReducers[actionTypes.SESSION_CREATED] = {\n  next (state, action) {\n    // When we get SESSION_CREATED action, the call object already exists as part of reducers state\n    // so we only add the webrtc session id. This way, when call:newTrack action is later triggered,\n    // we can find the call object by searching for this associated webrtcSessionId.\n    return {\n      ...state,\n      webrtcSessionId: action.payload.webrtcSessionId\n    }\n  }\n}\n\ncallReducers[actionTypes.PENDING_MAKE_CALL] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: action.payload.state,\n      wrtcsSessionId: action.payload.wrtcsSessionId,\n      webrtcSessionId: action.payload.webrtcSessionId,\n      bandwidth: action.payload.bandwidth,\n      displayName: action.payload.displayName,\n      customParameters: action.payload.customParameters\n    }\n  }\n}\n\n// Update the new call state based on the outcome.\ncallReducers[actionTypes.MAKE_CALL_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\n// Update the call state based on the outcome.\ncallReducers[actionTypes.ANSWER_CALL_FINISH] = {\n  next (state, action) {\n    // If the action has a Session ID, store it as the ID.\n    // In some scenarios (slow start), the we only get an ID\n    //    at the answer step.\n    const webrtcId = action.payload.webrtcSessionId || state.webrtcSessionId\n\n    const newState = {\n      ...state,\n      state: action.payload.state,\n      mediaConstraints: action.payload.mediaConstraints,\n      dscpControls: action.payload.dscpControls,\n      webrtcSessionId: webrtcId,\n      localHold: false,\n      remoteHold: false,\n      bandwidth: action.payload.bandwidth,\n      customParameters: action.payload.customParameters\n    }\n\n    // Add start time to the call's state here if the call is not a slowstart call\n    if (action.meta && !action.meta.isSlowStart) {\n      newState.startTime = action.payload.startTime\n    }\n\n    return newState\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_ACCEPTED] = {\n  next (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  },\n  throw (state, action) {\n    const newState = action.payload.state || state.state\n    return {\n      ...state,\n      state: newState\n    }\n  }\n}\n\n// Handles both success and failure actions the same way.\n// Instead of an object with `next` & `throw` properties, pass in a function.\n// https://redux-actions.js.org/api/handleaction#handleactiontype-reducer-defaultstate\ncallReducers[actionTypes.END_CALL_FINISH] = callEnder\n\ncallReducers[actionTypes.UPDATE_CALL] = {\n  next (state, action) {\n    const { transition, ...payloadWithoutTransition } = action.payload\n    return {\n      ...state,\n      ...payloadWithoutTransition\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_HOLD_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      localHold: true,\n      state: CALL_STATES.ON_HOLD\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_UNHOLD_FINISH] = {\n  next (state, action) {\n    const callState = state.remoteHold ? CALL_STATES.ON_HOLD : CALL_STATES.CONNECTED\n    return {\n      ...state,\n      localHold: false,\n      state: callState\n    }\n  }\n}\n\ncallReducers[actionTypes.SET_CUSTOM_PARAMETERS] = {\n  next (state, action) {\n    let customParameters = action.payload.customParameters\n    if (Array.isArray(customParameters) && customParameters.length === 0) {\n      customParameters = undefined\n    }\n    return {\n      ...state,\n      customParameters\n    }\n  }\n}\n\ncallReducers[actionTypes.SEND_CUSTOM_PARAMETERS_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_REMOTE_HOLD_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      remoteHold: true,\n      state: CALL_STATES.ON_HOLD,\n      remoteParticipant: {\n        ...state.remoteParticipant,\n        ...action.payload.remoteParticipant\n      }\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_REMOTE_UNHOLD_FINISH] = {\n  next (state, action) {\n    const callState = state.localHold ? CALL_STATES.ON_HOLD : CALL_STATES.CONNECTED\n    return {\n      ...state,\n      remoteHold: false,\n      state: callState,\n      remoteParticipant: {\n        ...state.remoteParticipant,\n        ...action.payload.remoteParticipant\n      }\n    }\n  }\n}\n\ncallReducers[actionTypes.FORWARD_CALL_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.ENDED\n    }\n  }\n}\n\ncallReducers[actionTypes.DIRECT_TRANSFER_FINISH] = {\n  next: callEnder\n}\n\nreducers[actionTypes.CONSULTATIVE_TRANSFER] = {\n  next (state, action) {\n    const callIds = [action.payload.id, action.payload.otherCallId]\n\n    // Iterate through the calls looking for the two being acted on.\n    //    Update them to set the operation substate.\n    return state.map(call => {\n      if (callIds.includes(call.id)) {\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.PENDING_CONSULTATIVE_TRANSFER] = {\n  next (state, action) {\n    return state.map(call => {\n      if (call.id === action.payload.id || call.id === action.payload.otherCallId) {\n        // Update the local operation in the call's state.\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.CONSULTATIVE_TRANSFER_FINISH] = {\n  next: (state, action) => {\n    return state.map(call => {\n      if (call.id === action.payload.id || call.id === action.payload.otherCallId) {\n        const endedCall = callEnder(call, action)\n        return setOperationState(endedCall, action)\n      } else {\n        return call\n      }\n    })\n  },\n  throw: (state, action) => {\n    return state.map(call => {\n      if (call.id === action.payload.id || call.id === action.payload.otherCallId) {\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.JOIN] = {\n  next (state, action) {\n    // Update operation substate state for both calls used in the operation.\n    const callIds = [action.payload.id, action.payload.otherCallId]\n\n    return state.map(call => {\n      if (callIds.includes(call.id)) {\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.PENDING_JOIN] = {\n  next (state, action) {\n    const newCall = {\n      id: action.payload.id,\n      remoteParticipant: {\n        displayNumber: action.payload.participantAddress,\n        displayName: action.payload.participantName\n      },\n      // TODO: Have better names for `to` & `from`\n      to: action.payload.participantAddress,\n      from: action.payload.from,\n      mediaConstraints: action.payload.mediaConstraints,\n      state: CALL_STATES.INITIATED,\n      direction: CALL_DIRECTION.OUTGOING,\n      // Hold status.\n      localHold: false,\n      remoteHold: false,\n      isCaller: true,\n      wrtcsSessionId: action.payload.wrtcsSessionId,\n      webrtcSessionId: action.payload.webrtcSessionId,\n      isJoinedCall: true,\n      customParameters: action.payload.customParameters\n    }\n\n    return concat(\n      state.map(call => {\n        if (action.payload.usedCallIds.includes(call.id)) {\n          // Update the call's operation substate.\n          return setOperationState(call, action)\n        } else {\n          return call\n        }\n      }),\n      newCall\n    )\n  }\n}\n\nreducers[actionTypes.JOIN_FINISH] = {\n  next: (state, action) => {\n    return state.map(call => {\n      if (\n        call.id === action.payload.id ||\n        (action.payload.usedCallIds && action.payload.usedCallIds.includes(call.id))\n      ) {\n        const endedCall = callEnder(call, action)\n        return setOperationState(endedCall, action)\n      } else {\n        return call\n      }\n    })\n  },\n  throw: (state, action) => {\n    return state.map(call => {\n      if (\n        call.id === action.payload.id ||\n        (action.payload.usedCallIds && action.payload.usedCallIds.includes(call.id))\n      ) {\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\ncallReducers[actionTypes.ADD_MEDIA_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      bandwidth: action.payload.bandwidth\n    }\n  }\n}\n\ncallReducers[actionTypes.REMOVE_MEDIA_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      bandwidth: action.payload.bandwidth\n    }\n  }\n}\n\ncallReducers[actionTypes.RENEGOTIATE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      bandwidth: action.payload.bandwidth\n    }\n  }\n}\n\n/*\n * Combine all of the call-tier reducers into a single reducer,\n *      each with a default state of empty object.\n */\nconst callReducer = handleActions(callReducers, {})\n\n// Actions routed to call-tier reducers.\nconst specificCallActions = combineActions(\n  actionTypes.PENDING_OPERATION,\n  actionTypes.PENDING_MAKE_CALL,\n  actionTypes.MAKE_CALL_FINISH,\n  actionTypes.ANSWER_CALL,\n  actionTypes.ANSWER_CALL_FINISH,\n  actionTypes.REJECT_CALL,\n  actionTypes.REJECT_CALL_FINISH,\n  actionTypes.CALL_ACCEPTED,\n  actionTypes.CALL_RINGING,\n  actionTypes.SESSION_PROGRESS,\n  actionTypes.CALL_CANCELLED,\n  actionTypes.IGNORE_CALL,\n  actionTypes.IGNORE_CALL_FINISH,\n  actionTypes.END_CALL,\n  actionTypes.END_CALL_FINISH,\n  actionTypes.CALL_HOLD,\n  actionTypes.CALL_HOLD_FINISH,\n  actionTypes.CALL_UNHOLD,\n  actionTypes.CALL_UNHOLD_FINISH,\n  actionTypes.SET_CUSTOM_PARAMETERS,\n  actionTypes.SEND_CUSTOM_PARAMETERS,\n  actionTypes.SEND_CUSTOM_PARAMETERS_FINISH,\n  actionTypes.CALL_REMOTE_HOLD_FINISH,\n  actionTypes.CALL_REMOTE_UNHOLD_FINISH,\n  actionTypes.ADD_MEDIA,\n  actionTypes.ADD_BASIC_MEDIA,\n  actionTypes.ADD_MEDIA_FINISH,\n  actionTypes.REMOVE_MEDIA,\n  actionTypes.REMOVE_BASIC_MEDIA,\n  actionTypes.REMOVE_MEDIA_FINISH,\n  actionTypes.RENEGOTIATE,\n  actionTypes.RENEGOTIATE_FINISH,\n  actionTypes.UPDATE_CALL,\n  actionTypes.FORWARD_CALL,\n  actionTypes.FORWARD_CALL_FINISH,\n  actionTypes.DIRECT_TRANSFER,\n  actionTypes.DIRECT_TRANSFER_FINISH,\n  actionTypes.SEND_DTMF,\n  actionTypes.SEND_DTMF_FINISH,\n  actionTypes.JOIN,\n  actionTypes.REPLACE_TRACK,\n  actionTypes.REPLACE_TRACK_FINISH,\n  actionTypes.REMOTE_SLOW_START,\n  actionTypes.REMOTE_START_MOH_FINISH,\n  actionTypes.REMOTE_STOP_MOH_FINISH,\n  actionTypes.GET_STATS,\n  actionTypes.GET_STATS_FINISH,\n  actionTypes.SESSION_CREATED\n)\n\n/*\n * Reducer to handle specific call actions.\n * Routes the actions to the call-tier reducers.\n */\nreducers[specificCallActions] = (state, action) => {\n  return state.map(function (call) {\n    // Only update the call related to the action.\n    if (call.id === action.payload.id) {\n      // Update call state as per the reducer.\n      let updatedCall = callReducer(call, action)\n\n      // Update the operation portion of the call state. This handles both\n      //    successful and failure actions.\n      updatedCall = setOperationState(updatedCall, action)\n      return updatedCall\n    } else {\n      return call\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","import calls from './call'\nimport turn from './turn'\n\n/**\n * Combine subreducers into a single call reducer.\n */\nexport default function (state = {}, action) {\n  return {\n    calls: calls(state.calls, action),\n    turn: turn(state.turn, action)\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\n// Replace any previous information with the new information.\nreducers[actionTypes.TURN_CHANGED] = {\n  next (state, action) {\n    return {\n      ...state,\n      servers: action.payload.servers || state.servers,\n      credentials: {\n        ...state.credentials,\n        ...action.payload.credentials\n      }\n    }\n  }\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer.\n */\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Call plugin.\nimport { CALL_STATES } from '../constants'\n\n// Webrtc plugin.\nimport { getSessionById } from '../../webrtc/interface/selectors'\n\n/**\n * Call selectors.\n * Handles retrieving data from the `state.call.calls` substate.\n */\n\n/**\n * Helper function for adding track information to call state.\n * @method addTracksToCall\n * @param  {Object} state\n * @param  {Object} callState\n * @return {Object} Track augmented call state.\n */\nfunction addTracksToCall (state, callState) {\n  const session = getSessionById(state, callState.webrtcSessionId)\n  if (session) {\n    return {\n      ...callState,\n      localTracks: session.localTracks,\n      remoteTracks: session.remoteTracks\n    }\n  } else {\n    return {\n      ...callState,\n      localTracks: [],\n      remoteTracks: []\n    }\n  }\n}\n\n/**\n * Get the list of all calls this session.\n * @method getCalls\n * @param  {Object} state Redux state.\n * @return {Array} A list of all call objects.\n */\nexport function getCalls (state) {\n  // TODO: cloneDeep?\n  return state.call.calls.map(callState => addTracksToCall(state, callState))\n}\n\n/**\n * Retrieves the list of all on-going calls.\n * @method getActiveCalls\n * @param {Object} state Redux state.\n * @return {Array} A list of call objects.\n */\nexport function getActiveCalls (state) {\n  const endedStates = [CALL_STATES.ENDED, CALL_STATES.CANCELLED]\n\n  return getCalls(state).filter(call => !endedStates.includes(call.state))\n}\n\n/**\n * Get the call object of a specific call.\n * @method getCallById\n * @param  {Object} state Redux state.\n * @param  {string} callId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallById (state, callId) {\n  return getCalls(state).find(call => call.id === callId)\n}\n\n/**\n * Get the call object with a specific wrtcsSessionId (backend ID).\n * @method getCallByWrtcsSessionId\n * @param  {Object} state Redux state.\n * @param  {string} wrtcsSessionId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallByWrtcsSessionId (state, wrtcsSessionId) {\n  return getCalls(state).find(call => call.wrtcsSessionId === wrtcsSessionId)\n}\n\n/**\n * Get the call object with a specific webrtcSessionId.\n * @method getCallByWebrtcSessionId\n * @param  {Object} state Redux state.\n * @param  {string} webrtcSessionId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallByWebrtcSessionId (state, webrtcSessionId) {\n  return getCalls(state).find(call => call.webrtcSessionId === webrtcSessionId)\n}\n\n/**\n * Retrieve the call plugin's options.\n * @method getOptions\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getOptions (state) {\n  return state.config.call\n}\n\n/**\n * Retrieve TURN server/credential information.\n */\nexport function getTurnInfo (state) {\n  return state.call.turn\n}\n","// Call plugin.\nimport { OPERATIONS, NO_FINISH_OPS, OP_STATUS, OP_TRANSITIONS } from './constants'\n\n// Lodash FP\nimport { contains, isNil, property } from 'lodash/fp'\n\n/*\n * Utility function to parse the operation and operation status from an action.\n * @method getOperationMeta\n * @param  {Object}  actionType A call action.\n * @return {Object}  opMeta             Information about the operation.\n * @return {string}  [opMeta.operation] The call operation the action is about.\n * @return {string}  opMeta.transition  The change in operation the action is for.\n * @return {boolean} opMeta.isLocal     Whether the operation was started locally or not.\n * @throws {Error}   Input must be a standard call action type.\n */\nexport function getOperationMeta (actionType) {\n  // Make sure the input is a call action type.\n  if (typeof actionType !== 'string' || !actionType.includes('/CALL/')) {\n    throw new Error('Invalid input parameter. Must be a Call action.')\n  }\n\n  // Grab the unique part of the action type, after /CALL/\n  const opType = actionType.match(/\\/CALL\\/(.*)/)[1]\n\n  /**\n   * The operation name can be `OPERATION` or `OPER_ATION` (or even multiple _).\n   * It may have the prefix `REMOTE` if it is a remote operation.\n   * It may have the prefix `PENDING` if the operation is now waiting on remote.\n   * It may have the suffix `FINISH` if the operation has ended.\n   * Prefixes / suffixes are separated by a `_`.\n   *\n   * Parse the operation type to split apart the possible sections. Use those\n   *    sections to infer informaton about the operation.\n   */\n  const opMeta = {}\n  const parts = opType.split('_')\n\n  /**\n   * Check the parts for prefixes and update opMeta based on whichever are found.\n   */\n  const validPrefixes = ['REMOTE', 'PENDING']\n  const prefixes = []\n\n  // Check the first parts for prefixes.\n  while (validPrefixes.includes(parts[0])) {\n    // Take the prefix from `parts` and add it to `prefixes`.\n    prefixes.push(parts.shift())\n  }\n\n  // Handle the 'REMOTE' prefix.\n  //    The lack of this prefix means the operation was started locally.\n  opMeta.isLocal = !prefixes.includes('REMOTE')\n\n  // Handle the 'PENDING' prefix.\n  //    The lack of this prefix means the operation is either starting or ending.\n  if (prefixes.includes('PENDING')) {\n    opMeta.transition = OP_TRANSITIONS.UPDATE\n    /**\n     * The `PENDING` prefix is a special-case because it means an operation was\n     *    `ongoing` and is changing to `pending`. We know there won't be a\n     *    suffix, and the operation is already in state, so we don't need to\n     *    find it here (also, it isn't included here).\n     */\n    return opMeta\n  }\n\n  /**\n   * Check the parts for suffixes and update opMeta based on whichever are found.\n   */\n  const validSuffixes = ['FINISH']\n  const suffixes = []\n\n  // Check the last parts for suffixes.\n  while (validSuffixes.includes(parts[parts.length - 1])) {\n    // Take the suffix out of `parts` and add it to `suffixes`.\n    suffixes.push(parts.pop())\n  }\n\n  // Handle the 'FINISH' suffix.\n  //    The lack of this suffix means the operation is just starting (since we\n  //    already checked for the `pending` change before this).\n  opMeta.transition = suffixes.includes('FINISH') ? OP_TRANSITIONS.FINISH : OP_TRANSITIONS.START\n\n  /**\n   * Recombine the remaining parts as the operation.\n   */\n  opMeta.operation = OPERATIONS[parts.join('_')]\n  return opMeta\n}\n\n/**\n * Reducer utility: Wraps a call reducer to update a call's operation subsate.\n *    Only affects either `call.localOp` or `call.remoteOp` portion of state.\n * @method setOperationState\n * @param  {Object} state  Redux state of a [single] call.\n * @param  {Object} action A call action.\n */\nexport function setOperationState (state, action) {\n  let meta\n  try {\n    meta = getOperationMeta(action.type)\n  } catch (err) {\n    // Action type is not a call operation, don't change operation state.\n    return state\n  }\n  const metaOp = meta.operation\n\n  // The operation has to be defined for start/finish transitions.\n  //    Don't update state if it isn't.\n  if (!metaOp && meta.transition !== OP_TRANSITIONS.UPDATE) {\n    return state\n  }\n\n  // Determine which operation substate we should be acting on.\n  const stateProp = meta.isLocal ? 'localOp' : 'remoteOp'\n  const current = state[stateProp]\n\n  if (meta.transition === OP_TRANSITIONS.START) {\n    // A new operation is starting...\n\n    if (current) {\n      // ...but there is still an on-going op.\n      // The new operation should be rejected, so state should not change.\n      return state\n    } else {\n      // ...and there is no current operation on-going.\n      // Set the new operation in state.\n      return {\n        ...state,\n        [stateProp]: {\n          operation: metaOp,\n          status: OP_STATUS.ONGOING\n        }\n      }\n    }\n  } else if (meta.transition === OP_TRANSITIONS.UPDATE) {\n    return {\n      ...state,\n      [stateProp]: {\n        ...state[stateProp],\n        status: OP_STATUS.PENDING,\n        operationData: action.payload.operationData\n      }\n    }\n  } else {\n    const isRemote = !meta.isLocal\n    const unsetOperation = {\n      ...state,\n      [stateProp]: undefined\n    }\n\n    const currentOp = property('operation')(current)\n    if (isNil(currentOp)) {\n      // Should be considered an error scenario.\n      return state\n    }\n\n    // An on-going operation is finishing...\n    if (currentOp === metaOp) {\n      // The operation matches the current on-going operation.\n      //    Unset it in state.\n      return unsetOperation\n    } else if (isRemote && currentOp === OPERATIONS.SLOW_START) {\n      // Special case: If the current operation was a remote slow start,\n      //    then the 'finish' won't match. Allow any 'finish' to unset it.\n      return unsetOperation\n    } else if (contains(currentOp)(NO_FINISH_OPS)) {\n      // Special case: If the current operation is one that doesn't have a finish\n      //    operation, allow any 'finish' to unset it.\n      return unsetOperation\n    } else {\n      // ...but it wasn't tracked in state?\n      // Should be considered an error scenario.\n      return state\n    }\n  }\n}\n","// Call plugin.\nimport pluginInterface from '../interfaceNew'\nimport * as sagas from './sagas'\nimport events from '../interfaceNew/events'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\nimport { update as updateConfig, setSdpHandlers } from '../../config/interface/actions'\nimport { logManager } from '../../logs'\n\n// Helpers.\nimport { mergeValues, autoRestart } from '../../common/utils'\n\n// Libraries.\nimport { values } from 'lodash/fp'\nimport { fork, put } from 'redux-saga/effects'\nimport { getWebRTCSupportCapabilities } from 'kandy-webrtc'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../../../src/common/validation'\n\nconst log = logManager.getLogger('CALL')\n\n// eslint-disable-next-line no-warning-comments\n/**\n * Configuration options for the call feature.\n * @public\n * @name config.call\n * @memberof config\n * @instance\n * @param {Object} call The call configuration object.\n * @param {string} [call.sdpSemantics='plan-b'] The sdpSemantics to use (`'unified-plan'` or `'plan-b'`).\n * @param {Array<call.IceServer>} [call.iceServers] The list of ICE servers to be used for calls.\n * @param {number} [call.iceCollectionDelay=1000] Time, in milliseconds, to delay in between\n *    ICE candidate checks. If ICE collection does not complete normally, the SDK will check\n *    collected candidates at this interval to determine if the operation can continue.\n * @param {number} [call.maxIceTimeout=3000] Maximum time, in milliseconds, to wait for ICE\n *    collection to complete normally. After this time, the process will timeout and the\n *    operation will attempt to continue no matter how many candidates have been collected.\n * @param {Function} [call.iceCollectionCheck] Function to check whether collected candidates\n *    can be used to continue the operation. The function will receive an array of ICE\n *    candidates and must return a boolean value of whether the SDK should attempt to continue\n *    the operation. By default, the check is to ensure at least one relay candidate has been\n *    collected.\n * @param {boolean} [call.serverTurnCredentials=true] Whether server-provided TURN credentials should be used.\n * @param {Array<call.SdpHandlerFunction>} [call.sdpHandlers] List of SDP handler functions to modify SDP. Advanced usage.\n * @param {boolean} [call.removeH264Codecs=true] Whether to remove \"H264\" codec lines from incoming and outgoing SDP messages.\n * @param {boolean} [call.earlyMedia=false] Whether early media should be supported for calls.\n * @param {boolean} [call.resyncOnConnect=false] Whether the SDK should re-sync all call states after connecting (requires Kandy Link 4.7.1+).\n * @param {boolean} [call.mediaBrokerOnly=false] Whether all Calls will be anchored on the MediaBroker instead of being peer-to-peer. Set to true if the backend is configured for broker only mode.\n * @param {boolean} [call.removeBundling=false] Whether to remove a=group attributes to stop media bundling from incoming and outgoing SDP messages.\n */\n\n/**\n * @private\n * @name config.call\n * @memberof config\n * @instance\n * @param {string} [trickleIceMode='NONE'] The Trickle ICE method to use for calls. Currently, no mode is supported.\n * @param {boolean} [normalizeDestination=true] Specifies whether or not SIP address normalization will be applied.\n */\nconst defaultOptions = {\n  // TODO: Remove this once all the browsers use unified-plan\n  sdpSemantics: 'plan-b',\n  iceServers: [],\n  iceCollectionDelay: 1000,\n  maxIceTimeout: 3000,\n  // Defaults set by the Webrtc stack:\n  //    iceCollectionCheck: Has at least one relay candidate.\n  serverTurnCredentials: true,\n  sdpHandlers: [],\n  removeH264Codecs: true,\n  earlyMedia: false,\n  resyncOnConnect: false,\n  mediaBrokerOnly: false,\n  removeBundling: false,\n  trickleIceMode: 'NONE',\n  normalizeDestination: true\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  sdpSemantics: enums(['unified-plan', 'plan-b']),\n  iceServers: v8n.array(),\n  iceCollectionDelay: v8n.positive(),\n  maxIceTimeout: v8n.positive(),\n  // Defaults set by the Webrtc stack:\n  //    iceCollectionCheck: v8n.optional(v8n.function()),\n  serverTurnCredentials: v8n.boolean(),\n  sdpHandlers: v8n.array(),\n  removeH264Codecs: v8n.boolean(),\n  earlyMedia: v8n.boolean(),\n  resyncOnConnect: v8n.boolean(),\n  mediaBrokerOnly: v8n.boolean(),\n  removeBundling: v8n.boolean(),\n  trickleIceMode: v8n.string(),\n  normalizeDestination: v8n.boolean()\n})\nconst parseOptions = parse('call', v8nValidation)\n\nexport default function callsLink (options = {}) {\n  const { mediaDevices, peerConnection } = getWebRTCSupportCapabilities()\n  if (!mediaDevices || !peerConnection) {\n    log.warn('Calls are not supported on this platform due to lack of WebRTC support. Call APIs will not be available.')\n    return\n  }\n\n  // For backwards compatibility between old ICE config and new config.\n  if (options.iceserver && !options.iceServers) {\n    log.warn('Call configuration `iceserver` is being replaced by `iceServers`. Please update to the config.')\n    options.iceServers = options.iceserver\n    delete options.iceserver\n  }\n\n  options = mergeValues(defaultOptions, options)\n  parseOptions(options)\n\n  function * init ({ webRTC }) {\n    // Change sdpSemantics if not supported\n    const isPlanB = options.sdpSemantics === 'plan-b'\n    const isNotChrome = webRTC.getBrowserDetails().browser !== 'chrome'\n    if (isPlanB && isNotChrome) {\n      log.warn('Only Chrome supports `plan-b` sdpSemantics. Switching to `unified-plan`.')\n      options.sdpSemantics = 'unified-plan'\n    }\n\n    yield put(updateConfig(options, pluginInterface.name))\n    yield put(mapEvents(events))\n\n    // Update the SDP handlers in the config (user provided + some of our own)\n    const sdpHandlerOptions = {\n      removeH264Codecs: options.removeH264Codecs\n    }\n    yield put(setSdpHandlers(options.sdpHandlers, sdpHandlerOptions))\n\n    // Dependencies to be provided to every call saga.\n    const deps = {\n      webRTC: webRTC.managers\n    }\n\n    // Wrap the call sagas in a function that provides them with the webRTC stack.\n    const wrappedSagas = values(sagas).map(saga => {\n      return autoRestart(() => saga(deps))\n    })\n\n    // Run all of the sagas.\n    for (let saga of wrappedSagas) {\n      yield fork(saga)\n    }\n  }\n\n  return {\n    name: pluginInterface.name,\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer,\n    init,\n    capabilities: ['call', 'link_call', 'link_user_id', 'link_pstn']\n  }\n}\n","/* eslint-disable no-warning-comments */\n// Call plugin.\nimport { normalizeSipUri } from '../../utils/normalization'\nimport { getOptions } from '../../interfaceNew/selectors'\n\n// Other plugins.\nimport { getDomain, getRequestInfo } from '../../../auth/interface/selectors'\nimport { logManager } from '../../../logs'\n\n// Helpers.\nimport request from '../../../request/effects'\nimport BasicError from '../../../errors'\nimport { platforms } from '../../../constants'\nimport { getWebsocketId } from '../utils'\n\n// Libraries.\nimport { call, select } from 'redux-saga/effects'\n\n/**\n * Creates a webRTC session on the server. Link-specific signalling function.\n *\n * This saga \"starts a call\" between the current user and another, specified\n *    user.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method createSession\n * @param  {Object} callInfo\n * @param  {Object} callInfo.id The SDK's ID for the Call.\n * @param  {string} callInfo.participantAddress The user to receive the call.\n * @param  {string} callInfo.offer The local SDP offer to begin negotiation.\n * @param  {boolean} [callInfo.isAnonymous] Flag indicating whether the call is anonymous or not.\n * @param  {string} [callInfo.account] An account token used by the request if it is an anonymous call.\n * @param  {string} [callInfo.from] A from token used by the request if it is an anonymous call.\n * @param  {string} [callInfo.displayName] A custom display name to use. Not supported in all environments and may use default display name.\n * @param  {Array<CustomParameter>} [callInfo.customParameters] Custom SIP header parameters for the SIP backend\n * @return {Object} response Signalling response.\n * @return {string} [response.wrtcsSessionId] ID that the server uses to track this call.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * createSession (callInfo) {\n  const log = logManager.getLogger('CALL', callInfo.id)\n  log.info('Creating call session on server-side.')\n\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n  const callOptions = yield select(getOptions)\n\n  // requestInfo.username isn't normalized and link requires a normalized\n  // address to make a call.  Since we also use username to build the request\n  // url, we need it both normalized and straight up.  So I'm normalizing it and\n  // putting it on the requestInfo object under a new property name 'fromAddress'\n  if (requestInfo.username) {\n    const domain = yield select(getDomain)\n    // Normalize callee addresses\n    callInfo.fromAddress = normalizeSipUri(requestInfo.username, domain)\n    log.debug('Caller address normalized to: ', callInfo.fromAddress)\n  }\n\n  // Default backend configuration does not support this\n  //  so remote side might see default display name instead.\n  // Backend needs to be configured to allow a custom display name.\n  if (callInfo.displayName) {\n    callInfo.fromAddress = `${callInfo.displayName}<${callInfo.fromAddress}>`\n    callInfo.from = `${callInfo.displayName}<${callInfo.from}>`\n  }\n\n  const options = {\n    method: 'POST'\n  }\n  const requestBody = {\n    type: 'callStart',\n    to: callInfo.participantAddress,\n    sdp: callInfo.offer,\n    supported: [],\n    customParameters: callInfo.customParameters\n  }\n\n  if (callOptions.earlyMedia) {\n    requestBody.supported.push('earlymedia')\n  }\n\n  /*\n   * If there are no (extra) supported items, remove the field from the request\n   *    body. This is to avoid SPiDR rejecting the body when it is an empty\n   *    array (which happens for anonymous calls).\n   */\n  if (requestBody.supported.length === 0) {\n    delete requestBody.supported\n  }\n\n  if (callInfo.isAnonymous) {\n    const getWebsocketIdResult = yield call(getWebsocketId)\n    if (getWebsocketIdResult.error) {\n      return { error: getWebsocketIdResult.error }\n    }\n    options.body = JSON.stringify({\n      callMeRequest: {\n        ...requestBody,\n        from: callInfo.from,\n        notifyChannelId: getWebsocketIdResult.websocketId\n      }\n    })\n  } else {\n    options.body = JSON.stringify({\n      callControlRequest: {\n        ...requestBody,\n        from: callInfo.fromAddress\n      }\n    })\n  }\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n  const responseBodyType = callInfo.isAnonymous ? 'callMeResponse' : 'callControlResponse'\n  if (response.error) {\n    log.debug('Failed to create Call session server-side.', response.error)\n    return {\n      error: response.error\n    }\n  } else {\n    const wrtcsSessionId = response[responseBodyType].sessionData\n    log.debug('Call session created server-side.', { wrtcsSessionId })\n\n    return {\n      error: false,\n      wrtcsSessionId\n    }\n  }\n}\n\n/**\n * Updates a webRTC session on the server with a new state.\n * Link-specific signaling function.\n *\n * The saga updates the server's session to be in \"ringing\" state.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method updateCallRinging\n * @param  {Object} callInfo\n * @param  {Object} callInfo.id The SDK's ID for the Call.\n * @param  {string} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n * @param  {string} callInfo.isAnonymous    Whether the call is an anonymous call.\n * @return {Object} response Signalling response.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * updateCallRinging (callInfo) {\n  const log = logManager.getLogger('CALL', callInfo.id)\n  log.info('Updating call session as ringing on server-side.')\n\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'PUT'\n  }\n\n  options.body = JSON.stringify({\n    callControlRequest: {\n      type: 'ringing'\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  if (response.error) {\n    log.debug('Failed to update call session as ringing server-side.', response.error)\n    return {\n      error: response.error\n    }\n  } else {\n    log.debug('Call session updated as ringing server-side.', {\n      wrtcsSessionId: callInfo.wrtcsSessionId\n    })\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Sends the (new?) custom parameters of the call to the webRTC session on the server.\n * @method updateCustomParameters\n * @param {Object} callInfo\n * @param {string} callInfo.wrtcsSessionId    ID that the server uses to identify the session.\n * @param {string} callInfo.isAnonymous       Whether the call is an anonymous call\n * @param {Array<CustomParameter>} callInfo.customParameters  The custom parameters\n * @return {Object} response Signaling response.\n */\nexport function * updateCustomParameters (callInfo) {\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'PUT'\n  }\n\n  const bodyType = callInfo.isAnonymous ? 'callMeRequest' : 'callControlRequest'\n\n  options.body = JSON.stringify({\n    [bodyType]: {\n      type: 'sendCustomHeaders',\n      customParameters: callInfo.customParameters\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  return {\n    error: response.error ? response.error : false\n  }\n}\n\n/**\n * REST DELETE request to send webRTC session call end requests.\n * @method endSession\n * @param  {Object} requestInfo\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n * @param  {boolean} callInfo.isAnonymous Whether the call is anonymous or not\n * @param  {string} [callInfo.account] An account token used by the request if it is an anonymous call.\n * @return {Object} response Signalling response.\n * @return {Object} [response.error] An BasicError object, if signalling failed.\n */\nexport function * endSession (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'DELETE',\n    responseType: 'none'\n  }\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  if (response.error) {\n    return {\n      error: response.error\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Updates a webRTC session on the server with an answer.\n * Link-specific signaling function.\n *\n * This saga \"answers a call\" from another user.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method answerSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n * @param  {string} callInfo.answer The local SDP to complete negotiation. This may be an offer is performing slow start answer.\n * @param  {Array<CustomParameter>} callInfo.customParameters The custom parameters of the call.\n * @return {Object} response Signalling response.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * answerSession (callInfo) {\n  const log = logManager.getLogger('CALL', callInfo.id)\n  log.info('Answering call session on server-side.')\n\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'PUT'\n  }\n\n  options.body = JSON.stringify({\n    callControlRequest: {\n      type: 'callAnswer',\n      sdp: callInfo.answer,\n      customParameters: callInfo.customParameters\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  if (response.error) {\n    log.debug('Failed to answer Call session server-side.', response.error)\n    return {\n      error: response.error\n    }\n  } else {\n    log.debug('Call session answered server-side.', { wrtcsSessionId: callInfo.wrtcsSessionId })\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Rejects an incoming session.\n * Link-specific signaling function.\n *\n * This saga \"rejects\" the server session.\n * Assumptions:\n *    1. The current user is authenticated.\n *    2. There is an incoming session.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * REST request to reject a webRTC session.\n * @method rejectSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @return {Object} response object from the server.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * rejectSession (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'POST'\n  }\n\n  options.endUrl = `calldisposition`\n\n  options.body = JSON.stringify({\n    callDispositionRequest: {\n      action: 'reject',\n      sessionData: callInfo.wrtcsSessionId\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, options)\n\n  if (response.error) {\n    return {\n      error: response.error\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Forwards an incoming session to another destination address.\n * Link-specific signaling function.\n *\n * This saga \"forwards\" the server session to a specified destination address.\n * Assumptions:\n *    1. The current user is authenticated.\n *    2. There is an incoming session.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method forwardSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.address The address to forward the session to.\n * @return {Object} response object from the server.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * forwardSession (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'POST'\n  }\n\n  options.endUrl = `calldisposition`\n\n  options.body = JSON.stringify({\n    callDispositionRequest: {\n      action: 'forward',\n      sessionData: callInfo.wrtcsSessionId,\n      address: callInfo.address\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, options)\n\n  if (response.error) {\n    return {\n      error: response.error\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Transfers ongoing sessions into one another.\n * Link-specific signaling function.\n *\n * This saga \"transfers\" the server sessions.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method consultativeTransferSessions\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.otherWrtcsSessionId The ID the backend uses to track the other session.\n * @param  {string} callInfo.destination The address of the other session to transfer to.\n * @return {Object} response object from the server.\n * @return {Object} [response.error] An error object, if signalling failed.\n * @return {string} [response.newWrtcsSessionId] The back-end session id, if signalling succeeded.\n */\nexport function * consultativeTransferSessions (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'PUT'\n  }\n\n  options.body = JSON.stringify({\n    callControlRequest: {\n      type: 'transfer',\n      sessionData: callInfo.otherWrtcsSessionId,\n      address: callInfo.destination\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  if (response.error) {\n    return {\n      error: response.error\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Direct Transfers an incoming session to another destination address.\n * Link-specific signaling function.\n *\n * This saga \"direct transfers\" the server session to a specified destination address.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method directTransferSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.address The address to forward the session to.\n * @return {Object} response object from the server.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * directTransferSession (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'PUT'\n  }\n\n  options.body = JSON.stringify({\n    callControlRequest: {\n      type: 'transfer',\n      address: callInfo.address\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  if (response.error) {\n    return {\n      error: response.error\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Joins ongoing sessions into a new session.\n * Link-specific signaling function.\n *\n * This saga \"joins\" the server sessions.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method joinSessions\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.otherWrtcsSessionId\n * @param  {string} callInfo.sdp The new sdp to use.\n * @param  {Array<CustomParameter>} callInfo.customParameters The custom parameters of the current call\n * @return {Object} response object from the server.\n * @return {Object} [response.error] An error object, if signalling failed.\n * @return {string} [response.newWrtcsSessionId] The back-end session id, if signalling succeeded.\n */\nexport function * joinSessions (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'POST'\n  }\n\n  options.body = JSON.stringify({\n    callControlRequest: {\n      type: 'join',\n      firstSessionData: callInfo.wrtcsSessionId,\n      secondSessionData: callInfo.otherWrtcsSessionId,\n      sdp: callInfo.sdp,\n      customParameters: callInfo.customParameters\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, options)\n\n  if (response.error) {\n    return {\n      error: response.error\n    }\n  } else {\n    return {\n      error: false,\n      newWrtcsSessionId: response.callControlResponse.sessionData\n    }\n  }\n}\n\n/**\n * Updates an existing webRTC session on the server.\n * Link-specific signalling function.\n *\n * This saga \"updates a session\" between the current user and another, specified\n *    user.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method updateSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.offer The local SDP offer to begin negotiation.\n * @param  {boolean} [callInfo.isAnonymous] Flag indicating whether the call is anonymous or not.\n * @param  {string}  [callInfo.account] An account token used by the request if it is an anonymous call.\n * @param  {Array}   [callInfo.customParameters] The custom parameters of the call.\n * @return {Object} response Signalling response.\n * @return {Object} response.error An error object, if signalling failed.\n */\nexport function * updateSession (callInfo) {\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'PUT'\n  }\n  const bodyType = callInfo.isAnonymous ? 'callMeRequest' : 'callControlRequest'\n\n  options.body = JSON.stringify({\n    [bodyType]: {\n      type: 'startCallUpdate',\n      sdp: callInfo.offer,\n      customParameters: callInfo.customParameters\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  if (response.error) {\n    return {\n      error: response.error\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Gets the status of a session from the server.\n * Link-specific signaling function.\n *\n * Assumptions:\n *    1. The current user is authenticated.\n *    2. Signalling server has Kandy Link 4.7.1+\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method getSessions\n * @param  {Object} callInfo\n * @param  {Object} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {boolean} [callInfo.isAnonymous] Flag indicating whether the call is anonymous or not.\n * @param  {string} [callInfo.account] An account token used by the request if it is an anonymous call.\n * @return {Object} response Signalling response.\n * @return {Object} response.error An error object, if signalling failed.\n */\nexport function * getSession (callInfo) {\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = { method: 'GET' }\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  if (response.error) {\n    return {\n      error: response.error\n    }\n  } else {\n    return {\n      error: false,\n      state: response.callControlResponse.state\n    }\n  }\n}\n\n/**\n * Updates a webRTC session on the server to ensure it's state.\n * Link-specific signaling function.\n *\n * This saga \"audits\" the server session to:\n *    1. notify the server that the call is still on-going locally, and\n *    2. ensure that the server is still handling the server session.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method auditCall\n * @param  {Object} callInfo\n * @param  {Object} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {boolean} [callInfo.isAnonymous] Flag indicating whether the call is anonymous or not.\n * @param  {string} [callInfo.account] An account token used by the request if it is an anonymous call.\n * @return {Object} response Signalling response.\n * @return {Object} response.error An error object, if signalling failed.\n */\nexport function * auditCall (callInfo) {\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = { method: 'PUT' }\n  const bodyType = callInfo.isAnonymous ? 'callMeRequest' : 'callControlRequest'\n\n  options.body = JSON.stringify({\n    [bodyType]: {\n      type: 'audit'\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  if (response.error) {\n    return {\n      error: response.error,\n      // Indicate whether the error was that the session doesn't exist\n      //    anymore (and audits should stop) or if it was an unknown error.\n      // 42 == RESOURCE_DOES_NOT_EXIST\n      status: response.error.code === 42 ? 'Closed' : 'Retry'\n    }\n  } else {\n    return {\n      error: false,\n      status: 'Connected'\n    }\n  }\n}\n\n/**\n * Responds to a received remote offer to update the webRTC session.\n * Link-specific signaling function.\n *\n * This saga responds to a \"call update\" request as part of renegotiation. This\n *    updates the server session with an answer SDP, which in turn should notify\n *    the remote end of the session with the response.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Perform the REST request.\n *    2. Return the response, formatted.\n * @method updateSessionResponse\n * @param  {Object} callInfo\n * @param  {Object} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.answer The local SDP to complete renegotiation. This may be an offer if performing slow start.\n * @param  {boolean} [callInfo.isAnonymous] Flag indicating whether the call is anonymous or not.\n * @param  {string} [callInfo.account] An account token used by the request if it is an anonymous call.\n * @return {Object} response Signalling response.\n * @return {Object} response.error An error object, if signalling failed.\n */\nexport function * updateSessionResponse (callInfo) {\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.LINK)\n\n  const options = {\n    method: 'PUT'\n  }\n  const bodyType = callInfo.isAnonymous && callInfo.account ? 'callMeRequest' : 'callControlRequest'\n\n  options.body = JSON.stringify({\n    [bodyType]: {\n      type: 'respondCallUpdate',\n      sdp: callInfo.answer,\n      customParameters: callInfo.customParameters\n    }\n  })\n\n  const response = yield call(linkCallRequest, requestInfo, { ...options, ...callInfo })\n\n  if (response.error) {\n    return {\n      error: response.error\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\nexport function * linkCallRequest (requestInfo, options) {\n  options.url = generateCallUrl(requestInfo, options)\n\n  const response = yield request(options, requestInfo.requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleLinkCallRequestError(response)\n    }\n  } else {\n    return response.payload.body\n  }\n}\n\nfunction handleLinkCallRequestError (response) {\n  function getMessage (code) {\n    switch (code) {\n      case 5:\n        return 'Request failed: Invalid or missing request body'\n      case 26:\n        return 'Request failed: Internal Server Error'\n      case 1004:\n        return 'Request failed: Bad request'\n      default:\n        return 'Request failed: Unknown error'\n    }\n  }\n\n  let message, code\n\n  if (response && response.payload) {\n    if (response.payload.body) {\n      if ('callControlResponse' in response.payload.body) {\n        // The response includes a body with an error message.\n        const { callControlResponse } = response.payload.body\n        message = getMessage(callControlResponse.statusCode)\n        // TODO: Do we want to wrap the backend's error codes?\n        code = callControlResponse.statusCode\n      } else {\n        // As serviceException details not available, we will capture general error information\n        message = response.payload.body.message\n        code = response.payload.result.code\n      }\n    } else if (response.payload.result) {\n      message = `Request failed: ${response.payload.result.message}`\n      code = response.payload.result.code\n    }\n  } else {\n    message = `Request failed: Unknown error.`\n  }\n\n  return new BasicError({ message, code })\n}\n\n/**\n * Generates the call url for the rest request based on the options provided.\n * @param {Object} requestInfo Object cotaining request information\n * @param {Object} options\n * @param {boolean} [options.isAnonymous] Flag indicating whether the call is anonymous or not.\n * @param {string} [options.account] An account token used by the request if it is an anonymous call.\n * @param {string} [options.wrtcsSessionId] The ID the backend uses to track the session.\n * @param {string} [options.endUrl] The end url to append to the main url.\n */\nfunction generateCallUrl (requestInfo, options) {\n  // Generic user information.\n  const { baseURL, version, username } = requestInfo\n  // Call specific information.\n  const { isAnonymous, account, wrtcsSessionId, endUrl } = options\n\n  const userType = isAnonymous ? 'anonymous' : 'user'\n  const userId = isAnonymous ? account : username\n  const requestType = isAnonymous ? 'callMe' : 'callControl'\n\n  // The common path for all call REST requests.\n  let url = `${baseURL}/rest/version/${version}/${userType}/${userId}`\n\n  if (endUrl) {\n    url += `/${endUrl}`\n  } else {\n    url += `/${requestType}`\n  }\n\n  // If the REST request is for an existing call, the path includes its ID.\n  if (wrtcsSessionId) {\n    url += `/callSessions/${wrtcsSessionId}`\n  }\n\n  return url\n}\n","/**\n * Call saga index.\n * Defines which actions trigger which sagas.\n */\n\n// Call plugin.\nimport * as actionTypes from '../../interfaceNew/actionTypes'\nimport * as webrtcActionTypes from '../../../webrtc/interface/actionTypes'\nimport * as connectivityActionTypes from '../../../connectivity/interface/actionTypes'\nimport * as supportSagas from './support'\nimport * as requests from '../requests/calls'\nimport { getRemoteParticipant } from './utils'\nimport { CALL_STATES } from '../../constants'\nimport { getCallByWrtcsSessionId } from '../../interfaceNew/selectors'\n\n// Callstack plugin.\nimport { makeCall, answerCall, rejectCall, ignoreCall, forwardCall } from '../../../callstack/call/establish'\nimport * as midcallSagas from '../../../callstack/call/midcall'\nimport {\n  incomingCall,\n  parseCallRequest,\n  parseCallResponse,\n  callStatusUpdateEnded,\n  sessionStatusUpdateEnded,\n  callStatusUpdateRinging,\n  callStatusUpdateFailed,\n  callCancelled,\n  receiveEarlyMedia\n} from '../../../callstack/call/notifications'\nimport { sendDtmf } from '../../../callstack/call/dtmf'\nimport { sendCallAudit, getSessions } from '../../../callstack/call/support'\nimport { getAvailableCodecs } from '../../../callstack/webrtc/codecs'\n\n// Libraries.\nimport { call, delay, select, takeEvery, takeLeading } from 'redux-saga/effects'\n\n// Other plugins\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { SUBSCRIBE_FINISHED } from '../../../subscription/interface/actionTypes'\nimport { CONNECT_FINISHED } from '../../../auth/interface/actionTypes'\nimport { logManager } from '../../../logs'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * Call operations.\n */\n\n/**\n * Start an outgoing call.\n * @method createCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * createCall (deps) {\n  yield takeEvery(actionTypes.MAKE_CALL, makeCall, { ...deps, requests })\n}\n\n/**\n * Answer a ringing call.\n * @method answerCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * answerCallEntry (deps) {\n  yield takeEvery(actionTypes.ANSWER_CALL, answerCall, { ...deps, requests })\n}\n\n/**\n * Reject a ringing call.\n * @method rejectCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * rejectCallEntry (deps) {\n  yield takeEvery(actionTypes.REJECT_CALL, rejectCall, { ...deps, requests })\n}\n\n/**\n * Add media to a call.\n * @method addMedia\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * addMediaEntry (deps) {\n  yield takeEvery(actionTypes.ADD_MEDIA, midcallSagas.addMedia, { ...deps, requests })\n}\n\n/**\n * Remove media from a call.\n * @method removeMedia\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * removeMediaEntry (deps) {\n  yield takeEvery(actionTypes.REMOVE_MEDIA, midcallSagas.removeMedia, { ...deps, requests })\n}\n\n/**\n * Add media to a call.\n * @method addMedia\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * addBasicMediaEntry (deps) {\n  yield takeEvery(actionTypes.ADD_BASIC_MEDIA, midcallSagas.addBasicMedia, { ...deps, requests })\n}\n\n/**\n * Remove media from a call.\n * @method removeMedia\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * removeBasicMediaEntry (deps) {\n  yield takeEvery(actionTypes.REMOVE_BASIC_MEDIA, midcallSagas.removeBasicMedia, { ...deps, requests })\n}\n\n/**\n * Check if renegotiation is needed.\n * @method checkRenegotiationFlagEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * checkRenegotiationFlagEntry (deps) {\n  yield takeEvery(webrtcActionTypes.SESSION_TRACK_ENDED, midcallSagas.checkRenegotiationFlag, { ...deps, requests })\n}\n\n/**\n * Peform a call renegotitation.\n * @method renegotiationEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * renegotiationEntry (deps) {\n  yield takeEvery(actionTypes.RENEGOTIATE, midcallSagas.renegotiate, { ...deps, requests })\n}\n\n/**\n * Send DTMF tones for a call.\n * @method sendDTMF\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * sendDtmfEntry (deps) {\n  /**\n   * Use `takeLeading` to avoid multiple operations happening at the same time.\n   *    This is an issue for in-band DTMF, which would cause the second and all\n   *    subsequent sendDtmf operations to fail if the first operation has not\n   *    yet finished.\n   */\n  yield takeLeading(actionTypes.SEND_DTMF, sendDtmf, { ...deps })\n}\n\n/**\n * Call notifications.\n */\n\n/**\n * Handle a Link \"call incoming\" notification.\n * @method incomingCallNotification\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * incomingCallNotification (deps) {\n  /**\n   * Intercept the Link-specific notification, ensuring parameters are given\n   *    to the Callstack sagas into a generic format.\n   * @method linkIncomingCall\n   * @param {Object} action An \"incoming call notification\" action.\n   */\n  function * linkIncomingCall (action) {\n    const message = action.payload.notificationMessage\n\n    const notificationParams = message.callNotificationParams || {}\n\n    // Massage data into a generic format, instead of Link-specific.\n    const params = {\n      // The remote SDP offer included with the notification (if any).\n      sdp: message.sessionParams.sdp,\n      // ID that the server uses to identify the session.\n      wrtcsSessionId: message.sessionParams.sessionData,\n      // Remote participant information.\n      remoteName: notificationParams.callerName,\n      remoteNumber: notificationParams.callerDisplayNumber,\n      // Where the call was sent\n      calleeNumber: notificationParams.calleeDisplayNumber,\n      // Custom Parameters\n      customParameters: message.customParameters\n    }\n\n    // Pass the incoming call parameters to the Callstack for handling.\n    yield call(incomingCall, { ...deps, requests }, params)\n  }\n\n  // Redux-saga take() pattern.\n  function incomingCallPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'call'\n  }\n  yield takeEvery(incomingCallPattern, linkIncomingCall)\n}\n\n/**\n * Handle a Link \"session progress\" notification.\n * @method sessionProgressNotification\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * sessionProgressNotification (deps) {\n  function progressPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'sessionProgress'\n  }\n\n  /**\n   * Intercept the notification before its sent to the Callstack. We do this\n   *    to ensure the data is in a generic format.\n   * @method parseSessionProgress\n   */\n  function * parseSessionProgress (action) {\n    const message = action.payload.notificationMessage\n\n    const notificationParams = message.callNotificationParams || {}\n\n    // Massage data into a generic format, instead of Link-specific.\n    const params = {\n      sdp: message.sessionParams.sdp,\n      wrtcsSessionId: message.sessionParams.sessionData,\n      remoteName: notificationParams.remoteName,\n      remoteNumber: notificationParams.remoteDisplayNumber,\n      customParameters: message.customParameters\n    }\n\n    yield call(receiveEarlyMedia, deps, params)\n  }\n\n  yield takeEvery(progressPattern, parseSessionProgress)\n}\n\n/**\n * Handle a call status websocket notification.\n * @method callStatusNotification\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * callStatusNotification (deps) {\n  function statusUpdatePattern (status) {\n    return function statusPattern (action) {\n      return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === status\n    }\n  }\n\n  function * parseStatusNotification (action) {\n    const message = action.payload.notificationMessage\n    const { eventType } = message\n    const { sessionData: wrtcsSessionId, reasonText, statusCode } = message.sessionParams\n    const remoteInfo = yield call(getRemoteParticipant, message)\n\n    const params = {\n      wrtcsSessionId,\n      reasonText,\n      statusCode,\n      // Remote participant's information.\n      ...remoteInfo\n    }\n    if (eventType === 'callEnd') {\n      yield call(callStatusUpdateEnded, deps, params)\n    } else if (eventType === 'sessionComplete') {\n      yield call(sessionStatusUpdateEnded, { ...deps, requests }, params)\n    } else if (eventType === 'ringing') {\n      params.customParameters = message.customParameters\n      yield call(callStatusUpdateRinging, deps, params)\n    } else if (eventType === 'sessionFail') {\n      yield call(callStatusUpdateFailed, deps, params)\n    }\n  }\n\n  // Handle specific call statuses\n  yield takeEvery(statusUpdatePattern('ringing'), parseStatusNotification)\n  yield takeEvery(statusUpdatePattern('callEnd'), parseStatusNotification)\n  yield takeEvery(statusUpdatePattern('sessionComplete'), parseStatusNotification)\n  yield takeEvery(statusUpdatePattern('sessionFail'), parseStatusNotification)\n}\n\n/**\n * Handle a `callCancel` notification from Link.\n * @method callCancelNotification\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * callCancelNotification (deps) {\n  // Redux-saga take pattern.\n  function callCancelPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'callCancel'\n  }\n\n  /**\n   * Handle Link-specific behaviours before passing the notification off to the\n   *    Callstack.\n   * @method handleCallCancel\n   * @param  {Object} action\n   */\n  function * handleCallCancel (action) {\n    /*\n     * Workaround: Delay a short time before processing the notification.\n     * The backend sends a \"callCancel\" notification immediately after answering\n     *    (and rejecting, forwarding) a call. The backend's intention for this\n     *    is to notify other user subscriptions (eg. same user on another\n     *    device) that the call has been handled, so the call is \"cancelled\" for\n     *    this subscription. But they send it as a broadcast notification to all\n     *    subscriptions, even the one that handled the call.\n     *\n     * We need to ignore this notification for the subscription that handled the\n     *    call, but process it for any other subscriptions. We do this by\n     *    delaying the notification to ensure the \"answer call\" process is\n     *    finished. This delay ensures that the Call is in the correct state\n     *    after the user responded to the call, so we can tell whether the\n     *    notification needs to be ignored or not.\n     *\n     * This workaround has the side-effect that callCancel notifications we do\n     *    want to process are delayed.\n     *\n     * Slower networks may need a longer delay...\n     */\n    yield delay(3000)\n\n    // Get the current call\n    const { sessionData } = action.payload.notificationMessage.sessionParams\n    const currentCall = yield select(getCallByWrtcsSessionId, sessionData)\n\n    if (\n      currentCall &&\n      currentCall.state !== CALL_STATES.RINGING &&\n      currentCall.state !== CALL_STATES.EARLY_MEDIA &&\n      currentCall.state !== CALL_STATES.INITIATED\n    ) {\n      // Don't process the notification if the call isn't \"ringing\".\n      log.debug(`Received call cancel notification when state is ${currentCall.state}. Ignoring.`)\n      return\n    }\n\n    const params = {\n      wrtcsSessionId: sessionData\n    }\n\n    // Now process the notification after making sure we don't want to ignore it.\n    yield call(callCancelled, deps, params)\n  }\n\n  yield takeEvery(callCancelPattern, handleCallCancel)\n}\n\n/**\n * Handle receiving remote offer notifications in a Link format.\n * Uses properties in the notification to create a standardized data object to\n *    be used by the Callstack.\n * @method receiveRemoteOffer\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * receiveRemoteOffer (deps) {\n  /**\n   * Intercept the Link-specific notification, ensuring parameters are given\n   *    to the Callstack sagas into a generic format.\n   * @method parseOfferNotification\n   * @param {Object} action\n   */\n  function * parseOfferNotification (action) {\n    const message = action.payload.notificationMessage\n    const remoteInfo = yield call(getRemoteParticipant, message)\n\n    // Pull-out the parameters into a standard format for the Callstack.\n    const params = {\n      wrtcsSessionId: message.sessionParams.sessionData,\n      sdp: message.sessionParams.sdp,\n      ...remoteInfo,\n      customParameters: message.customParameters\n    }\n\n    // Pass the call parameters to the Callstack for handling.\n    yield call(parseCallRequest, { ...deps, requests }, params)\n  }\n\n  // take() pattern for \"update call w/ offer\" notifications.\n  function receiveOfferPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'startCallUpdate'\n  }\n\n  yield takeEvery(receiveOfferPattern, parseOfferNotification)\n}\n\n/**\n * Handle receiving remote answer notifications in a Link format.\n * Uses properties in the notification to create a standardized data object to\n *    be used by the Callstack.\n * @method receiveRemoteAnswer\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * receiveRemoteAnswer (deps) {\n  /**\n   * Intercept the Link-specific notification, ensuring parameters are given\n   *    to the Callstack sagas into a generic format.\n   * @method parseAnswerNotification\n   * @param {Object} action\n   */\n  function * parseAnswerNotification (action) {\n    const message = action.payload.notificationMessage\n    const remoteInfo = yield call(getRemoteParticipant, message)\n\n    // Pull-out the parameters into a standard format for the Callstack.\n    const params = {\n      wrtcsSessionId: message.sessionParams.sessionData,\n      sdp: message.sessionParams.sdp,\n\n      retryAfter: message.sessionParams.retryAfter,\n      message: message.sessionParams.reasonText,\n      code: message.statusCode,\n\n      // Remote participant information.\n      ...remoteInfo,\n\n      customParameters: message.customParameters\n    }\n\n    // Pass the call parameters to the Callstack for handling.\n    yield call(parseCallResponse, { ...deps, requests }, params)\n  }\n\n  // take() pattern for \"update call with answer\" notifications.\n  function receiveAnswerPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'respondCallUpdate'\n  }\n\n  yield takeEvery(receiveAnswerPattern, parseAnswerNotification)\n}\n\n/**\n * End an ongoing call.\n * @method endCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * endCallEntry (deps) {\n  yield takeEvery(actionTypes.END_CALL, midcallSagas.endCall, { ...deps, requests })\n}\n\n/**\n * Ignore an incoming call.\n * @method ignoreCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * ignoreCallEntry (deps) {\n  yield takeEvery(actionTypes.IGNORE_CALL, ignoreCall, { ...deps })\n}\n\n/**\n * Put a call on hold.\n * Currently, \"hold\" is defined as setting media directions to inactive.\n * TODO: There will be different \"hold\" scenarios. Need to determine how to\n *    differentiate between them to know which saga to trigger.\n * @method holdCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * holdCall (deps) {\n  yield takeEvery(actionTypes.CALL_HOLD, midcallSagas.offerInactiveMedia, { ...deps, requests })\n}\n\n/**\n * Take a call off hold.\n * Currently, \"unhold\" is defined as setting media directions to sendrecv.\n * TODO: There will be different \"unhold\" scenarios. Need to determine how to\n *    differentiate between them to know which saga to trigger.\n * @method unholdCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * unholdCall (deps) {\n  yield takeEvery(actionTypes.CALL_UNHOLD, midcallSagas.offerFullMedia, { ...deps, requests })\n}\n\n/**\n * Sends custom parameters for a call\n * @method sendCustomParameters\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * sendCustomParameters (deps) {\n  yield takeEvery(actionTypes.SEND_CUSTOM_PARAMETERS, midcallSagas.sendCustomParameters, { ...deps, requests })\n}\n\n/**\n * Handle sending a call audit request\n * TODO: Move the common \"setup\" logic into the Callstack?\n * @method callAudit\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * callAudit (deps) {\n  const actionTypesToDoAuditOn = [actionTypes.ANSWER_CALL, actionTypes.CALL_ACCEPTED, actionTypes.MAKE_CALL_FINISH]\n\n  function callStartAuditPattern (action) {\n    return actionTypesToDoAuditOn.indexOf(action.type) !== -1 && !action.error\n  }\n\n  yield takeEvery([callStartAuditPattern, actionTypes.CALL_AUDIT], sendCallAudit, {\n    webRTC: deps.webRTC,\n    requests\n  })\n}\n\n/**\n * We need to check the session status of all active calls upon websocket connection to ensure all call states are up to date\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * getSessionsOnWSConnect (deps) {\n  yield takeEvery(connectivityActionTypes.WS_CONNECT_FINISHED, getSessions, { ...deps, requests })\n}\n\n/**\n * Get RTCStatsReport.\n * @method getStats\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * getStatsEntry (deps) {\n  yield takeEvery(actionTypes.GET_STATS, midcallSagas.getStats, deps)\n}\n\n/**\n * Handles updating TURN information after the user connects.\n * @method setTurnCredentials\n */\nexport function * setTurnCredentials () {\n  // Check that the action is a succesful subscription that includes\n  //    TURN information from the server.\n  function hasTurnCredentials (action) {\n    return (\n      !action.error &&\n      ((action.type === CONNECT_FINISHED &&\n        action.payload.subscription &&\n        action.payload.subscription.turnCredentials) ||\n        (action.type === SUBSCRIBE_FINISHED &&\n          action.payload.subscriptions &&\n          action.payload.subscriptions.turnCredentials))\n    )\n  }\n\n  yield takeEvery(hasTurnCredentials, supportSagas.setTurnCredentials)\n}\n\n/**\n * Forward an incoming call.\n * @method forwardCallEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * forwardCallEntry (deps) {\n  yield takeEvery(actionTypes.FORWARD_CALL, forwardCall, { ...deps, requests })\n}\n\n/**\n * Transfers 2 ongoing calls to one another.\n * @method consultativeTransferEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * consultativeTransferEntry (deps) {\n  yield takeEvery(actionTypes.CONSULTATIVE_TRANSFER, midcallSagas.consultativeTransfer, { ...deps, requests })\n}\n\n/**\n * Direct Transfer an ongoing call.\n * @method directTransferEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * directTransferEntry (deps) {\n  yield takeEvery(actionTypes.DIRECT_TRANSFER, midcallSagas.directTransfer, { ...deps, requests })\n}\n\n/**\n * Joins 2 ongoing calls.\n * @method joinEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * joinEntry (deps) {\n  yield takeEvery(actionTypes.JOIN, midcallSagas.join, { ...deps, requests })\n}\n\n/**\n * Replaces a track with a new track with specified constraints.\n * @method replaceTrackEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * replaceTrackEntry (deps) {\n  yield takeEvery(actionTypes.REPLACE_TRACK, midcallSagas.replaceTrack, deps)\n}\n\n/**\n * Retrieves the list of available codecs supported by the browser.\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * getAvailableCodecsEntry (deps) {\n  yield takeEvery(actionTypes.GET_AVAILABLE_CODECS, getAvailableCodecs, { ...deps })\n}\n","import { turnActions } from '../../interfaceNew/actions'\nimport { getOptions } from '../../interfaceNew/selectors'\n\n// Other plugins.\nimport { logManager } from '../../../logs'\nimport { CONNECT_FINISHED } from '../../../auth/interface/actionTypes'\n\n// Libraries.\nimport { put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * Handles setting turn/stun information that has been\n *    received from the server.\n * @method setTurnCredentials\n * @param {Object} action A \"connect finished\" action.\n */\nexport function * setTurnCredentials (action) {\n  const { iceServers, serverTurnCredentials } = yield select(getOptions)\n\n  // Must have ICE servers configured.\n  if (!iceServers) {\n    log.debug('No ICE servers provided during setup; not using TURN/STUN for calls.')\n    return\n  }\n\n  if (!serverTurnCredentials) {\n    log.debug('Using application provided turn credentials.')\n    return\n  }\n\n  // TURN credentials received from the server.\n  const turnCredentials =\n    action.type === CONNECT_FINISHED\n      ? action.payload.subscription.turnCredentials\n      : action.payload.subscriptions.turnCredentials\n\n  const turnInfo = {\n    credentials: turnCredentials,\n    // Map the server-provided credentials to the ICE server list.\n    servers: iceServers.map(iceInfo => {\n      return {\n        ...iceInfo,\n        username: turnCredentials.username,\n        credential: turnCredentials.password\n      }\n    })\n  }\n\n  yield put(turnActions.turnChanged(turnInfo))\n}\n","// Call plugin.\nimport { getCallByWrtcsSessionId } from '../../interfaceNew/selectors'\n\n// Other plugins.\nimport { getDomain } from '../../../auth/interface/selectors'\nimport { logManager } from '../../../logs'\n\n// Libraries.\nimport { select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * Gets the remote participant data from a notification object's `callNotificationParams` property if it exists.\n * @param {Object} notification The notification object to extract remote participant data from.\n * @returns {Object} Object containing `remoteName` & `remoteNumber` properties.\n *                   Empty object if `callNotificationParams` property does not exist.\n */\nexport function * getRemoteParticipant (notification) {\n  const wrtcsSessionId = notification.sessionParams.sessionData\n  const targetCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  let remoteInfo = {}\n  if (!notification.callNotificationParams) {\n    // `sessionComplete` notifications don't have `callNotificationParams`.\n    log.debug(`Notification does not contain property 'callNotificationParams'.`)\n  } else {\n    /**\n     * SPiDR notifications seem to have different \"remote participant\" properties\n     *    in different scenarios. Determine which scenario the call is in to know\n     *    how to parse the notification.\n     */\n    if (targetCall.direction === 'incoming') {\n      remoteInfo = {\n        remoteName: notification.callNotificationParams.callerName,\n        remoteNumber: notification.callNotificationParams.callerDisplayNumber\n      }\n    } else {\n      remoteInfo = {\n        remoteName: notification.callNotificationParams.remoteName,\n        remoteNumber: notification.callNotificationParams.remoteDisplayNumber\n      }\n    }\n  }\n\n  /*\n   * Sometimes the \"display number\" doesn't include a domain. Make sure it has\n   *    a domain so that it is always consistent.\n   * TODO: Figure out in which cases this was needed. Transfer?\n   *    Ref: KAA-746\n   */\n  if (remoteInfo.remoteNumber && !remoteInfo.remoteNumber.includes('@')) {\n    const domain = yield select(getDomain)\n    remoteInfo.remoteNumber += domain\n  }\n\n  // If the data from the notification is undefined, use whatever the existing\n  //    value on the call was.\n  return {\n    remoteName: remoteInfo.remoteName || targetCall.remoteParticipant.displayName,\n    remoteNumber: remoteInfo.remoteNumber || targetCall.remoteParticipant.displayNumber\n  }\n}\n","// Other plugins.\nimport { getSubscriptionInfo } from '../../../subscription/interface/selectors'\n\n// Helpers.\nimport BasicError, { callCodes } from '../../../errors'\n\n// Libraries.\nimport { select } from 'redux-saga/effects'\nimport { logManager } from '../../../logs'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * Gets the websocket id being used by the call.\n * @method getWebsocketId\n * @returns {Object} result Contains `websocketId` property or an `error` property\n * @returns {string} result.websocketId The websocket id being used by the call.\n * @returns {BasicError} result.error An error object on failure to find websocket id.\n */\nexport function * getWebsocketId () {\n  const subscriptionInfo = yield select(getSubscriptionInfo)\n\n  try {\n    // Match anything after /websocket/ in the string. The ID should be the first result, which is the (.*) group.\n    const websocketId = subscriptionInfo.notificationChannel.match(/\\/websocket\\/([^\\s]+)/)[1]\n    return { websocketId }\n  } catch (e) {\n    log.error(e.message)\n    return {\n      error: new BasicError({\n        code: callCodes.GENERIC_ERROR,\n        message: 'Websocket ID not found'\n      })\n    }\n  }\n}\n","/**\n * Extracts the domain from an address if an @ symbol exists and isn't at the start or end of the address.\n * @param {string} addressString The address string to extract the domain from (if it exists).\n * @returns {string} The extracted domain. Empty string of none found.\n */\nfunction extractDomainFromAddress (addressString) {\n  const indexOfAtSymbol = addressString.lastIndexOf('@')\n  if (indexOfAtSymbol !== 0 && indexOfAtSymbol !== addressString.length - 1) {\n    // If '@' symbol found in middle of addressString, split it.\n    if (indexOfAtSymbol !== -1) {\n      return addressString.substr(indexOfAtSymbol + 1)\n    }\n  }\n  return ''\n}\n\n/**\n * Determines which address and domain to use depending on whether the address string contains a domain or not.\n * @param {string} addressString The address string to examine and extract a domain from (if any).\n * @param {string} defaultDomainString The domain to use if the address string does not contain a domain in it.\n * @returns {Object} An object containing the correct address and domain to use.\n */\nfunction separateAddressAndDomain (addressString, defaultDomainString) {\n  const extractedDomain = extractDomainFromAddress(addressString)\n  // If a domain was extracted from the address, use that as the domain and strip it from the address.\n  if (extractedDomain) {\n    return {\n      address: addressString.substr(0, addressString.length - extractedDomain.length - 1),\n      domain: extractedDomain\n    }\n  } else {\n    return {\n      address: addressString,\n      domain: defaultDomainString\n    }\n  }\n}\n\n/**\n * Extracts any pre-pended data before a \":\" (if it exists) from the beginning of a string.\n * @param {string} inputString The string to remove pre-pended data from.\n * @returns {string} The pre-pended data string.\n */\nfunction extractPrependedData (inputString) {\n  const prependedDataMatches = inputString.match(/^.*:/g)\n  if (prependedDataMatches && prependedDataMatches[0]) {\n    return prependedDataMatches[0]\n  } else {\n    return ''\n  }\n}\n\n/**\n * Finds the leading special characters (\"#\", \"+\", \"*\") of an address if it is a phone number.\n * If the address contains letters or any non-visual-separator characters,\n *  it is not a phone number and no leading special characters will be found.\n * @param {string} addressString The address string to find the leading characters of (if any).\n *  The addressString must not contain any pre-pended data such as \"sip:\".\n *  The addressString must not contain a domain.\n * @returns {string} The leading special characters as one string. Empty string if none found.\n */\nfunction extractLeadingSpecialCharacters (addressString) {\n  // A single or group of contiguous characters are considered leading character/s if it is  the following:\n  // - starts at the beginning of the string - ^\n  // - is any of the following characters - [#+*]+\n  // - is followed by a digit or \"(\" - [\\d|(]\n  // - is followed by any number of only digits and visual separators - [\\d \\-.()+]*$\n  const potentialLeadingChars = addressString.match(/^[#+*]+[\\d|(][\\d \\-.()+]*$/g)\n  if (potentialLeadingChars && potentialLeadingChars[0]) {\n    // Guaranteed to have a match for regex [#+*]+ since we have potentialLeadingChars\n    // which was a match for a similar regex and we are simply extracting the leading characters part.\n    const actualLeadingChars = potentialLeadingChars[0].match(/[#+*]+/g)\n    return actualLeadingChars[0]\n  }\n  return ''\n}\n\n/**\n * Outputs a new string without its phone number visual separators (\"-\", \".\", \"(\", \")\", \"+\").\n * @param {string} inputString The string to remove visual separators from.\n * @returns {string} A new string without visual separators.\n */\nfunction withoutVisualSeparators (inputString) {\n  return inputString.replace(/[ \\-.()+]/g, '')\n}\n\n/**\n * Determines whether a string should be considered a phone number or not.\n * @param {string} addressString The address string to check.\n *  The addressString must not contain any pre-pended data such as \"sip:\"\n *  The addressString must not contain any leading special characters.\n *  The addressString must not contain a domain.\n * @returns {boolean} True if the input string is a phone number. False if it is not.\n */\nfunction isPhoneNumber (addressString) {\n  const cleanNumber = withoutVisualSeparators(addressString)\n  const phoneNumberMatch = cleanNumber.match(/^\\d+$/g)\n  return phoneNumberMatch && phoneNumberMatch.length === 1\n}\n\n/**\n * Processes the address string and returns the correct output.\n * If the address is a phone number, visual separators are removed.\n * Otherwise, it will just return the address as-is.\n * @param {string} addressString The address string to process.\n *  The addressString must not contain any pre-pended data such as \"sip:\".\n *  The addressString must not contain any leading special characters (if it is a phone number).\n *  The addressString must not contain a domain.\n * @returns {string} A phone number without visual-separators or the addressString as-is.\n */\nfunction processAddress (addressString) {\n  return isPhoneNumber(addressString) ? withoutVisualSeparators(addressString) : addressString\n}\n\n/**\n * Processes the domain string and returns the correct output.\n * Adds an \"@\" symbol if it isn't present at the beginning of the domain.\n * @param {string} domainString The domain string to process.\n * @returns {string} The domain with \"@\" symbol at the beginning if it doesn't exist.\n */\nfunction processDomain (domainString) {\n  if (domainString === '' || domainString === undefined) {\n    return ''\n  } else if (domainString.indexOf('@') === 0) {\n    return domainString\n  } else {\n    return '@' + domainString\n  }\n}\n\n/**\n *The function takes in the input dial string and domain address of the user, performs a normalization process based on the phone number handling normalization rules\n * @function normalizeSipUri\n * @param {string} address   It contains the input dial string the user dials in or the callee address\n * @param {string} domain    It contains the user's domain address\n * @returns {string} output  The output which is the normalized callee address/phone number\n */\nexport function normalizeSipUri (address, domain) {\n  // Remove leading and trailing white spaces.\n  address = address.trim()\n\n  // Extract domain.\n  const resultingAddressAndDomain = separateAddressAndDomain(address, domain)\n  domain = resultingAddressAndDomain.domain\n  address = resultingAddressAndDomain.address\n\n  // Extract pre-pended \"sip:\".\n  const prepend = extractPrependedData(address)\n  address = address.substr(prepend.length)\n\n  // Extract leading characters.\n  const leadingChars = extractLeadingSpecialCharacters(address)\n  address = address.substr(leadingChars.length)\n\n  // Process and build parts into final output in the form of `<prepend>:<leadingChars><address>@<domain>`.\n  return 'sip:' + leadingChars + processAddress(address) + processDomain(domain)\n}\n","// Libraries\nimport sdpTransform from 'sdp-transform'\n\n/**\n * Set all media to inactive in a given sdp string\n * @method setMediaInactive\n * @param  {string}  sdp An sdp string\n * @return {string}  Modified sdp string with media direction set to inactive\n */\nexport function setMediaInactive (sdp) {\n  const regex = /sendrecv|sendonly|recvonly/gi\n  if (!sdp || typeof sdp !== 'string') {\n    return\n  }\n\n  return sdp.replace(regex, 'inactive')\n}\n\n/**\n * Helper function that returns a boolean if media is active or not.\n * @method hasMediaFlowing\n * @param  {string} sdp String representation of a calls sdp.\n */\nexport function * hasMediaFlowing (sdp) {\n  const objectSdp = sdpTransform.parse(sdp)\n\n  // Check that video directions (if there are any) indicate a \"hold\" scenario.\n  const isVideoInactive = objectSdp.media\n    .filter(item => item.type === 'video')\n    .every(media => media && media.direction === 'inactive')\n\n  // Check that audio directions (if there are any) indicate a \"hold\" scenario.\n  const isAudioInactive = objectSdp.media\n    .filter(item => item.type === 'audio')\n    // Special case: In music on hold scenarios, audio may be `sendonly`\n    //    so that the held user can still receive the \"hold music\".\n    .every(media => media && ['inactive', 'sendonly'].includes(media.direction))\n\n  return !isVideoInactive || !isAudioInactive\n}\n\n/**\n * Helper function that returns a boolean if media sendonly (music on hold).\n * @method hasMusicOnHold\n * @param  {string} sdp String representation of a calls sdp.\n */\nexport function * hasMusicOnHold (sdp) {\n  const objectSdp = sdpTransform.parse(sdp)\n  const isMusicOnHold = objectSdp.media\n    .filter(item => item.type === 'audio')\n    .some(media => media && media.direction === 'sendonly')\n\n  // Check that video directions (if there are any) indicate a \"hold\" scenario.\n  const isVideoInactive = objectSdp.media\n    .filter(item => item.type === 'video')\n    .every(media => media && media.direction === 'inactive')\n\n  return isMusicOnHold && isVideoInactive\n}\n","// Helpers.\nimport { CALL_STATES, CALL_MEDIA_STATES } from '../constants'\n\n/**\n * Retrieves the current state of media flow based on a call's state.\n * @method getMediaState\n * @param  {Object} callState A call's state.\n * @return {string} A CALL_MEDIA_STATES enum value.\n */\nexport function getMediaState (callState) {\n  if (hasMedia(callState)) {\n    return CALL_MEDIA_STATES.CONNECTED\n  } else if (isLocalHold(callState)) {\n    return CALL_MEDIA_STATES.LOCAL_HOLD\n  } else if (isRemoteHold(callState)) {\n    return CALL_MEDIA_STATES.REMOTE_HOLD\n  } else if (isDualHold(callState)) {\n    return CALL_MEDIA_STATES.DUAL_HOLD\n  }\n}\n\n/**\n * Checks whether the call state indicates that the call has media.\n * @method hasMedia\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function hasMedia (callState) {\n  return callState.state === CALL_STATES.CONNECTED && !callState.localHold && !callState.remoteHold\n}\n\n/**\n * Checks whether the call state indicates that the call is locally held (only).\n * @method isLocalHold\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function isLocalHold (callState) {\n  return callState.state === CALL_STATES.ON_HOLD && callState.localHold && !callState.remoteHold\n}\n\n/**\n * Checks whether the call state indicates that the call is remotely held (only).\n * @method isRemoteHold\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function isRemoteHold (callState) {\n  return callState.state === CALL_STATES.ON_HOLD && !callState.localHold && callState.remoteHold\n}\n\n/**\n * Checks whether the call state indicates that the call is both locally and\n *    remote held.\n * @method isDualHold\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function isDualHold (callState) {\n  return callState.state === CALL_STATES.ON_HOLD && callState.localHold && callState.remoteHold\n}\n","// Call History plugin.\nimport { api, name, reducer } from './interface'\nimport * as sagas from './sagas'\nimport events from './interface/events'\n\n// Other plugins.\nimport { mapEvents } from '../events/interface/actions'\n\n// Libraries.\nimport { values } from 'lodash/fp'\nimport { put } from 'redux-saga/effects'\n\n/**\n * Call History plugin factory.\n * @method callHistory\n * @return {Object} plugin - An sdk plugin.\n */\nexport default function callHistory () {\n  function * init () {\n    yield put(mapEvents(events))\n  }\n\n  return {\n    name,\n    capabilities: ['callHistory'],\n    init,\n    api,\n    reducer,\n    sagas: values(sagas)\n  }\n}\n","const prefix = '@@KANDY/'\n\nexport const FETCH_CALL_HISTORY = prefix + 'FETCH_CALL_HISTORY'\nexport const FETCH_CALL_HISTORY_FINISH = prefix + 'FETCH_CALL_HISTORY_FINISH'\n\nexport const DELETE_CALL_HISTORY = prefix + 'DELETE_CALL_HISTORY'\nexport const DELETE_CALL_HISTORY_FINISH = prefix + 'DELETE_CALL_HISTORY_FINISH'\n\nexport const ADD_CALL_HISTORY_ENTRY = prefix + 'ADD_CALL_HISTORY_ENTRY'\n\nexport const SET_CACHE = prefix + 'SET_CACHE'\n","import * as actionTypes from './actionTypes'\n\n/**\n * Represents a request to fetch call logs.\n * @method retrieveCallLogs\n * @param  {number} amount The number of records to retrieve.\n * @param  {number} offset Starting offset for records to retrieve.\n * @return {Object} A flux standard action.\n */\nexport function retrieveCallLogs (amount, offset) {\n  return {\n    type: actionTypes.FETCH_CALL_HISTORY,\n    payload: {\n      amount,\n      offset\n    }\n  }\n}\n\n/**\n * Represents a received response from fetching call logs.\n * @method retrieveCallLogsFinish\n * @param  {Object} $0\n * @param  {Object} $0.logs Retrieved call logs.\n * @param  {BasicError} $0.error  Error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function retrieveCallLogsFinish ({ logs, error }) {\n  return {\n    type: actionTypes.FETCH_CALL_HISTORY_FINISH,\n    error: !!error,\n    payload: error || logs\n  }\n}\n\n/**\n * Represents a request to delete call logs.\n * @method removeCallLogs\n * @param  {number} recordId Which logs to delete.\n * @return {Object} A flux standard action.\n */\nexport function removeCallLogs (recordId) {\n  return {\n    type: actionTypes.DELETE_CALL_HISTORY,\n    payload: recordId\n  }\n}\n\n/**\n * Represents a received response from deleting call logs.\n * @method removeCallLogsFinish\n * @param  {Object} $0\n * @param  {number|string} $0.recordId The ID of the removed record. Can also be 'all'.\n * @param  {BasicError} $0.error  Error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function removeCallLogsFinish ({ recordId, error }) {\n  return {\n    type: actionTypes.DELETE_CALL_HISTORY_FINISH,\n    error: !!error,\n    payload: error || recordId\n  }\n}\n\n/**\n * Represents a request to add a new entry to the call logs.\n * @method addCallLogEntry\n * @param  {Object} $0 The call log entry to add\n * @return {Object} A flux standard action.\n */\nexport function addCallLogEntry (logEntry) {\n  return {\n    type: actionTypes.ADD_CALL_HISTORY_ENTRY,\n    payload: logEntry\n  }\n}\n\n/**\n * Represents a call to set the cache in the call history\n * @method setCache\n * @param  {Object} $0 call log state to hydrate into app state\n * @return {Object} A flux standard action.\n */\nexport function setCache (data) {\n  return {\n    type: actionTypes.SET_CACHE,\n    payload: data\n  }\n}\n","/**\n * The 'call.history' namespace is used to retrieve and inspect the authenticated\n * users call logs.\n *\n * Functions below are all part of this namespace.\n *\n * @public\n * @namespace callHistory\n */\n\n// Call History interface.\nimport * as actions from './actions'\nimport { getCallHistory, getCachedHistory } from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('CALLHISTORY')\n\n/**\n * Call History API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch The redux store's dispatch function.\n * @param {Function} $0.getState - The redux store's getState function.\n * @return {Object} API.\n */\nexport default function api ({ dispatch, getState }) {\n  const callHistoryApi = {\n    /**\n     * Fetches the list of call logs and stores them locally. The API\n     * `getCallLogs` can then be used to get the logs from local state after\n     * it has been updated.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method fetch\n     * @param  {number} [amount=50] The number of records to retrieve.\n     * @param  {number} [offset=0] Starting offset for records to retrieve.\n     */\n    fetch (amount = 50, offset = 0) {\n      log.debug(`${API_LOG_TAG}call.history.fetch, amount: ${amount}, offset: ${offset}`)\n      dispatch(actions.retrieveCallLogs(amount, offset))\n    },\n\n    /**\n     * Deletes the specified call log.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method remove\n     * @param  {number} recordId The ID of the call log to be removed.\n     */\n    remove (recordId) {\n      log.debug(`${API_LOG_TAG}call.history.remove, recordId: ${recordId}`)\n      dispatch(actions.removeCallLogs(recordId))\n    },\n\n    /**\n     * Deletes all call logs.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method clear\n     */\n    clear () {\n      log.debug(`${API_LOG_TAG}call.history.clear`)\n      dispatch(actions.removeCallLogs('all'))\n    },\n\n    /**\n     * Gets the list of call logs cached locally. The event\n     * `callHistory:changed` is used to indicate the local state of logs\n     * has been updated.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method get\n     * @example\n     * client.on('callHistory:change', function() {\n     *     // Get all call logs when they've been updated.\n     *     let callLogs = client.call.history.get();\n     * });\n     * @returns {Array} A list of call log records, ordered by latest first.\n     */\n    get () {\n      log.debug(`${API_LOG_TAG}call.history.get`)\n      return getCallHistory(getState())\n    },\n\n    /**\n     * Gets the cached call history data and returns stringified data.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method getCache\n     * @returns {string} A stringified list of call log records from the cache, ordered by latest first.\n     */\n    getCache () {\n      log.debug(`${API_LOG_TAG}call.history.getCache`)\n      return JSON.stringify(getCachedHistory(getState()))\n    },\n\n    /**\n     * Sets the cached call history data, expects stringified data as it will be parsed.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method setCache\n     * @param {string} data The stringified call history data to store in the cache.\n     */\n    setCache (data) {\n      log.debug(`${API_LOG_TAG}call.history.setCache, data: ${data}`)\n      dispatch(actions.setCache(JSON.parse(data)))\n    }\n  }\n\n  return { call: { history: callHistoryApi } }\n}\n","/**\n * Call history state has been updated. See `getCallLogs()` to retrieve new state.\n * @public\n * @memberof callHistory\n * @event callHistory:change\n */\nexport const CALL_HISTORY_CHANGE = 'callHistory:change'\n\n/**\n * An error occurred while performing a call history operation.\n * @public\n * @memberof callHistory\n * @event callHistory:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const CALL_HISTORY_ERROR = 'callHistory:error'\n\n/**\n * Call history cached state has been updated\n * @public\n * @memberof callHistory\n * @event callHistoryCache:change\n */\nexport const CALL_HISTORY_CACHE_CHANGE = 'callHistoryCache:change'\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nfunction callHistoryEvent (action) {\n  if (!action.error) {\n    return [\n      {\n        type: eventTypes.CALL_HISTORY_CHANGE,\n        args: {}\n      },\n      {\n        type: eventTypes.CALL_HISTORY_CACHE_CHANGE,\n        args: {}\n      }\n    ]\n  } else {\n    return {\n      type: eventTypes.CALL_HISTORY_ERROR,\n      args: { error: action.payload }\n    }\n  }\n}\n\nvar events = {}\n\nevents[actionTypes.FETCH_CALL_HISTORY_FINISH] = callHistoryEvent\nevents[actionTypes.DELETE_CALL_HISTORY_FINISH] = callHistoryEvent\nevents[actionTypes.ADD_CALL_HISTORY_ENTRY] = callHistoryEvent\n\nexport default events\n","import api from './api'\nimport reducer from './reducers'\n\nconst name = 'callHistory'\n\nexport { name, api, reducer }\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { reverse, sortBy, unionBy, concat } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.FETCH_CALL_HISTORY_FINISH] = {\n  next (state, action) {\n    // Note: If a conflict occurs in the below unionBy, the newer log is\n    //      preferred over the older log. This is because SPiDR only keeps\n    //      50 records at a time, and it re-uses old recordIds when it\n    //      creates new record logs. It's stupid.\n\n    // Get local Logs. Local logs are identified by having a recordID of 16 characters\n    let localLogs = state.filter(function (log) {\n      return log.recordId.length === 36 && log.duration !== '0'\n    })\n\n    // Remove the local logs\n    let localLogsRemoved = state.filter(function (log) {\n      return log.resourceLocation !== ''\n    })\n\n    // Generate a list of unique logs (ie; not found in server logs)\n    let uniqueLogs = localLogs.filter(function (log) {\n      var result = action.payload.some(isSimilar, log)\n      return !result\n    })\n\n    // Combine server logs and new logs.\n    let newLogs = concat(unionBy('recordId', action.payload, localLogsRemoved), uniqueLogs)\n\n    // Sort start time, in descending order.\n    return reverse(sortBy('startTime', newLogs))\n  }\n}\n\nreducers[actionTypes.DELETE_CALL_HISTORY_FINISH] = {\n  next (state, action) {\n    if (action.payload === 'all') {\n      return []\n    } else {\n      return state.map(function (log) {\n        return log.recordId !== action.payload\n      })\n    }\n  }\n}\n\nreducers[actionTypes.ADD_CALL_HISTORY_ENTRY] = {\n  next (state, action) {\n    return concat(action.payload, state)\n  }\n}\n\n// rehydrate cache with previously stored data\nreducers[actionTypes.SET_CACHE] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\n// Call History default state is an empty array.\nconst reducer = handleActions(reducers, [])\nexport default reducer\n\n/*\n * A helper function to determine if 2 log entries are similar.\n * A log is considered similar under the following conditions:\n *   - the startTime is within 10 seconds\n *   - the duration is within 5 seconds\n *   - the direction is the same\n */\nlet isSimilar = function (serverLogEntry) {\n  const startTimePadding = 10000\n  const durationPadding = 5000\n\n  if (Math.abs(serverLogEntry.startTime - this.startTime) > startTimePadding) {\n    return false\n  }\n  if (Math.abs(serverLogEntry.duration - this.duration) > durationPadding) {\n    return false\n  }\n  if (serverLogEntry.direction !== this.direction) {\n    return false\n  }\n  return true\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves call history stored in state.\n * @method getCallHistory\n * @param  {Object} state Redux state.\n * @return {Array}\n */\nexport function getCallHistory (state) {\n  return cloneDeep(state.callHistory)\n}\n\n/**\n * Retrieves call history stored in state\n * @method getCachedHistory\n * @param  {Object} state Redux state.\n * @return {Array}\n */\nexport function getCachedHistory (state) {\n  return cloneDeep(state.callHistory)\n}\n","/**\n * Sagas related to client generated call history.\n */\n\n// Call History plugin.\nimport { addCallLogEntry } from '../interface/actions'\n\n// Other plugins.\nimport { getUserInfo } from '../../auth/interface/selectors'\nimport { END_CALL_FINISH, REJECT_CALL_FINISH } from '../../call/interfaceNew/actionTypes'\nimport { CALL_STATES_FCS, CALL_STATES } from '../../call/constants'\nimport { getCallById as oldGetCallById } from '../../call/interface/selectors'\nimport { getCallById as newGetCallById } from '../../call/interfaceNew/selectors'\n\n// Helpers.\nimport { logManager } from '../../logs'\n\n// Libraries\nimport { put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALLHISTORY')\n\n/**\n * Constructs a local call log from a \"call ended\" action.\n * Old callstack specific.\n *\n * This saga defines how a \"local call log\" is created after a call has ended.\n *    The format of the log mimics the format of server-side call logs.\n * Assumptions:\n *    1. The provided action is a \"call ended\" action for the old callstack.\n * Responsibilities:\n *    1. Gather all information needed for a call log.\n *    2. Create / format the call log.\n *    3. Update redux state (via actions).\n * @method oldStoreCallLogs\n * @param {Object} action A `CALL_STATE_CHANGE` action representing a call end.\n */\nexport function * oldStoreCallLogs (action) {\n  // Make sure this is a call end state change.\n  if (action.payload.state !== CALL_STATES_FCS['ENDED']) {\n    return\n  }\n\n  // Get call state needed for the log.\n  const call = yield select(oldGetCallById, action.payload.callId)\n\n  if (!call) {\n    log.debug(`Call info (${action.payload.callId}) not in state to create local log.`)\n    return\n  }\n\n  var logEntry = {\n    recordId: action.payload.callId,\n    startTime: '' + call.startTime,\n    duration: '' + (call.endTime - call.startTime),\n    callerDisplayNumber: call.from,\n    calleeDisplayNumber: call.to,\n    calleeName: call.calleeName,\n    remoteParticipant: call.remoteParticipant,\n    originalRemoteParticipant: call.originalRemoteParticipant,\n    resourceLocation: ''\n  }\n\n  if (call.direction === 'incoming') {\n    // If the previous state was ringing, and the change was not because the call was\n    //      answered by another device (ie. code 9904), then it is a missed call.\n    if (\n      action.payload.transition.prevState === CALL_STATES_FCS['RINGING'] &&\n      action.payload.transition.code !== '9904'\n    ) {\n      logEntry.direction = 'missed'\n    } else {\n      logEntry.direction = 'incoming'\n    }\n    logEntry.callerName = call.callerName\n  } else {\n    logEntry.direction = 'outgoing'\n    // Use the contact name provided to the call as the current user's name.\n    let contactName = (call.contact.firstName + ' ' + call.contact.lastName).trim()\n    logEntry.callerName = contactName || call.from.split('@')[0]\n  }\n\n  log.debug('Adding call event to the local call history:', logEntry)\n  yield put(addCallLogEntry(logEntry))\n}\n\n/**\n * Constructs a local call log from a \"call ended\" action.\n * New callstack specific.\n *\n * This saga defines how a \"local call log\" is created after a call has ended.\n *    The format of the log mimics the format of server-side call logs.\n * Assumptions:\n *    1. The provided action is a \"call ended\" action for the new callstack.\n * Responsibilities:\n *    1. Gather all information needed for a call log.\n *    2. Create / format the call log.\n *    3. Update redux state (via actions).\n * @method storeCallLogs\n * @param {Object} action An action representing a call ending.\n */\nexport function * storeCallLogs (action) {\n  if (![END_CALL_FINISH, REJECT_CALL_FINISH].includes(action.type)) {\n    return\n  }\n\n  // Get call state needed for the log.\n  const call = yield select(newGetCallById, action.payload.id)\n\n  if (!call) {\n    log.debug(`Call (${action.payload.id}) not in state to create local log.`)\n    return\n  }\n\n  // TODO: Call state doesn't have a property with the current user's name.\n  //    Get it from auth state for now.\n  const userInfo = yield select(getUserInfo)\n\n  var logEntry = {\n    recordId: action.payload.id,\n    startTime: '' + call.startTime,\n    duration: '' + (call.endTime - call.startTime),\n    callerDisplayNumber: call.isCaller ? userInfo.username : call.remoteParticipant.displayNumber,\n    calleeDisplayNumber: call.isCaller ? call.remoteParticipant.displayNumber : userInfo.username,\n    calleeName: call.isCaller\n      ? call.remoteParticipant.displayName || call.remoteParticipant.displayNumber\n      : userInfo.username,\n    callerName: call.isCaller\n      ? call.displayName\n        ? call.displayName\n        : userInfo.username\n      : call.remoteParticipant.displayName || call.remoteParticipant.displayNumber,\n    remoteParticipant: call.remoteParticipant,\n    originalRemoteParticipant: null,\n    resourceLocation: ''\n  }\n\n  if (call.direction === 'incoming') {\n    // If the previous state was ringing, and the change was not because the call was\n    //      answered by another device (ie. code 9904), then it is a missed call.\n    if (\n      action.payload.transition &&\n      action.payload.transition.prevState === CALL_STATES['RINGING'] &&\n      action.payload.transition.code !== '9904'\n    ) {\n      logEntry.direction = 'missed'\n    } else {\n      logEntry.direction = 'incoming'\n    }\n  } else {\n    logEntry.direction = 'outgoing'\n  }\n\n  log.debug(`Adding ${logEntry.direction} call to the local call history:`, logEntry)\n  yield put(addCallLogEntry(logEntry))\n}\n","/**\n * Call History saga index.\n * Defines which actions trigger which sagas.\n */\n\n// Call History plugin.\nimport { retrieveCallLogs, removeCallLogs } from './server'\nimport { storeCallLogs, oldStoreCallLogs } from './client'\nimport * as actionTypes from '../interface/actionTypes'\n\n// Other plugins.\nimport { CALL_STATE_CHANGE } from '../../call/interface/actionTypes'\nimport { END_CALL_FINISH, REJECT_CALL_FINISH } from '../../call/interfaceNew/actionTypes'\nimport { CALL_STATES_FCS } from '../../call/constants'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\n\n/**\n * Fetch server call history.\n * @method fetchLogs\n */\nexport function * fetchLogs () {\n  yield takeEvery(actionTypes.FETCH_CALL_HISTORY, retrieveCallLogs)\n}\n\n/**\n * Delete server call history.\n * @method removeLogs\n */\nexport function * removeLogs () {\n  yield takeEvery(actionTypes.DELETE_CALL_HISTORY, removeCallLogs)\n}\n\n/**\n * Create local call log after a call ends.\n * Handles actions from both the new and old call interfaces (new/old callstacks).\n * @method createLocalLog\n */\nexport function * createLocalLog () {\n  // Matches \"call ended\" actions from the old call interface (ie. old\n  //    callstack). The old \"call ended\" actions are \"state change\" actions\n  //    where the new state is \"ended\".\n  function oldCallEndedPattern (action) {\n    return action.type === CALL_STATE_CHANGE && action.payload.state === CALL_STATES_FCS['ENDED']\n  }\n\n  // Matches \"call ended\" actions from the new call interface (ie. new\n  //    callstack). The \"call ended\" actions are straight-forward \"end call\"\n  //    actions, but since the old interface also uses these actions, we need\n  //    to make sure they're the new interface \"end call\" actions. This is done\n  //    by checking how the call ID is stored in the payload.\n  //    new = action.payload.id; old = action.payload.callId\n  function callEndedPattern (action) {\n    return (action.type === END_CALL_FINISH || action.type === REJECT_CALL_FINISH) && action.payload.id\n  }\n\n  // Forward \"call ended\" actions to the appropriate saga.\n  yield takeEvery(oldCallEndedPattern, oldStoreCallLogs)\n  yield takeEvery(callEndedPattern, storeCallLogs)\n}\n","/**\n * Sagas related to server call history.\n */\n\n// Call History plugin.\nimport * as actions from '../interface/actions'\n\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\n\n// Helpers.\nimport { logManager } from '../../logs'\nimport request from '../../request/effects'\nimport BasicError, { callHistoryCodes } from '../../errors'\n\n// Libraries.\nimport { isNumber } from 'lodash/fp'\nimport { put, select } from 'redux-saga/effects'\n\n// Constants\nimport { platforms } from '../../constants'\n\nconst log = logManager.getLogger('CALLHISTORY')\n\n/**\n * Saga for fetching call log records.\n * @method retrieveCallLogs\n * @param {Object} action Action of type `FETCH_CALL_HISTORY`.\n */\nexport function * retrieveCallLogs (action) {\n  log.info(\n    `Attempting to retrieve ${action.payload.amount} call history log(s), with an offset of ${action.payload.offset}.`\n  )\n\n  // Catch invalid input (which breaks SPiDR) before making the request.\n  if (!isNumber(action.payload.amount) || action.payload.amount < 0 || !isNumber(action.payload.offset)) {\n    log.info('Unable to retrieve log(s); invalid input.')\n    yield put(\n      actions.retrieveCallLogsFinish({\n        error: new BasicError({\n          code: callHistoryCodes.BAD_REQUEST,\n          message: 'Unable to retrieve log(s); invalid input.'\n        })\n      })\n    )\n    return\n  }\n\n  // TODO: Break the callHistory requests into its own file.\n  const requestInfo = yield select(getRequestInfo)\n  let platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : requestInfo.version\n  let url = `${requestInfo.baseURL}/rest/version/${version}/user/${requestInfo.username}/logHistory`\n\n  let queryParams = {\n    startIndex: action.payload.offset,\n    count: action.payload.amount\n  }\n\n  let response = yield request(\n    {\n      url,\n      queryParams,\n      method: 'GET'\n    },\n    requestInfo.requestOptions\n  )\n\n  if (response.error) {\n    let error\n    if (response.payload.body) {\n      if (response.payload.body.logHistory) {\n        // Handle errors from the server.\n        let { statusCode } = response.payload.body.logHistory\n        log.info(`Failed to retrieve call logs with status code ${statusCode}.`)\n\n        error = new BasicError({\n          code: statusCode === 37 ? callHistoryCodes.BAD_REQUEST : callHistoryCodes.UNKNOWN_ERROR,\n          message: `Failed to retrieve call logs. Status Code: ${statusCode}.`\n        })\n      } else {\n        log.info(`Failed to retrieve call logs; user not authenticated.`)\n        error = new BasicError({\n          code: callHistoryCodes.NOT_AUTHENTICATED,\n          message: 'Failed to retrieve call logs; user not authenticated.'\n        })\n      }\n    } else {\n      // Handle errors from the request helper.\n      let { code, message } = response.payload.result\n      log.info('Failed to fetch call log(s)', message)\n\n      error = new BasicError({\n        code: code === 403 ? callHistoryCodes.FORBIDDEN : callHistoryCodes.UNKNOWN_ERROR,\n        message: `Call log fetch failed: ${message}.`\n      })\n    }\n\n    yield put(actions.retrieveCallLogsFinish({ error }))\n  } else {\n    // Massage the call logs into a more concise format.\n    let logs = response.payload.body.logHistory.logItems.map(function (log) {\n      if (log.type === 'CallLog') {\n        return log.params\n      }\n    })\n\n    log.info(`Successfully retrieved ${logs.length} call history log(s).`)\n\n    // Massage the call logs to include the remoteParticipant property.\n    logs = logs.map(function (log) {\n      /**\n       * There is a bug in SPiDR where it always uses the keys `callerName` and\n       * `callerDisplayNumber` for ALL logs, instead of only incoming logs.\n       * Because of this, callerDisplayNumber is always the remote participant,\n       * even when the local user is the caller.\n       * This if statement is a workaround for this problem.\n       * // TODO: Remove this if when the SPiDR issue is resolved.\n       */\n      if (log.direction === 'outgoing' && !log.calleeDisplayNumber && !log.calleeName) {\n        log.calleeDisplayNumber = log.callerDisplayNumber\n        log.calleeName = log.callerName\n        // Keep callerDisplayNumber and callerName properties unchanged for\n        //    backwards compatibility.\n      }\n\n      if (log.direction === 'outgoing') {\n        log.remoteParticipant = {\n          displayName: log.calleeName,\n          displayNumber: log.calleeDisplayNumber\n        }\n      } else {\n        log.remoteParticipant = {\n          displayName: log.callerName,\n          displayNumber: log.callerDisplayNumber\n        }\n      }\n      return log\n    })\n\n    yield put(actions.retrieveCallLogsFinish({ logs }))\n  }\n}\n\n/**\n * Saga for deleting call logs.\n * @method removeCallLogs\n * @param {Object} action Action of type `DELETE_CALL_HISTORY`.\n */\nexport function * removeCallLogs (action) {\n  log.info('Attempting to remove call log(s):', action.payload)\n\n  if (!action.payload) {\n    log.info('Could not remove call logs from history; invalid input.')\n    yield put(\n      actions.removeCallLogsFinish({\n        error: new BasicError({\n          code: callHistoryCodes.BAD_REQUEST,\n          message: 'Could not remove call logs; invalid input.'\n        })\n      })\n    )\n    return\n  }\n\n  const requestInfo = yield select(getRequestInfo)\n  let platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : requestInfo.version\n  let url = `${requestInfo.baseURL}/rest/version/${version}/user/${requestInfo.username}/`\n\n  if (action.payload === 'all') {\n    url += 'logHistory'\n  } else {\n    url += `logRecord/${action.payload}`\n  }\n\n  let response = yield request(\n    {\n      url,\n      method: 'DELETE',\n      responseType: 'none'\n    },\n    requestInfo.requestOptions\n  )\n\n  if (response.error) {\n    let error\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let { statusCode } = response.payload.body.logRecord\n      log.info(`Failed to remove log(s) from call history. Status Code ${statusCode}).`)\n\n      error = new BasicError({\n        code: statusCode === 42 ? callHistoryCodes.NOT_FOUND : callHistoryCodes.UNKNOWN_ERROR,\n        message: `Failed to remove call log. Status Code: ${statusCode}.`\n      })\n    } else {\n      // Handle errrs from the request helper.\n      let { message } = response.payload.result\n      log.info('Failed call log removal.', message)\n\n      error = new BasicError({\n        code: callHistoryCodes.UNKNOWN_ERROR,\n        message: `Call log removal failed: ${message}.`\n      })\n    }\n\n    yield put(actions.removeCallLogsFinish({ error }))\n  } else {\n    log.info('Successfully removed log(s) from call history.')\n    yield put(actions.removeCallLogsFinish({ recordId: action.payload }))\n  }\n}\n","/**\n * dtmf.js contains one call operation:\n *    - sendDtmf: Send DTMF tone(s) over a call.\n *\n * and several \"helper\" functions for it:\n *    - playInBand: Functionality for in-band DTMF.\n *    - playOutBand: Functionality for out-of-band DTMF.\n *      - addTones: Generates DTMF tones and adds them to the audio.\n *    - hasTelephoneEvent: Helper to determine out-of-band DTMF support.\n *    - convertTone, splitTones: Helpers for parsing input.\n */\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getCallById } from '../../call/interfaceNew/selectors'\nimport { CALL_STATES } from '../../call/constants'\n\n// Other plugins.\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\n\n// Libraries.\nimport { call, delay, put, select } from 'redux-saga/effects'\nimport sdpTransform from 'sdp-transform'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * Entry saga for sending DTMF tones on a call.\n *\n * Determines if the DTMF tones need to be out-of-band (preferred) or in-band.\n *    Referes to helper functions to send the tones.\n *\n * Assumptions:\n *    1. None; everything is checked.\n * Responsibilities:\n *    1. Validate the operation is currently possible.\n *    2. Determine if out-of-band tones are possible for the call.\n *    3. Send the tones, depending on method available.\n * @method sendDtmf\n * @param {Object} deps        Dependencies that the saga uses.\n * @param {Object} deps.webRTC The WebRTC stack.\n * @param {Object} action      A \"send dtmf\" action.\n */\nexport function * sendDtmf (deps, action) {\n  const { webRTC } = deps\n\n  // Get the call.\n  const targetCall = yield select(getCallById, action.payload.id)\n\n  let error\n  /**\n   * Operation requirements:\n   *    1. The call exists.\n   *    2. The call is either Connected, Ringing, or Early Media.\n   *    3. A valid tone was provided.\n   */\n  if (!targetCall) {\n    log.info(`Failed to send DTMF tones on unknown call ${action.payload.id}`)\n    error = new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (![CALL_STATES.CONNECTED, CALL_STATES.RINGING, CALL_STATES.EARLY_MEDIA].includes(targetCall.state)) {\n    log.info(`Failed to send DTMF tones on call ${targetCall.id}: Bad call state.`)\n    error = new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state (${targetCall.state}).`\n    })\n  } else if (!action.payload.tone) {\n    log.info(`Failed to send DTMF tones on call ${targetCall.id}: Invalid tone.`)\n    error = new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'No DTMF tone specified.'\n    })\n  }\n\n  if (error) {\n    // Stop the operation if it cannot be performed right now.\n    yield put(callActions.sendDTMFFinish(action.payload.id, { error }))\n    return\n  }\n\n  // Get the webrtc Session for the call.\n  const session = yield call([webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n  // Get the remote description for the Session.\n  const remoteDesc = yield call([session, 'getRemoteDescription'])\n\n  // TODO: Is this the correct SDP to use?\n  let canSendOutBand = yield call(hasTelephoneEvent, remoteDesc.sdp)\n\n  let result\n  if (canSendOutBand) {\n    log.debug(`Sending DTMF tones out-of-band for call ${targetCall.id}.`)\n    result = yield call(playOutBand, session, action.payload)\n  } else {\n    log.debug(`Sending DTMF tones in-band for call ${targetCall.id}.`)\n    result = yield call(playInBand, session, action.payload)\n  }\n\n  if (result) {\n    log.info(`Successfully sent DTMF tones for call ${targetCall.id}.`)\n    yield put(callActions.sendDTMFFinish(action.payload.id))\n  } else {\n    log.debug(`Failed to send DTMF tones for call ${targetCall.id}.`)\n    yield put(\n      callActions.sendDTMFFinish(action.payload.id, {\n        error: new BasicError({\n          code: callCodes.GENERIC_ERROR,\n          message: `Unable to send DTMF tones for call ${targetCall.id}.`\n        })\n      })\n    )\n  }\n}\n\n/**\n * Sends DTMF tones out-of-band over a Session.\n * This saga defines how out-of-band tones are sent over a call.\n *\n * The Callstack implementation uses the WebRTC stack's implementation for this.\n *    There is no signaling involved.\n *\n * @method playOutBand\n * @param  {Session} session A Webrtc Session object.\n * @param  {Object}  options\n * @param  {string}  options.tone           The tone sequence.\n * @param  {number}  [options.duration]     The length of each DTMF tone.\n * @param  {number}  [options.intertoneGap] The gap between each DTMF tone.\n * @return {boolean} Whether the operation was succesful or not.\n */\nexport function * playOutBand (session, options) {\n  const result = yield call([session, 'sendDTMF'], options)\n  return result\n}\n\n/**\n * Sends DTMF tones in-band over a Session.\n * This saga defines how in-band tones are sent over a call.\n *\n * DTMF tones are added to the audio track by using AudioContext nodes. A\n *    MediaStream is converted into an audio node, which allows us to add more\n *    audio inputs into the node. The original audio and DTMF tones are mixed\n *    into a single node this way, and the track from this node temporarily\n *    replaces the original track in the Session.\n *\n *                       +-------------------------+\n *    Original           | Additional Audio Source |\n *   MediaStream         +---------+---------------+\n *       |                         |\n *       |                         |\n *       v                         v\n * +-----+-------+         +-------+----------+\n * | Source Node +-------->| Destination Node |\n * +-------------+         +-------+----------+\n *                                 |\n *                                 |\n *                                 v\n *                         MediaStream w/ DTMF\n *\n * @method playInBand\n * @param  {Session} session A Webrtc Session object.\n * @param  {Object}  options\n * @param  {string}  options.tone           The tone sequence.\n * @param  {number}  [options.duration=100]     The length of each DTMF tone.\n * @param  {number}  [options.intertoneGap=70]  The gap between each DTMF tone.\n * @return {boolean} Whether the operation was succesful or not.\n */\nexport function * playInBand (session, options) {\n  let { tone, duration, intertoneGap: gap } = options\n\n  // Ensure optional options are numbers (not strings). If not numbers, or\n  //    undefined, use default values.\n  duration = Number(duration) > 0 ? Number(duration) : 100\n  gap = Number(gap) > -1 ? Number(gap) : 70\n\n  // Get the (native) track the tones will be inserted into.\n  let track\n  for (let localTrack of session.localTracks) {\n    // Matching the track is done this way because we need to yield to getState,\n    //    but we can't yield inside of a `.find(func)` or similar. So iterate\n    //    over the new tracks \"manually\".\n    const state = yield call([localTrack, 'getState'])\n    if (state.kind === 'audio') {\n      track = localTrack\n      break\n    }\n  }\n\n  const stream = yield call([track, 'getStream'])\n  const context = new AudioContext()\n\n  // Create a source node that has the stream media.\n  const source = context.createMediaStreamSource(stream)\n\n  /**\n   * Create the \"destination node\". All audio sources will be connected to This\n   *    node, and it will be used as the \"final output\".\n   */\n  const dest = context.createMediaStreamDestination()\n  // Connect the source node to it, so that it has the original audio.\n  source.connect(dest)\n\n  // Get the track from the destination node and replace the original track\n  //    on the PeerConnection with it. The remote endpoint will now receive\n  //    any/all audio that is connected to the destination node.\n  const newTrack = dest.stream.getAudioTracks()[0]\n  yield call([session.peer, 'replaceTrack'], newTrack, { trackId: track.id })\n\n  // Add the DTMF tones to the destination node.\n  yield call(addTones, context, dest, tone, { duration, gap })\n\n  // Un-replace track on the PeerConnection. This resets the tracks back to\n  //    \"normal\".\n  yield call([session.peer, 'replaceTrack'], track.track, { trackId: newTrack.id })\n\n  // Clean-up the AudioContext nodes.\n  context.close()\n\n  return true\n}\n\n/**\n * Generates DTMF tones based on input, and connects the audio to the provided\n *    target node.\n * @method addTones\n * @param  {AudioContext} context      The AudioContext being used.\n * @param  {AudioNode} targetNode      The AudioNode to add DTMF tones to.\n * @param  {string} tones              The input tones.\n * @param  {Object} [options]\n * @param  {number} [options.duration] The length of each DTMF tone.\n * @param  {number} [options.gap]      The gap between each DTMF tone.\n */\nfunction * addTones (context, targetNode, tones, options) {\n  /**\n   * Node Diagram:\n   * +--------------+\n   * | Oscillator 1 +--+\n   * +--------------+  |    +--------------+\n   *                   +--->|   Osc Node   |\n   * +--------------+  |    +------+-------+\n   * | Oscillator 2 +--+           |\n   * +--------------+              | Connect generated audio\n   *                               v to the provided node.\n   *                        +------+--------+\n   *                        |  Target Node  |\n   *                        +---------------+\n   */\n\n  /**\n   * Step 1: Setup the audio nodes.\n   */\n  // Create the Oscillator nodes that will generate the frequencies.\n  const oscillators = [context.createOscillator(), context.createOscillator()]\n  oscillators[0].type = 'sine'\n  oscillators[1].type = 'sine'\n\n  /**\n   * Create an intermediary Gain node to control the volume of the oscillator\n   *   frequencies before connecting them to anything else.\n   */\n  const oscNode = context.createGain()\n  oscillators[0].connect(oscNode)\n  oscillators[1].connect(oscNode)\n  oscNode.gain.value = 0.1\n\n  // Connect the combined oscillators to the target node. Any tones created\n  //    by the oscillators will be heard in the target node.\n  oscNode.connect(targetNode)\n\n  // Connect the oscillators to the \"destination\" as well, which works magically.\n  // `context.destination` connects to the \"default destination\" (or something\n  //    like that), which will be the machine's speakers. This will play the\n  //    audio locally.\n  oscNode.connect(context.destination)\n\n  /**\n   * Step 2: Use the oscillators to generate DTMF tones.\n   */\n\n  /**\n   * Schedule a frequency to be played for a period of time.\n   * @method scheduleTone\n   * @param  {number} tone  A frequency.\n   * @param  {number} start When the tone should start.\n   * @param  {number} dur   The duration of the tone, in seconds.\n   */\n  function scheduleTone (tone, start, dur) {\n    oscillators[0].frequency.setValueAtTime(tone[0], start)\n    oscillators[0].frequency.setValueAtTime(0, start + dur)\n\n    oscillators[1].frequency.setValueAtTime(tone[1], start)\n    oscillators[1].frequency.setValueAtTime(0, start + dur)\n  }\n\n  const toneSequence = splitTones(tones).map(convertTone)\n\n  // Convert the time units to seconds.\n  const dur = options.duration / 1000\n  const gap = options.gap / 1000\n\n  let toneStart = context.currentTime\n  for (let i = 0; i < toneSequence.length; i++) {\n    scheduleTone(toneSequence[i], toneStart, dur)\n\n    toneStart = toneStart + dur + gap\n  }\n\n  // Start playing the scheduled tones.\n  oscillators[0].start()\n  oscillators[1].start()\n\n  /**\n   * Step 3: Clean-up the audio nodes.\n   */\n\n  // Wait until all tones have finished playing.\n  const numTones = toneSequence.length\n  const delayTime = numTones * (options.duration + options.gap)\n  yield delay(delayTime)\n\n  // Disconnect all nodes from each other.\n  oscNode.disconnect()\n  oscillators[0].stop()\n  oscillators[0].disconnect()\n  oscillators[1].stop()\n  oscillators[1].disconnect()\n}\n\n/**\n * Checks whether an SDP has at least one telephone-event codec.\n *\n * TODO: If there isn't a telephone-event, then the PeerConnection won't have\n *    a \"dtmf sender\" (RTCRtpSender.dtmf). Should preferrably check for that\n *    rather than looking through the SDP.\n * This isn't being done because the Session/Peer models wrap \"send dtmf\" in a\n *    way that makes it inconvenient to use.\n *\n * @method hasTelephoneEvent\n * @param  {string}  stringSdp An SDP.\n * @return {boolean}\n */\nexport function hasTelephoneEvent (stringSdp) {\n  const sdp = sdpTransform.parse(stringSdp)\n\n  const hasCodec = sdp.media\n    .filter(media => media.type === 'audio')\n    .some(media => {\n      return media.rtp.some(rtp => rtp.codec === 'telephone-event')\n    })\n\n  return hasCodec\n}\n\n/**\n * Converts a single tone input to its dual-frequencies.\n * @method convertTone\n * @param  {string} tone A DTMF tone input character.\n * @return {Array} The set of frequencies for the DTMF tone.\n */\nexport function convertTone (tone) {\n  if (typeof tone !== 'string' || tone.length > 1) {\n    throw new Error('Invalid input for DTMF tone.')\n  }\n\n  switch (tone) {\n    case '1':\n      return ['697', '1209']\n    case '2':\n      return ['697', '1336']\n    case '3':\n      return ['697', '1477']\n    case '4':\n      return ['770', '1209']\n    case '5':\n      return ['770', '1336']\n    case '6':\n      return ['770', '1477']\n    case '7':\n      return ['852', '1209']\n    case '8':\n      return ['852', '1336']\n    case '9':\n      return ['852', '1477']\n    case '0':\n      return ['941', '1209']\n    case '*':\n      return ['941', '1336']\n    case '#':\n      return ['941', '1477']\n  }\n}\n\n/**\n * Splits a DTMF tone sequence into individual tones.\n * @method splitTones\n * @param  {string} tone A DTMF tone string.\n * @return {Array} List of single-character tones.\n */\nexport function splitTones (tone) {\n  const matches = tone.match(/[\\d*#]+/)\n  if (!matches || matches[0] !== tone) {\n    throw new Error('Invalid characters in tone.')\n  }\n\n  return tone.split('')\n}\n","/**\n * \"Establish sagas\" handle establishing a call (ie. start or respond to a call).\n *\n * The sagas about starting a call locally assume there is no session established\n *    (since that's what it is doing). The sagas about responding to a call\n *    assume that there is a session (both webRTC and server).\n */\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getCallById, getOptions, getTurnInfo } from '../../call/interfaceNew/selectors'\nimport { CALL_STATES, CALL_DIRECTION } from '../../call/constants'\nimport { checkBandwidthControls } from '../utils/bandwidth'\nimport { validateCallState } from '../../call/cpaas/utils'\n\n// Callstack plugin.\nimport { setupCall, answerWebrtcSession } from '../webrtc/establish'\nimport { closeCall } from '../webrtc/midcall'\n\n// Other plugins.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\n/**\n * Starts a new outgoing call.\n *\n * This saga defines how a call is started. It performs the webRTC and\n *    signalling operations to create a \"call\" both locally and on the server.\n * Assumptions:\n *     1. None.\n * Responsibilities:\n *     1. Setup the call locally, using the webRTC helper saga.\n *     2. Create the call on the server.\n *     3. Update call state (via redux action).\n * @method makeCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.createSession \"Make call\" signalling function.\n * @param {Object}   action        An action of type `MAKE_CALL`.\n */\nexport function * makeCall (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Initiating new outgoing call.')\n\n  // Create a new local media object for this call.\n  const mediaConstraints = {\n    audio: action.payload.mediaConstraints.audio,\n    video: action.payload.mediaConstraints.video,\n    screenShare: action.payload.mediaConstraints.screenShare\n  }\n\n  const turnInfo = yield select(getTurnInfo)\n  const callOptions = yield select(getOptions)\n\n  const bandwidth = checkBandwidthControls(action.payload.bandwidth)\n\n  const { error, offerSdp, sessionId, mediaIds } = yield call(setupCall, deps, mediaConstraints, {\n    sdpSemantics: callOptions.sdpSemantics,\n    turnInfo,\n    bandwidth,\n    dscpControls: action.payload.dscpControls,\n    callId: action.payload.id,\n    // ICE related configs.\n    trickleIceMode: callOptions.trickleIceMode,\n    iceCollectionDelay: callOptions.iceCollectionDelay,\n    iceCollectionCheck: callOptions.iceCollectionCheck,\n    maxIceTimeout: callOptions.maxIceTimeout,\n    removeBundling: callOptions.removeBundling\n  })\n\n  // An error occurred while trying to setup the WebRTC portion of the call.\n  //    Report the error and mark the call as ended.\n  if (error) {\n    log.info(`Failed to initiate call. Changing to ${CALL_STATES.ENDED}.`)\n    yield put(\n      callActions.makeCallFinish(action.payload.id, {\n        state: CALL_STATES.ENDED,\n        error: error\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    id: action.payload.id,\n    participantAddress: action.payload.participantAddress,\n    isAnonymous: action.payload.isAnonymous,\n    from: action.payload.from,\n    account: action.payload.account,\n    offer: offerSdp,\n    displayName: action.payload.displayName ? action.payload.displayName : '',\n    customParameters: action.payload.customParameters\n  }\n\n  const response = yield call(requests.createSession, callInfo)\n\n  if (!response.error) {\n    log.info(`Finished initiating call. Changing to ${CALL_STATES.INITIATED} and waiting on remote answer.`)\n    yield put(\n      callActions.pendingMakeCall(action.payload.id, {\n        state: CALL_STATES.INITIATED,\n        // The ID that the backend uses to track this webRTC session.\n        wrtcsSessionId: response.wrtcsSessionId,\n        // The ID that the webRTC stack uses to track this webRTC session.\n        webrtcSessionId: sessionId,\n        // The local Media object associated with this call.\n        mediaIds: mediaIds,\n        // The bandwidth of the call.\n        bandwidth,\n        // The custom display name to use. Not supported on all environments.\n        displayName: action.payload.displayName,\n        // The custom parameters of the call\n        customParameters: action.payload.customParameters\n      })\n    )\n  } else {\n    log.info('Failed to initiate call. Ending call and cleaning up WebRTC portions.')\n    // The call failed, so stop the Media object created for the call.\n    // TODO: Update redux state that the Media object is stopped.\n    //    Need an event from Media model to notify about the stop, and listener\n    //    set on Media when it is created (in `createLocalMedia` saga).\n    yield call(closeCall, deps.webRTC, sessionId)\n\n    yield put(\n      callActions.makeCallFinish(action.payload.id, {\n        state: CALL_STATES.ENDED,\n        error: response.error\n      })\n    )\n  }\n}\n\n/**\n * Answers an incoming call.\n *\n * This saga defines how a call is answered. It performs the webRTC and\n *    signaling operations to respond to a call on the server. The local \"call\"\n *    may or may not exist at this point in time, depending if the call is slow\n *    start.\n * If the call is using regular negotiation, the call will exist locally.\n *    Signaling with an answer SDP will establish the call, so it can be\n *    considered \"Connected\" afterwards.\n * If the call is using slow start negotiation, the call needs to be created\n *    locally. An offer SDP from the call will be used for signaling (as per\n *    slow start), but the call cannot be considered \"Connected\" until we\n *    receive a response to the offer SDP.\n * Assumptions:\n *    1. The call is in Ringing state.\n *    2. The call's direction is incoming.\n * Responsibilities:\n *    1. Determine whether Regular or Slow Start negotiation is to be used.\n *    2. Regular: Create an answer for the call, using the webRTC helpers.\n *    3. Regular: Update the call on the server with the answer.\n *    4. Regular: Update call state (via redux actions).\n *    2. Slow Start: Setup the call locally, using the webRTC helper saga.\n *    3. Slow Start: Update the call on the server with an offer.\n *    4. Slow Start: Update state (via redux actions).\n * @method answerCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.answerSession \"Answer call\" signalling function.\n * @param {Object}   action        An \"answer call\" action.\n */\nexport function * answerCall (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Answering incoming call.')\n\n  const incomingCall = yield select(getCallById, action.payload.id)\n  if (!incomingCall) {\n    // TODO: Should report an error.\n    log.error(`Error: Call ${action.payload.id} not found.`)\n    return\n  }\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, action.payload.id, {\n    state: CALL_STATES.RINGING,\n    direction: 'incoming'\n  })\n  if (stateError) {\n    log.debug(`Failed to answer call due to invalid call state: ${stateError.message}`)\n    yield put(\n      callActions.answerCallFinish(action.payload.id, {\n        error: stateError\n      })\n    )\n    return\n  }\n\n  const bandwidth = checkBandwidthControls(action.payload.bandwidth)\n  const mediaConstraints = {\n    audio: action.payload.mediaConstraints.audio,\n    video: action.payload.mediaConstraints.video,\n    screenShare: action.payload.mediaConstraints.screenShare\n  }\n\n  let webrtcInfo, callInfo, nextState\n  if (incomingCall.isSlowStart) {\n    /*\n     * If the call was a slow start call, then it doesn't have a webRTC session\n     *    yet. We need to setup the session and provide the signaling server\n     *    with an SDP offer.\n     */\n    log.debug('Answering call with slow start negotiation.')\n\n    const turnInfo = yield select(getTurnInfo)\n    const callOptions = yield select(getOptions)\n\n    // Setup a webRTC session.\n    webrtcInfo = yield call(setupCall, deps, mediaConstraints, {\n      sdpSemantics: callOptions.sdpSemantics,\n      turnInfo,\n      bandwidth,\n      dscpControls: action.payload.dscpControls,\n      // ICE related configs.\n      trickleIceMode: callOptions.trickleIceMode,\n      iceCollectionDelay: callOptions.iceCollectionDelay,\n      iceCollectionCheck: callOptions.iceCollectionCheck,\n      maxIceTimeout: callOptions.maxIceTimeout,\n      removeBundling: callOptions.removeBundling\n    })\n\n    if (webrtcInfo.error) {\n      log.info('Failed to answer incoming call.')\n      yield put(\n        callActions.answerCallFinish(\n          action.payload.id,\n          {\n            error: webrtcInfo.error\n          },\n          {\n            isSlowStart: incomingCall.isSlowStart\n          }\n        )\n      )\n      return\n    }\n\n    callInfo = {\n      answer: webrtcInfo.offerSdp,\n      wrtcsSessionId: incomingCall.wrtcsSessionId,\n      customParameters: action.payload.customParameters\n    }\n\n    // Even if the answer request is successful, we still need to wait for a\n    //    notification from the signaling server to know if the call is complete.\n    nextState = CALL_STATES.RINGING\n  } else {\n    /*\n     * For a regular call scenario, we perform normal webRTC negotiation.\n     */\n\n    // Update the existing webRTC session with an answer.\n    const sessionOptions = {\n      sessionId: incomingCall.webrtcSessionId,\n      bandwidth,\n      dscpControls: action.payload.dscpControls,\n      callId: incomingCall.id\n    }\n    webrtcInfo = yield call(answerWebrtcSession, deps, mediaConstraints, sessionOptions)\n\n    if (webrtcInfo.error) {\n      log.info('Failed to incoming answer call.')\n      yield put(\n        callActions.answerCallFinish(\n          action.payload.id,\n          {\n            error: webrtcInfo.error\n          },\n          {\n            isSlowStart: incomingCall.isSlowStart\n          }\n        )\n      )\n      return\n    }\n\n    callInfo = {\n      id: incomingCall.id,\n      answer: webrtcInfo.answerSDP,\n      wrtcsSessionId: incomingCall.wrtcsSessionId,\n      customParameters: action.payload.customParameters\n    }\n\n    // If the answer request is successful, then the call can be considered complete.\n    nextState = CALL_STATES.CONNECTED\n  }\n\n  // Perform the signaling to answer the call.\n  const response = yield call(requests.answerSession, callInfo)\n\n  if (!response.error) {\n    if (incomingCall.isSlowStart) {\n      log.info(`Finished answering slow-start call. Changing to ${nextState} and waiting for remote slow-start answer.`)\n    } else {\n      log.info(`Finished answering call. Changing to ${nextState}.`)\n    }\n\n    yield put(\n      callActions.answerCallFinish(\n        action.payload.id,\n        {\n          state: nextState,\n          // TODO: Proper start time for slow-start calls.\n          startTime: Date.now(),\n          // The local Media object associated with this call.\n          mediaIds: webrtcInfo.mediaIds,\n          // For slow start calls, there isn't a webRTC session yet.\n          webrtcSessionId: webrtcInfo.sessionId,\n          // TODO: Properly track the media that the call has.\n          mediaConstraints,\n          // The bandwidth of the call\n          bandwidth,\n          // The custom parameters of the call\n          customParameters: action.payload.customParameters\n        },\n        {\n          isSlowStart: incomingCall.isSlowStart\n        }\n      )\n    )\n  } else {\n    log.info('Failed to answer call.')\n    yield put(\n      callActions.answerCallFinish(\n        action.payload.id,\n        {\n          error: response.error\n        },\n        {\n          isSlowStart: incomingCall.isSlowStart\n        }\n      )\n    )\n  }\n}\n\n/**\n * Rejects an incoming call.\n *\n * This saga defines how a call is rejected. It performs the webRTC and\n *    signalling operations to reject a \"call\" both locally and on the server.\n * Assumptions:\n *    1. None\n * Responsibilities:\n *    1. Cleanup the call locally, using the webRTC helper saga.\n *    2. Reject the call on the server.\n *    3. Update call state (via redux action).\n * @method rejectCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.rejectSession \"Reject call\" signalling function.\n * @param {Object}   action        An action of type `REJECT_CALL`.\n */\nexport function * rejectCall (deps, action) {\n  const { webRTC, requests } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Rejecting incoming call.')\n\n  const incomingCall = yield select(getCallById, action.payload.id)\n\n  // Ensure the call is in a valid state for this operation.\n  const stateError = yield call(validateCallState, action.payload.id, {\n    state: CALL_STATES.RINGING,\n    direction: CALL_DIRECTION.INCOMING\n  })\n\n  if (stateError) {\n    log.info(`Failed to reject call, caused by ${stateError.message}.`)\n    // Report the operation failure.\n    yield put(callActions.rejectCallFinish(action.payload.id, { error: stateError }))\n    return\n  }\n\n  yield call(closeCall, webRTC, incomingCall.webrtcSessionId)\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: incomingCall.wrtcsSessionId\n  }\n  const response = yield call(requests.rejectSession, callInfo)\n\n  if (!response.error) {\n    log.info('Failed to reject call.')\n    yield put(callActions.rejectCallFinish(action.payload.id))\n  } else {\n    log.info(`Finished rejecting call. Changing to ${CALL_STATES.ENDED}.`)\n    yield put(\n      callActions.rejectCallFinish(action.payload.id, {\n        error: response.error\n      })\n    )\n  }\n}\n\n/**\n * Ignores an incoming call.\n *\n * This saga defines how a call is ignored. It performs the webRTC\n *    operations to ignore a \"call\".\n * Assumptions:\n *    1. None\n * Responsibilities:\n *    1. Cleanup the call locally, using the webRTC helper saga.\n *    2. Update call state (via redux action).\n * @method ignoreCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   action        An action of type `IGNORE_CALL`.\n */\nexport function * ignoreCall (deps, action) {\n  const { webRTC } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Ignoring incoming call.')\n\n  // Ensure the call is in a valid state for this operation.\n  const stateError = yield call(validateCallState, action.payload.id, {\n    state: CALL_STATES.RINGING,\n    direction: CALL_DIRECTION.INCOMING\n  })\n\n  if (stateError) {\n    log.info(`Failed to ignore call, caused by ${stateError.message}.`)\n    // Report the operation failure.\n    yield put(callActions.ignoreCallFinish(action.payload.id, { error: stateError }))\n    return\n  }\n\n  const targetCall = yield select(getCallById, action.payload.id)\n\n  // Clean-up webRTC objects. Ignore any errors returned, since we want the\n  //    call / session to be ended either way.\n  yield call(closeCall, webRTC, targetCall.webrtcSessionId)\n\n  log.info(`Finished ignoring call. Changing to ${CALL_STATES.ENDED}.`)\n  // Report the operation complete.\n  yield put(callActions.ignoreCallFinish(targetCall.id))\n}\n\n/**\n *\n * Forwards an incoming call.\n *\n * This saga handles the WebRTC and signalling portions of forwarding an incoming call\n * Assumptions:\n *    1. The action contains a destination address\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to forward the call to a specified destination address.\n *    2. Update call state (via redux actions).\n * @method forwardCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.forwardSession \"Forward call\" signalling function.\n * @param {Object}   action An action of type `FORWARD_CALL`.\n */\nexport function * forwardCall (deps, action) {\n  const { webRTC, requests } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Forwarding incoming call.')\n\n  const incomingCall = yield select(getCallById, action.payload.id)\n\n  // Ensure the call is in a valid state for this operation.\n  const stateError = yield call(validateCallState, action.payload.id, {\n    state: CALL_STATES.RINGING,\n    direction: CALL_DIRECTION.INCOMING\n  })\n\n  if (stateError) {\n    log.info(`Failed to forward call, caused by ${stateError.message}.`)\n    // Report the operation failure.\n    yield put(callActions.forwardCallFinish(action.payload.id, { error: stateError }))\n    return\n  }\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: incomingCall.wrtcsSessionId,\n    address: action.payload.destination\n  }\n  const response = yield call(requests.forwardSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to forward call.')\n    yield put(\n      callActions.forwardCallFinish(action.payload.id, {\n        error: response.error\n      })\n    )\n    return\n  }\n\n  yield call(closeCall, webRTC, incomingCall.webrtcSessionId)\n\n  log.info(`Finished forwarding call. Changing to ${CALL_STATES.ENDED}.`)\n  yield put(callActions.forwardCallFinish(action.payload.id))\n}\n","/**\n * \"Midcall sagas\" handle performing local mid-call operations.\n *\n * These sagas assume that there is an established session (webRTC and server-\n *    side) to perform the operation on. Otherwise, it is considered an error.\n */\n\n// Callstack plugin.\nimport { setupCall } from '../webrtc/establish'\nimport { generateOffer, closeCall, webRtcRemoveMedia, webRtcAddMedia, webRtcReplaceTrack } from '../webrtc/midcall'\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getCallById, getOptions, getTurnInfo, getCallByWebrtcSessionId } from '../../call/interfaceNew/selectors'\n\n// Other plugins.\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\nimport { getTrackById } from '../../webrtc/interface/selectors'\n\n// Helpers.\nimport { validateCallState } from '../../call/cpaas/utils'\nimport { CALL_STATES, CALL_DIRECTION } from '../../call/constants'\n\n// Libraries.\nimport { all, call, put, select } from 'redux-saga/effects'\nimport { isArray, isEmpty } from 'lodash/fp'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * This saga ends a call, it performs the webRTC and signaling operations to\n *    update the local and server sessions of a call.\n * Assumptions:\n *    1. None.\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to end the session\n *    2. Update call state (via redux actions).\n * @method endCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.endSession \"End session\" signalling function.\n * @param {Object}   action An action of type `END_CALL`.\n */\nexport function * endCall (deps, action) {\n  const { webRTC, requests } = deps\n  const { id } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.info('Ending call.')\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, action.payload.id, {})\n  if (stateError) {\n    log.debug(`Call not found: ${stateError.message}`)\n    yield put(\n      callActions.endCallFinish(id, {\n        isLocal: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  const { wrtcsSessionId, webrtcSessionId, isAnonymous, account } = yield select(getCallById, id)\n\n  // Perform webRTC functions\n  yield call(closeCall, webRTC, webrtcSessionId)\n\n  // Perform signalling to end the session\n  const response = yield call(requests.endSession, { wrtcsSessionId, isAnonymous, account })\n\n  log.info(`Finished ending call. Changing to ${CALL_STATES.ENDED}.`)\n  if (!response.error) {\n    yield put(callActions.endCallFinish(id, { isLocal: true }))\n  } else {\n    yield put(\n      callActions.endCallFinish(id, {\n        isLocal: true,\n        error: response.error\n      })\n    )\n  }\n}\n\n/**\n * Updates an existing call to have inactive media.\n * Can be used as a \"hold\" operation for plain webRTC scenarios.\n *\n * This saga defines how a call is put \"on hold\". It performs the webRTC and\n *    signaling operations to update the local and server sessions of a call.\n *    This represents the start of the webRTC renegotiation process for the\n *    local side.\n * Assumptions:\n *    1. The call is in the correct state for the operation.\n *        - The call exists, and is not already locally held.\n * Responsibilities:\n *    1. Generate an offer with the media directions as \"locally held\".\n *    2. Perform signaling to update the server session with the offer.\n *    3. Update call state (via redux actions).\n * @method offerInactiveMedia\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action An action of type `CALL_HOLD`.\n */\nexport function * offerInactiveMedia (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Holding call.')\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, action.payload.id, { localHold: false })\n  if (stateError) {\n    log.debug(`Invalid call state: ${stateError.message}`)\n    yield put(\n      callActions.holdCallFinish(action.payload.id, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  const targetCall = yield select(getCallById, action.payload.id)\n  const { wrtcsSessionId, webrtcSessionId, isAnonymous, account, customParameters } = targetCall\n\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  const offer = yield call(\n    generateOffer,\n    deps,\n    webrtcSessionId,\n    {\n      audio: 'inactive',\n      video: 'inactive'\n    },\n    targetCall.bandwidth\n  )\n\n  if (!offer) {\n    log.debug('Failed to generate SDP offer')\n    yield put(\n      callActions.holdCallFinish(action.payload.id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_OFFER,\n          message: 'Failed to generate SDP offer'\n        })\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: offer.sdp,\n    isAnonymous,\n    account,\n    customParameters\n  }\n\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to hold call.')\n    yield put(\n      callActions.holdCallFinish(action.payload.id, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished local portion of holding call. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(action.payload.id, {\n        operation: targetCall.localOp.operation\n      })\n    )\n  }\n}\n\n/**\n * Updates an existing call to have \"full\" media.\n * Can be used as an \"unhold\" operation for plain webRTC scenarios.\n *\n * This saga defines how a call is taken off \"hold\". It performs the webRTC and\n *    signaling operations to update the local and server sessions of a call.\n *    This represents the start of the webRTC renegotiation process for the\n *    local side.\n * Assumptions:\n *    1. The call is in the correct state for the operation.\n *        - The call exists, and is locally held.\n * Responsibilities:\n *    1. Generate an offer with the media directions as \"connected\".\n *    2. Perform signaling to update the server session with the offer.\n *    3. Update call state (via redux actions).\n * @method offerFullMedia\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action        A \"unhold call\" action.\n */\nexport function * offerFullMedia (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Unholding call.')\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, action.payload.id, { localHold: true })\n  if (stateError) {\n    log.debug(`Invalid call state, not on hold: ${stateError.message}`)\n    yield put(\n      callActions.unholdCallFinish(action.payload.id, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  const targetCall = yield select(getCallById, action.payload.id)\n  const { wrtcsSessionId, webrtcSessionId, isAnonymous, account, customParameters } = targetCall\n\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  const offer = yield call(\n    generateOffer,\n    deps,\n    webrtcSessionId,\n    {\n      audio: 'sendrecv',\n      video: 'sendrecv'\n    },\n    targetCall.bandwidth\n  )\n\n  if (!offer) {\n    log.debug('Invalid SDP offer or SDP offer not received.')\n    yield put(\n      callActions.unholdCallFinish(action.payload.id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_OFFER,\n          message: 'Invalid SDP offer or SDP offer not received'\n        })\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: offer.sdp,\n    isAnonymous,\n    account,\n    customParameters\n  }\n\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to unhold call.')\n    yield put(\n      callActions.unholdCallFinish(action.payload.id, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished local portion of unholding call. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(action.payload.id, {\n        operation: targetCall.localOp.operation\n      })\n    )\n  }\n}\n\n/**\n * Sends custom parameters for a call.\n * @param {Object}   deps                                   Dependencies that the saga uses.\n * @param {Object}   deps.webRTC                            The WebRTC stack.\n * @param {Object}   deps.requests                          The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateCustomParameters   \"Update call\" signalling function.\n * @param {Object} action A \"sent Custom Parameters\" action.\n */\nexport function * sendCustomParameters (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Sending custom parameters for call.')\n\n  // Get the call.\n  const targetCall = yield select(getCallById, action.payload.id)\n\n  // Validate call exists and call state is correct\n  if (!targetCall) {\n    log.debug(`Invalid Call ID. No call found with Call ID: ${action.payload.id}`)\n    yield put(\n      callActions.sendCustomParametersFinish(action.payload.id, {\n        error: new BasicError({\n          code: callCodes.INVALID_PARAM,\n          message: `Invalid Call ID. No call found with Call ID: ${action.payload.id}`\n        })\n      })\n    )\n    return\n  } else if (targetCall.state !== CALL_STATES.CONNECTED && targetCall.state !== CALL_STATES.ON_HOLD) {\n    log.debug(`Call in invalid state for sending custom parameters. Call state: ${targetCall.state}`)\n    yield put(\n      callActions.sendCustomParametersFinish(action.payload.id, {\n        error: new BasicError({\n          code: callCodes.INVALID_STATE,\n          message: `Call in invalid state for sending custom parameters. Call state: ${targetCall.state}`\n        })\n      })\n    )\n    return\n  }\n\n  const { wrtcsSessionId, isAnonymous, account, customParameters } = targetCall\n\n  const callInfo = {\n    wrtcsSessionId,\n    isAnonymous,\n    account,\n    customParameters\n  }\n\n  const response = yield call(requests.updateCustomParameters, callInfo)\n\n  if (response.error) {\n    log.info('Failed to send custom parameters.')\n    yield put(\n      callActions.sendCustomParametersFinish(action.payload.id, {\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished sending custom parameters.')\n    yield put(\n      callActions.sendCustomParametersFinish(action.payload.id, {\n        error: false\n      })\n    )\n  }\n}\n\n/**\n * Gets low-level statistics about a call (or track).\n *\n * This saga defines how/what statistics are retrieved about a call. It performs\n *    the webRTC operations on the local session. No signaling is involved.\n * The retrieved call statistics are a RTCStatsReport as provided by the WebRTC\n *    specification. Stats can be retrieved for either an entire call or\n *    individual tracks.\n * Assumptions:\n *    1. The call is on-going.\n * Responsibilities:\n *    1. Ensure the call exists.\n *    2. Use the webRTC layer to retrieve the stats.\n *    3. Dispatch an action with the results (which triggers an event).\n * @method getStats\n * @param {Object} deps        Dependencies that the saga uses.\n * @param {Object} deps.webRTC The WebRTC stack.\n * @param {Object} action      A \"get Stats\" action.\n */\nexport function * getStats (deps, action) {\n  const { webRTC } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Getting call statistics.')\n\n  // TODO: Actually check something other than \"call exists\"?\n  const stateError = yield call(validateCallState, action.payload.id, {})\n\n  if (stateError) {\n    log.debug(`Invalid call state: ${stateError.message}`)\n    yield put(\n      callActions.getStatsFinish(action.payload.id, {\n        error: stateError,\n        trackId: action.payload.trackId\n      })\n    )\n    return\n  }\n\n  // Get the call.\n  const targetCall = yield select(getCallById, action.payload.id)\n\n  // Get the local Session for the call.\n  const session = yield call([webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n\n  const trackId = action.payload.trackId\n  // Retrieve the RTCStatsReport from the session.\n  let result\n  try {\n    result = yield call([session, 'getStats'], trackId)\n  } catch (error) {\n    log.info('Failed to get call statistics.')\n    yield put(\n      callActions.getStatsFinish(action.payload.id, {\n        error: new BasicError({\n          code: callCodes.GENERIC_ERROR,\n          message: error.message\n        }),\n        trackId\n      })\n    )\n  }\n  if (result) {\n    log.info('Finished getting call statistics.')\n    yield put(callActions.getStatsFinish(action.payload.id, { result, trackId }))\n  }\n}\n\n/**\n * Adds media to the call\n *\n * This saga performs the webRTC and signaling operations to\n *    update local and server sessions of a call.\n * Assumptions:\n *    1. Validate that the call state is \"Connected\".\n *        - The call is connected.\n * Responsibilities:\n *    1. Perform webRTC operations to add media.\n *    2. Update the backend with the new state.\n *    3. Update local state, using Redux\n * @method addMedia\n * @param {Object}   deps          Injected dependencies that addMedia relies on\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests requests that addMedia relies on\n * @param {Function} deps.requests.updateSession request to update the session on the backend\n * @param {Object}   action        An \"add media\" action.\n */\nexport function * addMedia (deps, action) {\n  const requests = deps.requests\n  const { bandwidth, mediaConstraints, dscpControls, id } = action.payload\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Adding media to call.')\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, id, { state: CALL_STATES.CONNECTED })\n  if (stateError) {\n    log.debug(`Invalid call state: ${stateError.message}`)\n    yield put(\n      callActions.addMediaFinish(id, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  // Get some call data.\n  const {\n    webrtcSessionId,\n    wrtcsSessionId,\n    bandwidth: callBandwidth,\n    isAnonymous,\n    account,\n    localOp,\n    customParameters\n  } = yield select(getCallById, id)\n\n  const finalBandwidth = {\n    audio: bandwidth && bandwidth.audio ? bandwidth.audio : callBandwidth.audio,\n    video: bandwidth && bandwidth.video ? bandwidth.video : callBandwidth.video\n  }\n  // Create media and add tracks using webRTC\n  const { error, sdp, medias } = yield call(webRtcAddMedia, deps, mediaConstraints, {\n    sessionId: webrtcSessionId,\n    bandwidth: finalBandwidth,\n    dscpControls\n  })\n\n  if (error) {\n    yield put(\n      callActions.addMediaFinish(id, {\n        local: true,\n        error: error\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: sdp,\n    isAnonymous,\n    account,\n    customParameters\n  }\n\n  // Perform signalling to add media\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to add media to call.')\n    yield put(\n      callActions.addMediaFinish(id, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    let tracks = []\n    medias.forEach(media => {\n      tracks = tracks.concat(media.tracks.map(track => track.id))\n    })\n    log.info('Finished local portion of adding media. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(id, {\n        operation: localOp.operation,\n        operationData: {\n          local: true,\n          mediaIds: medias.map(media => media.id),\n          tracks,\n          bandwidth: finalBandwidth\n        }\n      })\n    )\n  }\n}\n\n/**\n *\n * Removes media from an existing session.\n *\n * This saga handles the WebRTC and signalling portions of removing media from an existing call\n * Assumptions:\n *    1. The action contains a tracks object that is neither an array or an empty object\n *    2. The call is in the 'Connected' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to to remove the specified track\n *    2. Update call state (via redux actions).\n * @method removeMedia\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action An action of type `REMOVE_MEDIA`.\n */\nexport function * removeMedia (deps, action) {\n  const requests = deps.requests\n  const { id, tracks, bandwidth } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.info('Removing media from call.')\n\n  // Handle scenario where no track ids are provided or not in an array.\n  if (!isArray(tracks) || isEmpty(tracks)) {\n    log.debug(`No track ids specified to remove.`)\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_PARAM,\n          message: 'No track ids specified to remove.'\n        })\n      })\n    )\n    return\n  }\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, id, { state: CALL_STATES.CONNECTED })\n  if (stateError) {\n    log.debug(`Invalid call state:  ${stateError.message}`)\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n  // Get some call data.\n  const {\n    webrtcSessionId,\n    wrtcsSessionId,\n    bandwidth: callBandwidth,\n    isAnonymous,\n    account,\n    localOp,\n    customParameters\n  } = yield select(getCallById, id)\n\n  const finalBandwidth = {\n    audio: bandwidth && bandwidth.audio ? bandwidth.audio : callBandwidth.audio,\n    video: bandwidth && bandwidth.video ? bandwidth.video : callBandwidth.video\n  }\n  // Remove media and tracks using webRTC\n  const { sdp, error } = yield call(webRtcRemoveMedia, deps, {\n    sessionId: webrtcSessionId,\n    tracks: tracks,\n    bandwidth: finalBandwidth\n  })\n  if (error) {\n    log.debug(`Failed to remove media: ${error.message}`)\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: sdp,\n    isAnonymous,\n    account,\n    customParameters\n  }\n\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to remove media from call.')\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished local portion of removing media. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(id, {\n        operation: localOp.operation,\n        operationData: {\n          local: true,\n          tracks: tracks,\n          bandwidth: finalBandwidth\n        }\n      })\n    )\n  }\n}\n\n/**\n *\n * Checks whether a renegotiation is necessary depending on the flag\n *\n * Responsibilities:\n *    1. If renegotiation is necessary, dispatch a call action to start the renegotiation operation\n * @method renegotiate\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   action An action of type `SESSION_TRACK_ENDED`.\n * @param {Object}   action.payload The action's payload.\n * @param {string}   action.payload.id The webRTC session ID.\n * @param {string}   action.payload.trackId The ID of the track that was ended.\n * @param {boolean}  action.payload.performRenegotiation A flag that determines whether renegotiation is necessary.\n */\nexport function * checkRenegotiationFlag (deps, action) {\n  const { id, trackId, performRenegotiation } = action.payload\n\n  // This saga could be triggered by the removeMedia API or by a remote notification of a track being removed.\n  // (since it picks up on the SESSION_TRACK_REMOVED action).\n  // In these scenario this flag will be set to `false` as the saga that handles these scenarios will perform the renegotiation itself.\n  if (performRenegotiation) {\n    log.debug('Renegotiation is needed.')\n    const { id: callId } = yield select(getCallByWebrtcSessionId, id)\n    yield put(\n      callActions.renegotiate(callId, {\n        trackId\n      })\n    )\n  }\n}\n\n/**\n *\n * Performs a call renegotiation\n *\n * This saga handles creating the new SDP offer and performs the signalling for renegotiation.\n * Assumptions:\n *    2. The call is in the 'Connected' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we are renegotiating\n *    2. Update call state (via redux actions).\n * @method renegotiate\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action An action of type `RENEGOTIATE`.\n */\nexport function * renegotiate (deps, action) {\n  const requests = deps.requests\n  const { id, trackId } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.info('Performing call renegotiation.')\n\n  // Get some call data.\n  const {\n    id: callId,\n    webrtcSessionId,\n    wrtcsSessionId,\n    bandwidth,\n    isAnonymous,\n    account,\n    localOp,\n    customParameters\n  } = yield select(getCallById, id)\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, callId, { state: CALL_STATES.CONNECTED })\n  if (stateError) {\n    log.debug(`Invalid call state:  ${stateError.message}`)\n    yield put(\n      callActions.renegotiateFinish(callId, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  // Update media and tracks using webRTC\n  const offer = yield call(generateOffer, deps, webrtcSessionId, {}, bandwidth)\n  if (!offer) {\n    log.debug('Failed to generate offer.')\n    yield put(\n      callActions.renegotiateFinish(callId, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_OFFER,\n          message: 'Failed to generate SDP offer'\n        })\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: offer.sdp,\n    isAnonymous,\n    account,\n    customParameters\n  }\n\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to renegotiate call.')\n    yield put(\n      callActions.renegotiateFinish(callId, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished local portion of renegotiation. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(callId, {\n        operation: localOp.operation,\n        operationData: {\n          local: true,\n          tracks: [trackId],\n          bandwidth\n        }\n      })\n    )\n  }\n}\n\n/**\n * Adds basic media scenario to the call\n *\n * This saga wraps addMedia as an easier to use function for simple scenarios\n * Assumptions:\n *    1. Validate that the call state is \"Connected\".\n *        - The call is connected.\n *    2. The track being added cannot already be on the call.\n * Responsibilities:\n *    1. Check that there isn't already a track of the same kind on the call\n *    2. Call addMedia with the correct parameters\n * @method addBasicMedia\n * @param {Object}   deps          Injected dependencies that addMedia relies on\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests requests that addMedia relies on\n * @param {Function} deps.requests.updateSession request to update the session on the backend\n * @param {Object}   action        An action of type `ADD_BASIC_MEDIA`.\n */\nexport function * addBasicMedia (deps, action) {\n  const { id, kind } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.debug(`Adding ${kind} media to call.`)\n\n  const tracks = yield getTracks(id, kind)\n  if (tracks.length >= 1) {\n    const message = `Too many ${kind} tracks for basic scenario!`\n    log.debug(message)\n    yield put(\n      callActions.addMediaFinish(id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_PARAM,\n          message: message\n        })\n      })\n    )\n  } else {\n    yield call(addMedia, deps, action)\n  }\n}\n\n/**\n *\n * Removes basic media from an existing session.\n *\n * This saga wraps removeMedia as an easier to use function for simple scenarios\n * Assumptions:\n *    1. The call is in the 'Connected' state\n *    2. The track being removed should be the only one of its kind on the call.\n * Responsibilities:\n *    1. Check that this is a basic scenario (removing the only kind of track on the call)\n *    2. Call removeMedia with the correct parameters\n * @method removeMedia\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action An action of type `REMOVE_BASIC_MEDIA`.\n */\nexport function * removeBasicMedia (deps, action) {\n  const { id, kind } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.debug(`Removing ${kind} media from call.`)\n\n  const tracks = yield getTracks(id, kind)\n  if (tracks.length !== 1) {\n    const message = `Must have only one ${kind} track for basic scenario!`\n    log.debug(message)\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_PARAM,\n          message: message\n        })\n      })\n    )\n  } else {\n    yield call(removeMedia, deps, {\n      ...action,\n      payload: {\n        ...action.payload,\n        tracks: tracks\n      }\n    })\n  }\n}\n\n/**\n *\n * Helper function to get all tracks of a certain type\n *\n * @param {string} id     - the id of the call\n * @param {string} kind   - Kind must be of type 'audio', 'video', or 'screen'\n * @return {Array} tracks - returns the array of tracks of the given type\n */\nfunction * getTracks (id, kind) {\n  const call = yield select(getCallById, id)\n  const localTracks = call ? call.localTracks : []\n  const tracks = yield all(localTracks.map(id => select(getTrackById, id)))\n  const mediaTracks = tracks.filter(track => track.kind === kind)\n  return mediaTracks.map(trackObj => trackObj.trackId)\n}\n/**\n *\n * Direct Transfers an ongoing call.\n *\n * This saga handles the WebRTC and signalling portions of direct transferring an ongoing call\n * Assumptions:\n *    1. The action contains a destination address\n *    2. The call is in the 'On Hold' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to direct transfer the call to a specified destination address.\n *    2. Update call state (via redux actions).\n * @method directTransfer\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.directTransferSession \"Direct transfer\" signalling function.\n * @param {Object}   action An action of type `DIRECT_TRANSFER`.\n */\nexport function * directTransfer (deps, action) {\n  const { requests } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info(`Performing direct transfer on call.`)\n\n  const currentCall = yield select(getCallById, action.payload.id)\n\n  // Ensure the call is in a valid state for this operation.\n  const stateError = yield call(validateCallState, action.payload.id, { state: CALL_STATES.ON_HOLD })\n\n  if (stateError) {\n    log.debug(`Cannot direct transfer call: ${stateError.message}`)\n    // Report the operation failure.\n    yield put(callActions.directTransferFinish(action.payload.id, { error: stateError }))\n    return\n  }\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: currentCall.wrtcsSessionId,\n    address: action.payload.destination\n  }\n  const response = yield call(requests.directTransferSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to direct transfer call.')\n    yield put(\n      callActions.directTransferFinish(action.payload.id, {\n        error: response.error\n      })\n    )\n    return\n  }\n\n  log.info('Finished local portion of direct transfer. Waiting on remote response.')\n  yield put(\n    callActions.pendingOperation(action.payload.id, {\n      operation: currentCall.localOp.operation\n    })\n  )\n}\n\n/**\n *\n * Transfers 2 ongoing calls to one another.\n *\n * This saga handles the WebRTC and signalling portions of transferring 2 ongoing calls to one another.\n * Assumptions:\n *    1. The action contains the other call id\n *    2. The calls are in the 'On Hold' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to transfer 2 ongoing calls to one other.\n *    2. Update call state (via redux actions).\n * @method consultativeTransfer\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.consultativeTransferSessions \"Consultative transfer\" signalling function.\n * @param {Object}   action An action of type `CONSULTATIVE_TRANSFER`.\n */\nexport function * consultativeTransfer (deps, action) {\n  const { requests } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info(`Performing consultative transfer on call.`)\n\n  const currentCall = yield select(getCallById, action.payload.id)\n  const otherCall = yield select(getCallById, action.payload.otherCallId)\n\n  // Ensure the call is in a valid state for this operation.\n  const currentStateError = yield call(validateCallState, action.payload.id, {\n    state: CALL_STATES.ON_HOLD\n  })\n  const otherStateError = yield call(validateCallState, action.payload.otherCallId, {\n    state: CALL_STATES.ON_HOLD\n  })\n\n  if (currentStateError) {\n    log.debug(`Cannot transfer call ${action.payload.id}: ${currentStateError.message}`)\n    // Report the operation failure.\n    yield put(\n      callActions.consultativeTransferFinish(action.payload.id, {\n        error: currentStateError,\n        otherCallId: action.payload.otherCallId\n      })\n    )\n    return\n  }\n\n  if (otherStateError) {\n    log.debug(`Cannot transfer call ${action.payload.otherCallId}: ${otherStateError.message}`)\n    // Report the operation failure.\n    yield put(\n      callActions.consultativeTransferFinish(action.payload.id, {\n        error: otherStateError,\n        otherCallId: action.payload.otherCallId\n      })\n    )\n    return\n  }\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: currentCall.wrtcsSessionId,\n    otherWrtcsSessionId: otherCall.wrtcsSessionId,\n    destination: otherCall.direction === 'outgoing' ? otherCall.to : otherCall.from\n  }\n  const response = yield call(requests.consultativeTransferSessions, callInfo)\n\n  if (response.error) {\n    log.info('Failed to consultative transfer call.')\n    yield put(\n      callActions.consultativeTransferFinish(action.payload.id, {\n        error: response.error,\n        otherCallId: action.payload.otherCallId\n      })\n    )\n    return\n  }\n\n  log.info('Finished local portion of consultative transfer. Waiting on remote response.')\n  yield put(callActions.pendingConsultativeTransfer(currentCall.id, { otherCallId: otherCall.id }))\n}\n\n/**\n *\n * Joins 2 ongoing calls.\n *\n * This saga handles the WebRTC and signalling portions of joining 2 ongoing calls\n * Assumptions:\n *    1. The action contains the other call id\n *    2. The calls are in the 'On Hold' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to join 2 ongoing calls.\n *    2. Update call state (via redux actions).\n * @method join\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.joinSessions \"Join\" signalling function.\n * @param {Object}   action An action of type `JOIN`.\n */\nexport function * join (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info(`Performing join on call.`)\n\n  const currentCall = yield select(getCallById, action.payload.id)\n  const otherCall = yield select(getCallById, action.payload.otherCallId)\n\n  // Ensure the call is in a valid state for this operation.\n  const currentStateError = yield call(validateCallState, action.payload.id, {\n    state: CALL_STATES.ON_HOLD\n  })\n  const otherStateError = yield call(validateCallState, action.payload.otherCallId, {\n    state: CALL_STATES.ON_HOLD\n  })\n\n  if (currentStateError) {\n    log.debug(`Cannot join call ${action.payload.id}: ${currentStateError.message}`)\n    // Report the operation failure.\n    yield put(\n      callActions.joinFinish(action.payload.id, {\n        error: currentStateError,\n        usedCallIds: [action.payload.id, action.payload.otherCallId]\n      })\n    )\n    return\n  }\n\n  if (otherStateError) {\n    log.debug(`Cannot join call ${action.payload.otherCallId}: ${otherStateError.message}`)\n    // Report the operation failure.\n    yield put(\n      callActions.joinFinish(action.payload.id, {\n        error: otherStateError,\n        usedCallIds: [action.payload.id, action.payload.otherCallId]\n      })\n    )\n    return\n  }\n\n  const mediaConstraints = {\n    video: false,\n    audio: true\n  }\n\n  const dscpControls = currentCall.dscpControls\n\n  const turnInfo = yield select(getTurnInfo)\n  const { trickleIceMode, sdpSemantics, removeBundling } = yield select(getOptions)\n\n  const { offerSdp, sessionId, mediaIds } = yield call(setupCall, deps, mediaConstraints, {\n    sdpSemantics,\n    turnInfo,\n    trickleIceMode,\n    dscpControls,\n    removeBundling\n  })\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: currentCall.wrtcsSessionId,\n    otherWrtcsSessionId: otherCall.wrtcsSessionId,\n    sdp: offerSdp,\n    // Use the customParameters of the current call\n    customParameters: currentCall.customParameters\n  }\n  const response = yield call(requests.joinSessions, callInfo)\n\n  if (response.error) {\n    log.info('Failed to join call.')\n    yield put(\n      callActions.joinFinish(action.payload.id, {\n        error: response.error,\n        usedCallIds: [action.payload.id, action.payload.otherCallId]\n      })\n    )\n    return\n  }\n\n  // Determine combined participant name if any\n  const currentCallRemoteName = currentCall.remoteParticipant.displayName\n  const otherCallRemoteName = otherCall.remoteParticipant.displayName\n  let participantName\n  if (currentCallRemoteName && otherCallRemoteName) {\n    participantName = `${currentCallRemoteName},${otherCallRemoteName}`\n  } else if (currentCallRemoteName) {\n    participantName = `${currentCallRemoteName},`\n  } else if (otherCallRemoteName) {\n    participantName = `,${otherCallRemoteName}`\n  }\n\n  // Determine combined remote participant address\n  const currentCallRemoteAddress = currentCall.direction === CALL_DIRECTION.OUTGOING ? currentCall.to : currentCall.from\n  const otherCallRemoteAddress = otherCall.direction === CALL_DIRECTION.OUTGOING ? otherCall.to : currentCall.from\n  const participantAddress = `${currentCallRemoteAddress},${otherCallRemoteAddress}`\n\n  log.info('Finished local portion of join. Waiting on remote response.')\n  // Dispatch an action to do the following:\n  //  - create a new \"joined\" call in state\n  //  - update calls used in the join to have isPending property\n  yield put(\n    callActions.pendingJoin(action.payload.newCallId, {\n      // The ID that the backend uses to track this webRTC session.\n      wrtcsSessionId: response.newWrtcsSessionId,\n      // The ID that the webRTC stack uses to track this webRTC session.\n      webrtcSessionId: sessionId,\n      // The local Media object associated with this call.\n      mediaIds,\n      // The media constraints this call has.\n      mediaConstraints,\n      // The combined addresses of the 2 other participants in the joined call.\n      participantAddress,\n      // The combined names of the 2 other participants in the joined call.\n      participantName,\n      // This call's current user\n      from: action.payload.from,\n      // The ids of the calls that were used for joining.\n      usedCallIds: [currentCall.id, otherCall.id],\n      // The custom parameters of the combined call\n      customParameters: currentCall.customParameters\n    })\n  )\n}\n\n/**\n *\n * Replaces an existing track with a new track.\n *\n * This saga handles the WebRTC portion of replacing a track.\n * Assumptions:\n *    1. The action contains call id, trackId, and mediaConstraints\n * Responsibilities:\n *    1. Creates a new track.\n *    2. Replaces an an existing track with the newly created track.\n *    3. Update call state (via redux actions).\n * @method replaceTrack\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   action An action of type `REPLACE_TRACK`.\n */\nexport function * replaceTrack (deps, action) {\n  const { webRTC } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info(`Replacing track on call.`)\n\n  const { trackId, mediaConstraints } = action.payload\n\n  const stateError = yield call(validateCallState, action.payload.id, { state: CALL_STATES.CONNECTED })\n  if (stateError) {\n    log.debug(`Invalid call state: ${stateError.message}`)\n    yield put(\n      callActions.replaceTrackFinish(action.payload.id, {\n        error: stateError\n      })\n    )\n    return\n  }\n\n  const currentCall = yield select(getCallById, action.payload.id)\n\n  const { error, newTrackId, oldTrackState } = yield call(webRtcReplaceTrack, webRTC, {\n    sessionId: currentCall.webrtcSessionId,\n    trackId,\n    mediaConstraints\n  })\n\n  if (error) {\n    log.info('Failed to replace track on call.')\n    yield put(callActions.replaceTrackFinish(action.payload.id, { error }))\n  } else {\n    log.info('Finished replacing track on call.')\n    yield put(callActions.replaceTrackFinish(action.payload.id, { newTrackId, oldTrackState }))\n  }\n}\n","// Callstack.\nimport compareMedia from '../sdp/compareMedia'\nimport getOperation from '../sdp/operations'\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getOptions } from '../../call/interfaceNew/selectors'\n\n// Call plugin helpers.\nimport { CALL_STATES, CALL_MEDIA_STATES } from '../../call/constants'\nimport { hasMediaFlowing, setMediaInactive } from '../../call/utils/sdp'\nimport { getMediaState } from '../../call/utils/state'\nimport { OPERATIONS, OP_STATUS } from '../../call/interfaceNew/constants'\n\n// Other plugins.\nimport { logManager } from '../../logs'\nimport { recreatePeer, handleOffer, generateOffer } from '../../callstack/webrtc/midcall'\nimport { receivedAnswer, isSameSdpSessionId } from '../webrtc/negotiation'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * A \"call update request\" has been received and needs to be handled.\n * The request includes an offer SDP, so this is a regular webRTC scenario.\n *\n * This saga is intended to process all \"call update requests\", that have an\n *    SDP, received from the call's remote side. It is assumed the call has\n *    already been established, so this represents the start of the webRTC\n *    renegotiation process for the local side.\n * Handling the request is expected (but may not necessarily) affect the call's\n *    media. The call state will be updated depending on the requested changes\n *    and the current call state.\n * Assumptions:\n *    1. The request notification is valid.\n *        - Call exists, Call is not Ended, Call is able to receive a request.\n *    2. The SDP is a remote offer SDP.\n *        - Indicates regular webRTC negotiation should occur.\n * Responsibilities:\n *    1. Determine what the remote operation was (ie. what is being offered).\n *    2. Process the offer based on remote oepration and current local state.\n *    3. Respond to the request.\n *    4. Update call state (via redux action).\n * @method handleUpdateRequest\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSessionResponse \"Respond to offer\" signalling function.\n * @param {Object}   targetCall    The call being acted on.\n * @param {Object}   params        Parameters of the update request.\n * @param {string}   params.sdp          A remote offer SDP.\n * @param {string}   params.remoteNumber Number of the remote participant.\n * @param {string}   params.remoteName   Name of the remote participant.\n */\nexport function * handleUpdateRequest (deps, targetCall, params) {\n  const { webRTC, requests } = deps\n\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.info(`Processing regular update request from remote endpoint.`)\n\n  let { sdp } = params\n  const { remoteNumber, remoteName } = params\n\n  const mediaState = yield call(getMediaState, targetCall)\n  log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n  /*\n   * Determine what the remote operation was. The remote operation and our\n   *    current local state will affect how we process the received offer. Our\n   *    response needs to reflect our desired local state, so that the remote\n   *    side does not change the call in an undesired way (eg. offering media\n   *    in a dual hold scenario should not reconnect media).\n   */\n  const session = yield call([webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n  if (!session) {\n    log.debug(`webRTC session ${targetCall.webrtcSessionId} not found.`)\n    return\n  }\n  /*\n   * Use the currently set remote SDP and the newly-received remote SDP to\n   *    determine what the remote operation was.\n   */\n  const remoteDesc = yield call([session, 'getLatestRemoteDesc'])\n  const mediaDiff = yield call(compareMedia, remoteDesc.sdp, sdp)\n  let remoteOp = yield call(getOperation, mediaDiff)\n\n  log.debug(`Interpreted update request as a ${remoteOp} operation.`)\n  /**\n   * Check for remoteOp special-cases.\n   *  This is needed for complex operations, where a few renegotiations occur\n   *      as a single remote operation. Some of those renegotiations are\n   *      special-cases (ie. not actual SDK operations).\n   *  If the remoteOp is not \"standard\", then try to fit it to a \"standard\"\n   *    operation that \"fits best\".\n   */\n  const isMediaFlowing = yield call(hasMediaFlowing, sdp)\n  if (remoteOp === 'UNKNOWN') {\n    /*\n     * If the media state is remotely held but the latest renegotiation has\n     *    media flowing, then handle it as an unhold.\n     * This occurs:\n     *  - As part of a remote direct transfer operation (when this user is being\n     *      transferred to another user). When the transferee accepts the call,\n     *      a renegotiation occurs that changes from 'MoH' to 'media flowing'\n     *      state. This needs to be handled as an unhold by the SDK so that\n     *      the call state is updated to reflect the media state.\n     *  - As part of a remote consultative transer operation (when this user was\n     *      the first call specified in the transfer operation, but not for the\n     *      second user). Same 'MoH' to 'media flowing' scenario as direct\n     *      transfer.\n     */\n    if (mediaState === CALL_MEDIA_STATES.REMOTE_HOLD && isMediaFlowing) {\n      remoteOp = OPERATIONS.UNHOLD\n    }\n  } else if (remoteOp === 'NO_CHANGE') {\n    /*\n     * Renegotiation did not change anything media related. This renegotiation\n     *    may have been for a different purpose, such as changing the remote\n     *    endpoint during a transfer.\n     *\n     * Let this remoteOp default to the generic \"update call\" operation except when we're on locally hold.\n     */\n\n    /*\n     * When our media state is Local Hold, this means that our sdp has media as inactive.\n     * Therefore, when we receive remote sdp with media as also inactive, this means the remote side is doing a hold operation.\n     * Because of this, we get a remoteOp of `NO_CHANGE` when we actually want to handle it as a remote operation\n     *  inorder to get into a dual hold state.\n     */\n    if (mediaState === CALL_MEDIA_STATES.LOCAL_HOLD) {\n      remoteOp = OPERATIONS.HOLD\n    }\n  }\n\n  log.info(`Processing update request as remote ${remoteOp} operation in ${mediaState} scenario.`)\n  const callAction = yield call(getCallAction, remoteOp)\n\n  /*\n   * If the remote operation is offering media but the call is locally held,\n   *    then we need to modify the offer to ensure that media does not restart.\n   */\n  if (isMediaFlowing && [CALL_MEDIA_STATES.DUAL_HOLD, CALL_MEDIA_STATES.LOCAL_HOLD].includes(mediaState)) {\n    log.debug('Modifying remote offer to prevent resetting media while in local hold.')\n    sdp = yield call(setMediaInactive, sdp)\n    if (!sdp) {\n      log.debug('SDP is either undefined or not a string.')\n      return\n    }\n  }\n\n  /**\n   * Decision: When we receive a remote offer SDP that has a different \"session\n   *    ID\" as the currently set remote SDP, recreate the call's PeerConnection.\n   * This is a workaround/fix for scenarios where the remote endpoint changes.\n   *    It avoids possible DTLS role conflict issues.\n   */\n  // TODO: Also check fingerprint?\n  const sameSession = yield call(isSameSdpSessionId, webRTC, targetCall.webrtcSessionId, sdp)\n  if (!sameSession) {\n    log.debug(`Received offer SDP is from a different session. Recreating Peer for call ${targetCall.id}.`)\n    yield call(recreatePeer, webRTC, targetCall.webrtcSessionId)\n  }\n\n  /**\n   * If the offer SDP has a DTLS role of active (which is invalid), change it to\n   *    actpass. This is a workaround for transfer scenarios where the offer SDP\n   *    is the remote endpoint's answer SDP from them answering the call. This\n   *    happens when slow-start is not done for the transfer.\n   */\n  if (sdp.includes('setup:active')) {\n    log.debug(`Received offer SDP with active role for call ${targetCall.id}. Changing.`)\n    sdp = sdp.replace(/setup:active/g, 'setup:actpass')\n  }\n\n  // Handle the offer SDP to receive an answer SDP.\n  // TODO: Handle the offer differently depending on remote operation.\n  const { error, answerSDP } = yield call(handleOffer, deps, sdp, targetCall.webrtcSessionId, targetCall.bandwidth)\n\n  if (error) {\n    log.debug('Failed to receive offer SDP.', error)\n    // TODO: Dispatch an error action to notify of the error scenario.\n    // The call may now be in a bad state and needs to be fixed.\n    return\n  }\n\n  // Send answer sdp back to remote side\n  const callInfo = {\n    wrtcsSessionId: targetCall.wrtcsSessionId,\n    answer: answerSDP,\n    isAnonymous: targetCall.isAnonymous,\n    account: targetCall.account,\n    customParameters: targetCall.customParameters\n  }\n\n  const response = yield call(requests.updateSessionResponse, callInfo)\n\n  if (response.error) {\n    // Scenario: The offer was processed, but failed to respond with the answer.\n    // The remote side needs the answer SDP before the call is \"connected\".\n    // TODO: Handle this scenario (retry request or fail/revert operation?)\n    log.info('Failed to respond to remote offer with an answer.')\n    yield put(\n      callAction(targetCall.id, {\n        remote: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished responding to remote update. Changing state based on the remote operation.')\n    yield put(\n      callAction(targetCall.id, {\n        remote: true,\n        remoteParticipant: {\n          displayNumber: remoteNumber,\n          displayName: remoteName\n        }\n      })\n    )\n  }\n}\n\n/**\n * A \"call update request\" has been received and needs to be handled.\n * The request does not include an SDP, so this is a slow start webRTC scenario.\n *\n * This saga is intended to process all \"call update requests\", that have no\n *    SDP, received from the call's remote side. It is assumed the call has\n *    already been established, so this represents the start of the slow start\n *    webRTC renegotiation process for the local side.\n * Handling the request will not affect the call's media at this point. As\n *    opposed to regular negotiation, we require an additional \"call response\"\n *    notification before negotiation is complete. Media and call state will\n *    only be affected by that response notification.\n * Assumptions:\n *    1. The request notification is valid.\n *        - Call exists, Call is not Ended, Call is able to receive a request.\n *    2. There is no SDP.\n *        - Indicates slow start webRTC negotiation should occur.\n * Responsibilities:\n *    1. Generate an offer SDP based on our current local state.\n *    2. Respond to the request with our offer.\n * @method handleSlowUpdateRequest\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSessionResponse \"Respond to offer\" signalling function.\n * @param  {Object} targetCall The call being acted on.\n * @param {Object}   params       Parameters of the update request.\n * @param {string}   params.remoteNumber Number of the remote participant.\n * @param {string}   params.remoteName   Name of the remote participant.\n */\nexport function * handleSlowUpdateRequest (deps, targetCall, params) {\n  const { webRTC, requests } = deps\n  const { remoteNumber, remoteName } = params\n\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.info(`Processing slow-start update request from remote endpoint.`)\n\n  const mediaState = yield call(getMediaState, targetCall)\n  log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n  /**\n   * Decision: Whenever we receive a slow-start notification, recreate the Peer.\n   *    This is needed in certain situations (but not all...)\n   * Known Scenarios:\n   * 1. Link direct transfer:\n   *    - The user being transferred will be on remote hold and will receive a\n   *        slow-start notification as part of the \"transfer renegotitions\".\n   *        Not recreating the Peer will result in a DTLS role conflict.\n   *    - The user receiving the transfer will negotiate the initial connection,\n   *        then will receive a slow-start notification (when Connected). Not\n   *        recreating the Peer for the slow-start results in DTLS conflict.\n   * Exception: If client has set the call option 'mediaBrokerOnly' to true, then\n   *    we don't need to recreate the call's PeerConnection.\n   */\n  const { mediaBrokerOnly } = yield select(getOptions)\n  if (!mediaBrokerOnly) {\n    log.debug(`Recreating Peer for Session ${targetCall.webrtcSessionId}.`)\n    yield call(recreatePeer, webRTC, targetCall.webrtcSessionId)\n  } else {\n    log.debug('Not recreating PeerConnection as mediaBrokerOnly is set to true in configuration.')\n  }\n  /*\n   * Decision: Whenever we receive an offer without an SDP (slow start), and\n   *    we're not locally held, respond with all media directions as sendrecv.\n   *    This is to signal what we are capable of, rather than what we want.\n   *    When we are locally held, we don't want to allow the remote side to\n   *    restart media, hence respond with media directions as inactive.\n   * This handles two (non-local hold) scenarios specifically:\n   *  1. Re-invite: We have already negotiated to perform the remote operation,\n   *      but we received a second offer (without an SDP) as a side-effect to\n   *      further update media.\n   *    Eg. Music on Hold: The remote operation is to set media to inactive,\n   *      and the re-invite updates media so we can receive the hold audio.\n   *  2. Slow start unhold: We receive an offer without an SDP, but we have no\n   *      idea what the remote operation was. If we are on remote hold, we\n   *      assume that it's a remote unhold operation.\n   */\n  const mediaDirections = {\n    audio: targetCall.localHold ? 'inactive' : 'sendrecv',\n    video: targetCall.localHold ? 'inactive' : 'sendrecv'\n  }\n\n  // Create an offer to use for responding to the slow start notification.\n  const slowOffer = yield call(generateOffer, deps, targetCall.webrtcSessionId, mediaDirections)\n\n  const callInfo = {\n    wrtcsSessionId: targetCall.wrtcsSessionId,\n    answer: slowOffer.sdp,\n    isAnonymous: targetCall.isAnonymous,\n    account: targetCall.account,\n    customParameters: targetCall.customParameters\n  }\n\n  // Respond with our \"offer\".\n  const response = yield call(requests.updateSessionResponse, callInfo)\n\n  if (response.error) {\n    // TODO: Handle this scenario (retry request or fail/revert operation?)\n    log.info('Failed to respond to slow-start remote update.', response.error)\n    return\n  }\n\n  log.info('Finished responding to slow-start remote update. Waiting on remote response.')\n  /*\n   * The operation is not complete until we receive a response to our offer. The\n   *    response will be handled by the `handleSlowUpdateResponse` saga.\n   */\n  yield put(\n    callActions.remoteSlowStart(targetCall.id, {\n      remoteParticipant: {\n        displayNumber: remoteNumber,\n        displayName: remoteName\n      }\n    })\n  )\n}\n\n/**\n * A \"call update response\" has been received and needs to be handled.\n * The response is for a local operation, so this a regular webRTC scenario.\n *\n * This saga is intended to process all \"call update responses\", that are from\n *    local operations, received from the call's remote side. The call may or\n *    may not be established at this point. This represents the end of the\n *    regular webRTC negotiation process for the local side.\n * Handling the response will affect the call's media, and the call state will\n *    be updated depending on the new media and the current call state.\n * Assumptions:\n *    1. Ensure this is a valid notification.\n *        - Call exists, Call is not ended, Call expects the response.\n *    2. The original operation was started locally.\n *        - Indicates that it was a regular negotiation process.\n * Responsibilities:\n *    1. Have the callstack process the answer SDP.\n *    2. TODO: Determine what the original operation was.\n *    3. Update call state (via redux action).\n * @method handleUpdateResponse\n * @param {Object}  deps          Dependencies that the saga uses.\n * @param {Object}  deps.webRTC   The WebRTC stack.\n * @param {Object}  deps.requests The set of platform-specific signalling functions.\n * @param  {Object} targetCall The call being acted on.\n * @param  {Object} params\n * @param  {string} params.sdp A remote answer SDP.\n * @param  {string} params.remoteName   Name of the remote participant.\n * @param  {string} params.remoteNumber Number of the remote participant.\n */\nexport function * handleUpdateResponse (deps, targetCall, params) {\n  const { sdp } = params\n\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.info('Processing remote response from regular, local update request.')\n\n  const mediaState = yield call(getMediaState, targetCall)\n  log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n  // Handle the remote answer SDP.\n  const sessionInfo = { sessionId: targetCall.webrtcSessionId, answerSdp: sdp }\n  const error = yield call(receivedAnswer, deps, sessionInfo, targetCall)\n\n  if (error) {\n    log.debug('Failed to receive answer SDP', error)\n    // TODO: Better error handling.\n    yield put(\n      callActions.callAccepted(targetCall.id, {\n        state: CALL_STATES.ENDED,\n        error\n      })\n    )\n    return\n  }\n\n  const localOp = targetCall.localOp\n\n  // Update call state depending on what the current call state is.\n  if ([CALL_STATES.RINGING, CALL_STATES.INITIATED, CALL_STATES.EARLY_MEDIA].includes(targetCall.state)) {\n    log.info(`Handling state change as remote answer operation. Changing to ${CALL_STATES.CONNECTED}.`)\n    // Scenario: The call was previously ringing, so this response is a \"call\n    //    accepted\" notification. The call should now be established.\n    // It's possible that the call never entered Ringing state (from Initiated).\n    //    Handle Initiated the same as Ringing.\n    // Transition to Connected state.\n    if (localOp && localOp.status === OP_STATUS.PENDING && localOp.operation === OPERATIONS.MAKE) {\n      yield put(\n        callActions.makeCallFinish(targetCall.id, {\n          state: CALL_STATES.CONNECTED,\n          // TODO: Make sure this is the correct units\n          startTime: Date.now(),\n          // Remote participant's information.\n          remoteParticipant: {\n            displayNumber: params.remoteNumber,\n            displayName: params.remoteName\n          }\n        })\n      )\n    } else {\n      // TODO: Still need this for complex Direct Transfer & Join (remote side). Figure out a better way.\n      yield put(\n        callActions.callAccepted(targetCall.id, {\n          // TODO: Determine when we're actually \"in call\".\n          state: CALL_STATES.CONNECTED,\n          // TODO: Make sure this is the correct units\n          startTime: Date.now(),\n          // Remote participant's information.\n          remoteParticipant: {\n            displayNumber: params.remoteNumber,\n            displayName: params.remoteName\n          }\n        })\n      )\n    }\n  } else if (targetCall.state === CALL_STATES.CONNECTED || targetCall.state === CALL_STATES.ON_HOLD) {\n    // Scenario: The call was previously established, so this response is \"call\n    //    update\" notification. The call is still established.\n    // Transition to next state depending on what the operation was and the\n    //    updated media.\n    if (localOp && localOp.status === OP_STATUS.PENDING) {\n      let finishAction\n      switch (localOp.operation) {\n        case OPERATIONS.HOLD:\n          finishAction = callActions.holdCallFinish\n          break\n        case OPERATIONS.UNHOLD:\n          finishAction = callActions.unholdCallFinish\n          break\n        case OPERATIONS.ADD_BASIC_MEDIA:\n          finishAction = callActions.addMediaFinish\n          break\n        case OPERATIONS.ADD_MEDIA:\n          finishAction = callActions.addMediaFinish\n          break\n        case OPERATIONS.REMOVE_BASIC_MEDIA:\n          finishAction = callActions.removeMediaFinish\n          break\n        case OPERATIONS.REMOVE_MEDIA:\n          finishAction = callActions.removeMediaFinish\n          break\n        case OPERATIONS.RENEGOTIATE:\n          finishAction = callActions.renegotiateFinish\n          break\n      }\n      if (finishAction) {\n        log.info(\n          `Finished processing remote response to local ${localOp.operation}. Changing state based on operation.`\n        )\n        yield put(finishAction(targetCall.id, localOp.operationData))\n        return\n      }\n    }\n\n    // TODO: Leave this here for now to not break other operations. Need to update this as we convert the other operations.\n    // Determine whether the SDP has active media.\n    const mediaFlowing = yield call(hasMediaFlowing, params.sdp)\n    const nextState = mediaFlowing ? CALL_STATES.CONNECTED : CALL_STATES.ON_HOLD\n\n    log.info(`Handling state change as local midcall operation ${mediaFlowing ? 'with' : 'without'} media flowing.`)\n    log.info(`Finished processing remote response. Changing to ${nextState}.`)\n    yield put(\n      callActions.updateCall(targetCall.id, {\n        state: nextState\n      })\n    )\n  } else {\n    // Scenario: The call is in an unexpected state for receiving a remote\n    //    answer SDP. This should never happen.\n    log.error(`The call is in a bad state for receiving response. Cannot update.`)\n  }\n}\n\n/**\n * A \"call update response\" has been received and needs to be handled.\n * The response is for a remote operation, so this a slow start webRTC scenario.\n *\n * This saga is intended to process all \"call update responses\", that are from\n *    remote operations, received from the call's remote side. This represents\n *    the end of slow start webRTC negotiation process for the local side.\n * Handling the response will affect the call's media, and the call state will\n *    be updated depending on the new media and the current call state.\n * Assumptions:\n *    1. Ensure this is a valid notification.\n *        - Call exists, Call is not ended, Call expects the response.\n *    2. The original operation was started remotely.\n *        - Indicates that it a was slow start negotiation process.\n *        - The call has a pending remote operation.\n * Responsibilities:\n *    1. Determine what the original operation was.\n *    2. Have the callstack process the answer SDP.\n *    3. Update call state (via redux action) based on original operation.\n * @method handleSlowUpdateResponse\n * @param {Object}  deps          Dependencies that the saga uses.\n * @param {Object}  deps.webRTC   The WebRTC stack.\n * @param {Object}  deps.requests The set of platform-specific signalling functions.\n * @param  {Object} targetCall The call being acted on.\n * @param  {Object} params\n * @param  {string} params.sdp A remote answer SDP.\n * @param  {string} params.remoteName   Name of the remote participant.\n * @param  {string} params.remoteNumber Number of the remote participant.\n */\nexport function * handleSlowUpdateResponse (deps, targetCall, params) {\n  let { sdp } = params\n\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.info(`Processing remote response from slow-start remote update request.`)\n\n  const mediaState = yield call(getMediaState, targetCall)\n  log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n  /*\n   * Determine what the remote operation was. The remote operation and our\n   *    current local state will affect how we update the call's state.\n   */\n  const session = yield call([deps.webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n  if (!session) {\n    log.debug(`webRTC session ${targetCall.webrtcSessionId} not found.`)\n    return\n  }\n  /*\n   * Use the currently set remote SDP and the newly-received remote SDP to\n   *    determine what the remote operation was.\n   */\n  const remoteDesc = yield call([session, 'getLatestRemoteDesc'])\n  const mediaDiff = yield call(compareMedia, remoteDesc.sdp, sdp)\n\n  let remoteOp = yield call(getOperation, mediaDiff)\n  const mediaFlowing = yield call(hasMediaFlowing, sdp)\n\n  /**\n   * Special case: Assume the remote operation was actually a Hold.\n   * The operation was interpreted as \"no change\" because the remote media did\n   *    not change in the remote operation. But all media is inactive and we are\n   *    in a Local Hold state. This means that the previous media was inactive\n   *    because of our local hold. So the new media being inactive is a change\n   *    that was done on the remote side, ie. it was actually a remote hold.\n   */\n  if (remoteOp === 'NO_CHANGE' && !mediaFlowing && mediaState === CALL_MEDIA_STATES.LOCAL_HOLD) {\n    remoteOp = OPERATIONS.HOLD\n    log.debug(`Interpreting NO_CHANGE operation as ${remoteOp} due to ${mediaState} state.`)\n  }\n\n  log.info(`Handling state change as remote ${remoteOp} in ${mediaState} scenario.`)\n\n  /*\n   * If the remote operation was an unhold and we're in a dual hold scenario,\n   *    then make sure the remote SDP can't restart media. Do this by ensuring\n   *    that all media directions in the remote SDP are inactive.\n   *\n   * This won't affect the remote end, but it prevents the local side from\n   *    thinking it is receiving a track when it shouldn't be.\n   *\n   * This can occur during slow start renegotiation, if the server doesn't\n   *    respect the media directions we set (assuming we set them correctly).\n   */\n  if (remoteOp === OPERATIONS.UNHOLD && targetCall.localHold === true) {\n    const undesired = ['sendrecv', 'sendonly', 'recvonly']\n    // If any undesirable direction is found in the SDP, replace it with inactive.\n    if (undesired.some(dir => sdp.includes(dir))) {\n      log.debug(`Modifying remote SDP to prevent media in local hold scenario.`)\n      sdp = sdp.replace(/sendrecv|sendonly|recvonly/gi, 'inactive')\n    }\n  }\n\n  // Handle the remote answer SDP.\n  const sessionInfo = { sessionId: targetCall.webrtcSessionId, answerSdp: sdp }\n  const error = yield call(receivedAnswer, deps, sessionInfo, targetCall)\n\n  if (error) {\n    log.debug('Failed to receive answer SDP', error)\n    // TODO: Dispatch an error action to notify of the error scenario.\n    // The call may now be in a bad state and needs to be fixed.\n    return\n  }\n\n  if (targetCall.state === CALL_STATES.CONNECTED || targetCall.state === CALL_STATES.ON_HOLD) {\n    let callAction = yield call(getCallAction, remoteOp)\n    const nextState = mediaFlowing ? CALL_STATES.CONNECTED : CALL_STATES.ON_HOLD\n\n    log.info(`Finished processing remote slow-start response. Changing to ${nextState}.`)\n    yield put(\n      callAction(targetCall.id, {\n        state: nextState,\n        // Remote participant's information.\n        remoteParticipant: {\n          displayNumber: params.remoteNumber,\n          displayName: params.remoteName\n        }\n      })\n    )\n  } else {\n    // Scenario: The call is in an unexpected state for receiving a remote\n    //    answer SDP. This should never happen.\n    log.error(`The call is in a bad state for receiving response. Cannot update.`)\n  }\n}\n\n/**\n * Helper function that returns a call action function based on the\n * remote operation being requested\n * TODO: Move this somewhere better.\n * TODO: Do this differently / better.\n * @method getCallAction\n * @param (string) remoteOp Remote operation being requested\n * @returns {function} A redux action creator\n */\nexport function * getCallAction (remoteOp) {\n  // Determine what redux action the operation represents.\n  switch (remoteOp) {\n    case OPERATIONS.HOLD:\n      return callActions.remoteHoldFinish\n    case OPERATIONS.UNHOLD:\n      return callActions.remoteUnholdFinish\n    case OPERATIONS.ADD_MEDIA:\n      return callActions.remoteAddMediaFinish\n    case OPERATIONS.REMOVE_MEDIA:\n      return callActions.remoteRemoveMediaFinish\n    case OPERATIONS.START_MOH:\n      return callActions.remoteStartMohFinish\n    case OPERATIONS.STOP_MOH:\n      return callActions.remoteStopMohFinish\n    case OPERATIONS.SLOW_START:\n      return callActions.remoteSlowStart\n  }\n\n  log.debug(`Call action for ${remoteOp} not known; using generic action.`)\n  return callActions.updateCall\n}\n","/**\n * \"Notification sagas\" handle received notifications.\n * Each saga handles a single websocket notification that may be received from\n *    the backend.\n *\n * There may not be an established webRTC session for these sagas. This may be\n *    because (1) the notification is a new incoming call, or (2) there is a\n *    de-sync between SDK state and server state. This may or may not be\n *    considered as an error scenario (eg. a \"call ended\" notification for a\n *    call the SDK doesn't know about may be safely ignored).\n */\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getOptions, getTurnInfo, getCallByWrtcsSessionId } from '../../call/interfaceNew/selectors'\nimport { CALL_STATES, COMPLEX_OPERATION_MESSAGES, STATUS_CODES } from '../../call/constants'\nimport { OPERATIONS, OP_STATUS } from '../../call/interfaceNew/constants'\n\n// Callstack plugin.\nimport * as negotiation from './negotiation'\nimport runPipeline from '../sdp/pipeline'\n\n// Other plugins\nimport { logManager } from '../../logs'\nimport { setupIncomingCall } from '../webrtc/establish'\nimport { closeCall } from '../webrtc/midcall'\nimport BasicError, { callCodes } from '../../errors'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\nimport { v4 as uuidV4 } from 'uuid'\n\n// Helpers\n// TODO: Move this to a shared location.\nimport { validateCallState } from '../../call/cpaas/utils'\nimport { generateEndParams } from '../utils/index.js'\n\n/**\n * A \"call incoming\" notification has been received and needs to be handled.\n *\n * This saga is intended to be the entry point for all \"call incoming\"\n *    notifications. A \"call incoming\" notification is the initial offer to\n *    establish a call with a remote endpoint. It represents the start of both\n *    the call flow and webRTC negotiation process for the local side.\n * Handling the notification will create a new call in state.\n * Responsibilities:\n *    1. Have the callstack perform the required webRTC negotiation process.\n *        - Regular or Slow Start negotiation.\n *    2. Respond that the call has been received (ie. ringing).\n *    3. Create call state (via redux action).\n * @method incomingCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateCallRinging \"Update call\" signalling function.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   [params.sdp]  The remote SDP offer included with the notification (if any).\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string}   params.remoteNumber   Number of the remote participant.\n * @param {string}   params.remoteName     Display name of the remote participant.\n * @param {string}   params.calleeNumber  Number of the intended call recipient\n */\nexport function * incomingCall (deps, params) {\n  const requests = deps.requests\n  const { sdp, wrtcsSessionId, remoteNumber, remoteName, calleeNumber, customParameters } = params\n\n  const callId = yield call(uuidV4)\n\n  const log = logManager.getLogger('CALL', callId)\n  log.info('Received new incoming call; initiating.', { wrtcsSessionId })\n\n  // Dispatch the action right away so the call is in state at this point.\n  yield put(\n    callActions.callIncoming(callId, {\n      // TODO: Proper constants.\n      direction: 'incoming',\n      state: CALL_STATES.INITIATING,\n      remoteParticipant: {\n        displayName: remoteName,\n        displayNumber: remoteNumber\n      },\n      to: calleeNumber,\n      // Number of the remote participant when the call was established.\n      from: remoteNumber,\n      // The ID that the backend uses to track this webRTC session.\n      wrtcsSessionId,\n\n      // Whether the call was received as a slow start call or not.\n      isSlowStart: !sdp\n    })\n  )\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Recevied custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(callId, {\n        customParameters\n      })\n    )\n  }\n\n  /**\n   * An incoming call may or may not have an SDP offer associated with it.\n   * If it has an SDP, then it is a \"regular\" call scenario and can be handled\n   *    as a normal webRTC negotiation.\n   * If it has no SDP, then it is a \"slow start\" call scenario. In a slow start\n   *    scenario, the signaling server acts as a webRTC-middleman, requiring\n   *    both sides to provide it with offers and generating the answers itself.\n   */\n  if (sdp) {\n    // Regular call.\n    const turnInfo = yield select(getTurnInfo)\n    const callOptions = yield select(getOptions)\n\n    // Since we have the remote offer SDP, we can setup a webRTC session.\n    yield call(setupIncomingCall, deps, {\n      offer: {\n        sdp,\n        type: 'offer'\n      },\n      trickleIceMode: callOptions.trickleIceMode,\n      sdpSemantics: callOptions.sdpSemantics,\n      iceCollectionDelay: callOptions.iceCollectionDelay,\n      iceCollectionCheck: callOptions.iceCollectionCheck,\n      maxIceTimeout: callOptions.maxIceTimeout,\n      turnInfo,\n      callId,\n      removeBundling: callOptions.removeBundling\n    })\n  } else {\n    log.debug('Incoming call is a slow-start call.')\n    // Slow start call.\n    /*\n     * We can't setup a webRTC session yet because generating an offer requires\n     *   media constraints. We need to wait until the application provides\n     *   media information before we can setup the call.\n     */\n  }\n\n  // Send update that the wrtcsSessionStatus is 'Ringing'\n  const callInfo = { wrtcsSessionId, id: callId }\n  const updateStatusResponse = yield call(requests.updateCallRinging, callInfo)\n\n  if (updateStatusResponse.error) {\n    log.error(\n      `Error: Update session status error - ${updateStatusResponse.error.code}: ${updateStatusResponse.error.message}.`\n    )\n  }\n\n  log.info(`Finished initiating incoming call. Changing to ${CALL_STATES.RINGING} and waiting on local answer.`)\n  yield put(\n    callActions.callRinging(callId, {\n      state: CALL_STATES.RINGING\n    })\n  )\n}\n\n/**\n * A \"call request\" notification has been received for an established call\n *    and needs to be handled.\n *\n * This saga is intended to be the entry point for all \"call request\"\n *    notifications received from the call's remote side. This does not include\n *    \"call incoming\" notifications, and so it is assumed the call has already\n *    been established. A \"call request\" notification is the offer from a remote\n *    operation, and so represents the start of the webRTC renegotiation process\n *    for the local side.\n * This saga does not handle the request itself. It determines if it should be\n *    handled and what process is needed to handle it.\n * Responsibilities:\n *    1. Ensure this is a valid request notification.\n *        - Call exists, Call is not ended, TODO: Call is able to receive a request.\n *    2. Determine how the request should be handled.\n *        - Regular or slow start negotiation process.\n *    3. Pass the request off to the appropriate handler.\n * @method parseCallRequest\n * @param {Object} deps         Dependencies that the saga uses.\n * @param {Object} params       Parameters describing the incoming call.\n * @param {string} [params.sdp] The remote SDP offer included with the notification (if any).\n * @param {string} params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string} params.remoteName   Name of the remote participant.\n * @param {string} params.remoteNumber Number of the remote participant.\n */\nexport function * parseCallRequest (deps, params) {\n  const { wrtcsSessionId, sdp, remoteName, remoteNumber, customParameters } = params\n  const targetCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (targetCall || {}).id)\n  log.info('Received new update call request; handling.', { wrtcsSessionId })\n\n  if (!targetCall) {\n    // Scenario: No call is associated with the wrtcsSessionId.\n    log.info('Update request is for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  } else if (targetCall.state === CALL_STATES.ENDED) {\n    // Scenario: The associated call is ended, and should not have an active\n    //    webRTC session.\n    log.info('Update request is for ended call. Ignoring.', { wrtcsSessionId })\n    return\n  }\n  // TODO: Make sure the call is able to receive a `respondCallRequest`\n  //    notification (ie. has no pending operation).\n  log.debug(`Update request ${sdp ? 'with' : 'without'} SDP for call. Processing.`)\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Recevied custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(targetCall.id, {\n        customParameters\n      })\n    )\n  }\n\n  /**\n   * How the request should be handled depends on whether it includes an SDP.\n   *    - SDP: Regular webRTC negotiation.\n   *    - No SDP: Slow start webRTC negotiation.\n   */\n  if (sdp) {\n    yield call(negotiation.handleUpdateRequest, deps, targetCall, { sdp, remoteNumber, remoteName })\n  } else {\n    yield call(negotiation.handleSlowUpdateRequest, deps, targetCall, { remoteNumber, remoteName })\n  }\n}\n\n/**\n * A \"call response\" notification has been received and needs to be handled.\n *\n * This saga is intended to be the entry point for all \"call response\"\n *    notifications received from the call's remote side. A \"call response\"\n *    notification is the answer to an operation that was previously\n *    performed (a \"call request\"), and so represents the last step in the\n *    webRTC negotiation process.\n * This saga does not handle the response itself. It determines if it should be\n *    handled and what process is needed to handle it.\n * Responsibilities:\n *    1. Ensure this is a valid notification.\n *        - Call exists, Call is not ended, TODO: Call expects the response.\n *    2. Determine what negotiation process the response is from.\n *        - Regular or slow start negotiation process.\n *    3. Pass the request off to the appropriate handler.\n * @method parseCallResponse\n * @param  {Object} webRTC The webRTC stack.\n * @param {Object} deps         Dependencies that the saga uses.\n * @param {Object} params       Parameters describing the incoming call.\n * @param {string} [params.sdp] The remote SDP offer included with the notification (if any).\n * @param {string} params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string} params.remoteName   Name of the remote participant.\n * @param {string} params.remoteNumber Number of the remote participant.\n */\nexport function * parseCallResponse (deps, params) {\n  const { wrtcsSessionId, sdp, customParameters } = params\n  const targetCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (targetCall || {}).id)\n  log.info('Received new update call response; handling.', { wrtcsSessionId })\n\n  if (!targetCall) {\n    // Scenario: The notification is about a call that state does not know about.\n    //    Ignore the notification.\n    log.info('Update response for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  } else if (targetCall.state === CALL_STATES.ENDED) {\n    const log = logManager.getLogger('CALL', targetCall.id)\n    // Scenario: The notification is about a call that state says is ended.\n    //    Ignore the notification, since ended calls should not have an active\n    //    webRTC Session.\n    log.info('Update response for ended call. Ignoring.', { wrtcsSessionId })\n    return\n  }\n  // TODO: Make sure the call is expecting a `respondCallUpdate` notification.\n  //    ie. has a pending operation.\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Recevied custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(targetCall.id, {\n        customParameters\n      })\n    )\n  }\n\n  /**\n   * Check that the notification was not an \"error\" notification.\n   * Status code 49 with a `retryAfter` value indicates the original operation\n   *    failed (likely glare condition) and the SDK should retry the operation.\n   * TODO: This check is currently Link-specific. Depending on how CPaaS\n   *    indicates a failed/glare operation, either standardize this check or\n   *    move this into Link-specific saga.\n   */\n  if (!sdp && params.code === 49 && params.retryAfter) {\n    // TODO: Properly handle this scenario. The call may be in a bad state\n    //    because we set an offer but not an answer. May need to revert\n    //    signaling state and/or re-perform operation internally.\n    // For now, fail loudly and abort the operation to prevent crashes. The\n    //    negotiation sagas expect there to be an SDP.\n    // The call state will be left in a broken state because of KAA-1607.\n    log.error(`Response indicates an error scenario (${params.message}). Aborting operation.`)\n    return\n  }\n\n  /**\n   * Determine if the original operation was done locally or remotely. This\n   *    indicates whether it was regular or slow start negotiation.\n   * If it was from a remote slow start operation, it will be tracked in the\n   *    call state.\n   */\n  if (targetCall.remoteOp && targetCall.remoteOp.operation === OPERATIONS.SLOW_START) {\n    yield call(negotiation.handleSlowUpdateResponse, deps, targetCall, params)\n  } else {\n    yield call(negotiation.handleUpdateResponse, deps, targetCall, params)\n  }\n}\n\n/**\n * A call status notification indicating other session has ended has been received and needs to be handled.\n *\n * This saga is intended to handle the call status notifications that indicates a call has ended.\n * This notification means that the session has ended on the other side and we need to end our session as well.\n * Handling the notification will cleanup the session's media and puts the call in ENDED state.\n * Responsibilities:\n *    1. Have the callstack perform the required webRTC cleanup process.\n *    2. Update call state to ENDED (via redux action).\n * @method callStatusUpdateEnded\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string}   [params.reasonText]   Human-readable explanation for the call change.\n * @param {string}   [params.statusCode]     Code representing the reason for the call change.\n */\nexport function * callStatusUpdateEnded (deps, params) {\n  const { wrtcsSessionId, reasonText, statusCode } = params\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n  log.info('Received call status ended notice; handling.', { wrtcsSessionId })\n\n  if (!currentCall) {\n    log.info('Call ended notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, currentCall.id, {})\n  if (stateError) {\n    log.info('Call ended notice for unknown Call. Ignoring.')\n    return\n  }\n\n  if (currentCall.state === CALL_STATES.ENDED) {\n    log.info('Call ended notice for already Ended call. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  log.debug(`Call ended notice caused by ${reasonText} (Status Code: ${statusCode}).`)\n\n  // Close the local webRTC session\n  yield call(closeCall, deps.webRTC, currentCall.webrtcSessionId)\n\n  log.info(`Finished handling call ended notice. Changing to ${CALL_STATES.ENDED}.`)\n  // TODO: Don't expose these directly. Create our own convention so that transition data\n  //       can be consistent across different operations.\n  yield put(callActions.endCallFinish(currentCall.id, generateEndParams(currentCall.state, false, params)))\n}\n\n/**\n * This saga is intended to handle the call status notifications that indicates a session has completed.\n * A session has completed (in this context) means completing a midcall operation such as:\n *\n * - direct transfer\n * - consultative transfer\n * - join\n * , where user A transfered user B to user C.\n *\n * For the direct & consultative transfer operations, the 'sessionComplete' notification\n * will just refer to the original call between: A<->B, which has now completed.\n * Therefore this saga will send a 'DELETE' REST request to inform backend to tear down\n * this particular original call.\n *\n * Note that for the other original call, which is A<->C, server already knows\n * that it has ended and callStatusUpdateEnded saga (above) already handles it by simply\n * marking it locally as ended (i.e. in local Redux state). Therefore there is no need\n * to send any 'DELETE' REST request for A<->C call.\n *\n * For the join operation, SDK will receive two separate 'sessionComplete' notifications from backend.\n * Therefore this saga will send two 'DELETE' REST requests to inform backend to tear down those\n * two original calls.\n *\n * @method sessionStatusUpdateEnded\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string}   [params.reasonText]   Human-readable explanation for the call change.\n * @param {string}   [params.statusCode]     Code representing the reason for the call change.\n */\nexport function * sessionStatusUpdateEnded (deps, params) {\n  const { wrtcsSessionId, reasonText, statusCode } = params\n  const requests = deps.requests\n\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, currentCall.id, {})\n  if (stateError) {\n    log.info('Session completed notice for unknown Call. Ignoring.')\n    return\n  }\n\n  log.info('Received session status completed notice; handling.', { wrtcsSessionId })\n\n  if (reasonText) {\n    let customStatusCode = statusCode\n    if (!statusCode && statusCode !== 0) {\n      if (reasonText === COMPLEX_OPERATION_MESSAGES.DIRECT_TRANSFER_SUCCESS) {\n        customStatusCode = STATUS_CODES.DIRECT_TRANSFER_SUCCESS\n      } else if (reasonText === COMPLEX_OPERATION_MESSAGES.CONSULTATIVE_TRANSFER_SUCCESS) {\n        customStatusCode = STATUS_CODES.CONSULTATIVE_TRANSFER_SUCCESS\n      } else if (reasonText === COMPLEX_OPERATION_MESSAGES.JOIN_SUCCESS) {\n        customStatusCode = STATUS_CODES.JOIN_SUCCESS\n      }\n    }\n    log.debug(`Session completed notice caused by ${reasonText} (${customStatusCode}).`)\n  }\n\n  log.info(`Ending webRTC session with id: ${currentCall.webrtcSessionId}, locally ...`)\n\n  // Close the local webRTC session\n  yield call(closeCall, deps.webRTC, currentCall.webrtcSessionId)\n\n  const localOp = currentCall.localOp\n  if (localOp && localOp.operation && localOp.status === OP_STATUS.PENDING) {\n    let transition\n    let finishAction\n    switch (localOp.operation) {\n      case OPERATIONS.DIRECT_TRANSFER:\n        finishAction = callActions.directTransferFinish\n        transition = {\n          reasonText: COMPLEX_OPERATION_MESSAGES.DIRECT_TRANSFER_SUCCESS,\n          statusCode: STATUS_CODES.DIRECT_TRANSFER_SUCCESS\n        }\n        break\n      case OPERATIONS.CONSULTATIVE_TRANSFER:\n        finishAction = callActions.consultativeTransferFinish\n        transition = {\n          reasonText: COMPLEX_OPERATION_MESSAGES.CONSULTATIVE_TRANSFER_SUCCESS,\n          statusCode: STATUS_CODES.CONSULTATIVE_TRANSFER_SUCCESS\n        }\n        break\n      case OPERATIONS.JOIN:\n        finishAction = callActions.joinFinish\n        transition = {\n          reasonText: COMPLEX_OPERATION_MESSAGES.JOIN_SUCCESS,\n          statusCode: STATUS_CODES.JOIN_SUCCESS\n        }\n        break\n    }\n    if (finishAction) {\n      log.debug('Marking call locally as ended. Call ID: ', currentCall.id)\n\n      yield put(finishAction(currentCall.id, { transition }))\n\n      // We also need to notify the backend that call with currentCall.id should be removed\n      // by sending a DELETE REST request.\n      // Perform signalling to end the session on server's side.\n      const isAnonymous = currentCall.isAnonymous\n      const account = currentCall.account\n      log.info('Ending call by requesting to be removed from backend ...')\n      const response = yield call(requests.endSession, { wrtcsSessionId, isAnonymous, account })\n\n      if (!response.error) {\n        log.info(`Finished ending call. Changing call state to ${CALL_STATES.ENDED}.`)\n        yield put(callActions.endCallFinish(currentCall.id, generateEndParams(currentCall.state, true, params)))\n      } else {\n        log.debug(\n          `Error received when attempting to end the session: ${response.error}. Changing call state to ${\n            CALL_STATES.ENDED\n          }.`\n        )\n        yield put(\n          callActions.endCallFinish(currentCall.id, {\n            isLocal: true,\n            error: response.error\n          })\n        )\n      }\n    }\n  }\n}\n\n/**\n * A \"call status update\" has been received and needs to be handled.\n * The update specifies the server session is in \"ringing\" state.\n *\n * This saga handles the \"call ringing\" notification by updating the local\n *    session state to match the server session state. This only affects the\n *    local call state.\n * Responsibilities:\n *    1. Update call state to RINGING (via redux action).\n * @method callStatusUpdateRinging\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string}   params.remoteName   Name of the remote participant.\n * @param {string}   params.remoteNumber Number of the remote participant.\n */\nexport function * callStatusUpdateRinging (deps, params) {\n  const { wrtcsSessionId, customParameters } = params\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n  log.info('Received call status ringing notice; handling.', { wrtcsSessionId })\n\n  if (!currentCall) {\n    log.info('Call ringing notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, currentCall.id, { state: CALL_STATES.INITIATED })\n  if (stateError) {\n    log.info(`Call ringing notice for Call in an invalid state: ${stateError.message}. Ignoring.`)\n    return\n  }\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Recevied custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(currentCall.id, {\n        customParameters\n      })\n    )\n  }\n\n  log.info(`Finished handling call ringing notice. Changing to ${CALL_STATES.RINGING}.`)\n  yield put(\n    callActions.callRinging(currentCall.id, {\n      // Remote participant's information.\n      remoteParticipant: {\n        displayNumber: params.remoteNumber,\n        displayName: params.remoteName\n      }\n    })\n  )\n}\n\n/**\n * A call status notification indicating that an operation has failed and needs to be handled.\n *\n * This saga handles the \"session fail\" notification by generating a transition object\n *    containing proper statusCode and reasonText and removing the current pending operation.\n * Responsibilities:\n *    1. Generate transition object containing proper statusCode and reasonText depending on pending operation.\n * @method callStatusUpdateFailed\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n */\nexport function * callStatusUpdateFailed (deps, params) {\n  const { wrtcsSessionId, reasonText, statusCode } = params\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n  log.info('Received call operation failed notice; handling.', { wrtcsSessionId })\n\n  if (!currentCall) {\n    log.info('Call operation failed notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  const localOp = currentCall.localOp\n  if (localOp && localOp.operation && localOp.status === OP_STATUS.PENDING) {\n    let transition\n    let finishAction\n    switch (localOp.operation) {\n      case OPERATIONS.DIRECT_TRANSFER:\n        finishAction = callActions.directTransferFinish\n        // TODO: May or may not need this when generic operation event is setup.\n        transition = {\n          reasonText: reasonText || COMPLEX_OPERATION_MESSAGES.DIRECT_TRANSFER_FAILURE,\n          statusCode: statusCode || STATUS_CODES.DIRECT_TRANSFER_FAILURE\n        }\n        break\n      case OPERATIONS.CONSULTATIVE_TRANSFER:\n        finishAction = callActions.consultativeTransferFinish\n        transition = {\n          reasonText: reasonText || COMPLEX_OPERATION_MESSAGES.CONSULTATIVE_TRANSFER_FAILURE,\n          statusCode: statusCode || STATUS_CODES.CONSULTATIVE_TRANSFER_FAILURE\n        }\n        break\n      case OPERATIONS.JOIN:\n        finishAction = callActions.joinFinish\n        transition = {\n          reasonText: reasonText || COMPLEX_OPERATION_MESSAGES.JOIN_FAILURE,\n          statusCode: statusCode || STATUS_CODES.JOIN_FAILURE\n        }\n        break\n    }\n    log.debug(`Processing as a local ${localOp.operation} failure (${transition.statusCode}).`)\n\n    if (finishAction) {\n      log.info('Finished handling call operation failed notice.')\n      yield put(\n        finishAction(currentCall.id, {\n          error: new BasicError({\n            message: `Operation ${localOp.operation} failed.`,\n            code: callCodes.GENERIC_ERROR\n          }),\n          transition\n        })\n      )\n      return\n    }\n  }\n\n  yield put(callActions.updateCall(currentCall.id))\n}\n\n/**\n * A \"call cancelled\" notification needs to be handled.\n *\n * A call can be \"cancelled\" for different reasons. In general, it means that\n *    the call was not established (locally) but it is no longer available for\n *    the user to respond. For example, it may have been answered on another\n *    device, or the caller may have ended it while it was ringing.\n *\n * The call is cancelled locally by cleaning up any/all Webrtc resources and\n *    changing the call state to indicate it was cancelled.\n *\n * @method callCancelled\n * @param {Object} deps         Dependencies that the saga uses.\n * @param {Object} deps.webRTC  The WebRTC stack.\n * @param {Object} params       Parameters describing the notification.\n */\nexport function * callCancelled (deps, params) {\n  const { wrtcsSessionId } = params\n  const targetCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (targetCall || {}).id)\n  log.info('Received call cancelled notice; handling.', { wrtcsSessionId })\n\n  if (!targetCall) {\n    log.info('Call cancelled notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  } else if ([CALL_STATES.ENDED, CALL_STATES.CANCELLED].includes(targetCall.state)) {\n    log.info(`Call cancelled notice for already ${targetCall.state} call. Ignoring.`, { wrtcsSessionId })\n    return\n  }\n\n  // Clean up the Webrtc portion of the Call.\n  yield call(closeCall, deps.webRTC, targetCall.webrtcSessionId)\n\n  log.info(`Finished handling call cancelled notice. Changing to ${CALL_STATES.CANCELLED}.`)\n  // Dispatch an action to handle the redux portion of the Call.\n  yield put(callActions.callCancelled(targetCall.id))\n}\n\n/**\n * A \"session progress\" notification has been received. It contains an \"early\n *    media\" SDP (pranswer) that needs to be processed.\n *\n * Processing a pranswer is done by:\n *    1. Validating the Call / Session.\n *    2. Running the SDP through the SDP pipeline.\n *    3. Setting the SDP as the Session's remote description (as pranswer).\n *    4. Updating the Call state.\n *\n * @method receiveEarlyMedia\n * @param {Object} deps         Dependencies that the saga uses.\n * @param {Object} deps.webRTC  The WebRTC stack.\n * @param {Object} params       Parameters describing the notification.\n */\nexport function * receiveEarlyMedia (deps, params) {\n  const { wrtcsSessionId, customParameters } = params\n  const { webRTC } = deps\n\n  /**\n   * Get the call from state.\n   */\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n  log.info('Received early media notice; handling.', { wrtcsSessionId })\n\n  if (!currentCall) {\n    log.info('Early media notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  /**\n   * Get the Webrtc Session.\n   */\n  const session = yield call([webRTC.sessionManager, 'get'], currentCall.webrtcSessionId)\n  if (!session) {\n    log.info('Early media notice for missing wrtcsSession. Ignoring.', { wrtcsSessionId })\n    // TODO: Better error.\n    return\n  }\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Recevied custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(currentCall.id, {\n        customParameters\n      })\n    )\n  }\n\n  try {\n    /*\n     * Run the remote SDP pranswer through any SDP handlers provided, then set it\n     *    as the Session's remote description.\n     * This is the \"pre set remote\" stage.\n     */\n    const callConfigOptions = yield select(getOptions)\n    const sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, params.sdp, {\n      callId: currentCall.id,\n      type: 'pranswer',\n      step: 'set',\n      endpoint: 'remote'\n    })\n    yield call([session, 'processAnswer'], {\n      type: 'pranswer',\n      sdp: sdp\n    })\n  } catch (err) {\n    log.debug(`Failed to process pranswer for Call ${currentCall.id}; ignoring.`)\n    return\n  }\n\n  log.info(`Finished handling early media notice. Changing to ${CALL_STATES.EARLY_MEDIA}.`)\n  yield put(\n    callActions.sessionProgress(currentCall.id, {\n      // Remote participant's information.\n      remoteParticipant: {\n        displayNumber: params.remoteNumber,\n        displayName: params.remoteName\n      }\n    })\n  )\n}\n","// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport * as actionTypes from '../../call/interfaceNew/actionTypes'\nimport { getCallById, getCalls, getOptions } from '../../call/interfaceNew/selectors'\nimport { CALL_STATES } from '../../call/constants'\n\n// Callstack plugin.\nimport { closeCall } from '../webrtc/midcall'\n\n// Other plugins.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { all, call, put, select, delay } from 'redux-saga/effects'\n\n/**\n * Sends a call audit.\n *\n * This saga defines how/when a call audit is sent. It performs the signaling\n *    operations to audit the session on the server. There are no local webRTC\n *    operations involved.\n * Audits are sent in a loop. The saga receives the context of the call from\n *    the previous audit loop. It uses that to know if the loop should continue\n *    or not.\n * Assumptions:\n *    1. None.\n * Responsibilities:\n *    1. Determine if an audit should be sent.\n *        - Both the server or local sessions are on-going.\n *    2. Perform signaling (if needed).\n *    3. Dispatch \"call audit\" action.\n *        - Triggers the next loop. Includes info about the call context.\n * @method sendCallAudit\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.auditCall \"Call audit\" signalling function.\n * @param {Object}   action        The action that triggered the audit.\n */\nexport function * sendCallAudit (deps, action) {\n  const { webRTC, requests } = deps\n\n  const { error, id, status } = action.payload\n  const log = logManager.getLogger('CALL', id)\n  const delayMs = error ? 5000 : 25000\n\n  yield delay(delayMs)\n  const currentCall = yield select(getCallById, id)\n\n  // Some basic validation\n  if (!currentCall) {\n    log.info('Call not found; stopping audit loop.')\n    return\n  }\n  // CALL_ACCEPTED actions should only trigger an audit loop if it is a joined call\n  if (action.type === actionTypes.CALL_ACCEPTED && !currentCall.isJoinedCall) {\n    return\n  }\n\n  if (currentCall.state === CALL_STATES.ENDED) {\n    log.info('Call has ended; stopping audit loop.')\n    return\n  }\n\n  // If we get here, we know we have an active call. Just log our next intent...\n  if (!status) {\n    // If the action has no status, then the call starting triggered this audit.\n    log.info(`Starting audit loop for new call.`)\n  } else if (status === 'Retry') {\n    // If the previous audit failed for an unknown reason, retry it.\n    log.debug('Call status is \"Unknown\"; retrying failed audit for call.')\n  }\n\n  log.info('Sending call audit.')\n  // Send our audit request\n  const updateStatusResponse = yield call(requests.auditCall, {\n    wrtcsSessionId: currentCall.wrtcsSessionId,\n    isAnonymous: currentCall.isAnonymous,\n    account: currentCall.account\n  })\n\n  // Schedule for another audit request\n  if (updateStatusResponse.error) {\n    // We have an error but status is not Closed, so we continue sending audit request in hoping audit will recover\n    const { message, code } = updateStatusResponse.error\n    log.debug(`Call audit failed, caused by ${message} (${code}).`)\n    yield put(\n      callActions.sendCallAudit(id, {\n        error: updateStatusResponse.error,\n        status: updateStatusResponse.status\n      })\n    )\n  } else {\n    log.debug(`Call audit status is ${updateStatusResponse.status}.`)\n    yield put(callActions.sendCallAudit(id, { status: updateStatusResponse.status }))\n  }\n\n  if (updateStatusResponse.status === 'Closed') {\n    // If this audit returned 'Closed', then the audit loop should stop right away.\n    log.info(`Ending audit loop and Call due to Closed status. Changing to ${CALL_STATES.ENDED}.`)\n\n    // Also hangup call automatically (from webRTC perspective)\n    yield call(closeCall, webRTC, currentCall.webrtcSessionId)\n\n    // Also, cleanup Redux state by sending END_CALL_FINISH action\n    yield put(\n      callActions.endCallFinish(id, {\n        isLocal: true,\n        transition: { statusCode: 9909, reasonText: 'Call has ended due to call audit failure.' }\n      })\n    )\n  }\n}\n\n/**\n * Filters which call needs to be re-synched and calls the helper saga (`updateCallState`) to perform the re-synching.\n *\n * Responsibilities:\n *    1. Ensure resyncOnConnect config is set\n *    2. Filter out inactive calls (calls already in an ended state)\n *    3. In parallel, use the helper saga (`updateCallState`) to perform the re-synching of the active calls\n * @method sendCallAudit\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   action        The action that triggered the audit.\n */\nexport function * getSessions (deps, action) {\n  const config = yield select(getOptions)\n  if (!config.resyncOnConnect) {\n    return\n  }\n  // Grab all active calls\n  const calls = yield select(getCalls)\n  const activeCalls = calls.filter(call => call.state !== CALL_STATES.CANCELLED && call.state !== CALL_STATES.ENDED)\n\n  // Check and update the call state of each call if necessary\n  yield all(activeCalls.map(activeCall => call(updateCallState, deps, activeCall)))\n}\n\n// eslint-disable-next-line no-warning-comments\n/**\n * Sends a GET session request and updates call if required.\n *\n * This saga performs the signaling operation to get the status of a call session on the server.\n *    There are no local webRTC operations involved.\n *\n * Assumptions:\n *    1. The server uses Kandy Link 4.7.1+\n * Responsibilities:\n *    2. Update the call state if the call is out of sync (call's status does not match response from server)\n * @method sendCallAudit\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.getSession GET session signalling function.\n * @param {Object}   action        The call being acted on.\n */\nexport function * updateCallState (deps, activeCall) {\n  const { webRTC, requests } = deps\n  const log = logManager.getLogger('CALL', activeCall.id)\n  const callStateAfterConnect = activeCall.state\n\n  // If there is an ongoing operation when the WS connects, the response to that operation will re-sync the state\n  // Otherwise, we need to get the status of the session from the server\n  if (!activeCall.localOp && !activeCall.remoteOp) {\n    const sessionStatusResponse = yield call(requests.getSession, {\n      wrtcsSessionId: activeCall.wrtcsSessionId\n    })\n\n    // Get state of the call again before evaluating the response as an operation request and response\n    // could have been processed in between the request to get the session and the response received\n    const currentCall = yield select(getCallById, activeCall.id)\n\n    // Do nothing if an operation was triggered in between the GET sessions request and response, and is ongoing\n    if (!currentCall.localOp && !currentCall.remoteOp) {\n      /*\n       * If the current call state is ringing OR if the state of the call was connected/on hold before we\n       * did the GET, look at the response of the GET request.\n       * If call is ringing and GET session returns ringing, we don't need to do anything\n       * Also, if we were previously connected, but GET returns ringing, this could be due to an operation that was resolved\n       * between the GET request and response. In any case, no need to look at GET response for this scenario.\n       */\n      if (currentCall.state === CALL_STATES.RINGING || callStateAfterConnect !== CALL_STATES.RINGING) {\n        // Call not found\n        if (sessionStatusResponse.error && sessionStatusResponse.error.code === 47) {\n          // End the call as the session does not exist on the server anymore (statusCode 47 response)\n          yield call(closeCall, webRTC, activeCall.webrtcSessionId)\n\n          log.info(`Call re-sync found that call is ended. Changing to ${CALL_STATES.ENDED}.`)\n          yield put(\n            callActions.endCallFinish(activeCall.id, {\n              isLocal: true,\n              error: sessionStatusResponse.error\n            })\n          )\n\n          // GET response errors other than session not found\n        } else if (sessionStatusResponse.error) {\n          log.debug(`Call re-sync failure (${sessionStatusResponse.error.code}).`, sessionStatusResponse.error)\n\n          // If the call is answered, but not by us\n        } else if (\n          sessionStatusResponse.state === 'ANSWERED' &&\n          currentCall.state !== CALL_STATES.CONNECTED &&\n          currentCall.state !== CALL_STATES.ON_HOLD\n        ) {\n          // Report call as cancelled\n          yield call(closeCall, deps.webRTC, activeCall.webrtcSessionId)\n          log.info(`Call re-sync found that call is cancelled. Changing to ${CALL_STATES.CANCELLED}.`)\n          yield put(callActions.callCancelled(activeCall.id))\n        }\n      }\n    }\n  }\n}\n","/*\n * Compare Media / SDP.\n *\n * These functions aim to determine how a Webrtc operation changed a\n *    PeerConnection's (local) SDP. It does this by comparing two SDPs from the\n *    same PeerConnection, one from before and one from after the operation.\n * The output (a `MediaDiff` object) is a description of how each media\n *    section of the SDP was changed by the operation.\n *\n * This file examines the SDP/media from a webrtc/SDP level, not from a call/SDK\n *    level.\n */\n\n// Other plugins.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport sdpTransform from 'sdp-transform'\n\nconst log = logManager.getLogger('SDP')\n\n/**\n * Description of how a media line changes from one SDP to the next.\n * @typedef {string} MediaTransition\n */\n\n/**\n * The possible values for media transitions.\n * @enum {MediaTransition}\n */\nexport const MEDIA_TRANSITIONS = {\n  START: 'START',\n  STOP: 'STOP',\n  SAME: 'SAME'\n}\n\n/**\n * Compare two SDPs to determine the differences in their media sections.\n * The SDPs need to have been created by the same source.\n * @method compareSdp\n * @param  {string}  prevSdpString A previous SDP.\n * @param  {string}  sdpString     A new SDP.\n * @return {MediaDiff}\n */\nexport default function compareMedia (prevSdpString, sdpString) {\n  // Parse the SDP string into an SDP object for easier handling.\n  const prevSdp = sdpTransform.parse(prevSdpString)\n  const sdp = sdpTransform.parse(sdpString)\n\n  // Take out only the parts of the SDP that we are interested in.\n  //    Each \"media\" relates to a media section of the SDP.\n  const prevMedia = summarizeMedia(prevSdp)\n  const currMedia = summarizeMedia(sdp)\n\n  // Media found in the previous SDP but not the latest SDP were removed.\n  const removed = []\n  // Media found in the latest SDP but not the previous SDP were added.\n  const added = []\n  // Media found in both SDPs may have been changed.\n  const changed = []\n  const unchanged = []\n\n  // For each media section in the previous SDP,\n  //    try to find a matching media section in the current SDP.\n  prevMedia.forEach(prevM => {\n    const currM = currMedia.find(media => media.sectionId === prevM.sectionId)\n    if (!currM) {\n      // If no match found, then the media section was removed from the SDP.\n      removed.push(prevM)\n    } else {\n      // If a match is found, compare the two sections.\n      const changes = compareSummary(prevM, currM)\n\n      if (changes.sending === MEDIA_TRANSITIONS.SAME && changes.receiving === MEDIA_TRANSITIONS.SAME) {\n        // No changes.\n        unchanged.push(prevM)\n      } else {\n        // Changes. Include both the media summary and the changes found.\n        /**\n         * Description of how a media line changed, with the latest summary.\n         * @typedef  {Object}       ChangedMedia\n         * @property {MediaSummary} media        The new summary of the media section.\n         * @property {MediaChanges} changes      The changes that occurred to the media.\n         */\n        changed.push({ media: currM, changes })\n      }\n    }\n  })\n\n  // For each media section in the current SDP,\n  //    try to find a matching media section in the previous SDP.\n  currMedia.forEach(currM => {\n    const prevM = prevMedia.find(media => media.sectionId === currM.sectionId)\n    if (!prevM) {\n      // If no match found, then the media section was added to the current SDP.\n      added.push(currM)\n    } else {\n      // Nothing else to check. Already found removed and (un)changed media.\n    }\n  })\n\n  /**\n   * The computed differences of media sections between two SDPs.\n   * @typedef  {Object}              MediaDiff\n   * @property {Array<MediaSummary>} added     Media sections that are new in the latest SDP.\n   * @property {Array<MediaSummary>} removed   Media sections that are missing in the latest SDP.\n   * @property {Array<ChangedMedia>} changed   Media changes between the two SDPs.\n   * @property {Array<MediaSummary>} unchanged Media sections that remained the same.\n   */\n  return {\n    added,\n    removed,\n    changed,\n    unchanged\n  }\n}\n\n/**\n * Reduce the media information in the SDP to only what we will use.\n * The SDP object provided as input is assumed to use standard values.\n *\n * Only supports SDPs where there is only one track per media section.\n *    eg. Plan-B when there is max 1 track per media type, and Unified-Plan (?).\n *\n * @method summarizeMedia\n * @param  {Object} sdp The full SDP object.\n * @return {Array<MediaSummary>} Summarized media sections from the SDP.\n */\nexport function summarizeMedia (sdp) {\n  const sdpMedia = []\n  sdp.media.forEach(media => {\n    /*\n     * Generate/Find a unique ID for this media section. This will be used to\n     *    compare against another SDP's media sections to find matching\n     *    sections.\n     */\n    const sectionId = media.mid\n\n    if (media.ssrcGroups && media.ssrcGroups.length > 1) {\n      /*\n       * All of the logic in this file assumes that a media section only has 1\n       *    track. If there are more than one, it means that we are using\n       *    Plan-B with more than 1 track of the same media type, which is not\n       *    something that we want to support.\n       */\n      log.debug(`Media section contains multiple ssrc groups. Summary for ${sectionId} will be wrong.`)\n    }\n\n    // Whether this media section is sending and/or receiving.\n    const willSend = media.direction.includes('send')\n    const willReceive = media.direction.includes('recv')\n\n    let mediaId, trackId\n    /*\n     * If the media section is sending, then it has information about the track\n     *    that it is sending.\n     *\n     * Note: The media section will never have information about a track it is\n     *    receiving (ie. willReceive), because the SDP only describes the\n     *    \"local\" PeerConnection's situation.\n     */\n    if (willSend) {\n      /**\n       * The SDP should either have a `msid` property (a=msid line) or `ssrc`\n       *    lines with the same information (`a=ssrc:... label:...` and\n       *    `a=ssrc:... mslabel:...`).\n       * If it has nethier, then the SDP says it wants to send a track, but it\n       *    has no track to send.\n       */\n      if (media.msid) {\n        ;[mediaId, trackId] = media.msid.split(' ')\n      } else if (media.ssrcs) {\n        mediaId = media.ssrcs.find(ssrc => ssrc.attribute === 'mslabel').value\n        trackId = media.ssrcs.find(ssrc => ssrc.attribute === 'label').value\n      }\n    } else {\n      // This media section is not sending a track, so there is no information.\n      mediaId = undefined\n      trackId = undefined\n    }\n\n    /**\n     * Summarized information about a media section from an SDP.\n     * @typedef  {Object}  MediaSummary\n     * @property {string}  sectionId   A unique identifier for the media section.\n     * @property {string}  type        The type of media line.\n     * @property {boolean} willSend    Whether the media will send data.\n     * @property {boolean} willReceive Whether the media will receive data.\n     * @property {string}  mediaId     The MediaStream ID of the media.\n     * @property {string}  trackId     The MediaStreamTrack ID of the media.\n     */\n    const summary = {\n      sectionId,\n      type: media.type,\n      willSend,\n      willReceive,\n      mediaId,\n      trackId\n    }\n\n    sdpMedia.push(summary)\n  })\n  return sdpMedia\n}\n\n/**\n * Compare two summarized Media section objects to determine how it changed.\n * @method compareSummary\n * @param  {MediaSummary} prevMedia The previous media summary.\n * @param  {MediaSummary} currMedia The current meduia summary.\n * @return {MediaChanges} How the media directions changed from prevMedia to currMedia.\n */\nexport function compareSummary (prevMedia, currMedia) {\n  /**\n   * Description of changes to a media line.\n   * @typedef  {Object} MediaChanges\n   * @property {MediaTransition} sending   The change in the media sending data.\n   * @property {MediaTransition} receiving The change in the media receiving data.\n   */\n  const change = {\n    sending: undefined,\n    receiving: undefined\n  }\n\n  if (prevMedia.willSend !== currMedia.willSend) {\n    if (currMedia.willSend) {\n      // Started sending.\n      change.sending = MEDIA_TRANSITIONS.START\n    } else {\n      // Stopped sending.\n      change.sending = MEDIA_TRANSITIONS.STOP\n    }\n  } else {\n    // No change.\n    change.sending = MEDIA_TRANSITIONS.SAME\n  }\n\n  if (prevMedia.willReceive !== currMedia.willReceive) {\n    if (currMedia.willReceive) {\n      // Started receiving.\n      change.receiving = MEDIA_TRANSITIONS.START\n    } else {\n      // Stopped receiving.\n      change.receiving = MEDIA_TRANSITIONS.STOP\n    }\n  } else {\n    // No change.\n    change.receiving = MEDIA_TRANSITIONS.SAME\n  }\n\n  return change\n}\n","import { MEDIA_TRANSITIONS } from './compareMedia'\n\n// Constants.\nimport { OPERATIONS } from '../../call/interfaceNew/constants'\n\n/**\n * Based on a MediaDiff object, determine what the call operation was that\n *    caused the SDP/media change.\n * @method getOperation\n * @param  {MediaDiff} mediaDiff\n * @return {string}\n */\nexport default function getOperation (mediaDiff) {\n  // Naively just check one operation after the other.\n  // TODO: Make this more efficient?\n  // TODO: These MoH checks should take into account current call state.\n  //    Start/Stop MoH should only be possible in specific states.\n  if (wasHold(mediaDiff) || was3xHold(mediaDiff)) {\n    return OPERATIONS.HOLD\n  } else if (wasUnhold(mediaDiff) || was3xUnhold(mediaDiff)) {\n    return OPERATIONS.UNHOLD\n  } else if (wasStartMoh(mediaDiff)) {\n    // Check 'start MoH' before 'add media' because 'start MoH' is a special\n    //    case of 'add media'.\n    return OPERATIONS.START_MOH\n  } else if (wasAddMedia(mediaDiff)) {\n    return OPERATIONS.ADD_MEDIA\n  } else if (wasStopMoh(mediaDiff)) {\n    // Check 'stop MoH' before 'remove media' because 'stop MoH' is a special\n    //    case of 'remove media'.\n    return OPERATIONS.STOP_MOH\n  } else if (wasRemoveMedia(mediaDiff)) {\n    return OPERATIONS.REMOVE_MEDIA\n  } else if (wasNoChange(mediaDiff)) {\n    return 'NO_CHANGE'\n  } else {\n    return 'UNKNOWN'\n  }\n}\n\n/**\n * A \"hold\" operation is when all media lines change to be \"inactive\".\n * Some media may have already been inactive. \"Hold\" is specifically when\n *    all active media becomes inactive, hence there is no longer any media\n *    flowing.\n *\n * This differs from a \"stop MoH\" operation by requiring at least one media to\n *    be \"flowing\" (both sending and receiving) before the operation. For\n *    \"stop MoH\", the media would only be sending (and not receiving) before.\n *\n * In terms of SDP changes, it is defined as:\n *    1) At least one media was 'flowing' before the SDP change.\n *    2) No media is 'flowing' after the SDP change.\n *    3) No active media was added.\n *    4) No media was removed.\n *    5) All media that changed was stopped.\n *        ie. is being \"held\".\n *    6) All media that is unchanged is not sending/receiving.\n *        ie. was already \"held\".\n * @method wasHold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasHold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1 & 2) Some media was flowing before the change, and no media is flowing\n   *    after the change. This ensures \"hold\" is distinct from \"stop MoH\"\n   *    scenarios.\n   */\n  const stoppedFlowing = hadMediaFlowing(mediaDiff) && !hasMediaFlowing(mediaDiff)\n\n  /*\n   * 3) No active media was added.\n   * For any added media we need to check if it's inactive to determine if this was a hold\n   */\n  const noActiveMediaAdded = !added.some(media => media.willSend || media.willReceive)\n\n  /*\n   * 4) No media was removed\n   */\n  const noMediaRemoved = removed.length === 0\n\n  /*\n   * 5a) Some media did change.\n   */\n  const didChange = changed.length > 0\n\n  /*\n   * 5b) For all media that changed,\n   *    all changes were either `stop` or `remain stopped`.\n   */\n  const allStopped = changed.every(({ media, changes }) => {\n    // This media is not sending.\n    const notSending =\n      changes.sending === MEDIA_TRANSITIONS.STOP || (changes.sending === MEDIA_TRANSITIONS.SAME && !media.willSend)\n    // This media is not receiving.\n    const notReceiving =\n      changes.receiving === MEDIA_TRANSITIONS.STOP ||\n      (changes.receiving === MEDIA_TRANSITIONS.SAME && !media.willReceive)\n\n    return notSending && notReceiving\n  })\n\n  /*\n   * 6) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const stillStopped = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return stoppedFlowing && noActiveMediaAdded && noMediaRemoved && didChange && allStopped && stillStopped\n}\n\n/**\n * An \"unhold\" operation is when all media lines were previously inactive and\n *    some change to be active.\n * Not all media needs to change to be active, only some.\n *\n * This differs from a \"start MoH\" operation by requiring some media to be\n *    \"flowing\" (both sending and receiving) after the operation. For\n *    \"start MoH\", the media would only be sending (and not receiving) after.\n *\n * In terms of SDP changes, it is defined as:\n *    1) No media was flowing beforehand.\n *    2) At least one media is flowing afterwards.\n *    3) No media was added.\n *    4) No media was removed.\n *    5) All media that changed was started.\n *        ie. is being \"unheld\"\n *    6) All media that is unchanged is not sending/receiving.\n *        ie. was (and still is) \"held\"\n * @method wasUnhold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasUnhold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1 & 2) No media was flowing before the change, and some media is flowing\n   *    after the change. This ensures \"unhold\" is distinct from \"start MoH\"\n   *    scenarios.\n   */\n  const startedFlowing = !hadMediaFlowing(mediaDiff) && hasMediaFlowing(mediaDiff)\n\n  /*\n   * 3 & 4) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 6) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const noUnchangedSend = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  /*\n   * 5a) Some media did change.\n   */\n  const didChange = changed.length > 0\n\n  /*\n   * 5b) For all media that was changed,\n   *    all changes were either `start` or `remain stopped`.\n   */\n  const onlyStartChanges = changed.every(({ media, changes }) => {\n    const onlyStartSending =\n      changes.sending === MEDIA_TRANSITIONS.START || (changes.sending === MEDIA_TRANSITIONS.SAME && !media.willSend)\n\n    const onlyStartReceiving =\n      changes.receiving === MEDIA_TRANSITIONS.START ||\n      (changes.receiving === MEDIA_TRANSITIONS.SAME && !media.willReceive)\n\n    return onlyStartSending && onlyStartReceiving\n  })\n\n  return startedFlowing && sameMedia && noUnchangedSend && didChange && onlyStartChanges\n}\n\n/**\n * A \"3.X hold\" opeation is when a v3.X SDK performs hold. This is for interop.\n *\n * This operation is the same as a \"regular\" hold, except that media changes to\n *    sendonly instead of inactive.\n *\n * In terms of SDP changes, it is defined as:\n *    1) At least one media was 'flowing' before the SDP change.\n *    2) All changed media is not 'sendonly'.\n *        ie. is being \"v3.X held\"\n *    3) No active media was added.\n *    4) No media was removed.\n *    5) All media that is unchanged is not sending/receiving.\n *        ie. was already \"held\".\n *\n * @method was3xUnhold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function was3xHold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1) Some media was flowing before the change.\n   * 2) All changed media is now \"sendonly\".\n   */\n  const wasFlowing = hadMediaFlowing(mediaDiff)\n  const allSendOnly = changed.every(({ media, changes }) => {\n    return changes.sending === MEDIA_TRANSITIONS.SAME && changes.receiving === MEDIA_TRANSITIONS.STOP\n  })\n\n  /*\n   * 3) No active media was added.\n   * For any added media we need to check if it's inactive to determine if this was a hold\n   */\n  const noActiveMediaAdded = !added.some(media => media.willSend || media.willReceive)\n\n  /*\n   * 4) No media was removed\n   */\n  const noMediaRemoved = removed.length === 0\n\n  /*\n   * 5) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const noUnchangedSend = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return wasFlowing && allSendOnly && noActiveMediaAdded && noMediaRemoved && noUnchangedSend\n}\n\n/**\n * A \"3.X unhold\" opeation is when a v3.X SDK performs unhold. This is for\n *    interop.\n *\n * This operation is the same as a \"regular\" unhold, except that media changes\n *    from sendonly instead of inactive.\n *\n * In terms of SDP changes, it is defined as:\n *    1) Some media is flowing afterwards.\n *    2) All media that changed was started receiving.\n *        ie. is being \"3.X unheld\"\n *    3) No media was added.\n *    4) No media was removed.\n *    5) All media that is unchanged is not sending/receiving.\n *        ie. was (and still is) \"held\"\n *\n * @method was3xUnhold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function was3xUnhold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1) Some media was flowing before the change.\n   * 2) All changed media is now went from \"sendonly\" to \"sendrecv\".\n   */\n  const isFlowing = hasMediaFlowing(mediaDiff)\n  const allSending = changed.every(({ media, changes }) => {\n    return changes.sending === MEDIA_TRANSITIONS.SAME && changes.receiving === MEDIA_TRANSITIONS.START\n  })\n\n  /*\n   * 3) & 4) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 5) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const noUnchangedSend = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return isFlowing && allSending && sameMedia && noUnchangedSend\n}\n\n/**\n * An \"add media\" operation is when the latest SDP is sending tracks that the\n *    previous SDP was not sending. This can either be a new, sending media\n *    section or an existing media section that was changed to now send.\n *\n * The \"start MoH\" scenario is a special-case of \"add media\". When one audio\n *    track is added/started, with no media flowing beforehand, then that could\n *    either be a \"start MoH\" or \"add media\" operation. From a webrtc/SDP\n *    viewpoint, they are the same thing in that scenario, so there is no way\n *    to tell them apart using only a MediaDiff object.\n * If both ends of the Call are SDK clients, then \"start MoH\" can only be done\n *    when the Call is on hold (by definition), and \"add media\" can only be\n *    done when the Call is not on hold (requirement set by the API), but we\n *    can't make that assumption.\n *\n * In terms of SDP changes, it is defined as:\n *    1) No media [sections] was removed.\n *    2) Any media added is sending.\n *    3) Any media that changed started sending.\n * @method wasAddMedia\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasAddMedia (mediaDiff) {\n  const { added, removed, changed } = mediaDiff\n\n  /*\n   * 1) No media sections were removed.\n   */\n  const wasntRemoved = removed.length === 0\n\n  /*\n   * 2a & 3a) Something was added or changed.\n   */\n  const somethingStarted = added.length > 0 || changed.length > 0\n\n  /*\n   * 2b) Any media sections added are sending.\n   */\n  const addedSending = added.every(media => media.willSend)\n\n  /*\n   * 3b) Any media that changed was to start sending.\n   */\n  const changedSending = changed.every(({ media, changes }) => {\n    return changes.sending === MEDIA_TRANSITIONS.START && changes.receiving === MEDIA_TRANSITIONS.SAME\n  })\n\n  /*\n   * Unchanged media is not checked for.\n   *    By definition, it is the same as before, and could be in any state.\n   */\n\n  return wasntRemoved && somethingStarted && addedSending && changedSending\n}\n\n/**\n * A \"remove media\" operation is when some media sections stop sending (with no\n *    other changes).\n *\n * The \"stop MoH\" scenario is a special-case of \"remove media\". When one audio\n *    track is removed, leaving no media flowing afterwards, then that could\n *    either be a \"stop MoH\" or \"remove media\" operation. From a webrtc/SDP\n *    viewpoint, they are the same thing in that scenario, so there is no way\n *    to tell them apart using only a MediaDiff object.\n * If both ends of the Call are SDK clients, then \"stop MoH\" can only be done\n *    when the Call is on hold (by definition), and \"remove media\" can only be\n *    done when the Call is not on hold (requirement set by the API), but we\n *    can't make that assumption.\n *\n * In terms of SDP changes, it is defined as:\n *    1) No media was added.\n *    2) No media [sections] were removed.\n *    3) Some existing media stopped sending (ie. tracks were removed).\n * @method wasRemoveMedia\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasRemoveMedia (mediaDiff) {\n  const { added, removed, changed } = mediaDiff\n\n  /*\n   * 1 & 2) No media sections were added or removed.\n   */\n  const wasntAdded = added.length === 0\n  const wasntRemoved = removed.length === 0\n\n  /*\n   * 3a) Some media sections changed.\n   */\n  const wasChanged = changed.length > 0\n\n  /*\n   * 3b) For all media sections that changed,\n   *      the only change was to stop sending.\n   */\n  const onlyStopSending = changed.every(({ media, changes }) => {\n    return (\n      changes.sending === MEDIA_TRANSITIONS.STOP &&\n      // Receiving may be SAME or START, depending if the previous media\n      //    direction was sendrecv (SAME) or sendonly (START).\n      // TODO: Update `ChangedMedia` to include the pre-change media summary?\n      changes.receiving !== MEDIA_TRANSITIONS.STOP\n    )\n  })\n\n  /*\n   * Unchanged media is not checked for.\n   *    By definition, it is the same as before, and could in any state.\n   */\n\n  return wasntAdded && wasntRemoved && wasChanged && onlyStopSending\n}\n\n/**\n * A \"start Music on Hold\" operation is when media is currently held, and one\n *    audio media is changed to \"send only\".\n *\n * This checker does not guarentee that it was a \"start MoH\" scenario, and not\n *    a very specific \"add media\" scenario. It is an edge-case, but it is\n *    possible that both sides of the Call removed all media, then one side\n *    adds a single audio track. There is no way to tell the difference with\n *    only a MediaDiff object.\n *\n * In terms of SDP changes, it is defined as:\n *    0) A \"add media\" scenario where:\n *    1) One inactive audio section starts sending.\n *    2) All other media remains unchanged.\n *    3) Any unchanged media is inactive.\n * @method wasStartMoh\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasStartMoh (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  // 0) \"Start MoH\" is a \"add media\" scenario that has extra requirements.\n  if (!wasAddMedia(mediaDiff)) {\n    return false\n  }\n\n  /*\n   * 1) Only one audio line should be changed, to send only.\n   */\n  const onlyAudioChange =\n    // Only one audio line changed.\n    changed.length === 1 &&\n    changed[0].media.type === 'audio' &&\n    // The change was to start sending media.\n    changed[0].changes.sending === MEDIA_TRANSITIONS.START &&\n    // Receiving media remains unchanged; not receiving.\n    changed[0].changes.receiving === MEDIA_TRANSITIONS.SAME &&\n    !changed[0].media.willReceive\n\n  /*\n   * 2) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 3) For all media that is unchanged,\n   *    they are not sending/receiving.\n   */\n  const inactiveUnchanged = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return sameMedia && inactiveUnchanged && onlyAudioChange\n}\n\n/**\n * A \"stop Music on Hold\" operation is when media starts in a MoH state, then\n *    reverts back to an \"on hold\" state.\n *\n * This checker does not guarentee that it was a \"stop MoH\" scenario, and not\n *    a very specific \"remove media\" scenario. It is possible that a Call is\n *    established with one-way audio (and no video), then the audio is removed.\n *    There is no way to tell the difference with only a MediaDiff object.\n *\n * In terms of SDP changes, it is defined as:\n *    0) A \"remove media\" scenario where:\n *    1) One audio section changed stopped sending.\n *    2) All other media remains unchanged.\n *    3) Any unchanged media is inactive.\n * @method wasStopMoh\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasStopMoh (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  // 0) \"Stop MoH\" is a \"remove media\" scenario that has extra requirements.\n  if (!wasRemoveMedia(mediaDiff)) {\n    return false\n  }\n\n  /*\n   * 1) Only one audio line should be changed, from send only to inactive.\n   */\n  const stopSendAudio =\n    // Only one audio line changed.\n    changed.length === 1 &&\n    changed[0].media.type === 'audio' &&\n    // The change was to stop sending media.\n    changed[0].changes.sending === MEDIA_TRANSITIONS.STOP &&\n    // Receiving media remains unchanged; not receiving.\n    changed[0].changes.receiving === MEDIA_TRANSITIONS.SAME &&\n    !changed[0].media.willReceive\n\n  /*\n   * 2) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 3) For all media that is unchanged,\n   *    they are not sending/receiving.\n   */\n  const inactiveUnchanged = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return sameMedia && inactiveUnchanged && stopSendAudio\n}\n\n/**\n * A \"no change\" media operation is when all media sections remain the same.\n *    The remote operation was something other than changing media.\n *\n * In terms of SDP comparison, it is defined as:\n *    1) No media sections were added, removed, or changed.\n *    2) Some media remained unchanged.\n * @method wasNoChange\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasNoChange (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * No media did anything other than `unchanged`.\n   */\n  const noChange = added.length === 0 && removed.length === 0 && changed.length === 0\n\n  /*\n   * ...but there is media in the SDP.\n   */\n  const hasUnchanged = unchanged.length > 0\n\n  return noChange && hasUnchanged\n}\n\n/**\n * Determines whether a MediDiff object describes the SDP as having had media\n *    flowing (a media both sending and receiving; flowing in both directions)\n *    _before_ the SDP changes.\n * @method hadMediaFlowing\n * @param  {MediaDiff} mediaDiff\n * @return {boolean}   Whether the MediaDiff has media flowing before the change.\n */\nexport function hadMediaFlowing (mediaDiff) {\n  const { removed, changed, unchanged } = mediaDiff\n\n  /*\n   * If any unchanged media is sending and receiving, then media was (and still\n   *    is) flowing before the SDP change.\n   */\n  const unchangedFlowing = unchanged.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * If any changed media was sending and receiving, then media was flowing\n   *    before the SDP change.\n   */\n  const changedFlowing = changed.some(({ media, changes }) => {\n    /*\n     * A changed media was sending before the change if\n     *    1) the change was to stop sending, or\n     *    2) sending didn't change, and is still sending.\n     */\n    const wasSending =\n      changes.sending === MEDIA_TRANSITIONS.STOP || (changes.sending === MEDIA_TRANSITIONS.SAME && media.willSend)\n\n    /*\n     * A changed media was receiving before the change if\n     *    1) the change was to stop receiving, or\n     *    2) receiving didn't change, and is still receiving.\n     */\n    const wasReceiving =\n      changes.receiving === MEDIA_TRANSITIONS.STOP ||\n      (changes.receiving === MEDIA_TRANSITIONS.SAME && media.willReceive)\n\n    return wasSending && wasReceiving\n  })\n\n  /*\n   * If any removed media was sending and receiving, then media was flowing\n   *    before the SDP change.\n   */\n  const removedFlowing = removed.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * Ignore `added` media, since that tells us nothing about media before the\n   *    SDP change.\n   */\n\n  return unchangedFlowing || changedFlowing || removedFlowing\n}\n\n/**\n * Determines whether a MediDiff object describes the SDP as having media\n *    flowing (a media both sending and receiving; flowing in both directions)\n *    _after_ the SDP changes.\n * @method hasMediaFlowing\n * @param  {MediaDiff} mediaDiff\n * @return {boolean}   Whether the MediaDiff has media flowing after the change.\n */\nexport function hasMediaFlowing (mediaDiff) {\n  const { added, changed, unchanged } = mediaDiff\n\n  /*\n   * If any unchanged media is sending and receiving, then media is (and was)\n   *    flowing after the SDP change.\n   */\n  const unchangedFlowing = unchanged.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * If any changed media is sending and receiving, then media is flowing\n   *    after the SDP change.\n   */\n  const changedFlowing = changed.some(({ media, changes }) => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * If any added media is sending and receiving, then media is flowing\n   *    after the SDP change.\n   */\n  const addedFlowing = added.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * Ignore `removed` media, since that tells us nothing about media after the\n   *    SDP change.\n   */\n\n  return unchangedFlowing || changedFlowing || addedFlowing\n}\n","// Other plugins.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport sdpTransform from 'sdp-transform'\nimport { cloneDeep, isArray, isFunction } from 'lodash/fp'\n\nconst log = logManager.getLogger('SDP')\n\n/**\n * Basic SDP pipeline runner.\n * @method sdpPipeline\n * @param  {Array}      handlers       List of functions that transform the SDP.\n * @param  {string}     sdp            The session description.\n * @param  {Object}     info           Information about the session description.\n * @param  {string}     info.callId    The id corresponding to the call on which this pipeline is being run.\n * @param  {RTCSdpType} info.type      The session description's type.\n * @param  {string}     info.step      The step that will occur after the Pipeline is run.\n *    Will be either 'set' (the SDP will be set locally) or 'send' (the SDP will be sent\n *    to the remote endpoint).\n * @param  {string}     info.endpoint  Which end of the connection created the SDP.\n * @param  {BandwidthControls} [info.bandwidth] Information about bandwidth controls.\n * @return {string}     The modified session description.\n */\nexport default function runPipeline (handlers, sdp, info) {\n  let objectSdp = sdpTransform.parse(sdp)\n\n  const originalSdp = Object.freeze(objectSdp)\n  let newSdp = cloneDeep(originalSdp)\n\n  if (isArray(handlers)) {\n    handlers.forEach(handler => {\n      if (isFunction(handler)) {\n        log.debug(`Running SDP handler ${handler.name}.`)\n        newSdp = handler(newSdp, info, originalSdp)\n      } else {\n        log.error(`SDP handler not a function; skipping.`)\n      }\n    })\n  }\n\n  return sdpTransform.write(newSdp)\n}\n","import { BANDWIDTH_DEFAULTS } from '../../call/constants'\n\n/**\n * Checks whether the bandwidth controls provided exist and are numbers.\n * If not, then a default limit is used.\n * @param {BandwidthControls} bandwidthControls The bandwidth controls to check.\n */\nexport function checkBandwidthControls (bandwidthControls) {\n  const finalBandwidthControls = { ...bandwidthControls }\n\n  if (!bandwidthControls || !(bandwidthControls.audio && typeof bandwidthControls.audio === 'number')) {\n    finalBandwidthControls.audio = BANDWIDTH_DEFAULTS.AUDIO\n  }\n  if (!bandwidthControls || !(bandwidthControls.video && typeof bandwidthControls.video === 'number')) {\n    finalBandwidthControls.video = BANDWIDTH_DEFAULTS.VIDEO\n  }\n  return finalBandwidthControls\n}\n","/**\n * Maps media tracks with the dscpControls provided to ensure the correct senders are set up with the\n * proper networkPriority\n * @param {Array<Track>} audioTracks The list of audio tracks\n * @param {Array<Track>} videoTracks The list of video tracks\n * @param {Array<Track>} screenTracks The list of screen tracks\n * @param {Object} dscpControls The DSCP controls provided\n * @return {Object} An object map of track: dscpSetting for all applicate tracks\n */\nexport function getTrackDscpMapping (audioTracks, videoTracks, screenTracks, dscpControls) {\n  const dscpTrackMapping = {}\n  if (dscpControls) {\n    if (dscpControls.screenNetworkPriority) {\n      for (const screenTrack of screenTracks) {\n        dscpTrackMapping[screenTrack.id] = dscpControls.screenNetworkPriority\n      }\n    }\n    if (dscpControls.audioNetworkPriority) {\n      for (const audioTrack of audioTracks) {\n        dscpTrackMapping[audioTrack.id] = dscpControls.audioNetworkPriority\n      }\n    }\n    if (dscpControls.videoNetworkPriority) {\n      for (const videoTrack of videoTracks) {\n        dscpTrackMapping[videoTrack.id] = dscpControls.videoNetworkPriority\n      }\n    }\n  }\n\n  return dscpTrackMapping\n}\n","// Other plugins.\nimport { logManager } from '../../logs'\n\nconst log = logManager.getLogger('SDPHANDLER')\n\n/**\n * SDP handler function that should be passed into session object's `processOffer` and `processAnswer` function.\n * This function disables old media encryption method SDES (Modifies sdp by removing crypto).\n * However, if only SDES is available, don't disable it.\n *\n * @method sanitizeSdesFromSdp\n * @param {Object} newSdp The SDP so far (could have been modified by previous handlers).\n * @param {Object} info Information about the session description.\n * @param {RTCSdpType} info.type The session description's type.\n * @param {string} info.step The step that will occur after the Pipeline is run.\n * @param {string} info.endpoint Which end of the connection created the SDP.\n * @param {Object} originalSdp The SDP in its initial state.\n * @return {Object} The sanitized SDP with crypto removed (if fingerprint exists)\n */\nexport function sanitizeSdesFromSdp (newSdp, info, originalSdp) {\n  for (let mLine of newSdp.media) {\n    if (mLine.crypto && mLine.fingerprint) {\n      log.debug('Removing SDES line from SDP media section.')\n      delete mLine.crypto\n    }\n  }\n  return newSdp\n}\n\n/**\n * Function generator for an SDP handler function that changes the DTLS role of the SDP.\n * @method changeDtlsRoleTo\n * @param  {string} role\n * @return {Function} SDP handler.\n */\nexport function changeDtlsRoleTo (role) {\n  return function changeDtlsRole (newSdp, info, originalSdp) {\n    // Grab the original DTLS role for logging purposes.\n    //    Assumed that the DTLS role is the same in every media section.\n    const original = newSdp.media[0].setup\n    log.debug(`Changing SDP DTLS role from ${original} to ${role}.`)\n\n    // Change the DTLS role in every media section.\n    newSdp.media.map(media => {\n      media.setup = role\n      return media\n    })\n\n    return newSdp\n  }\n}\n\n/**\n * An SDP handler that adds bandwidth options to the SDP.\n * Supports Chrome & Firefox by generating 2 types of configs:\n *  - 'AS' for Chrome in kilobits per second\n *  - 'TIAS' for Firefox in bits per second\n * @method modifySdpBandwidth\n * @param {BandwidthControls} bandwidthControls\n * @return {Function} SDP handler.\n */\nexport function modifySdpBandwidth (newSdp, info, originalSdp) {\n  /**\n   * Generates bandwidth configs that Chrome & Firefox can recognize.\n   * @param {number} limit The bandwidth limit in kilobits per second.\n   */\n  function generateBandwidthConfigs (limit) {\n    return [\n      {\n        type: 'AS', // Chrome supports this (in kilobits per second)\n        limit\n      },\n      {\n        type: 'TIAS', // Firefox supports this (in bits per second)\n        limit: limit * 1000\n      }\n    ]\n  }\n\n  if (info.bandwidth) {\n    // For more details on bandwidth controls, see here https://webrtchacks.com/limit-webrtc-bandwidth-sdp/.\n    if (info.bandwidth.audio) {\n      newSdp.media\n        .filter(media => media.type === 'audio')\n        .forEach(media => {\n          media.bandwidth = generateBandwidthConfigs(info.bandwidth.audio)\n        })\n    }\n    if (info.bandwidth.video) {\n      newSdp.media\n        .filter(media => media.type === 'video')\n        .forEach(media => {\n          media.bandwidth = generateBandwidthConfigs(info.bandwidth.video)\n        })\n    }\n  }\n  return newSdp\n}\n\n/**\n * Generates extra informational parameters for ending a call.\n *\n * @method generateEndParams\n * @param {string}  currentCallState The state of the current call, before it was ended.\n * @param {boolean} isLocal Specifies if end operation was caused by the local side.\n * @param {Object}  params Extra context information related to the call.\n * @param {string}  [params.reasonText]  Human-readable explanation for the call change.\n * @param {string}  [params.statusCode] Code representing the reason for the call change.\n * @param {string}  params.remoteName   Name of the remote participant.\n * @param {string}  params.remoteNumber Number of the remote participant.\n */\nexport function generateEndParams (currentCallState, isLocal, params) {\n  const endParams = {\n    isLocal,\n    remoteParticipant: {\n      displayNumber: params.remoteNumber,\n      displayName: params.remoteName\n    },\n    transition: {\n      prevState: currentCallState\n    }\n  }\n  if (params.statusCode) {\n    endParams.transition.statusCode = params.statusCode\n  }\n  if (params.reasonText) {\n    endParams.transition.reasonText = params.reasonText\n  }\n  return endParams\n}\n","import { getSdpSessionId } from '../../../../webrtc/src/sdpUtils/extractors'\n\n/**\n * Checks whether two SDPs have the same session ID.\n * @method hasSameSessionId\n * @param  {string}  sdp    A valid SDP string.\n * @param  {string}  newSdp A valid SDP string.\n * @return {boolean} Whether the two SDPs have the same session ID.\n */\nexport function hasSameSessionId (sdp, newSdp) {\n  const firstSdpSessionId = getSdpSessionId(sdp)\n  const secondSdpSessionId = getSdpSessionId(newSdp)\n\n  if (firstSdpSessionId && secondSdpSessionId) {\n    return firstSdpSessionId === secondSdpSessionId\n  }\n}\n","// Call Plugin\nimport * as callActions from '../../call/interfaceNew/actions/call'\n\n// Helpers\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { call, put } from 'redux-saga/effects'\n\n/**\n * Uses the WebRTC stack to get the list of available and supported codecs by the browser\n *\n * @method getAvailableCodecs\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} action           A `GET_AVAILABLE_CODECS` action.\n */\nexport function * getAvailableCodecs (deps, action) {\n  const { webRTC } = deps\n\n  const log = logManager.getLogger('CALL')\n\n  const { kind } = action.payload\n\n  // TODO: Remove this once parameter validation is available for APIs\n  if (kind !== 'audio' && kind !== 'video') {\n    let errorMsg = `Cannot retrieve codecs for media kind ${kind}. Only 'audio' or 'video' kind supported.`\n    log.info(errorMsg)\n    yield call([action.meta.deferred, 'reject'], {\n      error: errorMsg\n    })\n    return\n  }\n\n  log.info(`Retrieving list of available codecs for media kind '${kind}'.`)\n\n  // Get the list of codecs from the general WebRTCManager\n  const codecs = yield call([webRTC.webrtcManager, 'getAvailableCodecs'], kind)\n  log.debug('Successfully retrieved codec list:', codecs)\n\n  // We got codecs, so 'resolve' the deferred result and respond with the list of codecs.\n  // NOTE: There does not seem to be a path for failure, as RTCRtpSender.getCapabilities(kind)\n  //       always returns something according to API doc\n  //       (including null, if there are simply no capabilities present),\n  //       so no need to handle 'reject' case.\n  yield call([action.meta.deferred, 'resolve'], codecs)\n\n  // Signal the completion of request by triggering an action complete, which\n  // in turn will issue an event at the application layer.\n  yield put(\n    callActions.availableCodecsRetrieved({\n      kind,\n      codecs\n    })\n  )\n}\n","// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getOptions } from '../../call/interfaceNew/selectors'\n\n// Helpers\nimport { logManager } from '../../logs'\nimport runPipeline from '../sdp/pipeline'\nimport { getTrackDscpMapping } from '../utils/dscp'\n\n// WebRTC operations.\nimport * as mediaOps from './media'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\n/**\n * Performs the WebRTC portion necessary for establishing outgoing calls\n *\n * @method setupCall\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} mediaConstraints Video and audio media constraints\n * @param  {boolean} mediaConstraints.audio Whether to enable audio or not\n * @param  {boolean} mediaConstraints.video Whether to enable video or not\n * @param  {Object} sessionOptions\n * @param  {Object} sessionOptions.callId The id of the call\n * @param  {Object} sessionOptions.sdpSemantics Semantics for Real Time Communication configurations\n * @param  {Object} sessionOptions.turnInfo Contains information required for setting up ICE servers\n * @param  {string} sessionOptions.trickleIceMode What mode to be used for trickle ICE\n * @param  {number} sessionOptions.iceCollectionDelay\n * @param  {number} sessionOptions.maxIceTimeout\n * @param  {Function} sessionOptions.iceCollectionCheck\n * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n * @return {Object} Object\n * @return {string} Object.offerSdp Session Description Protocol for a call offer\n * @return {string} Object.sessionId session identifier\n * @return {Array}  Object.mediaIds call identifiers\n */\nexport function * setupCall (deps, mediaConstraints, sessionOptions) {\n  const { webRTC } = deps\n\n  const log = logManager.getLogger('CALL', sessionOptions.callId)\n  log.info('Setting up local WebRTC portions of call.')\n\n  const {\n    sdpSemantics,\n    turnInfo,\n    trickleIceMode,\n    bandwidth,\n    dscpControls,\n    callId,\n    iceCollectionCheck,\n    iceCollectionDelay,\n    maxIceTimeout,\n    removeBundling\n  } = sessionOptions\n\n  const { medias, error } = yield call(mediaOps.createLocal, webRTC, mediaConstraints)\n\n  if (error) {\n    log.debug('Failed to get media requested for the call.')\n    return { error }\n  }\n\n  // Create a webRTC session to represent this call.\n  const session = yield call([webRTC.sessionManager, 'create'], {\n    peer: {\n      rtcConfig: {\n        sdpSemantics,\n        iceServers: turnInfo.servers\n      },\n      trickleIceMode,\n      iceCollectionCheck,\n      iceCollectionDelay,\n      maxIceTimeout,\n      removeBundling\n    }\n  })\n  log.debug('Created WebRTC Session for Call.', { webrtcSessionId: session.id })\n\n  // Trigger a new action specifying that the session has been created\n  yield put(\n    callActions.sessionCreated(callId, {\n      webrtcSessionId: session.id\n    })\n  )\n\n  // Add the tracks to the session.\n  let screenTracks = []\n  let audioTracks = []\n  let videoTracks = []\n  let allTracks = []\n\n  for (let eachMedia of medias) {\n    let tracks = yield call([eachMedia.media, 'getTracks'])\n    if (eachMedia.type === 'screen') {\n      screenTracks = [...screenTracks, ...tracks]\n    } else if (eachMedia.type === 'audio') {\n      audioTracks = [...audioTracks, ...tracks]\n    } else if (eachMedia.type === 'video') {\n      videoTracks = [...videoTracks, ...tracks]\n    }\n    allTracks = [...allTracks, ...tracks]\n  }\n\n  const dscpTrackMapping = getTrackDscpMapping(audioTracks, videoTracks, screenTracks, dscpControls)\n\n  yield call([session, 'addTracks'], allTracks, dscpTrackMapping)\n\n  /*\n   * Create the local SDP offer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  let offer = yield call([session, 'createOffer'])\n\n  let callConfigOptions = yield select(getOptions)\n  // Run the SDP through the Pipeline before we set it locally.\n  //    This is the \"pre set local\" stage.\n  offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'set',\n    endpoint: 'local',\n    bandwidth\n  })\n  offer = yield call([session, 'setLocalDescription'], offer)\n\n  // Run the SDP through the Pipeline again before we send it to the remote side.\n  //    This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  log.info('Finished setting up local WebRTC portions of call.')\n  return {\n    error: false,\n    offerSdp: newSdp,\n    sessionId: session.id,\n    mediaIds: medias.map(media => media.media.id)\n  }\n}\n\n/**\n * Prepares the WebRTC portions of setting up an incoming call\n *\n * @method setupIncomingCall\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} sessionOptions\n * @param  {string} sessionOptions.callId the local call id\n * @param  {Object} sessionOptions.sdpSemantics semantics for the SDP, contains video and audio constraints\n * @param  {Object} sessionOptions.turnInfo TURN information, contains server info\n * @param  {string} sessionOptions.trickleIceMode the mode to enable for Trickle ICE\n * @param  {number} sessionOptions.iceCollectionDelay\n * @param  {number} sessionOptions.maxIceTimeout\n * @param  {Function} sessionOptions.iceCollectionCheck\n * @param  {Object} sessionOptions.offer an offer containing an SDP\n * @return {string} sessionId an identifier for the session\n */\nexport function * setupIncomingCall (deps, sessionOptions) {\n  const { webRTC } = deps\n  const {\n    sdpSemantics,\n    turnInfo,\n    trickleIceMode,\n    callId,\n    iceCollectionDelay,\n    maxIceTimeout,\n    iceCollectionCheck,\n    removeBundling\n  } = sessionOptions\n  let offer = sessionOptions.offer\n\n  const log = logManager.getLogger('CALL', callId)\n  log.info('Setting up remote WebRTC portions of call.')\n\n  const session = yield call([webRTC.sessionManager, 'create'], {\n    peer: {\n      rtcConfig: {\n        sdpSemantics,\n        iceServers: turnInfo.servers\n      },\n      trickleIceMode,\n      iceCollectionDelay,\n      maxIceTimeout,\n      iceCollectionCheck,\n      removeBundling\n    }\n  })\n\n  // Trigger a new action specifying that the session has been created\n  yield put(\n    callActions.sessionCreated(callId, {\n      webrtcSessionId: session.id\n    })\n  )\n\n  /*\n   * Run the remote SDP offer through any SDP handlers provided, then set it\n   *    as the Session's remote description.\n   * This is the \"pre set remote\" stage.\n   */\n  let callConfigOptions = yield select(getOptions)\n  offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'set',\n    endpoint: 'remote'\n  })\n\n  yield call([session, 'processOffer'], {\n    type: 'offer',\n    sdp: offer.sdp\n  })\n\n  log.info('Finished setting up remote WebRTC portions of call.')\n  return session.id\n}\n\n/**\n * Prepares the WebRTC portions of answering a call\n *\n * @method answerWebrtcSession\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} mediaConstraints Video and audio media constraints\n * @param  {boolean} mediaConstraints.audio Whether to enable audio or not\n * @param  {boolean} mediaConstraints.video Whether to enable video or not\n * @param  {Object} sessionOptions\n * @param  {string} sessionOptions.sessionId the local webrtc session id\n * @param  {string} sessionOptions.callId the local call id\n * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n * @return {Object} Object\n * @return {string} Object.answerSDP Session Description Protocol for answer\n * @return {string} Object.mediaId an identifier for media\n */\nexport function * answerWebrtcSession (deps, mediaConstraints, sessionOptions) {\n  const { webRTC } = deps\n  const { sessionId, bandwidth, dscpControls, callId } = sessionOptions\n\n  const log = logManager.getLogger('CALL', callId)\n  log.info('Setting up local WebRTC portions of call.')\n\n  // Get the webRTC session that represents this call.\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.error(`Error: webRTC session ${sessionId} not found.`)\n    return\n  }\n\n  const { medias, error } = yield call(mediaOps.createLocal, webRTC, mediaConstraints)\n\n  if (error) {\n    log.debug('Failed to get media requested for the call.')\n    return { error }\n  }\n\n  let screenTracks = []\n  let audioTracks = []\n  let videoTracks = []\n  let allTracks = []\n\n  // Add the tracks to the session.\n  for (let eachMedia of medias) {\n    let tracks = yield call([eachMedia.media, 'getTracks'])\n    if (eachMedia.type === 'screen') {\n      screenTracks = [...screenTracks, ...tracks]\n    } else if (eachMedia.type === 'audio') {\n      audioTracks = [...audioTracks, ...tracks]\n    } else if (eachMedia.type === 'video') {\n      videoTracks = [...videoTracks, ...tracks]\n    }\n    allTracks = [...allTracks, ...tracks]\n  }\n\n  const dscpTrackMapping = getTrackDscpMapping(audioTracks, videoTracks, screenTracks, dscpControls)\n\n  yield call([session, 'addTracks'], allTracks, dscpTrackMapping)\n\n  /*\n   * Create the local SDP answer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  let answer = yield call([session, 'createAnswer'])\n  let callConfigOptions = yield select(getOptions)\n  // This is the \"pre set local\" stage.\n  answer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, answer.sdp, {\n    callId,\n    type: answer.type,\n    step: 'set',\n    endpoint: 'local',\n    bandwidth\n  })\n  answer = yield call([session, 'setLocalDescription'], answer)\n\n  // Run the SDP through the Pipeline again before we send it to the remote side.\n  //    This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, answer.sdp, {\n    callId,\n    type: answer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  log.info('Finished setting up local WebRTC portions of call.')\n\n  return {\n    error: false,\n    answerSDP: newSdp,\n    mediaIds: medias.map(media => media.media.id)\n  }\n}\n","import { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\n\n// Libraries.\nimport { call } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALLSTACK')\n\n/**\n * Use the WebRTC stack to create a local Media object.\n * @method createLocal\n * @param  {Object} webRTC           The WebRTC stack.\n * @param  {Object} mediaConstraints The native gUM constraints.\n * @return {Object} Results object, with either `media` or `error` property.\n */\nexport function * createLocal (webRTC, mediaConstraints) {\n  log.debug('Getting media with constraints: ', mediaConstraints)\n\n  // Default return values.\n  const result = { medias: [], error: false }\n\n  try {\n    if (mediaConstraints.screenShare) {\n      let screenShareContraints = {\n        video: mediaConstraints.screenShare\n      }\n\n      let screenShareMedia = yield call([webRTC.media, 'createLocalScreen'], screenShareContraints)\n      result.medias.push({\n        type: 'screen',\n        media: screenShareMedia\n      })\n    }\n\n    if (mediaConstraints.audio) {\n      let audioConstraints = {\n        audio: mediaConstraints.audio\n      }\n      let audioMedia = yield call([webRTC.media, 'createLocal'], audioConstraints)\n      result.medias.push({\n        type: 'audio',\n        media: audioMedia\n      })\n    }\n\n    if (mediaConstraints.video) {\n      let videoConstraints = {\n        video: mediaConstraints.video\n      }\n      let videoMedia = yield call([webRTC.media, 'createLocal'], videoConstraints)\n      result.medias.push({\n        type: 'video',\n        media: videoMedia\n      })\n    }\n  } catch (err) {\n    let errMessage\n    if (err.name === 'OverconstrainedError') {\n      errMessage = `Failed to get media due to constraint: ${err.constraint}.`\n    } else {\n      errMessage = `Failed to get media => Name: ${err.name}; Error Message :${err.message}.`\n    }\n\n    log.info(errMessage)\n\n    // Clean up successfull media object when there is partial media failure.\n    for (let eachMedia of result.medias) {\n      yield call([eachMedia, 'stop'])\n    }\n\n    result.error = new BasicError({\n      message: errMessage,\n      code: callCodes.USER_MEDIA_ERROR\n    })\n  }\n\n  return result\n}\n","// Callstack plugin.\nimport runPipeline from '../sdp/pipeline'\nimport { getTrackDscpMapping } from '../utils/dscp'\n\n// Other Plugins\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\nimport { getOptions, getCallByWebrtcSessionId } from '../../call/interfaceNew/selectors'\n\n// WebRTC operations.\nimport * as mediaOps from './media'\n\n// Libraries\nimport { call, all, select } from 'redux-saga/effects'\nimport { isEmpty, isUndefined } from 'lodash/fp'\n\nconst log = logManager.getLogger('CALLSTACK')\n\n/**\n * Recreates the internal Peer of a Session.\n * @method recreatePeer\n * @param {Object} webRTC    The WebRTC stack.\n * @param {string} sessionId The Session to act on.\n */\nexport function * recreatePeer (webRTC, sessionId) {\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  if (!session) {\n    log.debug(`webRTC session ${sessionId} not found.`)\n    return\n  }\n\n  yield call([session, 'recreatePeer'])\n}\n\n/**\n * Performs the webRTC session functions associated with closing a call\n *\n * @method closeCall\n * @param {Object} webRTC A WebRTC instance\n * @param {string} sessionId the local webRTC session id, used to lookup the session object\n */\nexport function * closeCall (webRTC, sessionId) {\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  if (!session) {\n    log.debug(`webRTC session ${sessionId} not found.`)\n    return\n  }\n\n  yield all(session.localTracks.map(track => call([track, 'cleanup'])))\n\n  yield call([session, 'end'])\n}\n\n/**\n * Performs webRTC portions of receiving an \"offer\" Session Description Protocol\n *\n * @method handleOffer\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {string} offer Session Description protocol offer\n * @param  {string} webrtcSessionId local webrtc session id\n * @param {BandwidthControls} bandwidth bandwidth configurations to use\n * @returns {Object}\n */\nexport function * handleOffer (deps, offer, webrtcSessionId, bandwidth) {\n  const { webRTC } = deps\n  const session = yield call([webRTC.sessionManager, 'get'], webrtcSessionId)\n\n  if (!session) {\n    log.debug(`webRTC session ${webrtcSessionId} not found.`)\n    return\n  }\n\n  const { id: callId } = yield select(getCallByWebrtcSessionId, webrtcSessionId)\n\n  /*\n   * Run the remote SDP offer through any SDP handlers provided, then set it\n   *    as the Session's remote description.\n   * This is the \"pre set remote\" stage.\n   */\n  const callConfigOptions = yield select(getOptions)\n  offer = yield call(runPipeline, callConfigOptions.sdpHandlers, offer, {\n    callId,\n    type: 'offer',\n    step: 'set',\n    endpoint: 'remote'\n  })\n\n  // TODO: Make sure the session is in the correct signaling state to process an offer.\n  const error = yield call([session, 'processOffer'], {\n    type: 'offer',\n    sdp: offer\n  })\n\n  if (error) {\n    return { error }\n  }\n\n  /*\n   * Create the local SDP answer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  let answer = yield call([session, 'createAnswer'])\n\n  // This is the \"pre set local\" stage.\n  answer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, answer.sdp, {\n    callId,\n    type: answer.type,\n    step: 'set',\n    endpoint: 'local',\n    bandwidth\n  })\n  answer = yield call([session, 'setLocalDescription'], answer)\n\n  // Run the SDP through the Pipeline again before we send it to the remote side.\n  //    This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, answer.sdp, {\n    callId,\n    type: answer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  return {\n    answerSDP: newSdp\n  }\n}\n\n/**\n * Performs the webRTC session functions associated with creating an SDP offer\n *\n * @method generateOffer\n * @param {Object} deps\n * @param {Object} deps.webRTC      The WebRTC stack.\n * @param {string} sessionId the local webRTC session id, used to lookup the session object\n * @param {Object} mediaDirections\n * @param {string} mediaDirections.audio mode of audio add to the sdp offer\n * @param {string} mediaDirections.video mode of video add to the sdp offer\n * @param {BandwidthControls} bandwidth bandwidth configurations to use\n * @return {Object} offer object containing a Session Description Protocol\n */\nexport function * generateOffer (deps, sessionId, mediaDirections, bandwidth) {\n  const { webRTC } = deps\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.debug(`webRTC session ${sessionId} not found.`)\n    return\n  }\n\n  const { id: callId } = yield select(getCallByWebrtcSessionId, sessionId)\n\n  /*\n   * Create the local SDP offer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  let offer = yield call([session, 'createOffer'], {\n    mediaDirections\n  })\n  const callConfigOptions = yield select(getOptions)\n  // This is the \"pre set local\" stage.\n  offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'set',\n    endpoint: 'local',\n    bandwidth\n  })\n  offer = yield call([session, 'setLocalDescription'], offer)\n\n  // This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  return { type: offer.type, sdp: newSdp }\n}\n\n/**\n * Performs the webRTC responsibilities for adding media\n *\n * @param {Object} deps\n * @param {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} mediaConstraints Video and audio media constraints\n * @param  {boolean} mediaConstraints.audio Whether to enable audio or not\n * @param  {boolean} mediaConstraints.video Whether to enable video or not\n * @param  {Object} sessionOptions\n * @param  {string} sessionOptions.sessionId the local webrtc session id\n * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n * @return {Object} Object\n * @return {string} Object.sdp An offer in the form of a Session Description Protocol\n * @return {Object} Object.media media object containing tracks\n */\nexport function * webRtcAddMedia (deps, mediaConstraints, sessionOptions) {\n  const { webRTC } = deps\n  const { medias, error } = yield call(mediaOps.createLocal, webRTC, mediaConstraints)\n  const { sessionId, bandwidth, dscpControls } = sessionOptions\n\n  if (error) {\n    return { error }\n  }\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  const { id: callId } = yield select(getCallByWebrtcSessionId, sessionId)\n\n  let screenTracks = []\n  let audioTracks = []\n  let videoTracks = []\n  let allTracks = []\n\n  for (let eachMedia of medias) {\n    let tracks = yield call([eachMedia.media, 'getTracks'])\n    if (eachMedia.type === 'screen') {\n      screenTracks = [...screenTracks, ...tracks]\n    } else if (eachMedia.type === 'audio') {\n      audioTracks = [...audioTracks, ...tracks]\n    } else if (eachMedia.type === 'video') {\n      videoTracks = [...videoTracks, ...tracks]\n    }\n    allTracks = [...allTracks, ...tracks]\n  }\n\n  const dscpTrackMapping = getTrackDscpMapping(audioTracks, videoTracks, screenTracks, dscpControls)\n\n  yield call([session, 'addTracks'], allTracks, dscpTrackMapping)\n\n  /*\n   * Create the local SDP offer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  let offer = yield call([session, 'createOffer'])\n  const callConfigOptions = yield select(getOptions)\n  // This is the \"pre set local\" stage.\n  offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'set',\n    endpoint: 'local',\n    bandwidth\n  })\n  offer = yield call([session, 'setLocalDescription'], offer)\n\n  // This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  let mediaStates = []\n\n  for (let eachMedia of medias) {\n    let mediaState = yield call([eachMedia.media, 'getState'])\n\n    mediaStates = [...mediaStates, mediaState]\n  }\n\n  return { error: false, medias: mediaStates, sdp: newSdp }\n}\n\n/**\n * Performs the webRTC responsibilities for removing media\n *\n * @param {Object} deps\n * @param {Object} deps.webRTC      The WebRTC stack.\n * @param {Object} sessionOptions\n * @param  {string} sessionOptions.sessionId The local webrtc session id\n * @param {Array} sessionOptions.tracks A list of track IDs to remove\n * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n * @return {Object} Object\n * @return {string} Object.sdp An offer in the form of a Session Description Protocol\n */\nexport function * webRtcRemoveMedia (deps, sessionOptions) {\n  const { webRTC } = deps\n  const { sessionId, tracks, bandwidth } = sessionOptions\n\n  // Get the tracks that we want to remove\n  const localTracksToRemove = yield call([webRTC.track, 'getTracks'], tracks)\n  // Get the indexes of undefined tracks.\n  const invalidIndexes = localTracksToRemove.reduce((acc, cur, ind) => {\n    return isUndefined(cur) ? acc.concat(ind) : acc\n  }, [])\n  // Get the track IDs of those indexes.\n  const invalidTracks = invalidIndexes.map(ind => tracks[ind])\n\n  if (!isEmpty(invalidTracks)) {\n    const message = `The following invalid track ids were provided: ${invalidTracks.join(', ')}`\n    log.debug(message)\n    return {\n      error: new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message\n      })\n    }\n  }\n\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  const { id: callId } = yield select(getCallByWebrtcSessionId, sessionId)\n\n  // Removes tracks from peer (Will stop tracks from being sent to remote participant).\n  // Does NOT end the tracks.\n  yield call([session, 'removeTracks'], tracks)\n\n  // TODO: This should only cleanup the removed tracks, shouldn't it?\n  // Ends the tracks.\n  // Clean-up the local tracks.\n  yield all(localTracksToRemove.map(track => call([track, 'cleanup'])))\n\n  /*\n   * Create the local SDP offer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  let offer = yield call([session, 'createOffer'])\n  const callConfigOptions = yield select(getOptions)\n  // This is the \"pre set local\" stage.\n  offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'set',\n    endpoint: 'local',\n    bandwidth\n  })\n  offer = yield call([session, 'setLocalDescription'], offer)\n\n  // This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  return {\n    sdp: newSdp\n  }\n}\n\n/**\n * Performs the webRTC responsibilities for replacing a track\n *\n * @param {Object} webRTC A WebRTC instance\n * @param {Object} params\n * @param {string} params.sessionId The id of the session to replace the track of\n * @param {string} params.trackId The id of the track to replace\n * @param  {Object} params.mediaConstraints Video or audio media constraints\n * @param  {Object|boolean} params.mediaConstraints.audio Audio configs\n * @param  {Object|boolean} params.mediaConstraints.video Video configs\n * @param  {Object|boolean} params.mediaConstraints.screenShare Screen sharing configs\n * @returns {Object} replaceTrackResult The result of the track replace operation\n * @returns {BasicError} [replaceTrackResult.error] Error object\n * @returns {string} newTrackId The ID of the new track that we used to replace the old one.\n * @returns {Object} replaceTrackResult.oldTrackState The state of the old track before it was replaced.\n */\nexport function * webRtcReplaceTrack (webRTC, params) {\n  const { sessionId, trackId, mediaConstraints } = params\n\n  let noOfTruthyTrackTypes = 0\n  let newTrackKind\n  Object.entries(mediaConstraints).forEach(([key, value]) => {\n    if (value) {\n      noOfTruthyTrackTypes++\n      newTrackKind = key\n    }\n  })\n\n  // Need to handle both cases as valid media constraints, for example:\n  //   mediaConstraints = {video: true, audio: false, screenShare: false}\n  //   mediaConstraints = {video: true}\n  if (noOfTruthyTrackTypes !== 1) {\n    // We require exactly one new track to be provided by API.\n    return {\n      error: new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `Require exactly one new track type to be specified. Found ${noOfTruthyTrackTypes} track types.`\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  const oldTrack = session.localTracks.find(track => track.id === trackId)\n\n  if (!oldTrack) {\n    return {\n      error: new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `Old track ${trackId} not found.`\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  const oldTrackState = yield call([oldTrack, 'getState'])\n  const oldTrackKind = oldTrackState.kind\n\n  // At the moment, only video & screen share are compatible tracks that can replace each other.\n  // (That's because screen share is sent as a video track to remote peer)\n  // Otherwise, the exact media type is required in order to allow a track replacement.\n  const compatibleTrackKinds =\n    (oldTrackKind === 'audio' && newTrackKind === 'audio') ||\n    (oldTrackKind === 'video' && ['video', 'screenShare'].includes(newTrackKind))\n\n  if (!compatibleTrackKinds) {\n    return {\n      error: new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `Media constraints incompatible for old track kind: ${oldTrackKind}.`\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  // Create Media\n  const { medias: newMedias, error: createLocalError } = yield call(mediaOps.createLocal, webRTC, mediaConstraints)\n  if (createLocalError) {\n    return { error: createLocalError, newTrackId: undefined }\n  }\n\n  let allNewTracks = []\n\n  // Find the new track that matches the old track we want to replace.\n  for (let eachMedia of newMedias) {\n    let newTracks = yield call([eachMedia.media, 'getTracks'])\n    allNewTracks = [...allNewTracks, ...newTracks]\n  }\n\n  let newTrack\n  for (let track of allNewTracks) {\n    // Matching the track is done this way because we need to yield to getState,\n    //    but we can't yield inside of a `.find(func)` or similar. So iterate\n    //    over the new tracks \"manually\".\n    const state = yield call([track, 'getState'])\n    if (state.kind === oldTrackKind) {\n      newTrack = track\n      break\n    }\n  }\n\n  if (!newTrack) {\n    return {\n      error: new BasicError({\n        code: callCodes.USER_MEDIA_ERROR,\n        message: `${oldTrackKind} track not found`\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  // Replaces the track\n  const replaceTrackError = yield call([session, 'replaceTrack'], newTrack, { trackId })\n  if (replaceTrackError) {\n    // If cannot replace old track, cleanup the newly created track\n    yield call([newTrack, 'cleanup'])\n    return {\n      error: new BasicError({\n        code: callCodes.GENERIC_ERROR,\n        message: replaceTrackError.message\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  // cleanup old track\n  yield call([oldTrack, 'cleanup'])\n\n  return {\n    newTrackId: newTrack.id,\n    oldTrackState\n  }\n}\n","// Other Plugins\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\nimport { getOptions } from '../../call/interfaceNew/selectors'\n\n// Helpers.\nimport { changeDtlsRoleTo } from '../utils'\nimport { hasSameSessionId } from '../utils/sdp'\nimport runPipeline from '../sdp/pipeline'\n\n// Libraries.\nimport { call, select } from 'redux-saga/effects'\n\n/**\n * Compares whether a new remote SDP for a Session has the same SDP session ID\n *    of the previous remote SDP.\n * @method isSameSdpSessionId\n * @param  {Object}  webRTC    The webRTC stack.\n * @param  {string}  sessionId ID of the Session under question.\n * @param  {string}  sdp       New remote SDP to compare the current one with.\n * @return {boolean}\n */\nexport function * isSameSdpSessionId (webRTC, sessionId, sdp) {\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  const currentDesc = yield call([session, 'getRemoteDescription'])\n\n  // TODO: How to act when there isn't a remote SDP set?\n  // Currently: Return falsy to cause a recreate. If there isn't a remote SDP\n  //    set, it's possible we're in an error scenario.\n  if (currentDesc && currentDesc.sdp) {\n    const sameId = yield call(hasSameSessionId, currentDesc.sdp, sdp)\n    return sameId\n  }\n}\n\n/**\n * An answer SDP has been received and should be applied to the Session.\n *\n * This saga is intended to handle all webRTC scenarios where a remote answer\n *    SDP has been received and needs to be added to the Session. At this point\n *    in negotiation, a Session should have been created and a local offer SDP\n *    set. This can be for initial negotiation or for midcall renegotiation, so\n *    the Session may or may not have a \"current remote SDP\" already.\n * This saga will complete the negotiation process, as both ends will have both\n *    an offer and answer SDP set.\n * Responsibilities:\n *    1. Ensure this is a valid operation.\n *        - Session exists, Session is in correct signaling state.\n *    2. Check the answer SDP for abnormal scenarios.\n *        - DTLS role issue.\n *    3. Process the answer SDP via Session's APIs.\n * @method receivedAnswer\n * @param {Object} webRTC An instance of webRTC\n * @param {Object} sessionInfo Session related information for the operation.\n * @param {string} sessionInfo.sessionId ID for the local webRTC Session.\n * @param {string} sessionInfo.answerSdp The received answer SDP.\n * @param {Object} targetCall Information about the call that this Session is associated with.\n * @returns {Object} Error object if any have occurred. Undefined otherwise.\n */\nexport function * receivedAnswer (deps, sessionInfo, targetCall) {\n  const { webRTC } = deps\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.debug(`Processing SDP answer for session ${sessionInfo.sessionId}.`)\n\n  const sessionId = sessionInfo.sessionId\n  let answerSdp = sessionInfo.answerSdp\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.debug(`webRTC session ${sessionId} not found.`)\n    // TODO: Better error.\n    return\n  }\n  // TODO: Ensure Session is in the correct signaling state for an answer SDP.\n\n  const callConfigOptions = yield select(getOptions)\n  let sdpHandlers = callConfigOptions.sdpHandlers\n  /*\n   * If the answer we received has DTLS role of 'actpass', then this is not a\n   *    normal webRTC scenario. An answer SDP cannot have 'actpass' as the role.\n   * It is assumed that the reason for this is a slow start call.\n   */\n  if (answerSdp.includes('a=setup:actpass')) {\n    /*\n     * Change the DTLS role depending on which side of the call the user is.\n     * Change the caller to passive and the callee to active roles, because\n     *    this is how it would be set for a regular call.\n     */\n    const newRole = targetCall.isCaller ? 'passive' : 'active'\n    log.debug(`Received answer SDP has role of actpass. Changing to ${newRole}.`)\n    sdpHandlers = [...sdpHandlers, changeDtlsRoleTo(newRole)]\n  }\n\n  /*\n   * Provide the answer SDP to the Session for \"processing\".\n   * If successful, the webRTC negotiation process is considered complete.\n   */\n  let error\n  try {\n    /*\n     * Run the remote SDP answer through any SDP handlers provided, then set it\n     *    as the Session's remote description.\n     * This is the \"pre set remote\" stage.\n     */\n    answerSdp = yield call(runPipeline, sdpHandlers, answerSdp, {\n      callId: targetCall.id,\n      type: 'answer',\n      step: 'set',\n      endpoint: 'remote'\n    })\n    yield call([session, 'processAnswer'], {\n      type: 'answer',\n      sdp: answerSdp\n    })\n  } catch (err) {\n    // TODO: Better error handling.\n    log.debug(`Failed to process answer: ${err.message}`)\n    let errorInfo\n    if (err.message.includes('The order of m-lines')) {\n      errorInfo = {\n        code: 'call:10',\n        message: 'Failed to receive answer due to media negotiation mismatch.'\n      }\n    } else {\n      errorInfo = {\n        code: callCodes.GENERIC_ERROR,\n        message: `Failed to receive answer: ${err.message}`\n      }\n    }\n    error = new BasicError(errorInfo)\n  }\n\n  // TODO: Handle webRTC errors here.\n\n  return error\n}\n","/**\n * This file is a plugin for the \"clickToCall\" feature. It is meant to connect two specified devices\n * Reference info: https://confluence.genband.com/display/KSDK/Plugins\n */\nimport pluginInterface from './interface'\n\n// Sagas\nimport { clickToCallSaga } from './sagas'\n\n// Events\nimport events from './interface/events'\n\n// Other plugins.\nimport { mapEvents } from '../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\n\n/**\n * clickToCall Plugin (that is implemented using a saga).\n *\n * @method clickToCallImplementation\n * @return {Object} An instance of the \"clickToCall\" plugin.\n */\nexport default function clickToCallImplementation () {\n  function * init () {\n    // Map events\n    yield put(mapEvents(events))\n  }\n\n  return {\n    // Interface Components:\n    name: pluginInterface.name,\n    capabilities: ['clickToCall'],\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer,\n    // Implementation Components\n    sagas: [clickToCallSaga],\n    init\n  }\n}\n","const PREFIX = '@@KANDY/'\n\nexport const CLICK_TO_CALL = PREFIX + 'CLICK_TO_CALL'\nexport const CLICK_TO_CALL_FINISH = PREFIX + 'CLICK_TO_CALL_FINISH'\n","import * as actionTypes from './actionTypes'\n\n/**\n * Represents a request to POST clickToCall data.\n * @method clickToCall\n * @param  {string} callId\n * @param  {string} caller\n * @param  {string} callee\n * @return {Action} A redux action.\n */\nexport function clickToCall (callId, caller, callee) {\n  return {\n    type: actionTypes.CLICK_TO_CALL,\n    payload: {\n      callId,\n      caller,\n      callee\n    }\n  }\n}\n\n/**\n * Represents that a response was received for a clickToCall request.\n * @method clickToCallFinish\n * @param  {string} callId\n * @param  {string} caller\n * @param  {string} callee\n * @param  {number} requestTime time that the request was made at\n * @param  {Boolean}  [error] A parameter to indicate if there was an issue.\n * @return {Action} A redux action.\n */\nexport function clickToCallFinish ({ callId, caller, callee, requestTime, error }) {\n  if (error) {\n    return {\n      type: actionTypes.CLICK_TO_CALL_FINISH,\n      error: true,\n      payload: {\n        error\n      }\n    }\n  } else {\n    return {\n      type: actionTypes.CLICK_TO_CALL_FINISH,\n      error: false,\n      payload: {\n        callId,\n        caller,\n        callee,\n        requestTime\n      }\n    }\n  }\n}\n","/**\n * The clickToCall namespace is used to bridge a call between two specified devices\n *\n * @public\n * @namespace clickToCall\n * @requires clickToCall\n */\nimport * as actions from './actions'\nimport { getAll } from './selectors'\n\nimport { v4 as uuidV4 } from 'uuid'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('CLICKTOCALL')\n\nexport default function api (context) {\n  const clickToCallApi = {\n    /**\n     * Attempts to establish a call between two specified devices\n     *\n     * @public\n     * @memberof clickToCall\n     * @method make\n     * @param  {string} caller A string representing the person making the call\n     * @param  {string} callee A string representing the person receiving the call\n     * @returns {string} callId A unique id representing the call\n     */\n    make: function (caller, callee) {\n      log.debug(API_LOG_TAG + 'clickToCall.make: ', caller, callee)\n      const callId = uuidV4()\n      context.dispatch(actions.clickToCall(callId, caller, callee))\n      return callId\n    },\n    /**\n     * Gets all local clickToCall calls\n     *\n     * @public\n     * @memberof clickToCall\n     * @requires clickToCall\n     * @method get\n     * @returns {Array} A list of clickToCall records, ordered by earliest requestTime\n     */\n    get: function () {\n      log.debug(API_LOG_TAG + 'clickToCall.get')\n      return getAll(context.getState())\n    }\n  }\n\n  return {\n    clickToCall: clickToCallApi\n  }\n}\n","/**\n * ClickToCall has successfully started.\n *\n * @public\n * @memberof clickToCall\n * @requires clickToCall\n * @event clickToCall:start\n * @param {Object} params\n * @param {string} params.callId A unique id representing the call made\n */\nexport const CLICK_TO_CALL_STARTED = 'clickToCall:start'\n\n/**\n * ClickToCall had an error.\n *\n * @public\n * @memberof clickToCall\n * @requires clickToCall\n * @event clickToCall:error\n * @param {Object} params\n * @param {string} params.callId A unique id representing the call made\n * @param {api.BasicError} params.error The Basic error object.\n *\n */\nexport const CLICK_TO_CALL_ERROR = 'clickToCall:error'\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\n/**\n * Helper function for clickToCall error events.\n *\n * @method clickToCallEvent\n * @param  {Object} action\n * @return {Object}\n */\nfunction clickToCallEvent (action) {\n  if (!action.error) {\n    return {\n      type: eventTypes.CLICK_TO_CALL_STARTED,\n      args: {\n        callId: action.payload.callId\n      }\n    }\n  } else {\n    return {\n      type: eventTypes.CLICK_TO_CALL_ERROR,\n      args: {\n        callId: action.payload.callId,\n        error: action.payload\n      }\n    }\n  }\n}\n\nvar events = {}\n\nevents[actionTypes.CLICK_TO_CALL_FINISH] = clickToCallEvent\n\nexport default events\n","import api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a clickToCall plugin.\n * @type {string}\n */\nconst name = 'clickToCall'\n\nexport default {\n  reducer,\n  name,\n  api\n}\n","/**\n * clicktoCall Plugin.\n *\n * Handles the clicktoCall plugin substate. Defines how to communicate back to\n * the Interface (ie. which actions to use).\n * @param  {Object} [state={}] Default state for the reducer is an empty object.\n * @param  {Action} action A dispatched action.\n * @return {Object} state The new example sub-state.\n */\n\nimport { handleActions } from 'redux-actions'\nimport * as actionTypes from './actionTypes'\n\nconst reducers = {}\n\nreducers[actionTypes.CLICK_TO_CALL_FINISH] = {\n  next (state, action) {\n    if (action.error) {\n      return state\n    } else {\n      return state.concat({\n        callId: action.payload.callId,\n        caller: action.payload.caller,\n        callee: action.payload.callee,\n        requestTime: action.payload.requestTime\n      })\n    }\n  }\n}\n\n// clickToCall default state is empty array\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Other Libraries\nimport { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves clickToCall calls stored in state\n *\n * @method getAll\n * @param  {Object} state Redux state.\n * @return {Array}\n */\nexport function getAll (state) {\n  return cloneDeep(state.clickToCall)\n}\n","// clickToCall plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { getConnectionInfo, getPlatform } from '../auth/interface/selectors'\n\n// Libraries.\nimport { put, take, select } from 'redux-saga/effects'\nimport { logManager } from '../logs'\n\n// Other plugins.\nimport request from '../request/effects'\n\n// Error handling\nimport BasicError, { clickToCallCodes } from '../errors'\nimport { platforms } from '../constants'\n\n// Get the logger\nconst log = logManager.getLogger('CLICKTOCALL')\n\nexport function * clickToCallSaga () {\n  while (true) {\n    // wait for CLICK_TO_CALL action dispatch.\n    const action = yield take(actionTypes.CLICK_TO_CALL)\n\n    // ensure both caller and callee are provided in payload.\n    if (!action.payload.caller || !action.payload.callee) {\n      log.info('Missing call particiant information')\n      yield put(\n        actions.clickToCallFinish({\n          payload: {\n            error: new BasicError({\n              message: 'callee or caller were not provided in CLICK_TO_CALL action payload',\n              code: clickToCallCodes.MISSING_ARGS\n            }),\n            callId: action.payload.callId\n          }\n        })\n      )\n      continue\n    }\n\n    const conn = yield select(getConnectionInfo)\n    const platform = yield select(getPlatform)\n\n    const { server, username, requestOptions } = conn\n\n    const version = platform === platforms.UC ? 1 : server.version\n\n    const url = `${server.protocol}://${server.server}:${\n      server.port\n    }/rest/version/${version}/user/${username}/clicktocall`\n\n    const data = {\n      clickToCallRequest: {\n        callingParty: action.payload.caller,\n        calledParty: action.payload.callee\n      }\n    }\n\n    const options = {\n      url,\n      method: 'POST',\n      body: JSON.stringify(data)\n    }\n\n    const requestTime = new Date().getTime()\n    // wait until we get a response from /clicktocall service\n    const response = yield request(options, requestOptions)\n\n    // determine what type of response was received.\n    if (response.error) {\n      yield put(\n        actions.clickToCallFinish({\n          payload: {\n            error: new BasicError({\n              message: response.payload.result.message,\n              code: clickToCallCodes.RESPONSE_ERROR\n            }),\n            callId: action.payload.callId\n          }\n        })\n      )\n    } else {\n      yield put(\n        actions.clickToCallFinish({\n          callId: action.payload.callId,\n          caller: action.payload.caller,\n          callee: action.payload.callee,\n          requestTime\n        })\n      )\n    }\n  }\n}\n","// Libraries.\nimport { mergeAllWith, isArray, isPlainObject } from 'lodash/fp'\nimport paramParser from 'query-string'\nimport { call, put } from 'redux-saga/effects'\n\n/**\n * Deeply merges the values of multiple objects. Objects on the left receive the values from objects on their right.\n * Unlike lodash's default merge behavior this doesn't merge arrays.\n *\n * @name mergeValues\n * @param {...Object} objects - Objects to merge\n * @return {Object} A new object containing the merged values.\n */\nexport function mergeValues (...objects) {\n  return mergeAllWith((leftValue, rightValue) => {\n    // Overwrite the default behavior of lodash's merge for arrays and simply\n    // clobber what's on the left so we don't end up with merged arrays.\n    if (isArray(leftValue)) {\n      return rightValue\n    }\n  }, objects)\n}\n\n/**\n * Utility function to convert an object to a query string.\n *\n * @param {Object} params An object of query parameters to be parsed and converted for use in a URL string\n * @param {Object} [options] Options to be passed to the query-string library\n * * @param {String} [options.arrayFormat] Format in which to compose array values which were passed as query parameters\n */\nexport function toQueryString (params = {}, options = {}) {\n  if (Object.keys(params).length > 0) {\n    const stringifiedParams = paramParser.stringify(params, options)\n    return '?' + stringifiedParams\n  }\n  return ''\n}\n\n/**\n * Higher-order function to auto-restart sagas when they crash.\n * Based on: https://github.com/redux-saga/redux-saga/pull/644#issuecomment-266454875\n * @method autoRestart\n * @param  {Generator} saga The saga to wrap.\n * @return {Generator} Wrapped saga.\n */\nexport function autoRestart (saga) {\n  return function * autoRestarting (...args) {\n    // Only restart the saga if it crashed; avoid restarting it if\n    //      it returned normally.\n    let shouldRestart = false\n    do {\n      try {\n        yield call(saga, ...args)\n        shouldRestart = false\n      } catch (e) {\n        // TODO: Re-add this log line.\n        // Importing the LogManager in this file breaks tests for an unknown\n        //    reason. Should find out why so that we can log in our utils.\n        // log.error(`Unhandled error in saga ${saga.name}.`, e)\n        console.log(`Unhandled error in saga ${saga.name}.`, e)\n        shouldRestart = true\n      }\n    } while (shouldRestart)\n  }\n}\n\n/**\n * Forwards the actions by directly dispatching them.\n * For example, this can be used with a takeEvery effect to grab actions from a channel and dispatch them.\n * @param {Object} action The action to be forwarded.\n * @example\n * const channel = eventChannel(...)\n * yield takeEvery(channel, forwardAction)\n */\nexport function * forwardAction (action) {\n  yield put(action)\n}\n\n/**\n * Ensures that services are in the same format understood by the server regardless,\n * of whether the client provides services as strings or objects.\n * @param {Array} services The list of services requested by the client.\n * @return {Array} A normalized list of services requested by the client.\n */\nexport function normalizeServices (services = []) {\n  return services.map(service => {\n    if (isPlainObject(service) && service.hasOwnProperty('service')) {\n      return service\n    }\n    return { service: service }\n  })\n}\n","/**\n * This wrapper generates error messages from v8n Validation Errors. https://imbrn.github.io/v8n/api/#validationerror\n * They are logged using LogManager as a warning to our customers when they mess up arguments.\n * To use: `import { enums, validation as v8n, parse } from '<relativePath>/common/validation'`.\n * Build up your validation using v8n.string, v8n.number, v8n.schema, enums, etc.\n * Enums is not part of the v8n library, but provided here for ease of use\n * const v8nValidation = v8n.schema({\n      sdpSemantics: enums(['unified-plan', 'plan-b']),\n      iceServers: v8n.array(),\n      iceCollectionDelay: v8n.positive(),\n      serverTurnCredentials: v8n.boolean(),\n      iceCollectionCheck: v8n.optional(v8n.function())\n    })\n * Create a validator like this: `const parseOptions = parse('nameOfArg', v8nValidation)`\n * Run that validator against the actual values: `parseOptions(options)`\n * Returns the input either way and logs errors, in the future will throw errors on invalid data.\n */\nimport { __, concat, flatMap, isArray, isEmpty, join, map, partial } from 'lodash/fp'\nimport { logManager } from '../../logs'\nimport v8n from 'v8n'\n\n// Custom v8n Rules - https://imbrn.github.io/v8n/api/#extend\nv8n.extend({\n  function: () => value => typeof value === 'function'\n})\n\n// EXPORTS / IO\nexport const validation = v8n()\n\n// TODO: Add an enums function to the v8n library\n// Use as such: `prop: enums( [ 'red', 'blue', 'green' ] )\nexport const enums = values => {\n  // Map iteratee isn't just `v8n().exact` due to v8n() returning a new ProxyContext each time\n  const v8nExact = value => v8n().exact(value)\n  const exactValues = map(v8nExact)(values)\n  return v8n().passesAnyOf(...exactValues)\n}\n\n// Name -> v8nRule -> Input -> [String]\nexport const errorMessages = name => v8nRule => input =>\n  flatMap(validationErrorMessages(name))(validationResults(v8nRule)(input))\n\nexport const validationResults = v8nRule => input => v8nRule.testAll(input)\n\n// (Name, v8nRule) -> Input -> IO Input\nexport const parse = (name, v8nRule) => input => {\n  const errors = errorMessages(name)(v8nRule)(input)\n\n  if (isEmpty(errors)) {\n    return input\n  } else {\n    const log = logManager.getLogger('VALIDATION')\n    log.info(prettyPrint(errors)) // This is an IO side-effect\n    return input\n  }\n}\n\n// DEFINITIONS\n\n// Name -> ValidationError -> [String]\n// https://imbrn.github.io/v8n/api/#validationerror\nconst validationErrorMessages = name => validationError => {\n  const startingPath = []\n  return validationErrorMessageHelper(startingPath)(name)(validationError)\n}\n\n// [String] -> Name -> ValidationError -> [String]\nconst validationErrorMessageHelper = acc => name => ({ cause, rule, target, value }) => {\n  const path = concat(acc)(target || name)\n  if (isArray(cause)) {\n    const newVEM = validationErrorMessageHelper(path)(target)\n    return flatMap(newVEM)(cause)\n  } else {\n    return `${join('.')(path)} has value of '${value}', but it should be ${ruleMessage(rule)}`\n  }\n}\n\n// Rule -> String\n// https://imbrn.github.io/v8n/api/#rule\nconst ruleMessage = ({ name, args }) => {\n  switch (name) {\n    case 'schema':\n      return 'Schema'\n\n    case 'passesAnyOf':\n      const enumValues = map(enumName)(args)\n      return `any of '${join(\"', '\")(enumValues)}'`\n\n    case 'between':\n      return `between ${args.join(', ')}`\n\n    default:\n      return `${aOrAn(name)} ${name}`\n  }\n}\n\n// HELPERS\nconst enumName = arg => arg.chain[0].args // v8n internals\nconst prettyPrint = partial(JSON.stringify)([__, null, 4])\n// https://dictionary.cambridge.org/grammar/british-grammar/a-an-and-the\nconst aOrAn = string => (/[aeiou]/i.test(string[0]) ? 'an' : 'a')\n","/**\n * Returns the version of the currently running SDK.\n *\n * It must be used by any plugins (including the factory) as the unique source of truth when it comes to determine the current SDK version.\n * The actual version value is provided by the build process scripts (aka webpack.config.***.js) which simply do a string substitution\n * for the @@ tag below with actual version value.\n */\nexport function getVersion () {\n  return '4.17.0-beta.461'\n}\n","/**\n * This file is a plugin for the \"Config\" plugin\n * Reference info: https://confluence.genband.com/display/KSDK/Plugins\n */\nimport pluginInterface from './interface'\n\n/**\n * Config Plugin\n *\n * @method configImplementation\n * @return {Object} An instance of the \"Config\" plugin.\n */\n\n// yarn lint:docs complains if this isn't defined in a plugin.\n/**\n * @module config\n */\nexport default function configImplementation () {\n  return {\n    // Interface Components:\n    name: pluginInterface.name,\n    capabilities: ['config'],\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer\n  }\n}\n","const PREFIX = '@@KANDY/'\n\nexport const CONFIG_UPDATE = PREFIX + 'CONFIG_UPDATE'\n\nexport const SET_SDP_HANDLERS = PREFIX + 'SET_SDP_HANDLERS'\n","import * as actionTypes from './actionTypes'\nimport { sanitizeSdesFromSdp, modifySdpBandwidth } from '../../callstack/utils'\nimport createCodecRemover from 'fcs/src/js/sdp/codecRemover'\n\n/**\n * Add or update a specific key within the store.config.\n *\n * @param {Object} values The values that will be placed in the store.\n * @param {string} [pluginName] The plugin name of the config being set.\n * @return {Action} action A redux action.\n */\nexport function update (values, pluginName = '') {\n  var payload\n  // Use the plugin name as a substate key, if present.\n  if (pluginName) {\n    payload = {\n      [pluginName]: values\n    }\n  } else {\n    payload = values\n  }\n\n  return {\n    type: actionTypes.CONFIG_UPDATE,\n    payload: payload\n  }\n}\n\n/**\n * Updates the SDP Handlers in the call plugin configs\n *\n * @method setSdpHandlers\n * @param {Array<call.SdpHandlerFunction>} sdpHandlers The list of SDP handler to set in the config.\n * @param {Object}                         options     Options to configure extra sdp handlers\n * @returns {Object} A flux standard action.\n */\nexport function setSdpHandlers (sdpHandlers, options) {\n  /*\n   * Set SDP handlers to be used for every operation:\n   *\n   * 1. Application provided SDP handlers.\n   *\n   * 2. Disable DTLS-SDES crypto method (ie. delete the line) if there's a better\n   *    crypto method enabled. WebRTC only allows one method to be enabled.\n   *    This is needed for interoperability with non-browser endpoints that include\n   *    SDES as a fallback method.\n   *\n   * 3. [optional] Disable H264 Codecs for video calls, used to reduce SDP size\n   *\n   * 4. Modify sdp and add bandwidth limits on it if bandwidth controls are provided.\n   */\n  if (options.removeH264Codecs) {\n    sdpHandlers.push(createCodecRemover(['H264']))\n  }\n  sdpHandlers.push(sanitizeSdesFromSdp)\n  sdpHandlers.push(modifySdpBandwidth)\n\n  return {\n    type: actionTypes.SET_SDP_HANDLERS,\n    payload: {\n      sdpHandlers\n    }\n  }\n}\n","import * as actions from './actions'\nimport { getConfiguration } from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('CONFIG')\n\nexport default function api (context) {\n  const configApi = {\n    /**\n     * Gets the current configuration Object. This is the object that is initially set as part of SDK creation using 'create' function.\n     *\n     * @public\n     * @memberof api\n     * @requires config\n     * @method getConfig\n     * @returns {Object} A configuration Object.\n     */\n    getConfig: function () {\n      log.debug(API_LOG_TAG + 'getConfig')\n      return getConfiguration(context.getState())\n    },\n\n    /**\n     * Update values in the global Config section of the store. The values pertain to the SDK configuration.\n     *\n     * @public\n     * @static\n     * @memberof api\n     * @requires config\n     * @method updateConfig\n     * @param {Object} newConfigValues Key-value pairs that will be placed into the store. See {@link config} for details on what key-value pairs are available for use.\n     */\n    updateConfig: function (newConfigValues) {\n      log.debug(API_LOG_TAG + 'updateConfig: ', newConfigValues)\n      context.dispatch(actions.update(newConfigValues))\n    }\n  }\n\n  return configApi\n}\n","import api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a Config plugin.\n * @type {string}\n */\nconst name = 'config'\n\nexport default {\n  reducer,\n  name,\n  api\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { merge } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.CONFIG_UPDATE] = {\n  next (state, action) {\n    return merge(state, action.payload)\n  }\n}\n\nreducers[actionTypes.SET_SDP_HANDLERS] = {\n  next (state, action) {\n    return {\n      ...state,\n      call: {\n        ...state.call,\n        sdpHandlers: action.payload.sdpHandlers\n      }\n    }\n  }\n}\n\n// Config default state is an empty Object\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves configuration Object stored in state\n *\n * @method getConfiguration\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getConfiguration (state) {\n  return cloneDeep(state.config)\n}\n","// Connectivity plugin.\nimport { name, reducer, api } from '../interface'\nimport eventsMap from '../interface/events'\nimport { wsConnectFlow } from './sagas'\n\n// Other plugins.\nimport { update as updateConfig } from '../../config/interface/actions'\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { connCheckResponsibility } from '../../constants'\n\n/**\n * Base Connectivity plugin factory.\n * Responsible for handling websockets.\n * @method baseConnectivity\n * @param  {Object} [options={}] Connectivity configs. See above.\n * @return {Object} Plugin - A connectivity plugin.\n */\nexport default function baseConnectivity (options) {\n  // For backwards compatibility, convert the old style to the new style.\n  if (typeof options.method === 'string') {\n    let method = options.method\n    options.method = {\n      type: method,\n      // In both old scenarios, the client is responsible.\n      responsibleParty: connCheckResponsibility.CLIENT\n    }\n  }\n\n  function * init () {\n    yield put(updateConfig(options, name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  return {\n    sagas: [wsConnectFlow],\n    init,\n    name,\n    reducer,\n    api\n  }\n}\n","// Connectivity plugin.\nimport { openWebsocket, closeWebsocket, wsEmitter } from './websocket'\nimport { getConnectivityConfig, getPingInterval, getCheckConnectivity } from '../interface/selectors'\nimport * as actionTypes from '../interface/actionTypes'\nimport * as actions from '../interface/actions'\n\n// Other plugins.\nimport { getConnectionInfo } from '../../auth/interface/selectors'\nimport { getSubscriptionInfo } from '../../subscription/interface/selectors'\n\n// Libraries.\nimport { takeEvery, delay, call, put, fork, cancel, actionChannel, race, select, take } from 'redux-saga/effects'\n\nimport { logManager } from '../../logs'\n\n// Constants\nimport { platforms, connCheckMethods, connCheckResponsibility } from '../../constants'\n\n// Get the logger\nconst log = logManager.getLogger('CONNECTIVITY')\n\nexport function * wsConnectFlow () {\n  log.info('Creating channel for handling websocket actions ...')\n  const chan = yield actionChannel(actionTypes.WS_ATTEMPT_CONNECT)\n  log.info('Channel successfuly created.')\n  yield takeEvery(chan, websocketLifecycle)\n}\n\n/**\n * Saga that handles a websocket over its lifecycle.\n * @method websocketLifecycle\n * @param  {Object} wsConnectAction\n */\nexport function * websocketLifecycle (wsConnectAction) {\n  const wsInfo = wsConnectAction.payload\n  const { platform, isReconnect } = wsConnectAction.meta\n\n  log.info(`Connecting to websocket on platform: ${platform} ...`)\n  // Try to open the websocket.\n  let websocket = yield call(connectWebsocket, wsInfo, platform)\n\n  // Append information to the websocket, so that its accessible elsewhere.\n  // TODO: Remove this and replace with proper redux state storage.\n  websocket.kandy = yield select(getConnectivityConfig)\n\n  websocket.kandy.wsInfo = wsInfo\n  websocket.kandy.platform = platform\n\n  // If the websocket didn't open, dispatch the error and stop here.\n  if (websocket.error) {\n    if (isReconnect) {\n      yield put(actions.wsReconnectFailed(undefined, platform))\n      return\n    } else {\n      yield put(actions.wsConnectFinished(new Error(websocket.message), platform))\n      return\n    }\n  }\n\n  // set last contact in both cases to be now\n  websocket.kandy.lastContact = Date.now()\n\n  let emitTask = yield fork(wsEmitter, websocket, platform)\n\n  // determine which pingFlow is appropriate\n  let pingFlow\n  if (websocket.kandy.method.responsibleParty === connCheckResponsibility.SERVER) {\n    log.debug(`Starting a serverPing flow on ${platform} ...`)\n    pingFlow = yield fork(serverPingFlow, websocket, platform)\n  } else {\n    log.debug(`Starting a clientPing flow on ${platform} ...`)\n    pingFlow = yield fork(clientPingFlow, websocket, platform)\n  }\n\n  // Dispatch the finish action, to notify that the websocket is connected.\n  yield put(actions.wsConnectFinished(websocket, platform))\n\n  // Redux-saga take() pattern.\n  // Take end of lifecycle WS actions for this platform.\n  function closeWebsocketPattern (action) {\n    return (\n      (action.type === actionTypes.WS_DISCONNECT || action.type === actionTypes.LOST_CONNECTION) &&\n      action.meta.platform === platform\n    )\n  }\n\n  // Wait for a disconnect or lost connection action.\n  const action = yield take(closeWebsocketPattern)\n  log.debug(`Cancelling outstanding tasks upon receiving action: ${action.type}`)\n\n  // Whether we're disconnecting or have lost connection,\n  //      we want to cancel these tasks either way.\n  yield cancel([emitTask, pingFlow])\n\n  if (action.type === actionTypes.WS_DISCONNECT) {\n    // If we're disconnecting, close the websocket to end it's lifecycle.\n    log.debug('Closing websocket connection ...')\n    yield call(closeWebsocket, websocket)\n    yield put(actions.wsDisconnectFinished(undefined, platform))\n    log.info('Successfully closed websocket connection.')\n  } else {\n    // If this is a Link websocket, we need to ensure the URL is using the\n    //     \"latest\" access token from state.\n    if (wsConnectAction.meta.platform === platforms.UC) {\n      log.info('Updating access token ...')\n      let { notificationChannel } = yield select(getSubscriptionInfo)\n      let { accessToken, oauthToken } = yield select(getConnectionInfo)\n      wsInfo.url = notificationChannel\n      if (oauthToken && !accessToken) {\n        wsInfo.params = {\n          access_token: oauthToken\n        }\n      } else {\n        wsInfo.params = {\n          token: accessToken\n        }\n      }\n    } else if (wsConnectAction.meta.platform === platforms.LINK) {\n      let { bearerAccessToken } = yield select(getConnectionInfo)\n      wsInfo.params = {\n        token: bearerAccessToken\n      }\n    }\n\n    // If we've lost connection, re-dispatch the initial action, so that we can\n    //      start the lifecycle over.\n    log.debug('Attempting to reconnect to websocket ...')\n    yield put(actions.wsAttemptConnect(wsInfo, wsConnectAction.meta.platform, true))\n  }\n}\n\n/**\n * if we receive a server ping we want to respond with a pong,\n * if there is none we want to check to see if its been too long since the server last pinged us and if it has been then reconnect,\n * otherwise we just want to increment the time since the last ping\n * @param {Object} ws a websocket connected to the backend\n * @return {Object} yields a Flux standard action\n */\nexport function * serverPingFlow (ws) {\n  const { lastContact, platform, maxMissedPings, autoReconnect } = ws.kandy\n  let timeOfLastPing = Date.now()\n\n  while (true) {\n    let pingInterval = yield select(getPingInterval)\n    pingInterval = typeof pingInterval !== 'undefined' ? pingInterval : 120000\n    const maxIdleDuration = pingInterval * maxMissedPings\n    log.debug(`serverPing: Using ping interval: ${pingInterval} with maximum idle duration: ${maxIdleDuration}`)\n\n    // wait for incoming server pings or disconnect actions on an interval\n    const { serverPing, disconnect } = yield race({\n      expiry: delay(pingInterval),\n      serverPing: take(actionTypes.RECEIVE_SERVER_PING),\n      disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n    })\n\n    // is disconnect action received then exit\n    if (disconnect) {\n      log.debug('Got disconnect action. Exiting from serverPing flow ...')\n      break\n    }\n\n    if (serverPing) {\n      // server sent us a ping so reset the timeSinceLastPing\n      timeOfLastPing = Date.now()\n\n      // pingInterval is stored in milliseconds but comes in as seconds so convert\n      const pingIntervalMillis = serverPing.payload.connCheck.interval * 1000\n      // Prevent firing actions if pingInterval hasn't changed\n      if (pingIntervalMillis !== pingInterval) {\n        yield put(actions.changePingInterval(pingIntervalMillis, platform))\n      }\n\n      const message = { connAck: {} }\n      log.debug(\n        `Received a server ping which uses interval: ${pingIntervalMillis} ms. ${platform} is replying with message: ${message}`\n      )\n      const error = _sendWSMessage(ws, JSON.stringify(message))\n\n      // if the pong websocket message has an error then try to reconnect\n      if (error) {\n        log.error(`Got error when attempting to reply: ${error.message}`)\n        if (autoReconnect) {\n          log.info('Trying to auto reconnect ...')\n          yield put(actions.lostConnection(undefined, platform))\n        }\n        break\n      }\n    } else {\n      if (Date.now() - timeOfLastPing >= maxIdleDuration) {\n        log.warn('Closing websocket due to inactivity. (have not received pong from server)', platform)\n\n        // try to reconnect or exit\n        if (autoReconnect) {\n          log.debug(`${platform} is attempting to auto reconnect ...`)\n          yield put(actions.lostConnection(undefined, platform))\n        }\n        break\n      } else {\n        log.debug(`${platform} websocket last contact: ${lastContact}. Reconnect after ${maxIdleDuration}.`)\n      }\n    }\n  }\n}\n\n/**\n * This flow is responsible for handling keepAlive and pingPong methods for client,\n * if keepAlive is used the client simply sends the keepAlive message to the websocket after waiting the pingInterval\n * if pingPong is used the client is responsible for pinging the server and listening for server \"pong\" responses via the websocket\n * the client will then determine if too much time has passed and attempt to reconnect if its not receiving server pongs or if an error occurs\n * @param {Object} ws a websocket connected to the backend\n * @return {Object} yields a Flux standard action\n */\nexport function * clientPingFlow (ws) {\n  const { lastContact, platform, maxMissedPings, autoReconnect } = ws.kandy\n  const { checkConnectivity, method } = yield select(getConnectivityConfig)\n\n  let timeOfLastPong = Date.now()\n  let message = ''\n  let shouldCheck\n\n  while (true) {\n    // If the flag was explicitly set in state, prefer that over the config.\n    shouldCheck = yield select(getCheckConnectivity)\n    shouldCheck = typeof shouldCheck !== 'undefined' ? shouldCheck : checkConnectivity\n\n    const { pingInterval } = yield select(getConnectivityConfig)\n    const maxIdleDuration = pingInterval * maxMissedPings\n    const intervalInSeconds = pingInterval / 1000\n\n    if (shouldCheck) {\n      if (method.type === connCheckMethods.PING_PONG) {\n        message = { connCheck: { interval: intervalInSeconds } }\n      } else if (method.type === connCheckMethods.KEEP_ALIVE) {\n        message = { message_type: 'ping' }\n      } else {\n        log.error(`Invalid connectivity method: ${method}`)\n        break\n      }\n\n      log.debug(`${platform} is sending a ${method.type} every ${intervalInSeconds} sec.`)\n\n      const error = _sendWSMessage(ws, JSON.stringify(message))\n      if (error) {\n        log.error('Exception in clientPing flow: ' + error.message)\n        if (autoReconnect) {\n          log.debug(`${platform} is attempting to auto reconnect ...`)\n          yield put(actions.lostConnection(undefined, platform))\n        }\n        break\n      }\n    } else {\n      log.debug('Set to not check websocket connectivity. Waiting for connectivity status change ...')\n\n      // If we shouldn't ping, wait until we receive a trigger to (maybe) ping.\n      const shouldCheckConnectivity = yield take(\n        action => action.type === 'CHANGE_CONNECTIVITY_CHECKING' && action.payload\n      )\n      log.debug(`Connectivity check setting changed. Check connectivity?: ${shouldCheckConnectivity}`)\n      continue\n    }\n\n    const delayStartTime = Date.now()\n    // Wait for either the ping interval, a disconnect or a pong from the server\n    let { disconnect, serverPong } = yield race({\n      expiry: delay(pingInterval),\n      serverPong: take(actionTypes.RECEIVE_SERVER_PONG),\n      disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n    })\n\n    // If we receive a serverPong, we will not have waited the full pingInterval duration.\n    //    Determine how long we were waiting for, so that we know how long to wait (again)\n    //    to fulfill the full pingInterval duration (before restarting the ping loop).\n    const timeElapsed = Date.now() - delayStartTime\n\n    // If we received a disconnect action, stop the pings and exit.\n    if (disconnect) {\n      log.debug('Got disconnect action. Exiting from clientPing flow ...')\n      break\n    }\n\n    if (method.type === connCheckMethods.PING_PONG) {\n      if (serverPong) {\n        // we received a pong, wait pingInterval to send another ping\n        timeOfLastPong = Date.now()\n\n        const timeUntilNextPing = pingInterval - timeElapsed\n        let { disconnect } = yield race({\n          expiry: delay(timeUntilNextPing),\n          disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n        })\n        // If we received a disconnect action, stop the pings and exit.\n        if (disconnect) {\n          log.debug('Got disconnect action. Exiting from clientPing flow ...')\n          break\n        }\n      } else {\n        if (Date.now() - timeOfLastPong >= maxIdleDuration) {\n          log.warn('Closing websocket due to inactivity. (have not received pong from server)', platform)\n\n          // its been too long since the last pong, attempt to reconnect or exit\n          if (autoReconnect) {\n            yield put(actions.lostConnection(undefined, platform))\n          }\n\n          break\n        } else {\n          log.debug(`${platform} websocket last contact: ${lastContact}. Reconnect after ${maxIdleDuration}.`)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Generic Websocket message that takes a websocket and a message and sends it\n * @param  {Object} ws  websocket\n * @return {Object}     Error object\n */\nfunction _sendWSMessage (ws, message) {\n  try {\n    if (ws && ws.readyState === 1) {\n      ws.send(message)\n    } else {\n      throw new Error('websocket was not in readyState')\n    }\n  } catch (e) {\n    return e\n  }\n}\n\n/**\n * Helper function for connecting to a websocket.\n * Attempts to connect a specified number of times before returning an error.\n * Includes a delay in between attempts, determined by configs.\n * @method connectWebsocket\n * @param  {Object} wsInfo\n * @return {Websocket|Object}  Either a connected websocket or an error object.\n */\nexport function * connectWebsocket (wsInfo, platform) {\n  let configs = yield select(getConnectivityConfig)\n  let connectionAttempt = 0\n  let delayTime = 0\n  let websocket\n\n  // Redux-saga take() pattern.\n  // Take disconnect websocket action for this platform.\n  function disconnectWebsocketPattern (action) {\n    return action.type === actionTypes.WS_DISCONNECT && action.meta.platform === platform\n  }\n\n  // If no limit is set, we will continually attempt to reconnect.\n  if (!configs.reconnectLimit) {\n    log.debug('No connectivity reconnect limit set.')\n  }\n\n  while (connectionAttempt < configs.reconnectLimit || !configs.reconnectLimit) {\n    try {\n      // Try to open the websocket. Blocking call.\n      websocket = yield call(openWebsocket, wsInfo)\n      log.info(`Successfully connected to websocket on: ${platform}`)\n      break\n    } catch (err) {\n      connectionAttempt++\n      websocket = err\n      log.debug(\n        `Failed to connect to websocket on ${platform}. (Attempt #${connectionAttempt}). Message: ${websocket.message}.`\n      )\n\n      // If we want to try to reconnect, delay a certain about of time before trying.\n      if (connectionAttempt < configs.reconnectLimit || !configs.reconnectLimit) {\n        // Increase the delay time if we're not at the limit.\n        if (delayTime !== configs.reconnectTimeLimit) {\n          delayTime = configs.reconnectDelay * Math.pow(configs.reconnectTimeMultiplier, connectionAttempt - 1)\n          delayTime = delayTime < configs.reconnectTimeLimit ? delayTime : configs.reconnectTimeLimit\n        }\n        log.debug(`Websocket reconnect attempt after ${delayTime} ms on ${platform}`)\n\n        // Wait for either the delay period or a trigger to stop connection attempts.\n        let { disconnect } = yield race({\n          delay: delay(delayTime),\n          disconnect: take(disconnectWebsocketPattern)\n        })\n\n        if (disconnect) {\n          break\n        }\n      } else {\n        log.debug(`Stopping websocket connection attempts on ${platform}.`)\n      }\n    }\n  }\n\n  // Return either the websocket or the latest error.\n  return websocket\n}\n","import { wsClosed, wsError, receiveServerPing, receiveServerPong } from '../interface/actions'\nimport { eventChannel, END, buffers } from 'redux-saga'\nimport { take, put, call } from 'redux-saga/effects'\n\nimport { toQueryString } from '../../common/utils'\n\nimport { websocketNotification } from '../../notifications/interface/actions'\n\nconst INITIAL_BUFFER_SIZE = 50\n\n/**\n * Create a new websocket.\n * @method openWebsocket\n * @param  {Object} options Websocket configuration options.\n * @param {string} options.protocol Websocket protocol to use.\n * @param {string} options.server Websocket hostname.\n * @param {string} options.port Websocket port to use.\n * @param {string} options.url Websocket notification channel.\n * @param {Object} options.params A list of URL params to attach to the websocket.\n * @return {WebSocket} ws Newly connected websocket.\n */\nexport function openWebsocket (options) {\n  // Create the websocket.\n  let ws = new WebSocket(\n    `${options.protocol}://${options.server}:${options.port}${options.url}` + toQueryString(options.params)\n  )\n\n  // Use a promise to wait for the first message from the websocket.\n  // This indicates whether the WS opened successfully or not.\n  let validateWS = new Promise((resolve, reject) => {\n    const onOpen = function () {\n      ws.onopen = null\n      ws.onerror = null\n      resolve(ws)\n    }\n    const onError = function () {\n      ws.onopen = null\n      ws.onerror = null\n\n      // TODO: Fix this?\n      /* eslint-disable-next-line prefer-promise-reject-errors */\n      reject({\n        error: true,\n        message: 'Could not connect to websocket. Received error on open.'\n      })\n    }\n    ws.onopen = onOpen\n    ws.onerror = onError\n  })\n  return validateWS\n}\n\n/**\n * Clean-up a provided websocket.\n * @method closeWebsocket\n * @param  {Websocket} ws Websocket to be cleaned-up.\n * @return {Websocket} ws The websocket after being cleaned.\n */\nexport function closeWebsocket (ws) {\n  if (ws.close) {\n    ws.close()\n  } else {\n    ws.onclose = null\n  }\n\n  ws.onmessage = null\n  ws.onopen = null\n  ws.onerror = null\n}\n\n/**\n * Create an event channel for a given websocket\n * @param  {WebSocket} ws       The websocket to make an event channel for.\n * @param {string} [platform=link]    The backend platform associated with the websocket.\n * @return {EventChannel}              The event channel corresponding to the WebSocket\n */\nfunction createWsChannel (ws, platform) {\n  // this function handles server messages\n  return eventChannel(emit => {\n    // Define handlers\n    ws.onmessage = message => {\n      // Mark this websocket are being connected as of now.\n      ws.kandy.lastContact = Date.now()\n\n      var data = JSON.parse(message.data)\n      if (data.connCheck) {\n        // Handle CPaaS server pings\n        emit(receiveServerPing(data, platform))\n      } else if (data.connAck) {\n        // Handle CPaaS server pongs\n        emit(receiveServerPong(data, platform))\n      } else {\n        emit(websocketNotification(data, platform))\n      }\n    }\n    ws.onclose = data => {\n      emit(wsClosed(data, platform))\n      emit(END)\n    }\n    ws.onerror = err => {\n      emit(wsError(new Error(err), platform))\n      emit(END)\n    }\n\n    return () => closeWebsocket(ws)\n  }, buffers.expanding(INITIAL_BUFFER_SIZE))\n}\n\n/**\n * Saga worker for creating a websocket and emitting its events\n * @param {Object} ws configuration options.\n * @param {string} [platform=link]    The backend platform associated with the websocket.\n * @return {Generator}\n */\nexport function * wsEmitter (ws, platform) {\n  var wsChannel = yield call(createWsChannel, ws, platform)\n  while (true) {\n    const action = yield take(wsChannel)\n    yield put(action)\n  }\n}\n","const prefix = '@@KANDY/CONN/'\n\n// Actions to tell connectivity plugin what to do\nexport const WS_ATTEMPT_CONNECT = prefix + 'WS_ATTEMPT_CONNECT'\nexport const WS_CONNECT_FINISHED = prefix + 'WS_CONNECT_FINISHED'\nexport const WS_DISCONNECT = prefix + 'WS_DISCONNECT'\nexport const WS_DISCONNECT_FINISHED = prefix + 'WS_DISCONNECT_FINISHED'\nexport const WS_RECONNECT_FAILED = prefix + 'WS_RECONNECT_FAILED'\n\n// actions for hooking into connectivity plugin behaviour\nexport const WS_CLOSED = prefix + 'WS_CLOSED'\nexport const WS_ERROR = prefix + 'WS_ERROR'\n\nexport const LOST_CONNECTION = prefix + 'LOST_CONNECTION'\n\nexport const RECEIVE_SERVER_PING = prefix + 'RECEIVE_SERVER_PING'\nexport const RECEIVE_SERVER_PONG = prefix + 'RECEIVE_SERVER_PONG'\n\nexport const CHANGE_CONNECTIVITY_CHECKING = prefix + 'CHANGE_CONNECTIVITY_CHECKING'\nexport const CHANGE_PING_INTERVAL = prefix + 'CHANGE_PING_INTERVAL'\n","import * as actionTypes from './actionTypes'\n// Constants\nimport { platforms } from '../../constants'\n\n/**\n * @param {string} type\n */\nfunction createWsAction (type) {\n  /**\n   * @param {any=} payload\n   * @param {string=} platform\n   * @param {boolean=} [isReconnect] flag to signify if we are reconnecting or not.\n   */\n  function action (payload, platform = platforms.LINK, isReconnect = false) {\n    return {\n      type,\n      // TODO: This must check for basic error eventually instead.\n      error: payload instanceof Error,\n      payload,\n      meta: { platform, isReconnect }\n    }\n  }\n  return action\n}\n\nexport const wsAttemptConnect = createWsAction(actionTypes.WS_ATTEMPT_CONNECT)\nexport const wsDisconnect = createWsAction(actionTypes.WS_DISCONNECT)\nexport const wsConnectFinished = createWsAction(actionTypes.WS_CONNECT_FINISHED)\nexport const wsDisconnectFinished = createWsAction(actionTypes.WS_DISCONNECT_FINISHED)\nexport const wsReconnectFailed = createWsAction(actionTypes.WS_RECONNECT_FAILED)\n\nexport const wsClosed = createWsAction(actionTypes.WS_CLOSED)\nexport const wsError = createWsAction(actionTypes.WS_ERROR)\n\nexport const lostConnection = createWsAction(actionTypes.LOST_CONNECTION)\n\nexport const receiveServerPing = createWsAction(actionTypes.RECEIVE_SERVER_PING)\nexport const receiveServerPong = createWsAction(actionTypes.RECEIVE_SERVER_PONG)\n\nexport const changeConnectivityChecking = createWsAction(actionTypes.CHANGE_CONNECTIVITY_CHECKING)\nexport const changePingInterval = createWsAction(actionTypes.CHANGE_PING_INTERVAL)\n","// Constants\nimport { platforms } from '../../constants'\n\n/**\n * The 'connection' namespace is used to connect and maintain connections between\n * the SDK and one or more backend servers.\n *\n * @public\n * @namespace connection\n */\n\nimport { changeConnectivityChecking } from './actions'\nimport { getConnectionState } from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('CONNECTIVITY')\n\nexport default function api ({ dispatch, getState }) {\n  const connectivityApi = {\n    /**\n     * Get the state of the websocket.\n     * @public\n     * @memberof connection\n     * @method getSocketState\n     * @param {string} [platform='link'] Backend platform for which to request the websocket's state.\n     */\n    getSocketState (platform = platforms.LINK) {\n      log.debug(API_LOG_TAG + 'connection.getSocketState: ', platform)\n      return getConnectionState(getState(), platform)\n    },\n\n    /**\n     * Enables or disables connectivity checking.\n     * @public\n     * @memberof connection\n     * @method enableConnectivityChecking\n     * @param {boolean} enable Enable connectivity checking.\n     */\n    enableConnectivityChecking (enable) {\n      log.debug(API_LOG_TAG + 'connection.enableConnectivityChecking: ', enable)\n      dispatch(changeConnectivityChecking(enable))\n    }\n  }\n  return { connection: connectivityApi }\n}\n","import { wsAttemptConnect, wsDisconnect } from './actions'\nimport { WS_CONNECT_FINISHED, WS_DISCONNECT_FINISHED, WS_ERROR } from './actionTypes'\nimport { put, take } from 'redux-saga/effects'\n\n/**\n * Custom redux-saga effect.\n * Wraps \"communication\" between the connectivity plugin and another plugin\n *     for connecting to a websocket.\n * @method connectWebsocket\n * @param {Object} websocketInfo Information needed to create the websocket.\n * @param {string} websocketInfo.protocol\n * @param {string} websocketInfo.server\n * @param {string} websocketInfo.port\n * @param {string} websocketInfo.url\n * @param {Object} [websocketInfo.params]\n * @param {string} platform The backend platform being connected to.\n * @return {Object} The response action of type `WS_CONNECT_FINISHED`.\n */\nexport function * connectWebsocket (websocketInfo, platform) {\n  // Dispatch the action that triggers a saga to connect to a websocket.\n  yield put(wsAttemptConnect(websocketInfo, platform))\n\n  // Wait for the action that signifies the result of the above action.\n  const responseAction = yield take(action => {\n    return action.type === WS_CONNECT_FINISHED && action.meta.platform === platform\n  })\n\n  // Return the response.\n  return responseAction\n}\n\n/**\n * Effect for disconnecting a websocket to a platform.\n * @method disconnectWebsocket\n * @param  {Object} payload\n * @param  {string} platform The backend platform being disconnected from.\n * @return {Object} The response action of type `WS_DISCONNECT_FINISHED`.\n */\nexport function * disconnectWebsocket (payload, platform) {\n  // Dispatch the action that triggers a saga to disconnect the websocket.\n  yield put(wsDisconnect(payload, platform))\n\n  // Wait for the action that signifies the result of the above action.\n  const responseAction = yield take(action => {\n    return (action.type === WS_DISCONNECT_FINISHED || action.type === WS_ERROR) && action.meta.platform === platform\n  })\n\n  // Return the response.\n  return responseAction\n}\n","/**\n * The websocket to the server has changed state.\n *\n * @public\n * @memberof connection\n * @event ws:change\n * @param {Object} params\n * @param {string} params.platform The platform\n */\nexport const WS_CHANGE = 'ws:change'\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nvar events = {}\n\nevents[actionTypes.WS_CONNECT_FINISHED] = function (action) {\n  if (action.error) {\n    // TODO: Handle the error case?\n  } else {\n    return {\n      type: eventTypes.WS_CHANGE,\n      args: { platform: action.meta.platform }\n    }\n  }\n}\n\nevents[actionTypes.LOST_CONNECTION] = function (action) {\n  return {\n    type: eventTypes.WS_CHANGE,\n    args: { platform: action.meta.platform }\n  }\n}\n// TODO: Differentiate between types of disconnects?\nevents[actionTypes.WS_DISCONNECT_FINISHED] = events[actionTypes.LOST_CONNECTION]\n\n// TODO: Does an app care that we're trying to connect/reconnect?\nevents[actionTypes.WS_ATTEMPT_CONNECT] = function (action) {\n  return {\n    type: eventTypes.WS_CHANGE,\n    args: { platform: action.meta.platform }\n  }\n}\n\nexport default events\n","import name from './name'\nimport api from './api'\nimport reducer from './reducers'\n\nexport { name, api, reducer }\n","const name = 'connectivity'\nexport default name\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { omit } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.WS_ATTEMPT_CONNECT] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_RECONNECT_FAILED] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_CONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: true,\n        method: action.payload.kandy.method,\n        platform: action.meta.platform,\n        ...omit('checkConnectivity', action.payload.kandy)\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.LOST_CONNECTION] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_DISCONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_ERROR] = {\n  next (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\n/*\n  Accepts a boolean payload for checkConnectivity\n */\nreducers[actionTypes.CHANGE_CONNECTIVITY_CHECKING] = {\n  next (state, action) {\n    return {\n      ...state,\n      checkConnectivity: action.payload\n    }\n  }\n}\n\n/*\n  Accepts a payload for pingInterval in MILLISECONDS\n */\nreducers[actionTypes.CHANGE_PING_INTERVAL] = {\n  next (state, action) {\n    return {\n      ...state,\n      pingInterval: action.payload\n    }\n  }\n}\n\n/**\n * Connectivity Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n */\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import { cloneDeep } from 'lodash/fp'\nimport name from './name'\n\nexport function getConnectionState (state, platform) {\n  if (state[name][platform]) {\n    return cloneDeep(state[name][platform])\n  } else {\n    return new Error('No sockets are up. Have you attempted to connect?')\n  }\n}\n\n/**\n * Retrieves the config options provided by the connectivity plugin.\n * @method getConnectivityConfig\n * @return {Object}\n */\nexport function getConnectivityConfig (state) {\n  return state.config[name]\n}\n\n/**\n * Retrieves the pingInterval property from state\n * @method getPingInterval\n * @param {Object} state Redux state.\n * @return {Object}\n */\nexport function getPingInterval (state) {\n  return state[name].pingInterval\n}\n\n/**\n * Retrieves the checkConnectivity property from state\n * @method getCheckConnectivity\n * @param {Object} state Redux state.\n * @return {Object}\n */\nexport function getCheckConnectivity (state) {\n  return state[name].checkConnectivity\n}\n","import baseConnectivity from '../common/base'\nimport { connCheckMethods } from '../../constants'\nimport { defaults } from 'lodash/fp'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../../../src/common/validation'\n\nconst defaultValues = {\n  method: connCheckMethods.KEEP_ALIVE,\n  pingInterval: 30000,\n  reconnectLimit: 5,\n  reconnectDelay: 5000,\n  reconnectTimeMultiplier: 1,\n  reconnectTimeLimit: 640000,\n  autoReconnect: true,\n  maxMissedPings: 3,\n  checkConnectivity: true,\n  webSocketOAuthMode: 'query'\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  method: enums([connCheckMethods.KEEP_ALIVE]),\n  pingInterval: v8n.positive(),\n  reconnectLimit: v8n.positive(),\n  reconnectDelay: v8n.positive(),\n  reconnectTimeMultiplier: v8n.positive(),\n  reconnectTimeLimit: v8n.positive(),\n  autoReconnect: v8n.boolean(),\n  maxMissedPings: v8n.positive(),\n  checkConnectivity: v8n.boolean(),\n  webSocketOAuthMode: v8n.string()\n})\nconst parseOptions = parse('connectivity', v8nValidation)\n\n/**\n * Configuration options for the Connectivity feature.\n * The SDK can only use keepalive as the connectivity check.\n *\n * Keep Alive: The client sends \"keepalive\" messages (to the server) on the websocket at regular intervals. This lets the server know that the client is still connected, and that it should \"keep the connection alive\".\n *\n * For more information on keepalive see here: https://en.wikipedia.org/wiki/Keepalive\n * @public\n * @name config.connectivity\n * @memberof config\n * @instance\n * @param {Object} connectivity Connectivity configs.\n * @param {Number} [connectivity.pingInterval=30000] Time in between websocket ping attempts (milliseconds).\n * @param {Number} [connectivity.reconnectLimit=5] Number of failed reconnect attempts before reporting an error. Can be set to 0 to not limit reconnection attempts.\n * @param {Number} [connectivity.reconnectDelay=5000] Base time between websocket reconnect attempts (milliseconds).\n * @param {Number} [connectivity.reconnectTimeMultiplier=1] Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2.\n * @param {Number} [connectivity.reconnectTimeLimit=640000] Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with the reconnect time multiplier to prevent overly long delays between reconnection attempts.\n * @param {Boolean} [connectivity.autoReconnect=true] Flag to determine whether the SDK will attempt to automatically reconnect after connectivity disruptions.\n * @param {Number} [connectivity.maxMissedPings=3] Maximum pings sent (without receiving a response) before reporting an error.\n * @param {Boolean} [connectivity.checkConnectivity=true] Flag to determine whether the SDK should check connectivity.\n * @param {string} [connectivity.webSocketOAuthMode=query] query will send the bearer access token to authenticate the websocket and none will not send it.\n */\nexport default function connectivity (options = {}) {\n  options = defaults(defaultValues, options)\n  parseOptions(options)\n  return baseConnectivity(options)\n}\n","export const platforms = {\n  LINK: 'link',\n  UC: 'uc',\n  CPAAS: 'cpaas'\n}\n\nexport const notificationTypes = {\n  WEBSOCKET: 'websocket',\n  PUSH: 'push'\n}\n\nexport const connCheckResponsibility = {\n  CLIENT: 'client',\n  SERVER: 'server'\n}\n\nexport const connCheckMethods = {\n  KEEP_ALIVE: 'keepAlive',\n  PING_PONG: 'pingPong'\n}\n","/**\n * The ID of a User (e.g. joe@test.3s5j.att.com)\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof user\n * @requires cpaas_user_id\n */\n\n/**\n * The User ID ie: joe@test.3s5j.att.com\n *\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof call\n * @requires cpaas_user_id\n */\n\n/**\n * The SIP URI ie: sip:joe@domain.com\n *\n * @public\n * @static\n * @typedef {string} SIP_URI\n * @memberof call\n * @requires link_user_id\n */\n\n/**\n * The Phone Numer ie: +18885559876\n *\n * @public\n * @static\n * @typedef {string} PhoneNumber\n * @memberof call\n * @requires cpaas_pstn\n */\n\n/**\n * The TEL URI ie: tel:+18885559876\n *\n * @public\n * @static\n * @typedef {string} TEL_URI\n * @memberof call\n * @requires link_pstn\n */\n","/**\n * Error codes for the Auth plugin.\n * @name authCodes\n */\nexport const authCodes = {\n  INVALID_CREDENTIALS: 'authentication:1',\n  CONNECT_FAIL_WS_ERROR: 'authentication:2',\n  LINK_UNSUBSCRIBE_FAIL: 'authentication:3',\n  LINK_SUBSCRIBE_FAIL: 'authentication:4',\n  LINK_EXTEND_SUBSCRIPTION_FAIL: 'authentication:5',\n  LINK_UPDATE_SUBSCRIPTION_FAIL: 'authentication:6',\n  UC_SUBSCRIBE_FAIL: 'authentication:7',\n  UC_REFRESH_TOKEN_FAIL: 'authentication:8',\n  UC_CREATE_TOKEN_FAIL: 'authentication:9',\n  UC_EXTEND_SUBSCRIPTION_FAIL: 'authentication:10',\n  UC_DISCONNECT_FAIL: 'authentication:11',\n  MISSING_SERVICE: 'authentication:12'\n}\n\n/**\n * Error codes for the Call plugin.\n * @name callCodes\n */\nexport const callCodes = {\n  UNKNOWN_ERROR: 'call:1',\n  GENERIC_ERROR: 'call:2',\n  INIT_MEDIA_FAILED: 'call:3',\n  USER_MEDIA_ERROR: 'call:4',\n  NOT_SUPPORTED: 'call:5',\n  // The call is in the wrong state.\n  INVALID_STATE: 'call:6',\n  // A provided parameter is not valid.\n  INVALID_PARAM: 'call:7',\n  // There is a desync between components' state.\n  STATE_DESYNC: 'call:8',\n  // Offer could not be generated\n  INVALID_OFFER: 'call:9'\n}\n\n/**\n * Error codes for the Call History plugin.\n * @name callHistoryCodes\n */\nexport const callHistoryCodes = {\n  UNKNOWN_ERROR: 'callHistory:1',\n  BAD_REQUEST: 'callHistory:2',\n  NOT_FOUND: 'callHistory:3',\n  NOT_AUTHENTICATED: 'callHistory:4',\n  FORBIDDEN: 'callHistory:5'\n}\n/**\n * @name clickToCallCodes\n */\nexport const clickToCallCodes = {\n  MISSING_ARGS: 'clickToCall:1',\n  RESPONSE_ERROR: 'clickToCall:2'\n}\n/**\n * Error codes for the Groups plugin.\n * @name groupsCodes\n */\nexport const groupsCodes = {\n  UNKNOWN_ERROR: 'groups:1',\n  GENERIC_ERROR: 'groups:2',\n  MISSING_PARAMETERS: 'groups:3'\n}\n\n/**\n * Error codes for the Message plugin.\n * @name messagingCodes\n */\nexport const messagingCodes = {\n  CREATE_GROUP_FAIL: 'messaging:1',\n  MARK_READ_FAIL: 'messaging:2',\n  REMOVE_MEMBERS_FAIL: 'messaging:3',\n  ADD_MEMBERS_FAIL: 'messaging:4',\n  SEND_MESSAGE_FAIL: 'messaging:5',\n  FETCH_MESSAGES_FAIL: 'messaging:6',\n  FILE_UPLOAD_FAIL: 'messaging:7',\n  FETCH_CONVERSATIONS_FAIL: 'messaging:8',\n  INVALID_DESTINATION: 'messaging:9',\n  INVALID_FILE_PARTS: 'messaging:10',\n  SET_IS_TYPING_FAIL: 'messaging:11'\n}\n\n/**\n * Error codes for the Message Waiting Indicator plugin.\n * @name mwiCodes\n */\nexport const mwiCodes = {\n  FETCH_MWI_FAIL: 'mwi:1'\n}\n\n/**\n * Error codes from the Sip Events plugin.\n * @name sipEventCodes\n */\nexport const sipEventCodes = {\n  UNKNOWN_ERROR: 'sipEvents:1',\n  // The user did not subscribe/connect for the specified sip event service.\n  NOT_PROVISIONED: 'sipEvents:2',\n  // The user is not subscribed for the specified sip event.\n  NOT_SUBSCRIBED: 'sipEvents:3'\n}\n\n/**\n * Error codes for the audio bridge portion of the call plugin.\n * @name bridgeCodes\n */\nexport const bridgeCodes = {\n  UNKNOWN_ERROR: 'audioBridge:1',\n  // TODO: Make \"invalid input\" (and others) a generic code.\n  INVALID_INPUT: 'audioBridge:2',\n  ALREADY_EXISTS: 'audioBridge:3',\n  NOT_FOUND: 'audioBridge:4',\n  NOT_SUPPORTED: 'audioBridge:5',\n  MEDIA_NOT_FOUND: 'audioBridge:6',\n  INVALID_STATE: 'audioBridge:7'\n}\n\n/**\n * Error codes for the subscription plugin.\n * @name subscriptionCodes\n */\nexport const subscriptionCodes = {\n  WS_CONNECTION_ERROR: 'subscription:1',\n  CPAAS_WSREQUEST_FAIL: 'subscription:2',\n  CPAAS_WSREVOKE_FAIL: 'subscription:3',\n  CPAAS_WSREFRESH_FAIL: 'subscription:4',\n  CPAAS_SERVICE_SUB_FAIL: 'subscription:5',\n  CPAAS_SERVICE_UNSUB_FAIL: 'subscription:6',\n  CPAAS_UNSUBSCRIBE_FAIL: 'subscription:7'\n}\n/**\n * Error codes for the Presence plugin.\n * @name presenceCodes\n */\nexport const presenceCodes = {\n  INVALID_STATUS: 'presence:1',\n  INVALID_ACTIVITY: 'presence:2'\n}\n\n/**\n * Error codes for the Users plugin\n * @name usersCodes\n */\nexport const usersCodes = {\n  UNKNOWN: 'users:1',\n  REFRESH_CONTACTS_FAIL: 'users:2',\n  DIRECTORY_REQUEST_FAIL: 'users:3',\n  INVALID_PARAM: 'users:4'\n}\n","/**\n * The Basic Error object. Provides information about an error that occurred in the SDK.\n * @public\n * @static\n * @typedef {Object} BasicError\n * @memberof api\n * @property {string} code The code of the error. If no code is known, this will be 'NO_CODE'.\n * @property {string} message A human-readable message to describe the error. If no message is known, this will be 'An error occurred'.\n */\n\nexport {\n  authCodes,\n  callCodes,\n  callHistoryCodes,\n  groupsCodes,\n  messagingCodes,\n  mwiCodes,\n  sipEventCodes,\n  clickToCallCodes,\n  bridgeCodes,\n  subscriptionCodes,\n  presenceCodes,\n  usersCodes\n} from './codes'\n\nexport default class BasicError {\n  constructor ({ message, code }) {\n    this.name = 'BasicError'\n    this.code = code || 'NO_CODE'\n    this.message = message ? `${message}` : 'An error occurred.'\n  }\n}\n","/*\n * Event emitter module. Can be used as a standalone factory or as a mixin.\n *\n * @private\n * @class emitter\n * @example\n * ``` javascript\n * var eventEmitter = emitter(); // Create a new emitter.\n * emitter(myEmittingObject.prototype); // Mixin to an existing object.\n * ```\n */\nexport default function eventEmitter (prototype = {}) {\n  var eventMap = []\n  var subscribeMap = []\n  var strictMode = false\n\n  /*\n   * Check if the event is a valid event type.\n   */\n  function checkEvent (type) {\n    if (strictMode && !eventMap[type]) {\n      throw new Error('Invalid event type: ' + type)\n    }\n  }\n\n  return Object.assign(prototype, {\n    /*\n     * Define an event type with the event emitter.\n     *\n     * @method define\n     * @param {String} type The name for the event type.\n     */\n    define: function (type) {\n      eventMap[type] = eventMap[type] || []\n    },\n\n    /*\n     * Define an alias for an event type.\n     *\n     * @method alias\n     * @param {String} type The event type for which to add an alias.\n     * @param {String} alias The alias name for the event type.\n     * @throws {Error} Invalid event type\n     */\n    alias: function (type, alias) {\n      checkEvent(type)\n\n      eventMap[alias] = eventMap[type] = eventMap[type] || []\n    },\n\n    /*\n     * Add an event listener for the specified event type.\n     *\n     * @method on\n     * @param {String} type The event type for which to add the listener.\n     * @param {Function} listener The listener for the event type. The parameters\n     *                            of the listener depend on the event type.\n     * @throws {Error} Invalid event type\n     */\n    on: function (type, listener) {\n      checkEvent(type)\n      ;(eventMap[type] = eventMap[type] || []).push(listener)\n    },\n\n    /*\n     * Removes an event listener for the specified event type.\n     *\n     * @method off\n     * @param {String} type The event type for which to remote the listener.\n     * @param {Function} listener The listener to remove.\n     * @throws {Error} Invalid event type\n     */\n    off: function (type, listener) {\n      checkEvent(type)\n\n      var list = eventMap[type] || []\n      var i = list.length\n      while (i--) {\n        if (listener === list[i]) {\n          list.splice(i, 1)\n        }\n      }\n    },\n\n    /*\n     * Emits an event of the specified type.\n     *\n     * @method emit\n     * @param {String} type The event type to emit.\n     * @param {any} [...args] The arguments to pass to the listeners of the event.\n     * @throws {Error} Invalid event type\n     */\n    emit: function (type) {\n      checkEvent(type)\n\n      var args = Array.prototype.slice.call(arguments, 1)\n      var list = eventMap[type] || []\n      var i = 0\n\n      for (; i < list.length; i++) {\n        list[i].apply(undefined, args)\n      }\n      for (var j = 0; j < subscribeMap.length; j++) {\n        subscribeMap[j].call(undefined, type, args)\n      }\n    },\n\n    /*\n     * Add a subscription for all event types.\n     *\n     * @method subscribe\n     * @param {Function} listener The listener for all event types.\n     * @throws {Error} Listener not a function\n     */\n    subscribe: function (listener) {\n      if (typeof listener === 'function') {\n        subscribeMap.push(listener)\n      } else {\n        throw new Error('Listener not a function')\n      }\n    },\n\n    /*\n     * Remove a subscription for all event types.\n     *\n     * @method unsubscribe\n     * @param {Function} listener The listener for all event types.\n     * @throws {Error} Listener not a function\n     */\n    unsubscribe: function (listener) {\n      if (typeof listener === 'function') {\n        var i = subscribeMap.length\n        while (i--) {\n          if (listener === subscribeMap[i]) {\n            subscribeMap.splice(i, 1)\n          }\n        }\n      } else {\n        throw new Error('Listener not a function')\n      }\n    },\n\n    /*\n     * Sets the emitter in strict mode where it only allows events that have been defined or aliases.\n     *\n     * @method setStrictMode\n     * @param {Boolean} strict Whether to set strict mode for the emitter.\n     */\n    setStrictMode: function (strict) {\n      strictMode = strict\n    }\n  })\n}\n","// Events plugin.\nimport pluginInterface from './interface'\nimport { emitEvent } from './interface/actions'\nimport * as actionTypes from './interface/actionTypes'\n\nimport eventEmitter from './eventEmitter'\n\n/**\n * Event Emitter Implementation.\n * Factory function to create the Event Emitter Implementation.\n * Defines the functionality exposed by an Event Emitter Interface.\n */\nexport default function eventsImplementation () {\n  return {\n    name: pluginInterface.name,\n    middleware: middleware,\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer\n  }\n}\n\n/**\n * Implementation of Event Emitter Interface.\n * @return {Middleware} middleware Middleware to be applied to the redux store.\n */\nfunction middleware (context) {\n  var emitter = eventEmitter()\n  var eventMap = {}\n\n  /**\n   * Middleware to handle Event Emitter Interface actions.\n   * Redirects Interface actions to the Plugin functionality, and dispatches\n   *      actions to update the store if needed.\n   * @type {Function}\n   */\n  return next => action => {\n    switch (action.type) {\n      case actionTypes.EVENTS_ON:\n        emitter.on(action.payload.eventType, action.payload.listener)\n        break\n      case actionTypes.EVENTS_OFF:\n        emitter.off(action.payload.eventType, action.payload.listener)\n        break\n      case actionTypes.EVENTS_SUBSCRIBE:\n        emitter.subscribe(action.payload)\n        break\n      case actionTypes.EVENTS_UNSUBSCRIBE:\n        emitter.unsubscribe(action.payload)\n        break\n      case actionTypes.EVENTS_ALIAS:\n        emitter.alias(action.payload.eventType, action.payload.alias)\n        break\n      case actionTypes.EVENTS_EMIT:\n        emitter.emit(action.payload.eventType, ...action.payload.args)\n        break\n      case actionTypes.MAP_EVENTS:\n        for (let actionType in action.payload) {\n          if (action.payload.hasOwnProperty(actionType)) {\n            let mapper = action.payload[actionType]\n            if (eventMap.hasOwnProperty(actionType)) {\n              eventMap[actionType].push(mapper)\n            } else {\n              eventMap[actionType] = [mapper]\n            }\n          }\n        }\n        break\n      default:\n        if (eventMap.hasOwnProperty(action.type)) {\n          // Get state both before and after allowing the action to go through\n          //    the reducers. This lets events have compare state changes.\n          const prevState = context.getState()\n          let result = next(action)\n          const state = context.getState()\n\n          // make this compatible with promise middleware by ensuring we\n          // wait for the promise to resolve. It's easier to just always\n          // use a promise, as opposed to handling cases.\n          if (!result || !result.then) {\n            result = Promise.resolve(result)\n          }\n          result.then(function () {\n            for (let mapper of eventMap[action.type]) {\n              // Use the mapper(s) for this specific event to create the event object(s).\n              // Event mappings have access to the action and states pre+post reducer.\n              let events = mapper(action, { prevState, state })\n              if (!events) {\n                events = []\n              } else if (!Array.isArray(events)) {\n                events = [events]\n              }\n              for (let event of events) {\n                if (!event.args) {\n                  event.args = {}\n                }\n                context.dispatch(emitEvent(event.type, event.args))\n              }\n            }\n          })\n          return result\n        }\n        break\n    }\n\n    return next(action)\n  }\n}\n","const PREFIX = '@@KANDY/'\n\nexport const EVENTS_ON = PREFIX + 'EVENTS_ON'\nexport const EVENTS_OFF = PREFIX + 'EVENTS_OFF'\nexport const EVENTS_SUBSCRIBE = PREFIX + 'EVENTS_SUBSCRIBE'\nexport const EVENTS_UNSUBSCRIBE = PREFIX + 'EVENTS_UNSUBSCRIBE'\nexport const EVENTS_ALIAS = PREFIX + 'EVENTS_ALIAS'\nexport const EVENTS_EMIT = PREFIX + 'EVENTS_EMIT'\nexport const MAP_EVENTS = PREFIX + 'MAP_EVENTS'\n","import * as actionTypes from './actionTypes'\n\n/**\n * Add an action-to-event mapping\n * @param  {Object} mapping A mapping object\n * @return {action}          A redux action.\n */\nexport function mapEvents (mapping) {\n  return {\n    type: actionTypes.MAP_EVENTS,\n    payload: mapping\n  }\n}\n\n/* Interface actions */\n\n/**\n * Add a listener for a specified event type.\n *\n * @param {string} type The event type to add the listener on.\n * @param {Function} listener The event listener to be added.\n * @return {Action} action A redux action.\n */\nexport function on (type, listener) {\n  return {\n    type: actionTypes.EVENTS_ON,\n    payload: {\n      eventType: type,\n      listener: listener\n    }\n  }\n}\n\n/**\n * Remove a listener from a specified event type.\n *\n * @param {string} type The event type to remove the listener from.\n * @param {Function} listener The event listener to be removed.\n * @return {Action} action A redux action.\n */\nexport function off (type, listener) {\n  return {\n    type: actionTypes.EVENTS_OFF,\n    payload: {\n      eventType: type,\n      listener: listener\n    }\n  }\n}\n\n/**\n * Add a global event listener.\n *\n * @param {Function} listener The event listener to be added.\n * @return {Action} action A redux action.\n */\nexport function subscribe (listener) {\n  return {\n    type: actionTypes.EVENTS_SUBSCRIBE,\n    payload: listener\n  }\n}\n\n/**\n * Remove a global event listener.\n *\n * @param {Function} listener The event listener to be removed.\n * @return {Action} action A redux action.\n */\nexport function unsubscribe (listener) {\n  return {\n    type: actionTypes.EVENTS_UNSUBSCRIBE,\n    payload: listener\n  }\n}\n\n/* Internal actions */\n\n/**\n * Emits an event of the specified type.\n *\n * @method emitEvent\n * @param {Object} payload Information of the event to emit.\n * @throws {Error} Invalid event type\n * @return action An EVENTS_EMIT action.\n */\nexport function emitEvent (type, ...args) {\n  if (type === undefined) {\n    throw Error('Attempted to emit an event without a type.')\n  }\n\n  return {\n    type: actionTypes.EVENTS_EMIT,\n    payload: { eventType: type, args }\n  }\n}\n\n/**\n * Define an alias for an event type.\n *\n * @method alias\n * @param {string} type The event type for which to add an alias.\n * @param {string} alias The alias name for the event type.\n */\nexport function aliasEvent (type, alias) {\n  if (type === undefined || alias === undefined) {\n    throw Error('Invalid attempt to alias an event.')\n  }\n\n  return {\n    type: actionTypes.EVENTS_ALIAS,\n    payload: { eventType: type, alias }\n  }\n}\n","// Actions the interface uses.\nimport { on, off, subscribe, unsubscribe } from './actions'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('EVENTS')\n\n/**\n * API for Event Emitter plugin.\n * Defines the public end-points exposed by event plugins.\n * @param  {Object} context The sdk instance context.\n * @returns {Object} api     The interface object.\n */\nexport default function api ({ dispatch }) {\n  var api = {}\n\n  /**\n   * Add an event listener for the specified event type. The event is emitted by the SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method on\n   * @param {string} type The event type for which to add the listener.\n   * @param {Function} listener The listener for the event type. The parameters of the listener depend on the event type.\n   * @throws {Error} Invalid event type\n   * @example\n   * // Listen for events of a specific type emitted by the SDK.\n   * client.on('dummy:event', function (params) {\n   *    // Handle the event.\n   * })\n   */\n  api.on = function (type, listener) {\n    log.debug(API_LOG_TAG + 'on: ', type)\n    dispatch(on(type, listener))\n  }\n\n  /**\n   * Removes an event listener for the specified event type. The event is emitted by the SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method off\n   * @param {string} type The event type for which to remote the listener.\n   * @param {Function} listener The listener to remove.\n   * @throws {Error} Invalid event type\n   */\n  api.off = function (type, listener) {\n    log.debug(API_LOG_TAG + 'off: ', type)\n    dispatch(off(type, listener))\n  }\n\n  /**\n   * Adds a global event listener to SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method subscribe\n   * @param {Function} listener The event listener to add. The parameters are (type, ...args), where args depend on the event type.\n   * @throws {Error} Listener not a function\n   */\n  api.subscribe = function (listener) {\n    log.debug(API_LOG_TAG + 'subscribe')\n    dispatch(subscribe(listener))\n  }\n\n  /**\n   * Removes a global event listener from SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method unsubscribe\n   * @param {Function} listener The event listener to remove.\n   * @throws {Error} Listener not a function\n   */\n  api.unsubscribe = function (listener) {\n    log.debug(API_LOG_TAG + 'unsubscribe')\n    dispatch(unsubscribe(listener))\n  }\n\n  return api\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for an events plugin.\n * @type {string}\n */\nconst name = 'events'\n\nexport default {\n  name,\n  api,\n  reducer\n}\n","// Events plugin.\nimport * as actionTypes from './actionTypes'\n\n// Libraries.\nimport { update, add, concat, contains } from 'lodash/fp'\n\nfunction eventReducer (state = { aliases: [], count: 0 }, action) {\n  switch (action.type) {\n    case actionTypes.EVENTS_ON:\n      return update('count', add(1), state)\n    case actionTypes.EVENTS_OFF:\n      return update('count', add(-1), state)\n    case actionTypes.EVENTS_ALIAS:\n      return update('aliases', concat(action.payload.alias), state)\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for Event Emitter plugin.\n * Defines the events an Event plugin should dispatch to modify state.\n * @param  {Object} [state={}] The events substate.\n * @param  {Object} action     A Flux Standard action.\n * @returns {Object} state      The new event substate.\n */\nexport default function reducer (state = {}, action) {\n  // Only handle event types.\n  if (!contains(action.type, actionTypes)) {\n    return state\n  }\n\n  return {\n    ...state,\n    [action.payload.eventType]: eventReducer(state[action.payload.eventType], action)\n  }\n}\n","// Libraries.\nimport { combineReducers, createStore, applyMiddleware, compose as composeWithoutDevTools } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { memoize, merge } from 'lodash/fp'\nimport { fork } from 'redux-saga/effects'\nimport compose from 'stampit/compose'\n\n// Helpers.\nimport { autoRestart } from './common/utils'\nimport { getVersion } from './common/version'\n\n// Plugins.\nimport { logManager } from './logs'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from './common/validation'\nconst log = logManager.getLogger('FACTORY')\n\nconst factoryDefaults = {\n  enableReduxDevTools: false,\n  allowProxy: false\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  enableReduxDevTools: v8n.boolean(),\n  allowProxy: v8n.boolean()\n})\nconst parseOptions = parse('common', v8nValidation)\n\n/**\n * Creates an instance of the SDK with the specified plugins and configuration.\n *\n * @param {Plugin[]} plugins - The list of plugins to load into this instance of the SDK.\n * @param {Object} [options] - Factory options\n * @param {boolean} [options.enableReduxDevTools] - A flag to indicate whether or not to include Redux Dev Tools\n * @param {boolean} [options.allowProxy] Whether the factory should allow the Proxy Plugin to be included.\n */\nexport function factory (plugins, options = factoryDefaults) {\n  // Log the SDK's version (templated by webpack) on initialization.\n  let version = getVersion()\n  log.info(`SDK version: ${version}`)\n\n  parseOptions(options)\n\n  var sagas = []\n  var store\n  var selectors = {}\n  var middlewares = []\n  var reducers = {}\n  var initSagas = []\n  var taskDescriptor\n  const shared = {}\n  var context = {\n    capabilities: [],\n    api: {},\n    primitives: {},\n    getState () {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      if (destroyedSDK) {\n        throw Error('State is not available if the SDK has been destroyed')\n      }\n      return store.getState()\n    },\n    dispatch (...args) {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      return store.dispatch(...args)\n    },\n    subscribe (fn) {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      return store.subscribe(fn)\n    }\n  }\n\n  // Special case middleware for logging.\n  var loggerMiddleware\n\n  var destroyedSDK = false\n  var destroyedSDKMiddleware = store => next => action => {\n    if (destroyedSDK) {\n      return null\n    } else {\n      return next(action)\n    }\n  }\n\n  // Remove undefined plugins. Those are plugins that failed to load for some reason.\n  plugins = plugins.filter(plugin => Boolean(plugin))\n\n  // Run all the plugins to build the context.\n  // Set up each plugin component individually.\n  plugins.forEach(function (plugin) {\n    // Ignore the Proxy Plugin if not configured to allow it.\n    if (plugin.name === 'proxy' && !options.allowProxy) {\n      plugin = {}\n    }\n\n    if (plugin.capabilities) {\n      context.capabilities = context.capabilities.concat(plugin.capabilities)\n    }\n    if (plugin.reducer) {\n      reducers[plugin.name] = plugin.reducer\n    }\n    if (plugin.selector) {\n      selectors[plugin.name] = memoize(plugin.selector)\n    }\n    if (plugin.middleware) {\n      if (plugin.name === 'logs') {\n        loggerMiddleware = plugin.middleware\n      } else {\n        middlewares.push(() => plugin.middleware(context)) // pass context to middleware instead of store\n      }\n    }\n    if (plugin.api) {\n      context.api = merge(context.api, plugin.api(context))\n    }\n    if (plugin.init) {\n      initSagas.push(plugin.init)\n    }\n    if (plugin.sagas) {\n      sagas = sagas.concat(plugin.sagas)\n    }\n    // TODO: Revisit this. Looks a little extreme for a couple stamps...\n    if (plugin.mixins) {\n      // Define a base stamp that all stamps will be composed with.\n      //      This gives stamps access to the factory's context.\n      let baseStamp = {\n        propertyDescriptors: {\n          context: {\n            get () {\n              return context\n            }\n          }\n        }\n      }\n      for (let objName in plugin.mixins) {\n        if (plugin.mixins.hasOwnProperty(objName)) {\n          // Ensure that every stamp starts with the base stamp.\n          if (!context.primitives.hasOwnProperty(objName)) {\n            context.primitives[objName] = baseStamp\n          }\n          context.primitives[objName] = compose(\n            context.primitives[objName],\n            plugin.mixins[objName]\n          )\n        }\n      }\n    }\n\n    /**\n     * Plugins are allowed to share data between them by providing it to the\n     *    factory. All shared data will be collected as a single object, and\n     *    that object will be provided to plugins during their `init` saga.\n     * It is intended that a plugin can \"override\" another plugin's shared data.\n     * The order that plugins are given to the factory matters because of this.\n     * `plugin.shared` is expected to be an object.\n     */\n    if (plugin.shared) {\n      for (let key in plugin.shared) {\n        if (shared[key]) {\n          log.debug(`Replacing shared ${key} with ${key} from ${plugin.name}.`)\n          shared[key] = plugin.shared[key]\n        } else {\n          shared[key] = plugin.shared[key]\n        }\n      }\n    }\n  })\n\n  if (loggerMiddleware) {\n    // The redux logger middleware should be the last middleware.\n    middlewares.push(() => loggerMiddleware(context))\n  }\n\n  // Compose the root saga\n  function * rootSaga () {\n    // Give all plugins an opportunity to initialize themselves.\n    // Note: Sagas have not been forked yet, so init cannot use them\n    //      by dispatching actions. See PR #698.\n    // Note: If anything asynchronous is done in an init, it MUST be\n    //      non-blocking (ie. use fork, not call). See PR #699.\n    for (let init of initSagas) {\n      // Note: Yield directly to init. If redux-saga's `call()` is used, then the\n      //      factory returns before the instance is done all inits. See PR #699.\n      // Provide the factory's shared data (from plugins) to the `init` saga.\n      yield * init(shared)\n    }\n    // Run all of the sagas provided by implementation plugins.\n    for (let saga of sagas) {\n      yield fork(autoRestart(saga))\n    }\n  }\n\n  // Alias our composeMiddleware to conditionally include devTools as per the provided configuration flag\n  const composeMiddleware = options.enableReduxDevTools ? composeWithDevTools : composeWithoutDevTools\n\n  // don't include saga stuff if there are no sagas.\n  if (initSagas.length + sagas.length > 0) {\n    var sagaMiddleware = createSagaMiddleware()\n\n    // Create the store with the plugins (incl. sagas) and with the configuration as the initial state.\n    store = createStore(\n      combineReducers(reducers),\n      composeMiddleware(applyMiddleware(destroyedSDKMiddleware, sagaMiddleware, ...middlewares))\n    )\n\n    taskDescriptor = sagaMiddleware.run(rootSaga)\n  } else {\n    // Create the store with the plugins (excl. sagas) and with the configuration as the initial state.\n    store = createStore(\n      combineReducers(reducers),\n      composeMiddleware(applyMiddleware(destroyedSDKMiddleware, ...middlewares))\n    )\n  }\n\n  // setup the API\n  var selectState = function (state) {\n    var exposedState = {}\n\n    // Determine what state should be exposed to an application.\n    plugins.forEach(function (plugin) {\n      let name = plugin.name\n      // If the plugin designates a selector to filter public state, use it.\n      if (selectors[name]) {\n        exposedState[name] = selectors[name](state[name])\n      } else if (state[name]) {\n        // Otherwise, just expose the state directly, but\n        //      only expose state if there actually is state.\n        exposedState[name] = state[name]\n      }\n    })\n    return exposedState\n  }\n  selectState = memoize(selectState)\n\n  const publicAPI = {\n    ...context.api,\n    state: {\n      get: function () {\n        return selectState(store.getState())\n      },\n      subscribe: function (...args) {\n        return store.subscribe(...args)\n      }\n    },\n    /**\n     * Return all the capabilities currently available to the plugin system.\n     *\n     * @memberof api\n     * @method getCapabilities\n     */\n    getCapabilities () {\n      return context.capabilities\n    },\n    /**\n     * Returns the current version of the API.\n     *\n     * @public\n     * @memberof api\n     * @method getVersion\n     */\n    getVersion () {\n      return version\n    },\n    // Disabling eslint for the next comment as we want to be able to use a disallowed word\n    // eslint-disable-next-line no-warning-comments\n    /**\n     * Destroys the SDK, and removes its state, rendering the SDK unusable.\n     * Useful when a user logs out and their call data needs to be destroyed.\n     * The SDK must be recreated to be usable again.\n     *\n     * @public\n     * @memberof api\n     * @method destroy\n     * @example\n     * // Instantiate the SDK.\n     * import { create } from 'kandy'\n     * const config = {\n     *     authentication: { ... },\n     *     logs: { ... },\n     *     ...\n     * }\n     * let client = create(config);\n     * client.on( ... )\n     * // Use the SDK\n     * ...\n     * // Destroy the SDK, then recreate on the next step\n     * client.destroy()\n     * client = create(config)\n     * client.on( ... )\n     */\n    destroy () {\n      // TODO: Give plugins a chance to clean up, disconnect from WS, etc\n      // Needs to happen before the sagas are cancelled\n      // TODO: Is it possible for the store to auto-unsubscribe any listeners\n      //    (from client.state.subscribe API)? If not, may be easier to simply\n      //    protect from issues.\n\n      // Cancel all the sagas\n      if (taskDescriptor) taskDescriptor.cancel()\n\n      // Clear the state\n      function destroyStateReducer (state, action) {\n        return {}\n      }\n      store.replaceReducer(destroyStateReducer)\n\n      // Neuter all actions\n      destroyedSDK = true\n    }\n  }\n\n  // Return the public API.\n  return publicAPI\n}\n","/**\n * Default function for the SDK to use for logging actions.\n * Action entries come in 4 different types:\n *    1. start: Log the message directly and \"open the group\".\n *    2. state: Log a prefix, state type, and state itself.\n *      (prev state and next state)\n *    3. payload: Log a prefix, action type, and payload.\n *    4. end: Close the group.\n * @method defaultActionHandler\n * @param  {LogEntry} entry\n */\nexport default function defaultActionHandler (entry) {\n  // Handle the \"start\" and \"stop\" action log entries specifically.\n  if (['group', 'groupCollapsed'].includes(entry.method)) {\n    console[entry.method](...entry.messages)\n    return\n  } else if (entry.method === 'groupEnd') {\n    console.groupEnd()\n    return\n  }\n\n  const { timestamp, level } = entry\n  const logInfo = `${timestamp} - ACTION - ${level}`\n\n  const [logType, payload] = entry.messages\n\n  let prefix\n  if (logType.includes('state')) {\n    // If the log is for prev state / next state, display that in the prefix.\n    prefix = `${logInfo} - ${logType.toUpperCase()}`\n  } else {\n    // Else the log is the action itself, so use the action type.\n    prefix = `${logInfo} - ${payload.type}`\n  }\n\n  console[entry.method](prefix, payload)\n}\n","// Logs plugin.\nimport { logManager } from '../index'\nimport { logLevels } from 'kandy-logger/src/constants'\n// Action specific.\nimport setupTransformers from './transformers'\nimport { titleFormatter } from './utils'\n\n// Libraries.\nimport { createLogger } from 'redux-logger'\n\n/**\n * Creates a redux middleware for logging actions.\n * @method createActionLogger\n * @param  {Object}     options\n * @return {Middleware}\n */\nexport default function createActionLogger (options) {\n  // Create a Logger for handling the action logs.\n  const logger = logManager.getLogger('ACTION')\n  logger.setHandler(options.logActions.handler)\n  logger.setLevel(options.logActions.level)\n\n  const setLevel = logLevels[options.logLevel]\n\n  let actionOptions = {}\n  // Use different options for redux-logger depending on log level.\n  if (setLevel === logLevels.INFO) {\n    // At the INFO level, hide everything except the action name.\n    actionOptions.level = false\n    actionOptions.diff = false\n  } else {\n    // At the DEBUG+ levels, use the configs.\n    actionOptions = {\n      ...options.logActions\n    }\n  }\n\n  if (options.logActions.actionOnly) {\n    // Hide prevState and nextState.\n    // Log action and error at info level, so the browser won't hide it by default.\n    actionOptions.level = {\n      prevState: false,\n      action: 'info',\n      error: 'info',\n      nextState: false\n    }\n  }\n\n  if (options.logActions.excludeActions) {\n    actionOptions.predicate = excludeActions(options.logActions.excludeActions)\n  }\n\n  // ALWAYS use our own logger\n  actionOptions.logger = logger\n  // ALWAYS remove theming/styling from the action log messages\n  actionOptions.titleFormatter = titleFormatter\n  actionOptions.colors = false\n\n  // Setup the transformers based on the options.\n  let transformers = setupTransformers(options.logActions)\n  // Create the logger middleware.\n\n  return createLogger({\n    ...actionOptions,\n    ...transformers\n  })\n}\n\n/**\n * Logger predicate function that will take an array of action types\n * and exclude them from logs\n * @param {Array} actions An array of action types to exclude from logs\n * @returns {function} A predicate function\n */\nfunction excludeActions (actions) {\n  return (getState, action) => !actions.includes(action.type)\n}\n","// Libraries\nimport { omit } from 'lodash/fp'\n\n/**\n * Determines which redux-logger transformers we need based on options.\n * @method setupTransformers\n * @param  {Object} options\n * @return {Object} An object of transformers to be provided to redux-logger.\n */\nexport default function setupTransformers (options) {\n  // A \"pipeline\" of all redux-logger action transformers.\n  function actionPipeline (transformers) {\n    return function (action) {\n      transformers.forEach(function (transformer) {\n        action = transformer(action)\n      })\n      return action\n    }\n  }\n\n  const transformers = {}\n  const actionTransformers = []\n  if (!options.exposePayloads) {\n    // If exposePayloads is disabled, include the removePayloads transformer\n    actionTransformers.push(removePayloads)\n  } else {\n    // Otherwise, we should still hide passwords\n    actionTransformers.push(passwordHider)\n  }\n  // Create the actionTransformer pipeline with the included transformers.\n  transformers.actionTransformer = actionPipeline(actionTransformers)\n\n  return transformers\n}\n\n// Redux-logger actionTransformer to prevent passwords from being logged.\nfunction passwordHider (action) {\n  if (action.meta && action.meta.isSensitive) {\n    // Only log the action name for actions that have sensitive data in them.\n    return omit('payload', action)\n  }\n  return action\n}\n\n/**\n * Helper function removes secure data if secure mode is enabled\n * @param {Object} action\n */\nfunction removePayloads (action) {\n  if (!(action.meta && action.meta.isSafe)) {\n    return omit('payload', action)\n  }\n  return action\n}\n","/**\n * Standard title formatter function is almost identical to the defaultTitleFormatter found in redux-logger\n * but removes placeholder characters previously used for styling, which is not being used in the logging\n * configuration\n *\n * @param action\n * @param time\n * @param took\n * @returns {string}\n */\nexport function titleFormatter (action, time, took) {\n  var parts = ['action']\n  parts.push(action.type)\n  parts.push('@ ' + time)\n  parts.push('(in ' + took.toFixed(2) + ' ms)')\n\n  return parts.join(' ')\n}\n","import defaultActionHandler from './actions/actionHandler'\n\n/**\n * Configuration options for the Logs feature.\n *\n * The SDK will log information about the operations it is performing. The\n *    amount of information will depend on how the Logs feature is configured.\n *\n * The format of logs can also be customized by providing a\n *    {@link logger.LogHandler LogHandler}. This function will receive a\n *    {@link logger.LogEntry LogEntry} which it can handle as it sees fit. By\n *    default, the SDK will log information to the console.\n *\n * @public\n * @static\n * @name config.logs\n * @memberof config\n * @requires logs\n * @instance\n * @param {Object} logs Logs configs.\n * @param {string} [logs.logLevel='debug'] Log level to be set. See {@link logger.levels}.\n * @param {logger.LogHandler} [logs.handler] The function to receive log entries from the\n *    SDK. If not provided, a default handler will be used that logs entries\n *    to the console.\n * @param  {boolean} [logs.enableFcsLogs=true] Enable the detailed call logger\n *    for v3.X. Requires log level debug.\n * @param {Object|boolean} [logs.logActions] Options specifically for action logs when\n *    logLevel is at DEBUG+ levels. Set this to false to not output action logs.\n * @param {logger.LogHandler} [logs.logActions.handler] The function to receive action\n *    log entries from the SDK. If not provided, a default handler will be used\n *    that logs actions to the console.\n * @param {boolean} [logs.logActions.actionOnly=true] Only output information\n *    about the action itself. Omits the SDK context for when it occurred.\n * @param {boolean} [logs.logActions.collapsed=false] Whether logs should be\n *    minimized when initially output. The full log is still output and can be\n *    inspected on the console.\n * @param {boolean} [logs.logActions.diff=false] Include a diff of what SDK\n *    context was changed by the action.\n * @param {string}  [logs.logActions.level='debug'] Log level to be set\n *    on the action logs\n * @param {boolean} [logs.logActions.exposePayloads=false] Allow action payloads\n *    to be exposed in the logs, potentially displaying sensitive information.\n */\nexport const defaultOptions = {\n  logLevel: 'debug',\n  handler: undefined,\n  enableFcsLogs: true,\n\n  // Action-specific configs.\n  logActions: {\n    handler: defaultActionHandler,\n    actionOnly: true,\n    collapsed: false,\n    diff: false,\n    level: 'debug',\n    exposePayloads: false\n  }\n}\n/*\n * TODO: Figure out a way to work around this.\n * Can't use validation in logging because validation uses logging to output errors.\n * Circular dependency, have to refactor.\n * Code:\n ```javascript\n// Parse and/or Validate\n// import { enums, validation as v8n, parse } from '../common/validation'\nconst defaultValidation = v8n.schema({\n  logLevel: enums(['silent', 'error', 'warn', 'info', 'debug']),\n  handler: v8n.optional(v8n.function()),\n  enableFcsLogs: v8n.boolean(),\n  logActions: v8n.optional(\n    v8n.passesAnyOf(\n      v8n.schema({\n        handler: v8n.optional(v8n.function()),\n        actionOnly: v8n.boolean(),\n        collapsed: v8n.boolean(),\n        diff: v8n.boolean(),\n        exposePayloads: v8n.boolean()\n      }),\n      // OR\n      v8n.boolean()\n    )\n  )\n})\n\nexport const parseLogConfig = parse('logger', defaultValidation)\n```\n*/\n","/*\n * This file contains SDK documentation for stuff defined by the Logger package.\n * They are here to 1) ensure they are picked up by our documentation tool and\n *    2) ensure they are written from the perspective of the SDK (not the Logger\n *    library).\n */\n\n/**\n * A LogEntry object is the data that the SDK compiles when information is\n *    logged. It contains both the logged information and meta-info about when\n *    and who logged it.\n *\n * A {@link logger.LogHandler LogHandler} provided to the SDK (see\n *    {@link #configconfiglogs config.logs}) will need to handle LogEntry\n *    objects.\n *\n * @public\n * @static\n * @typedef {Object} LogEntry\n * @memberof logger\n * @requires logs\n * @property {number} timestamp When the log was created, based on UNIX epoch.\n * @property {string} method The log function that was used to create the log.\n * @property {string} level The level of severity the log.\n * @property {Object} target The subject that the log is about.\n * @property {string} target.type The type of the target. This is also\n *    used as part of the name of the Logger.\n * @property {string} [target.id] A unique identifer for the target.\n * @property {string} target.name A combination of the target type and ID. If no\n *    id was provided, this will be the same as the type.\n * @property {Array} messages The logged information, given to the Logger\n *    method as parameters.\n * @property {Object} [timer] Timing data, if the log method was a timer method.\n * @example\n * function defaultLogHandler (logEntry) {\n *   // Compile the meta info of the log for a prefix.\n *   const { timestamp, level, target } = logEntry\n *   let { method } = logEntry\n *   const logInfo = `${timestamp} - ${target.type} - ${level}`\n *\n *   // Assume that the first message parameter is a string.\n *   const [log, ...extra] = logEntry.messages\n *\n *   // For the timer methods, don't actually use the console methods.\n *   //    The Logger already did the timing, so simply log out the info.\n *   if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n *     method = 'debug'\n *   }\n *\n *   console[method](`${logInfo} - ${log}`, ...extra)\n * }\n */\n\n/**\n * A LogHandler can be used to customize how the SDK should log information. By\n *    default, the SDK will log information to the console, but a LogHandler can\n *    be configured to change this behaviour.\n *\n * A LogHandler can be provided to the SDK as part of its configuration (see\n *    {@link #configconfiglogs config.logs}). The SDK will then provide this\n *    function with the logged information.\n *\n * @public\n * @static\n * @typedef {Function} LogHandler\n * @memberof logger\n * @requires logs\n * @param {Object} LogEntry The LogEntry to be logged.\n * @example\n * // Define a custom function to handle logs.\n * function logHandler (logEntry) {\n *   // Compile the meta info of the log for a prefix.\n *   const { timestamp, level, target } = logEntry\n *   let { method } = logEntry\n *   const logInfo = `${timestamp} - ${target.type} - ${level}`\n *\n *   // Assume that the first message parameter is a string.\n *   const [log, ...extra] = logEntry.messages\n *\n *   // For the timer methods, don't actually use the console methods.\n *   //    The Logger already did the timing, so simply log out the info.\n *   if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n *     method = 'debug'\n *   }\n *\n *   console[method](`${logInfo} - ${log}`, ...extra)\n * }\n *\n * // Provide the LogHandler as part of the SDK configurations.\n * const configs = { ... }\n * configs.logs.handler = logHandler\n * const client = create(configs)\n */\n","import createManager from 'kandy-logger'\nimport defaultOptions from './config'\n\n// Logs generated as a result of invoking the public API will contain this tag\nexport const API_LOG_TAG = 'API invoked: '\n\n/**\n * Create the LogManager right away so that it is available. The SDK has not\n *    been instantiated yet, so we have to use the default options until we get\n *    the application's configs.\n */\n/**\n * TODO: There is a technical debt associated with having a loggerManager along with it's\n * loggers created at the global scope. Multiple instances of the SDK would end up sharing\n * the log manager and therefore loggers.\n */\nconst manager = createManager(defaultOptions)\nexport const logManager = manager\n","const prefix = '@@KANDY/LOGS/'\n\nexport const SET_LEVEL = prefix + 'SET_LEVEL'\nexport const LEVELS_CHANGE = prefix + 'LEVELS_CHANGE'\n\nexport const SET_HANDLER = prefix + 'SET_HANDLER'\nexport const HANDLERS_CHANGE = prefix + 'HANDLERS_CHANGE'\n","// Logs plugin.\nimport * as actionTypes from './actionTypes'\n\n/**\n * Action for setting a Logger's level.\n * @method setLevel\n * @param  {string} level  The level to be set.\n * @param  {string} [type] The type of Logger to set it for.\n */\nexport function setLevel (level, type) {\n  return {\n    type: actionTypes.SET_LEVEL,\n    payload: { level, type }\n  }\n}\n\n/**\n * Action for setting all of the Loggers' log level.\n * @method levelsChanged\n * @param  {Object} levelMap Mapping of logger type to level.\n * @return {Object}\n */\nexport function levelsChanged (levelMap) {\n  return {\n    type: actionTypes.LEVELS_CHANGE,\n    payload: levelMap\n  }\n}\n\n/**\n * Action for setting a Logger's handler.\n * @method setHandler\n * @param  {Function} handler A LogHandler function.\n * @param  {string}   [type]  The type of Logger to set it for.\n */\nexport function setHandler (handler, type) {\n  return {\n    type: actionTypes.SET_HANDLER,\n    payload: { handler, type }\n  }\n}\n\n/**\n * Action for setting all of the Loggers' log handler.\n * @method handlersChanged\n * @param  {Object} handlerMap Mapping of logger type to handler.\n * @return {Object}\n */\nexport function handlersChanged (handlerMap) {\n  return {\n    type: actionTypes.HANDLERS_CHANGE,\n    payload: handlerMap\n  }\n}\n","// Logs plugin.\nimport { logManager, API_LOG_TAG } from '../index'\nimport * as actions from './actions'\nimport { getLevel, getTypes } from './selectors'\n\n/**\n * The internal logger is used to provide information about the SDK's behaviour.\n * The logger can provide two types of logs: basic logs and action logs. Basic\n * logs are simple lines of information about what the SDK is doing during operations.\n * Action logs are complete information about a specific action that occurred\n * within the SDK, providing debug information describing it.\n * The amount of information logged can be configured as part of the SDK configuration.\n * See {@link #configconfiglogs config.logs} .\n *\n * @public\n * @namespace logger\n * @requires logs\n */\n\nexport default function api ({ dispatch, getState }) {\n  const log = logManager.getLogger('LOGS')\n\n  let api = {\n    /**\n     * Possible levels for the SDK logger.\n     * @public\n     * @static\n     * @memberof logger\n     * @method levels\n     * @property {string} SILENT Log nothing.\n     * @property {string} ERROR Log only unhandled errors.\n     * @property {string} WARN Log issues that may cause problems or unexpected behaviour.\n     * @property {string} INFO Log useful information and messages to indicate the SDK's internal operations.\n     * @property {string} DEBUG Log information to help diagnose problematic behaviour.\n     */\n    levels: {\n      SILENT: 'silent',\n      ERROR: 'error',\n      WARN: 'warn',\n      INFO: 'info',\n      DEBUG: 'debug'\n    },\n\n    /**\n     * Update the log level used by the SDK's loggers.\n     *\n     * Changing the log level will affect the amount of logs that the SDK will\n     *    output for debugging purposes.\n     *\n     * See {@link logger.levels} for valid log levels. Other values will not be\n     *    accepted. See the {@link logger.getTypes} API for valid logger types.\n     *    Other values will have no affect.\n     * @private\n     * @static\n     * @memberof logger\n     * @method setLevel\n     * @param  {string} level The log level to set.\n     * @param  {string} [type] An optional subset of loggers to update.\n     * @example\n     * // Set logs to be at the warn level.\n     * client.logger.setLevel(client.logger.levels.WARN)\n     */\n    setLevel (level, type) {\n      log.debug(API_LOG_TAG + 'logger.setLevel: ', level, type)\n\n      dispatch(actions.setLevel(level, type))\n    },\n\n    /**\n     * Get the currently set log level used by the SDK's loggers.\n     *\n     * @private\n     * @static\n     * @memberof logger\n     * @method getLevel\n     * @param  {string} [type] An optional subset of loggers.\n     * @return {logger.levels} A log level.\n     */\n    getLevel (type) {\n      log.debug(API_LOG_TAG + 'logger.getLevel: ', type)\n\n      return getLevel(getState(), type)\n    },\n\n    /**\n     * Updates the {@link logger.LogHandler LogHandler} used by the SDK's\n     *    loggers.\n     *\n     * Changing the log handler will change how the SDK's logs are handled by\n     *    the application.\n     *\n     * See {@link logger.LogHandler} and {@link logger.LogEntry} for information\n     *    about the handler. See the {@link logger.getTypes} API for valid\n     *    logger types. Other values will have no affect.\n     * @private\n     * @static\n     * @memberof logger\n     * @method setHandler\n     * @param  {logger.LogEntry} handler A {@link logger.LogHandler} function.\n     * @param  {string}   [type] An optional subset of loggers to update.\n     * @example\n     * // Change the SDK's Log Handler to a custom function.\n     * client.logger.setHandler((logEntry) => {\n     *    // Handle the SDK's logs in a custom way.\n     *    ...\n     * })\n     *\n     */\n    setHandler (handler, type) {\n      log.debug(API_LOG_TAG + 'logger.setHandler: ', handler, type)\n\n      dispatch(actions.setHandler(handler, type))\n    },\n\n    /**\n     * Get the list of logger types used by the SDK.\n     *\n     * Logs for different SDK features can be managed separately from one\n     *    another by specifying the type when using the {@link logger.setLevel}\n     *    and {@link logger.setHandler} APIs.\n     * @private\n     * @static\n     * @memberof logger\n     * @method getTypes\n     * @return {Array<string>} Logger types.\n     * @example\n     * const types = client.logger.getTypes()\n     * // types: ['DEFAULT', 'AUTH', 'CALL', ...]\n     *\n     * // Set the Call logs to be at the debug level.\n     * client.logger.setLevel('DEBUG', 'CALL')\n     */\n    getTypes () {\n      log.debug(API_LOG_TAG + 'logger.getTypes')\n\n      return getTypes(getState())\n    }\n  }\n\n  return {\n    logger: api\n  }\n}\n","import * as actionTypes from './actionTypes'\n\n// Libraries\nimport { handleActions } from 'redux-actions'\n\n/**\n * Logs state is a mapping between every Logger type (and the default type)\n *    and its set log level.\n * eg. {\n *    DEFAULT: 'DEBUG',\n *    AUTH: 'DEBUG',\n *    CALL: 'INFO',\n *    ...\n * }\n */\n\nconst reducers = {}\n\nreducers[actionTypes.LEVELS_CHANGE] = {\n  next (state, action) {\n    // Replace all levels that have been changed.\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Libraries.\nimport { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves the log level for a specifie logger type, or the default level.\n * @method getLevel\n * @param  {Object} state            SDK redux state.\n * @param  {String} [type='DEFAULT'] A type of Logger.\n * @return {string} A log level.\n */\nexport function getLevel (state, type = 'DEFAULT') {\n  const clonedState = cloneDeep(state)\n  return clonedState.logs[type]\n}\n\n/**\n * Retrieves a list of all of the SDK's Logger types.\n * @method getTypes\n * @param  {Object} state  SDK redux state.\n * @return {Array<string>}\n */\nexport function getTypes (state) {\n  const clonedState = cloneDeep(state)\n  return Object.keys(clonedState.logs)\n}\n","/**\nNote regarding this file's name:\n\nUsually plugins factories are in the index.js file of their corresponding folder.\nThis used to be the case. However this file was also being used to host the logManager\nthat is being used with the SDK.\n\nSince the logManager is being included in almost every file it was preferable to rename this\nfile rather than point 100s of files to a new place for the logManager.\n**/\n\n// Logs plugin.\nimport api from './interface/api'\nimport reducer from './interface/reducers'\nimport * as actions from './interface/actions'\n\nimport { defaultOptions /*,  parseLogConfig */ } from './config'\nimport { setLevelEntry, setHandlerEntry, getLevelMap } from './sagas'\nimport createActionLogger from './actions'\n\n// Other plugins.\nimport { update as updateConfig } from '../config/interface/actions'\nimport { mergeValues } from '../common/utils'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { logLevels } from 'kandy-logger'\nimport { logManager } from './index'\n\n// Include the extra JSDoc items.\nimport './docs'\n\nexport default function logPlugin (options = {}) {\n  const name = 'logs'\n\n  const logger = logManager.getLogger('LOGS')\n  // Make sure the configured log handler was a function.\n  if (typeof options.handler !== 'function') {\n    delete options.handler\n    logger.warn('Invalid log handler configuration provided; using default instead.')\n  }\n\n  // Make sure configured log level is supported.\n  if (options.logLevel && !Object.keys(logLevels).includes(options.logLevel.toUpperCase())) {\n    delete options.logLevel\n    logger.warn('Invalid log level configuration provided; using default instead.')\n  }\n\n  options = mergeValues(defaultOptions, options)\n\n  // Now that we have the application's log configs, update everything to\n  //    use those values instead of default values.\n  logManager.setLevel(options.logLevel)\n  if (options.handler) {\n    logManager.setHandler(options.handler)\n  }\n\n  Object.values(logManager.getLoggers()).forEach(logger => {\n    logger.setLevel(options.logLevel)\n    if (options.handler) {\n      logger.setHandler(options.handler)\n    }\n  })\n\n  function * init () {\n    // Send the provided options to the store.\n    // This will be `state.config[name]`.\n    yield put(updateConfig(options, name))\n    // Update state with the initial Logger levels.\n    yield put(actions.levelsChanged(getLevelMap(logManager)))\n  }\n\n  const components = {\n    name,\n    capabilities: ['logs'],\n    init,\n    api,\n    reducer,\n    sagas: [setLevelEntry, setHandlerEntry]\n  }\n\n  options.logLevel = options.logLevel.toUpperCase()\n  const setLevel = logLevels[options.logLevel]\n  // Consider actions to be at the INFO log level.\n  // Only export a middleware (for actions) at the appropriate levels.\n  if (setLevel <= logLevels.INFO && options.logActions !== false) {\n    components.middleware = createActionLogger(options)\n  }\n\n  return components\n}\n","// Logs plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { logManager } from './index'\n\n// Libraries.\nimport { put, takeEvery } from 'redux-saga/effects'\n\n// The SDK's name for the default/global log level.\nconst defaultType = 'DEFAULT'\n\n/**\n * Taker saga for \"set log level\" actions.\n * @method setLevelEntry\n */\nexport function * setLevelEntry () {\n  yield takeEvery(actionTypes.SET_LEVEL, setLogLevel)\n}\n\n/**\n * Taker saga for \"set log handler\" actions.\n * @method setHandlerEntry\n */\nexport function * setHandlerEntry () {\n  yield takeEvery(actionTypes.SET_HANDLER, setLogHandler)\n}\n\n/**\n * Functionality saga for \"set log level\" actions.\n * @method setLogLevel\n * @param  {Object} action\n * @param  {string} action.level\n * @param  {string} [action.type]\n */\nexport function * setLogLevel (action) {\n  const { level, type } = action.payload\n\n  try {\n    if (!type || type === defaultType) {\n      // Update the Manager's default level.\n      logManager.setLevel(level)\n      // Update all Loggers' levels.\n      logManager.getLoggers().forEach(logger => {\n        logger.setLevel(level)\n      })\n\n      // Update all Logger levels in state, because changing the default level\n      //    will affect all Loggers without their own explicit level set.\n      yield put(actions.levelsChanged(getLevelMap(logManager)))\n    } else {\n      // Update the Manager's default level for this type.\n      logManager.setLevel(type, level)\n      // Update all Loggers of this type.\n      logManager.getLoggers(type).forEach(logger => {\n        logger.setLevel(level)\n      })\n\n      // Update the one type's level in state.\n      yield put(actions.levelsChanged({ [type]: level }))\n    }\n  } catch (err) {\n    const log = logManager.getLogger('LOGS')\n    log.error(err.message)\n  }\n}\n\n/**\n * Functionality saga for \"set log handler\" actions.\n * @method setLogHandler\n * @param  {Object}   action\n * @param  {Function} action.handler\n * @param  {string}   [action.type]\n */\nexport function * setLogHandler (action) {\n  const { handler, type } = action.payload\n\n  try {\n    if (!type || type === defaultType) {\n      // Update the Manager's default level.\n      logManager.setHandler(handler)\n      // Update all Loggers' handlers.\n      logManager.getLoggers().forEach(logger => {\n        logger.setHandler(handler)\n      })\n\n      // Notify that all Logger handlers [may] have changed (because changing\n      //    the default handler will affect all Loggers without their own\n      //    handler explicitly set).\n      yield put(actions.handlersChanged(getHandlerMap(logManager)))\n    } else {\n      // Update the Manager's default handler for this type.\n      logManager.setHandler(type, handler)\n      // Update all Loggers of this type.\n      logManager.getLoggers(type).forEach(logger => {\n        logger.setHandler(handler)\n      })\n\n      // Notify that the one type's handler has changed.\n      yield put(actions.handlersChanged({ [type]: handler }))\n    }\n  } catch (err) {\n    const log = logManager.getLogger('LOGS')\n    log.error(err.message)\n  }\n}\n\n/**\n * Helper function.\n * Gets the log levels for every Logger type (and default).\n * @method getLevelMap\n * @return {Object} Mapping of Logger type to its log level.\n */\nexport function getLevelMap (logManager) {\n  // Get unique types from all Loggers.\n  const loggers = logManager.getLoggers()\n  const types = [...new Set(loggers.map(logger => logger.type))]\n\n  const levels = {}\n  // Add the default level to the beginning.\n  levels[defaultType] = logManager.getLevel()\n\n  // Get the level for each Logger type.\n  types.forEach(type => {\n    levels[type] = logManager.getLevel(type)\n  })\n\n  return levels\n}\n\n/**\n * Helper function.\n * Gets the log handler for every Logger type (and default).\n * @method getHandlerMap\n * @return {Object} Mapping of Logger type to its log handler.\n */\nexport function getHandlerMap (logManager) {\n  // Get unique types from all Loggers.\n  const loggers = logManager.getLoggers()\n  const types = [...new Set(loggers.map(logger => logger.type))]\n\n  const handlers = {}\n  // Add the default level to the beginning.\n  handlers[defaultType] = logManager.getHandler()\n\n  // Get the handler for each Logger type.\n  types.forEach(type => {\n    handlers[type] = logManager.getHandler(type)\n  })\n\n  return handlers\n}\n","const PREFIX = '@@KANDY/'\n\nexport const CREATE_CONVERSATION = PREFIX + 'CREATE_CONVERSATION'\nexport const SEND_MESSAGE = PREFIX + 'SEND_MESSAGE'\nexport const SEND_MESSAGE_FINISH = PREFIX + 'SEND_MESSAGE_FINISH'\nexport const MESSAGE_RECEIVED = PREFIX + 'MESSAGE_RECEIVED'\nexport const INCOMING_MESSAGE_READ = PREFIX + 'INCOMING_MESSAGE_READ'\nexport const SEND_MESSAGE_READ = PREFIX + 'SEND_MESSAGE_READ'\nexport const SEND_MESSAGE_READ_FINISH = PREFIX + 'SEND_MESSAGE_READ_FINISH'\n\nexport const CLEAR_MESSAGES = PREFIX + 'CLEAR_MESSAGES'\nexport const CLEAR_MESSAGES_FINISH = PREFIX + 'CLEAR_MESSAGES_FINISH'\n\nexport const DELETE_CONVERSATION = PREFIX + 'DELETE_CONVERSATION'\nexport const DELETE_CONVERSATION_FINISH = PREFIX + 'DELETE_CONVERSATION_FINISH'\n\nexport const DELETE_MESSAGE = PREFIX + 'DELETE_MESSAGES'\nexport const DELETE_MESSAGE_FINISH = PREFIX + 'DELETE_MESSAGES_FINISH'\n\nexport const FETCH_CONVERSATIONS = PREFIX + 'FETCH_CONVERSATIONS'\nexport const FETCH_CONVERSATIONS_FINISHED = PREFIX + 'FETCH_CONVERSATIONS_FINISHED'\n\nexport const UPDATE_CONVERSATION = PREFIX + 'UPDATE_CONVERSATION'\n\nexport const FETCH_MESSAGES = PREFIX + 'FETCH_MESSAGES'\nexport const FETCH_MESSAGES_FINISHED = PREFIX + 'FETCH_MESSAGES_FINISHED'\n\nexport const FILE_UPLOAD_FAIL = PREFIX + 'FILE_UPLOAD_FAIL'\n","import * as actionTypes from '../actionTypes'\n\n/**\n * Conversation actions.\n * Actions relating to the creation/management of conversation objects.\n */\n\n/**\n * Creates a create conversation action. Triggered when the user creates a new conversation object.\n *\n * @method createConversation\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {Object} options The options object can contain any keys an app may want passed along into the conversation object in the store.\n * @returns {Object} A flux standard action representing the create conversation action.\n */\nexport function createConversation (destination, options) {\n  return {\n    type: actionTypes.CREATE_CONVERSATION,\n    payload: {\n      destination: destination,\n      messages: [],\n      isTypingList: [],\n      ...options\n    }\n  }\n}\n\n/**\n * Creates a fetch conversations action. This is dispatched by the API directly.\n * @param {Object} [options] An optional configuration object to query for more specific results. If no object is passed, all threads will be retrieved\n * @method fetchConversations\n * @returns {Object} A flux standard action representing the fetch conversations action.\n */\nexport function fetchConversations (options) {\n  return {\n    type: actionTypes.FETCH_CONVERSATIONS,\n    payload: {\n      ...options\n    }\n  }\n}\n\n/**\n * Creates a fetch conversations finished action.\n * @method fetchConversationsFinished\n * @param {Object} $0\n * @param {Array} [$0.conversations] An array of conversation objects, if fetch was successful\n * @param {Object} [$0.error] An error object, only included if fetchConversations implementation had an error.\n * @returns {Object} A flux standard action representing the fetch conversations finished action.\n */\nexport function fetchConversationsFinished ({ conversations, error }) {\n  return {\n    type: actionTypes.FETCH_CONVERSATIONS_FINISHED,\n    payload: error || { conversations },\n    error: Boolean(error)\n  }\n}\n\n/**\n * Creates an update conversation action.\n *\n * @method updateConversation\n * @param {Object} conversation The conversation object\n * @param {Array} conversation.destination An array of strings representing the destinations for messages that are sent from this conversation object. This property is always required, as it is the primary property by which conversations are organized in messaging plugin\n * @param {number} [conversation.id] The conversation object's corresponding thread ID\n * @param {string} [conversation.type] The conversation type, which is expected to be one of: \"im\", \"sms\", \"group\".\n * @returns {Object} A flux standard action representing the create conversation action.\n */\nexport function updateConversation (conversation) {\n  return {\n    type: actionTypes.UPDATE_CONVERSATION,\n    payload: conversation\n  }\n}\n\n/**\n * Request to delete all the messages from a conversation.\n * @method deleteConversation\n * @param  {string} destination The destination for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @returns {Object} A flux standard action.\n */\nexport function deleteConversation (destination, type) {\n  return {\n    type: actionTypes.DELETE_CONVERSATION,\n    payload: {\n      destination: destination,\n      type: type\n    }\n  }\n}\n\n/**\n * Creates a fetch messages finished action.\n * @method deleteConversationFinish\n * @param {Object} $0\n * @param {Array} $0.destination An array of destinations for messages created in this conversation.\n * @param {string} $0.type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {Object} [$0.error] An error object, only present if an error occurred.\n * @returns {Object} A flux standard action representing the fetch messages finished action.\n */\nexport function deleteConversationFinish ({ destination, type, error }) {\n  return {\n    type: actionTypes.DELETE_CONVERSATION_FINISH,\n    payload: error || { destination, type },\n    error: !!error\n  }\n}\n","import * as messageActionsImport from './messages'\nimport * as convoActionsImport from './conversations'\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\n\n/**\n * The messaging plugin's actions are organized into three types:\n *  - message actions: those which act on message object,\n *  - convo actions: those which act on conversation objects,\n *  - group actions: those which manage groups.\n */\nexport const messageActions = messageActionsImport\nexport const convoActions = convoActionsImport\n","import * as actionTypes from '../actionTypes'\n\n/**\n * Action helper functions.\n */\n\nfunction sendMessageHelper (actionType, destination, parts, timestamp, type, id) {\n  return {\n    type: actionType,\n    payload: {\n      destination,\n      id: id,\n      message: {\n        timestamp,\n        isPending: true,\n        read: false,\n        parts,\n        type\n      }\n    }\n  }\n}\n\nfunction messageReadHelper (actionType, messageId, participant) {\n  return {\n    type: actionType,\n    payload: { messageId, participant }\n  }\n}\n\n/**\n * Message actions.\n * Actions about the CRUD of message objects.\n */\n\n/**\n * Creates a send message action. Triggered when the user initiates the send message process.\n *\n * @method sendMessage\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {Array} parts The message parts, as a formatted object.\n * @param {number} timestamp A timestamp for the sent message in seconds.\n * @param {number} id The ID of the conversation as it exists in the back end.\n * @param {string} type Type of message. 'im', 'group' or 'sms'.\n * @returns {Object} A flux standard action representing the send message action.\n */\nexport const sendMessage = (destination, parts, timestamp, type, id) =>\n  sendMessageHelper(actionTypes.SEND_MESSAGE, destination, parts, timestamp, type, id)\n\n/**\n * Creates a send message finished action. Trigged when a message send function has received a success response.\n *\n * @method sendMessageFinish\n * @param {Object} $0\n * @param {Array} $0.destination An array of destinations for messages created in this conversation.\n * @param {string} $0.sender The sender of the outgoing message.\n * @param {string} $0.type The type of conversation: can be one of 'im', 'sms' or 'group'\n * @param {Array} $0.parts The message parts.\n * @param {number} $0.timestamp A timestamp for the sent message in seconds.\n * @param {string} [$0.messageId] The returned messageId of the message if sent successfully.\n * @param {string} [$0.deliveryStatus] The status of sent message\n * @param {Object} [$0.error] A basic error object\n * @returns {Object} A flux standard action representing the send message finished action.\n */\nexport const sendMessageFinish = ({\n  destination,\n  sender,\n  type,\n  parts,\n  timestamp,\n  messageId,\n  deliveryStatus,\n  error\n}) => {\n  return {\n    type: actionTypes.SEND_MESSAGE_FINISH,\n    payload: { destination, sender, type, parts, timestamp, messageId, deliveryStatus, error },\n    error: Boolean(error)\n  }\n}\n\n/**\n * Creates a message received action. Triggered when the websocket receives a chat message.\n *\n * @method messageReceived\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {Array} parts The message parts.\n * @param {string} messageId The messageId of the message that has been received.\n * @param {string} sender The user who sent the message. This is the user who the conversation is with.\n * @param {number} timestamp A timestamp for the sent message.\n * @param {Object} meta - A meta object.\n * @param {string} meta.type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {boolean} meta.newConversation - A boolean value indicating whether the message corresponds to a conversation not yet in the store.\n * @returns {Object} A flux standard action representing the message received action.\n */\nexport function messageReceived (\n  destination,\n  parts,\n  messageId,\n  sender,\n  timestamp,\n  meta = { type: 'im', newConversation: false }\n) {\n  return {\n    type: actionTypes.MESSAGE_RECEIVED,\n    meta: meta,\n    payload: {\n      destination: destination,\n      message: {\n        timestamp: timestamp,\n        isPending: false,\n        read: false,\n        parts: parts,\n        sender: sender,\n        messageId: messageId\n      }\n    }\n  }\n}\n\n/**\n * Creates an incoming message read action. This triggers when we receive a \"Message Read\" notification over the websocket.\n *\n * @method incomingMessageRead\n * @param {string} messageId The unique id of the message being marked as read.\n * @param {string} participant The other pariticipant of the conversation.\n * @returns {Object} A flux standard action representing the incoming message read action.\n */\nexport const incomingMessageRead = (messageId, participant) =>\n  messageReadHelper(actionTypes.INCOMING_MESSAGE_READ, messageId, participant)\n\n/**\n * Creates a send message read action. This should send a \"mark message as read\" request to the server.\n *\n * @method sendMessageRead\n * @param {string} messageId The unique id of the message being marked as read.\n * @param {string} participant The other pariticipant of the conversation.\n * @returns {Object} A flux standard action representing the send message read action.\n */\nexport const sendMessageRead = (messageId, participant) =>\n  messageReadHelper(actionTypes.SEND_MESSAGE_READ, messageId, participant)\n\n/**\n * Creates a send message read finish action. This triggers on server response when attempting to mark a message read.\n *\n * @method sendMessageReadFinish\n * @param {Object} $0\n * @param {string} $0.messageId The unique id of the message being marked as read.\n * @param {string} $0.participant The other participant of the conversation.\n * @param {Object} $0.error A Basic error object.\n * @returns {Object} A flux standard action representing the send message read finish action.\n */\nexport function sendMessageReadFinish ({ messageId, participant, error }) {\n  return {\n    type: actionTypes.SEND_MESSAGE_READ_FINISH,\n    payload: error || { messageId, participant },\n    error: Boolean(error)\n  }\n}\n\n/**\n * Creates a fetch messages action. This is dispatched by the API directly.\n * @method fetchMessages\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {number} amount A number representing the amount of messages to fetch.\n * @returns {Object} A flux standard action representing the fetch messages action.\n */\nexport function fetchMessages (destination, amount, type) {\n  return {\n    type: actionTypes.FETCH_MESSAGES,\n    payload: { destination, amount, type }\n  }\n}\n\n/**\n * Creates a fetch messages finished action.\n * @method fetchMessagesFinished\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {Array} messages An array of formatted messages to put into the store.\n * @param {Object} [error] An error object, only present if an error occurred.\n * @returns {Object} A flux standard action representing the fetch messages finished action.\n */\nexport function fetchMessagesFinished (destination, type, messages, error) {\n  return {\n    type: actionTypes.FETCH_MESSAGES_FINISHED,\n    payload: error || { destination, type, messages },\n    error: !!error\n  }\n}\n\n/**\n * Request to clear messages from a conversation's state.\n * @method clearMessages\n * @param  {string} destination The destination for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @returns {Object} A flux standard action.\n */\nexport function clearMessages (destination, type) {\n  return {\n    type: actionTypes.CLEAR_MESSAGES,\n    payload: {\n      destination: destination,\n      type: type\n    }\n  }\n}\n\n/**\n * Request to delete all the messages from a conversation.\n * @method deleteMessage\n * @param  {string} destination The destination for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {string} messageId The ID of the message targeted for deletion\n * @returns {Object} A flux standard action.\n */\nexport function deleteMessage (destination, type, messageId) {\n  return {\n    type: actionTypes.DELETE_MESSAGE,\n    payload: {\n      destination: destination,\n      type: type,\n      messageId: messageId\n    }\n  }\n}\n\n/**\n * Creates a fetch messages finished action.\n * @method deleteMessagesFinish\n * @param {Object} $0\n * @param {Array} $0.destination An array of destinations for messages created in this conversation.\n * @param {string} $0.type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {string} $0.messageId The ID of the message that was targeted for deletion\n * @param {Object} [$0.error] An error object, only present if an error occurred.\n * @returns {Object} A flux standard action representing the fetch messages finished action.\n */\nexport function deleteMessageFinish ({ destination, type, messageId, error }) {\n  return {\n    type: actionTypes.DELETE_MESSAGE_FINISH,\n    payload: error || { destination, type, messageId },\n    error: !!error\n  }\n}\n","/**\n * The messaging feature revolves around a 'conversation' namespace. It is responsible to store the conversations\n * and its messages, and return conversation objects when requested.\n *\n * See the \"Conversation\" and \"Message\" sections of the documentation for more details.\n *\n *\n * Messaging functions are all part of the 'conversation' namespace. Ex: client.conversation.get('id').\n *\n * @public\n * @namespace conversation\n */\n\nimport { convoActions } from './actions'\nimport { getConversations as selectConversations, findConversation } from './selectors'\nimport { logManager, API_LOG_TAG } from '../../logs'\n\n// Retrieve logger\nconst log = logManager.getLogger('MESSAGING')\n\nexport default function api (context) {\n  const messagingApi = {\n    // TODO: Revise this API's argument, since it is using names that are defined by CIM  they are not very descriptive.\n    /**\n     * Attempts to retrieve a list of conversations that the current user is a part of.\n     * These conversations can then be retrieved from the store using get().\n     *\n     * @public\n     * @param {Object} [options] An optional configuration object to query for more specific results.\n     * If no object is passed, all threads will be retrieved.\n     * @param {string} [options.touched] The unix timestamp in seconds representing the date from which\n     *  to return any threads that have changed. Can also pass the string literal \"lastcheck\", resulting in\n     *  the back-end making use of the most recent date value provided in a previous request\n     * @param {string} [options.type] Limit results to one of: \"internal\", \"sms\", \"group\" or \"unknown\".\n     * @param {string|number} [options.thread] Limit results to one thread specified by its thread handle.\n     * @memberof conversation\n     * @requires fetchConversations\n     * @method fetch\n     */\n    fetch: function (options = {}) {\n      log.debug(API_LOG_TAG + 'conversation.fetch: ', options)\n\n      context.dispatch(convoActions.fetchConversations(options))\n    },\n    /**\n     * Get a conversation object matching the user ID provided in the 'destination' parameter.\n     * If successful, the event 'conversations:change' will be emitted.\n     *\n     * This API will retrieve a conversation already existing in the store.\n     *\n     * @public\n     * @memberof conversation\n     * @requires onlyInternalMessaging\n     * @method get\n     * @param {string} destination The destination for messages created in this conversation. This will\n     * be a user's sip address.\n     * @param {Object} [options] An optional configuration object to query for more specific results.\n     * If this object is not passed, the function will query for \"im\" conversation with that recipient.\n     * @param {string} [options.type] The type of conversation to retrieve. Can be one of \"im\", \"sms\" or \"other\".\n     * @returns {conversation.Conversation} A Conversation object matching the passed destination, otherwise undefined is returned.\n     */\n    /**\n     * Get a conversation object matching the user IDs provided in the 'destination' parameter.\n     * If successful, the event 'conversations:change' will be emitted.\n     * Multi-user conversations have a destination comprised of multiple user IDs.\n     *\n     * @public\n     * @memberof conversation\n     * @requires multiUserConversation\n     * @method get\n     * @param {Array} destination An array of destinations for messages created in this conversation.\n     * These will be a user's sip address.\n     * @param {Object} [options] An optional configuration object to query for more specific results.\n     * If this object is not passed, the function will query for \"im\" conversations associated with those destinations.\n     * @param {string} [options.type] The type of conversation to retrieve. Can be one of \"im\", \"sms\" or \"other\".\n     * @returns {conversation.Conversation} A Conversation object matching the passed destination, otherwise undefined is returned.\n     */\n    /**\n     * Get a conversation object matching the user ID provided in the 'recipient' parameter.\n     *\n     * This API will retrieve a conversation already existing in the store.\n     *\n     * @public\n     * @memberof conversation\n     * @requires internalAndSmsMessaging\n     * @method get\n     * @param {string} recipient The destination for messages created in this conversation. This\n     * will be a user's sip address.\n     * @param {Object} [options] An optional configuration object to query for more specific results.\n     * If this object is not passed, the function will query for \"im\" conversation with that recipient.\n     * @param {string} [options.type] The type of conversation to retrieve. Can be one of \"im\", \"sms\" or \"other\".\n     * @returns {Object} A Conversation object matching the passed recipient, otherwise undefined is returned.\n     */\n    get: function (recipient, options = { type: 'im' }) {\n      log.debug(API_LOG_TAG + 'conversation.get: ', recipient, options)\n      let destination = Array.isArray(recipient) ? [...recipient] : [recipient]\n      let description = 'Conversation'\n      let messages\n      let id\n\n      const conversation = findConversation(context.getState(), destination, options.type)\n      if (conversation) {\n        if (options.type === conversation.type) {\n          description = conversation.description\n          messages = conversation.messages\n          id = conversation.id\n\n          return context.primitives.Conversation({\n            destination,\n            type: options.type,\n            id: id,\n            description,\n            messages: messages,\n            lastMessage: conversation.lastMessage,\n            isTypingList: conversation.isTypingList,\n            lastReceived: conversation ? conversation.lastReceived : undefined,\n            lastPull: conversation ? conversation.lastPull : undefined\n          })\n        } else {\n          log.info(\n            'Conversation found with matching destination, but conversation type does not match the type requested. Please specify the appropriate type, or call client.conversation.create() for a new type of conversation'\n          )\n        }\n      } else {\n        log.info(\n          'Requested conversation not in state. Please use the create function if you would like a new conversation object.'\n        )\n      }\n      return undefined\n    },\n    /**\n     * Create and return a new conversation object. Any messages being sent through this conversation\n     * object will be sent to the destination provided\n     *\n     * @public\n     * @memberof conversation\n     * @requires internalAndSmsMessaging\n     * @method create\n     * @param {string} recipient\n     * @param options\n     * @returns {Object} a Conversation object\n     */\n    /**\n     * Create and return a new conversation object. Any messages being sent through this conversation\n     * object will be sent to the destinations provided\n     *\n     * @public\n     * @memberof conversation\n     * @requires multiUserConversation\n     * @method create\n     * @param {Array} recipient An array of destinations for messages created in this conversation. These will be a user's sip address.\n     * @param {string} type The type of conversation to create. Can be one of \"im\", \"sms\", \"group\" or \"other\"\n     * @param options\n     * @returns {Object} a Conversation object\n     */\n    create: function (recipient, options = { type: 'im' }) {\n      log.debug(API_LOG_TAG + 'conversation.create: ', recipient, options)\n      const destination = Array.isArray(recipient) ? recipient : [recipient]\n      const prevConv = findConversation(context.getState(), destination, options.type)\n\n      if (!prevConv) {\n        context.dispatch(convoActions.createConversation(destination, options))\n      }\n\n      return context.primitives.Conversation({\n        destination,\n        type: options.type\n      })\n    },\n    /**\n     * Returns all conversations currently tracked by the SDK\n     *\n     * @public\n     * @memberof conversation\n     * @requires internalAndSmsMessaging\n     * @requires onlyInternalMessaging\n     * @method getAll\n     * @returns {Array<conversation.Conversation>} An array of conversation objects.\n     */\n    getAll: function () {\n      log.debug(API_LOG_TAG + 'conversation.getAll')\n      const conversations = selectConversations(context.getState())\n\n      // Map conversation Objects to Conversation-Mixin Objects\n      return conversations.map(conversation => context.primitives.Conversation(conversation))\n    }\n  }\n  return { conversation: messagingApi }\n}\n","/**\n * A new conversation has been created and added to the state.\n *\n * @public\n * @memberof conversation\n * @event conversations:new\n */\nexport const CONVERSATIONS_NEW = 'conversations:new'\n\n/**\n * A change has occurred in the conversation list.\n *\n * @public\n * @memberof conversation\n * @event conversations:change\n * @param {Array} params An array of objects containing information about the conversations that have changed\n * @param {Array} params.destination The destination for messages created in this conversation.\n * @param {string} params.type The type of conversation to create. Can be one of \"chat\", \"im\", \"sms\" or \"group\"\n */\nexport const CONVERSATIONS_CHANGE = 'conversations:change'\n\n/**\n * A change has occurred in a specific conversations message list.\n * If a single message was affected/created, `messageId` will be present\n * as part of the event argument.\n *\n * @public\n * @memberof conversation\n * @event messages:change\n * @param {Object} params\n * @param {string} params.destination The destination for messages created in this conversation.\n * @param {string} params.type The type of conversation to create. Can be one of \"chat\", \"im\", \"sms\" or \"group\"\n * @param {string} [params.messageId] The ID of the message affected.\n * @param {string} [params.sender] The username of the sender of the message which caused the `messages:change` event to be triggered.\n */\nexport const MESSAGES_CHANGE = 'messages:change'\n\n/**\n * An error occurred with messaging.\n *\n * @public\n * @memberof conversation\n * @event messages:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const MESSAGES_ERROR = 'messages:error'\n","import * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\nimport { isEqual } from 'lodash/fp'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.CREATE_CONVERSATION] = function (action) {\n  return {\n    type: eventTypes.CONVERSATIONS_NEW\n  }\n}\n\neventsMap[actionTypes.SEND_MESSAGE_FINISH] = function (action) {\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: {\n      destination: action.payload.destination,\n      type: action.payload.type,\n      messageId: action.payload.messageId,\n      sender: action.payload.sender\n    }\n  }\n}\n\neventsMap[actionTypes.MESSAGE_RECEIVED] = function (action) {\n  let { meta, payload } = action\n  if (meta.newConversation) {\n    return {\n      type: eventTypes.CONVERSATIONS_CHANGE,\n      args: [\n        {\n          destination: payload.destination,\n          type: action.meta.type\n        }\n      ]\n    }\n  }\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: {\n      destination: payload.destination,\n      messageId: payload.message.messageId,\n      type: action.meta.type\n    }\n  }\n}\n\neventsMap[actionTypes.FETCH_CONVERSATIONS_FINISHED] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGING_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.CONVERSATIONS_CHANGE,\n      args: action.payload.conversations.map(conversation => {\n        return {\n          destination: conversation.destination,\n          type: conversation.type\n        }\n      })\n    }\n  }\n}\n\neventsMap[actionTypes.DELETE_CONVERSATION_FINISH] = function (action, { state }) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGES_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.CONVERSATIONS_CHANGE,\n      args: state.messaging.conversations.map(conversation => {\n        if (\n          !(isEqual(conversation.destination, action.payload.destination) && conversation.type === action.payload.type)\n        ) {\n          return {\n            destination: conversation.destination,\n            type: conversation.type\n          }\n        }\n      })\n    }\n  }\n}\n\neventsMap[actionTypes.FETCH_MESSAGES_FINISHED] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGING_ERROR,\n      args: action.payload\n    }\n  } else {\n    return {\n      type: eventTypes.MESSAGES_CHANGE,\n      args: {\n        destination: action.payload.destination,\n        type: action.payload.type\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.CLEAR_MESSAGES] = function (action) {\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: action.payload\n  }\n}\n\neventsMap[actionTypes.DELETE_MESSAGE_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGES_ERROR,\n      args: action.payload\n    }\n  } else {\n    return {\n      type: eventTypes.MESSAGES_CHANGE,\n      args: {\n        destination: action.payload.destination,\n        type: action.payload.type\n      }\n    }\n  }\n}\n\nexport default eventsMap\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\nimport mixins from './mixins'\n\n/**\n * This interface is for a messaging plugin.\n * @type {string}\n */\nconst name = 'messaging'\n\nexport default {\n  name,\n  api,\n  reducer,\n  mixins\n}\n","/**\n * A Conversation object represents a conversation between either two users, or a\n * user and a group. A Conversation can create messages via the conversation's\n * {@link conversation.Conversation.createMessage createMessage()} function.\n * @public\n * @static\n * @typedef {Object} Conversation\n * @memberof conversation\n * @requires richMessagingWithoutLocation\n * @property {string} destination The Id of the remote user with which the current user is having a conversation.\n * @property {number} lastReceived The timestamp (milliseconds since epoch) of when a message was last received in this conversation.\n */\n// `features` and `lastPull` are not documented because they're intended to be internal\n// `type` is not documented because as of now there are no types other than 'im'\n\n/**\n * A Conversation object represents a conversation between either two users, or a\n * user and a group. A Conversation can create messages via the conversation's\n * {@link conversation.Conversation.createMessage createMessage()} function.\n * @public\n * @static\n * @typedef {Object} Conversation\n * @memberof conversation\n * @requires simpleMessagingOnly\n * @property {string} destination The id of the remote user with which the current user is having a conversation.\n */\n\n/**\n * A Message object is a means by which a sender can deliver information to a recipient.\n *\n * Creating and sending a message:\n *\n * A message object can be obtained through the {@link conversation.Conversation.createMessage Conversation.createMessage} API on an existing conversation.\n *\n * Messages have Parts which represent pieces of a message, such as a text part, a json object part or a file part.\n * Once all the desired parts have been added to the message using the {@link conversation.Message.addPart Message.addPart} function,\n * the message can then be sent using the {@link conversation.Message.send Message.send} function.\n *\n * Once the sender sends a message, this message is saved in sender's state as an object.\n * Similarly, once the recipient gets a message, this message is saved in recipient's state.\n *\n * Retrieving a delivered message:\n *\n * Once a message is delivered successfully, it can be\n * obtained through the {@link conversation.Conversation.getMessages Conversation.getMessages} or {@link conversation.Conversation.getMessage Conversation.getMessage} API on an existing conversation.\n *\n * Below are the properties pertaining to the message object, returned by Conversation.getMessage(s) APIs, for either sender or recipient.\n *\n * @property {number} timestamp A Unix timestamp in seconds marking the time when the message was created by sender.\n * @property {Array<conversation.Part>} parts An array of Part Objects.\n * @property {string} sender The primary contact address of the sender.\n * @property {Array<string>} destination An array of primary contact addresses associated with various destinations to which the message is meant to be delivered.\n * @property {string} messageId The unique id of the message. The message object (stored in sender's state) has a different id\n * than the one associated with the message object stored in recipient's state.\n * @property {string} type The type of message that was sent. See {@link conversation.chatTypes} for valid types.\n * This property applies only to message objects stored in sender's state.\n *\n * @public\n * @static\n * @typedef {Object} Message\n * @memberof conversation\n */\n\nimport { find, includes, isEqual } from 'lodash/fp'\nimport { convoActions, messageActions } from './actions'\n\nimport { getMessagingConfig, findConversation } from './selectors'\nimport { getUserInfo } from '../../auth/interface/selectors'\nimport compose from 'stampit/compose'\n// Events\nimport { emitEvent } from '../../events/interface/actions'\nimport { MESSAGING_ERROR } from './eventTypes'\n\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('MESSAGING')\n\n/**\n * Base conversation stamp\n *\n * @param {Array} destination The Destination for messages being sent through\n * this conversation in this instance of the SDK. This should be an Array with any number of user IDs\n * @param {string} type='im' The type of the message.\n * @param {string} id=undefined The unique identifier for base conversation.\n * @param {string} description='' The description associated with base conversation.\n * @param {Array} messages=[] An array containing the conversation's messages.\n * @param {number} lastReceived The timestamp associated with the last received message.\n * @param {string} lastMessage This is the last received message in a given conversation, as delivered by server.\n */\nconst conversationBase = {\n  initializers: [\n    function ({\n      destination,\n      type = 'im',\n      id = undefined,\n      description = '',\n      messages = [],\n      isTypingList = [],\n      lastReceived,\n      lastPull,\n      lastMessage = ''\n    }) {\n      this.destination = destination\n      this.type = type\n      this.description = description\n      this.messages = messages\n      this.lastMessage = lastMessage\n      this.isTypingList = isTypingList\n      this.id = id\n      const features = getMessagingConfig(this.context.getState()).features\n      if (this.destination.length === 1) {\n        const groupIndex = features.indexOf('group')\n        if (groupIndex > -1) {\n          features.splice(groupIndex, 1)\n        }\n      }\n      this.features = features\n      this.lastReceived = lastReceived\n      this.lastPull = lastPull\n      this.isPending = false\n    }\n  ],\n\n  methods: {\n    /**\n     * Create and return a message object. You must specify the part. If this is a simple text message, provide a `text` part as demonstrated in the example.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires richMessaging\n     * @constructs Message\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Can be \"text\", \"json\", \"file\", or \"location\".\n     * @param {string} [part.text] The text of the part. Must be a part of type \"text\".\n     * @param {Object} [part.json] The json of the part. Must be a part of type \"json\".\n     * @param {File} [part.file] The file of the part. Must be a part of type \"file\".\n     * @param {Object} [part.location] The location of the part. Must be a part of type \"location\".\n     * @param {number} [part.location.longitude] The longitude of the location.\n     * @param {number} [part.location.latitude] The latitude of the location.\n     * @returns {Object} The newly created Message object.\n     *\n     * @example\n     * conversation.createMessage({type: 'text', text: 'This is the message'});\n     */\n    /**\n     * Create and return a message object. You must specify the part. If this is a simple text message, provide a `text` part as demonstrated in the example.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires richMessagingWithoutLocation\n     * @constructs Message\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Can be \"text\", \"json\", \"file\".\n     * @param {string} [part.text] The text of the part. Must be a part of type \"text\".\n     * @param {Object} [part.json] The json of the part. Must be a part of type \"json\".\n     * @param {File} [part.file] The file of the part. Must be a part of type \"file\".\n     * @returns {conversation.Message} The newly created Message object.\n     *\n     * @example\n     * conversation.createMessage({type: 'text', text: 'This is the message'});\n     */\n    /**\n     * Create and return a message object. You must provide a `text` part as demonstrated in the example.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires simpleMessagingOnly\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Must be \"text\".\n     * @param {string} part.text The text of the part. Must be a part of type \"text\".\n     * @returns {conversation.Message} The newly created Message object.\n     *\n     * @example\n     * conversation.createMessage({type: 'text', text: 'This is the message'});\n     */\n    createMessage (part) {\n      const messageContext = {\n        features: this.features,\n        isGroup: this.destination.length > 1,\n        id: this.id,\n        type: this.type\n      }\n      return this.context.primitives.Message({\n        destination: this.destination,\n        part,\n        context: messageContext,\n        type: this.type\n      })\n    },\n\n    /**\n     * Clears all messages in this conversation from local state.\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method clearMessages\n     */\n    clearMessages () {\n      this.context.dispatch(messageActions.clearMessages(this.destination, this.type))\n    },\n\n    /**\n     * Get the messages associated with this conversation.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @returns {Object[]} messages An array containing the conversation's messages.\n     * @returns {Function} messages.markRead Marks the message as read.\n     * @returns {Function} messages.forward Forward the message to another user.\n     * @returns {string} messages.messageId The Id of the message.\n     * @returns {string} messages.sender The user Id of the user who sent the message.\n     * @returns {number} messages.timestamp The time at which the message was sent.\n     * @returns {boolean} messages.read Whether the message has been marked as read.\n     * @returns {boolean} messages.isPending Whether the message has finished being sent to the server.\n     * @returns {Array} messages.parts The parts of the message.\n     */\n    getMessages: function () {\n      const convo = findConversation(this.context.getState(), this.destination, this.type)\n\n      return convo.messages.map(message => {\n        message.forward = participant => {\n          this.context.dispatch(messageActions.sendMessage(participant, message.parts, Date.now(), this.type, this.id))\n        }\n\n        const userInfo = getUserInfo(this.context.getState())\n        // Only allow the end user to markRead on message that were incoming.\n        if (message.sender !== userInfo.username) {\n          message.markRead = () => {\n            this.context.dispatch(messageActions.sendMessageRead(message.messageId, this.destination))\n          }\n        }\n        return message\n      })\n    },\n\n    /**\n     * Get a specific message from this conversation.\n     * @public\n     * @static\n     * @method getMessage\n     * @memberof conversation.Conversation\n     * @param {string} messageId ID of the message to retrieve.\n     * @return {Object} A message object.\n     */\n    getMessage (messageId) {\n      const convo = findConversation(this.context.getState(), this.destination, this.type)\n      const message = find(message => message.messageId === messageId)(convo.messages)\n\n      if (!message) {\n        log.debug(`Message (${messageId}) not found in conversation (${this.destination}).`)\n        return\n      }\n\n      // TODO: Have a helper that \"augments\" messages.\n      // \"Augment\" the message like we do in `getMessages`.\n      message.forward = participant => {\n        this.context.dispatch(messageActions.sendMessage(participant, message.parts, Date.now(), this.type, this.id))\n      }\n      // Only allow the end user to markRead on message that were incoming.\n      const userInfo = getUserInfo(this.context.getState())\n      if (message.sender !== userInfo.username) {\n        message.markRead = () => {\n          this.context.dispatch(messageActions.sendMessageRead(message.messageId, this.destination))\n        }\n      }\n      return message\n    },\n\n    /**\n     * Delete messages from this conversation. Provide an array of message IDs representing the messages for which the DELETE_MESSAGE action will be dispatched. If no message IDs are provided, all of the messages will be deleted.\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires richMessaging\n     * @method deleteMessages\n     * @param {Array} messageIds An array of message IDs\n     */\n    deleteMessages: function (messageIds = []) {\n      if (messageIds.length === 0) {\n        // If this method was called without providing any specific message IDs, we will assume that all messages should be deleted\n        this.messages.forEach(message => messageIds.push(message.messageId))\n      }\n      messageIds.forEach(messageId => {\n        this.context.dispatch(messageActions.deleteMessage(this.destination, this.type, messageId))\n      })\n    },\n\n    /**\n     * Delete this conversation on the server\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires richMessaging\n     * @method delete\n     */\n    delete: function () {\n      this.context.dispatch(convoActions.deleteConversation(this.destination, this.type))\n    },\n\n    /**\n     * Subscribe to this conversations messages array.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @param {Function} subscriber A subscriber function to be triggered when the messages array of this conversation is updated.\n     * @param {string} subscriber.destination The conversation participants.\n     * @param {string} subscriber.messageId The ID of the message that caused the event.\n     * @return {Function} The unsubscribe function.\n     */\n    subscribe: function (subscriber) {\n      if (subscriber) {\n        // Create a subscriber wrapper to properly determine if this messages:change event is relevant to this convo\n        // TODO: we might need to change the name of `conversationId` as it is used here. Conversations have actual IDs in the backend, which are an integer value rather than an array of strings, as is the case with destination. We track conversation IDs, as they exist in the back end, as we are required to identify the conversation by `id` when performing actions in the backend on a Group Conversation.\n        const subscriberWrapper = ({ destination, messageId }) => {\n          if (isEqual(destination, this.destination)) {\n            subscriber({ destination, messageId })\n          }\n        }\n        // Subscribe to the messages:change event with the wrapped subscriber\n        this.context.api.on('messages:change', subscriberWrapper)\n\n        // Return the unsubscribe function\n        return () => {\n          this.context.api.off('messages:change', subscriberWrapper)\n        }\n      }\n    }\n  }\n}\n\n/*\n * Conversation history stamp. Handles any functions that retrieve history from the server concerning conversations.\n */\nconst conversationHistory = {\n  initializers: [\n    function () {\n      const features = getMessagingConfig(this.context.getState()).features\n      if (!includes('history', features)) {\n        const prototype = Object.getPrototypeOf(this)\n        delete prototype.fetchMessages\n      }\n      return this\n    }\n  ],\n  methods: {\n    /**\n     * Allows the user to fetch messages associated with a specific conversation from the server.\n     * When the operation is complete, a NEW_MESSAGE event will be emitted.\n     * Messages can then be retrieved using getMessages.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method fetchMessages\n     * @param {number} [amount=50] An amount of messages to fetch.\n     */\n    fetchMessages: function (amount = 50) {\n      this.context.dispatch(messageActions.fetchMessages(this.destination, amount, this.type))\n    }\n  }\n}\n\n/*\n * base Message stamp\n * @param {string} destination The Destination for messages being sent through\n * this conversation in this instance of the SDK. This can be one or many users,\n * separated by commas `,`\n * @param  {Object} part - Initial part to the message.\n * @param  {Object} context - Information and capabilities for how the message will act with regard to the conversation.\n * @param  {Array} context.features - List of features the conversation supports.\n * @param  {Function} context.send - Function for sending the message.\n * @param  {string} type=im - The type of the message\n */\nconst messageBase = {\n  initializers: [\n    function ({ destination, part, context, type = 'im' }) {\n      this.destination = Array.isArray(destination) ? destination : [destination]\n      this.convoContext = context\n      this.type = destination.length > 1 ? 'group' : type\n      if (typeof part === 'string') {\n        part = { type: 'text', text: part }\n      }\n      this.parts = [part]\n    }\n  ],\n  methods: {\n    /**\n     * Sends the message.\n     *\n     * @public\n     * @static\n     * @method send\n     * @memberof conversation.Message\n     */\n    send () {\n      log.debug('Send message', this)\n      this.context.dispatch(\n        messageActions.sendMessage(this.destination, this.parts, Date.now(), this.type, this.convoContext.id)\n      )\n    }\n  }\n}\n\n/**\n * stamp to add message parts capabilities to a Message primitive\n * @name withParts\n * @param  {Object} context - Information and capabilities for how the message will act with regard to the conversation.\n * @param  {Array} context.features - List of features the conversation supports.\n */\nconst withParts = {\n  initializers: [\n    function ({ context: { features = [] } }) {\n      if (!includes('parts', features)) {\n        const prototype = Object.getPrototypeOf(this)\n        delete prototype.addPart\n      }\n      return this\n    }\n  ],\n  methods: {\n    /**\n     * Add an additional part to a message.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Message\n     * @requires richMessaging\n     * @memberof withParts\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Can be \"text\", \"json\", \"file\", or \"location\".\n     * @param {string} [part.text] The text of the part. Must be a part of type \"text\".\n     * @param {Object} [part.json] The json of the part. Must be a part of type \"json\".\n     * @param {File} [part.file] The file of the part. Must be a part of type \"file\".\n     * @param {Object} [part.location] The location of the part. Must be a part of type \"location\".\n     * @param {number} [part.location.longitude] The longitude of the location.\n     * @param {number} [part.location.latitude] The latitude of the location.\n     */\n    /**\n     * Add an additional part to a message.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Message\n     * @requires richMessagingWithoutLocation\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Can be \"text\", \"json\", \"file\", or \"location\".\n     * @param {string} [part.text] The text of the part. Must be a part of type \"text\".\n     * @param {Object} [part.json] The json of the part. Must be a part of type \"json\".\n     * @param {File} [part.file] The file of the part. Must be a part of type \"file\".\n     */\n    addPart (part) {\n      // Validate the part. If not valid, returns an error.\n      const validationResponse = validatePart(part, this.convoContext.features)\n      if (validationResponse instanceof Error) {\n        this.context.dispatch(emitEvent(MESSAGING_ERROR, { error: validationResponse.message }))\n      }\n      this.parts.push(part)\n    }\n  }\n}\n\n/*\n * A helper function to validate inputs. Will be progressively updated as we\n * allow for more and more input types.\n */\nlet validatePart = function (part, features) {\n  if (part.hasOwnProperty('type')) {\n    if (part.hasOwnProperty(part.type)) {\n      let validTypeFlag = false\n      switch (part.type) {\n        case 'text':\n          validTypeFlag = true\n          break\n        case 'file':\n          validTypeFlag = features.indexOf('rich') !== -1\n          break\n        case 'location':\n          validTypeFlag = features.indexOf('rich') !== -1\n          break\n        case 'json':\n          validTypeFlag = features.indexOf('rich') !== -1\n      }\n      return validTypeFlag || new Error(`Part of type \"${part.type}\" is not supported`)\n    } else {\n      return new Error('A message part must have a payload corresponding with its declared type')\n    }\n  } else {\n    return new Error('A message part must have a type. Options are: [text, file, location, json]')\n  }\n}\n\nexport default {\n  Conversation: compose(\n    conversationBase,\n    conversationHistory\n  ),\n  Message: compose(\n    messageBase,\n    withParts\n  )\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { unionBy, unionWith, sortBy, isEqual } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.CREATE_CONVERSATION] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: [...state.conversations, { ...action.payload }]\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_CONVERSATIONS_FINISHED] = {\n  next (state, action) {\n    // TODO: does not persist conversations unique to local state\n    return {\n      ...state,\n      conversations: unionWith(\n        (a, b) => isEqual(a.destination, b.destination) && a.type === b.type, // Comparator\n        action.payload.conversations,\n        state.conversations // Conversation arrays\n      )\n    }\n  }\n}\n\nreducers[actionTypes.UPDATE_CONVERSATION] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return { ...conversation, ...action.payload }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_MESSAGES] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            isPending: true\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_MESSAGES_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: sortBy('timestamp', unionBy('messageId', action.payload.messages, conversation.messages)),\n            isTypingList: [],\n            isPending: false\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.SEND_MESSAGE] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.message.type\n        ) {\n          return {\n            ...conversation,\n            messages: [...conversation.messages, action.payload.message]\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.INCOMING_MESSAGE_READ] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => {\n              if (message.messageId === action.payload.messageId) {\n                return { ...message, read: true }\n              }\n              return message\n            })\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.SEND_MESSAGE_READ_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => {\n              if (message.messageId === action.payload.messageId) {\n                return { ...message, read: true }\n              }\n              return message\n            })\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.MESSAGE_RECEIVED] = {\n  next (state, action) {\n    if (action.meta.newConversation) {\n      return {\n        ...state,\n        conversations: [\n          ...state.conversations,\n          {\n            destination: action.payload.destination,\n            messages: [action.payload.message],\n            type: action.meta.type,\n            lastReceived: action.payload.message.timestamp\n          }\n        ]\n      }\n    } else {\n      return {\n        ...state,\n        conversations: state.conversations.map(conversation => {\n          if (isEqual(conversation.destination, action.payload.destination) && conversation.type === action.meta.type) {\n            return {\n              ...conversation,\n              messages: [...conversation.messages, action.payload.message],\n              lastReceived: action.payload.message.timestamp\n            }\n          }\n          return conversation\n        })\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SEND_MESSAGE_FINISH] = (state, action) => {\n  return {\n    ...state,\n    conversations: state.conversations.map(conversation => {\n      if (isEqual(conversation.destination, action.payload.destination) && conversation.type === action.payload.type) {\n        return {\n          ...conversation,\n          messages: conversation.messages.map(message => sendMessageFinishHelper(message, action))\n        }\n      }\n      return conversation\n    })\n  }\n}\n\n// Remove all messages from the specified conversation.\nreducers[actionTypes.CLEAR_MESSAGES] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: []\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.DELETE_MESSAGE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.filter(message => message.messageId !== action.payload.messageId)\n          }\n        }\n        return conversation\n      })\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.DELETE_CONVERSATION_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.filter(\n        conversation =>\n          !(isEqual(conversation.destination, action.payload.destination) && conversation.type === action.payload.type)\n      )\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\n/*\n * Combine all of reducers into a single reducer, with\n *      a default state of an empty array.\n */\nconst reducer = handleActions(reducers, { conversations: [], errors: [] })\nexport default reducer\n\n/**\n * sendMessageFinishHelper\n *\n * A helper function to make dealing with the messages array in SEND_MESSAGE_FINISH\n * a little bit easier.\n *\n * @param {Object} message\n * @param {Object} action\n */\nfunction sendMessageFinishHelper (message, action) {\n  if (message.timestamp === action.payload.timestamp) {\n    if (action.payload.error) {\n      message = {\n        ...message,\n        sender: action.payload.sender,\n        isPending: false,\n        messageId: null,\n        error: action.payload.error\n      }\n    } else {\n      message = {\n        ...message,\n        sender: action.payload.sender,\n        isPending: false,\n        messageId: action.payload.messageId,\n        parts: action.payload.parts\n      }\n    }\n    if (action.payload.deliveryStatus) {\n      message.deliveryStatus = action.payload.deliveryStatus\n    }\n  } else {\n    message = { ...message }\n  }\n  return message\n}\n","import { cloneDeep, isEqual } from 'lodash/fp'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to retrieve\n *      specific portions of the state.\n */\n\n/**\n * Retrieves the config options provided by the messaging plugin.\n * @method getMessagingConfig\n * @return {Object}\n */\nexport function getMessagingConfig (state) {\n  return cloneDeep(state.config.messaging)\n}\n\n/**\n * Retrieves conversations from the store pertaining to messaging.\n * @method getConversations\n * @return {Object}\n */\nexport function getConversations (state) {\n  return cloneDeep(state.messaging.conversations)\n}\n\n/**\n * Retrieves the messages from the store pertaining to a specific messaging\n * conversation.\n * @method getMessages\n * @return {Object}\n */\nexport function getMessages (state, conversationId) {\n  return cloneDeep(state.messaging.conversations[conversationId].messages)\n}\n\n/**\n * Searches for a conversation by its destination, which represents the destination\n * for all messages being sent to this conversation from this instance of the SDK\n *\n * @param state\n * @param {Array} destination A subscriber handle or a comma-separated list\n * of subscriber handles\n * @param {string} type The type of conversation: can be one of 'im', 'sms' or 'group'\n * @returns {Object}\n */\nexport function findConversation (state, destination, type = 'im') {\n  return cloneDeep(\n    state.messaging.conversations.find(conversation => {\n      return isEqual(conversation.destination, destination) && conversation.type === type\n    })\n  )\n}\n\n/**\n * Searches for a member in a conversation and returns their name\n *\n * @param state\n * @param {string} destination A subscriber handle or a comma-separated list\n * of subscriber handles\n * @param id {number} User ID for the specific conversation member for whom we are searching\n * @returns {*}\n */\nexport function findMember (state, destination, id) {\n  const conv = state.messaging.conversations.find(conversation => conversation.destination === destination)\n  if (conv) {\n    return cloneDeep(conv.members.find(member => member.id === id))\n  }\n}\n","// Redux-Saga\nimport { put } from 'redux-saga/effects'\n// Events\nimport eventsMap from '../interface/events'\nimport { mapEvents } from '../../events/interface/actions'\n\nimport { update as updateConfig } from '../../config/interface/actions'\nimport { logManager } from '../../logs'\n\nimport { defaults } from 'lodash/fp'\n\nimport { sendMessage, receiveMessage } from './sagas'\n\n// The interface to implement.\nimport pluginInterface from '../interface'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from '../../../src/common/validation'\n\n// Get the logger\nconst log = logManager.getLogger('MESSAGING')\n\nconst defaultOptions = {\n  features: ['base']\n}\n\nconst v8nValidation = v8n.schema({\n  features: v8n.array().every.string()\n})\nconst parseOptions = parse('messaging', v8nValidation)\n\n/**\n * Factory function for the Link messaging plugin.\n * @method linkMessaging\n * @param  {Object} [options={}]\n * @param  {Array}  [options.features=['base']] - A list of the supported features of messaging\n * @return {Object} A plugin object.\n */\nexport default function linkMessaging (options = {}) {\n  options = defaults(defaultOptions, options)\n  parseOptions(options)\n\n  if (options.features.length > 1 || options.features[0] !== defaultOptions.features[0]) {\n    log.warn('Link messaging is not compatible with add-on ' + 'features. Reverting to base messaging.')\n    options.features = defaultOptions.features\n  }\n  log.info('Messaging features in use: ' + options.features)\n\n  function * init () {\n    yield put(updateConfig(options, pluginInterface.name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  const capabilities = ['simpleMessagingOnly', 'onlyInternalMessaging']\n\n  return {\n    sagas: [sendMessage, receiveMessage],\n    capabilities,\n    init,\n    api: pluginInterface.api,\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    mixins: pluginInterface.mixins\n  }\n}\n","import { actionChannel, take, put, select } from 'redux-saga/effects'\n// Messaging\nimport * as actionTypes from '../interface/actionTypes'\nimport { messageActions } from '../interface/actions'\nimport { getConversations } from '../interface/selectors'\n// Auth\nimport { getConnectionInfo } from '../../auth/interface/selectors'\nimport { NOTIFICATION_RECEIVED } from '../../notifications/interface/actionTypes'\nimport * as P from '../../predicates'\n// Request\nimport request from '../../request/effects'\n// Error\nimport BasicError, { messagingCodes } from '../../errors'\n// Logs\nimport { logManager } from '../../logs'\n\nconst log = logManager.getLogger('MESSAGING')\n\n/**\n * Link send message saga.\n * Performs the workflow of sending a message using SPiDR/Link.\n * @method sendMessage\n */\nexport function * sendMessage () {\n  const sendMessageChannel = yield actionChannel([actionTypes.SEND_MESSAGE])\n  while (true) {\n    const action = yield take(sendMessageChannel)\n    const destination = action.payload.destination[0]\n    const parts = action.payload.message.parts\n    const timestamp = action.payload.message.timestamp\n    const { server, username, requestOptions } = yield select(getConnectionInfo)\n\n    const response = yield request(\n      {\n        url: `${server.protocol}://${server.server}:${server.port}/rest/version/${\n          server.version\n        }/user/${username}/instantmessage`,\n        method: 'POST',\n        body: JSON.stringify({\n          imRequest: {\n            charset: 'UTF-8',\n            toUrl: destination,\n            message: parts[0].text,\n            type: 'A2'\n          }\n        })\n      },\n      requestOptions\n    )\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        let { statusCode } = response.payload.body.imResponse\n        log.debug(`Failed to send message with status code ${statusCode}.`)\n\n        error = new BasicError({\n          code: messagingCodes.SEND_MESSAGE_FAIL,\n          message: `Failed to send message. Code: ${statusCode}.`\n        })\n      } else {\n        // Handler errors from the request helper.\n        let { message } = response.payload.result\n        log.debug('Send message request failed', message)\n\n        error = new BasicError({\n          code: messagingCodes.SEND_MESSAGE_FAIL,\n          message: `Send message request failed: ${message}.`\n        })\n      }\n      yield put(\n        messageActions.sendMessageFinish({\n          sender: username,\n          destination: [destination],\n          type: 'im',\n          parts: parts,\n          timestamp: timestamp,\n          error\n        })\n      )\n    } else if (response.payload.body.imResponse && response.payload.body.imResponse.messageId) {\n      yield put(\n        messageActions.sendMessageFinish({\n          sender: username,\n          destination: [destination],\n          type: 'im',\n          parts: parts,\n          timestamp: timestamp,\n          messageId: response.payload.body.imResponse.messageId\n        })\n      )\n    } else {\n      // Unknown error scenario.\n    }\n  }\n}\n/**\n * Link receive message saga.\n * Performs the workflow of receiving messages over the SPiDR websocket.\n * @method receiveMessage\n */\nexport function * receiveMessage () {\n  // Redux-saga take() pattern.\n  // Using predicates directly doesn't work... so wrap it.\n  // TODO: Fix this properly.\n  function receiveMessagePattern (action) {\n    return P.and(P.type(NOTIFICATION_RECEIVED)(action) && P.link)(action)\n  }\n\n  while (true) {\n    const action = yield take(receiveMessagePattern)\n\n    if (action.payload.notificationMessage) {\n      if (action.payload.notificationMessage.eventType === 'IM') {\n        const message = action.payload.notificationMessage.imnotificationParams.msgText\n        const sender = action.payload.notificationMessage.imnotificationParams.primaryContact.split('sip:')[1]\n        const messageId = action.payload.notificationMessage.eventId\n        const conversations = yield select(getConversations)\n\n        // Search for an existing conversation that matches this message's sender.\n        const convo = conversations.find(conv => {\n          return conv.destination[0] === sender\n        })\n\n        if (convo) {\n          yield put(\n            messageActions.messageReceived(\n              [sender],\n              [{ mimeType: 'text/plain', type: 'text', text: message }],\n              messageId,\n              sender,\n              Date.now(),\n              {\n                newConversation: false,\n                type: 'im'\n              }\n            )\n          )\n        } else {\n          // Add the new message to the convo in the store\n          yield put(\n            messageActions.messageReceived(\n              [sender],\n              [{ mimeType: 'text/plain', type: 'text', text: message }],\n              messageId,\n              sender,\n              Date.now(),\n              {\n                newConversation: true,\n                type: 'im'\n              }\n            )\n          )\n        }\n      }\n    }\n  }\n}\n","const PREFIX = '@@KANDY/'\n\nexport const MWI_UPDATE = PREFIX + 'MWI_UPDATE'\nexport const FETCH_MWI = PREFIX + 'FETCH_MWI'\n","import * as actionTypes from './actionTypes'\n\n/**\n * Creates a message waiting indicator update action.\n *\n * @method mwiUpdate\n * @param {Object} $0\n * @param {string} $0.mwiEvent An mwiEvent object from spidr.\n * @param {Object} $0.error A Basic error object.\n * @returns {Object} A flux standard action.\n */\nexport function mwiUpdate ({ mwiData, error }) {\n  if (error) {\n    return {\n      type: actionTypes.MWI_UPDATE,\n      payload: error,\n      error: true\n    }\n  } else {\n    return {\n      type: actionTypes.MWI_UPDATE,\n      payload: {\n        ...mwiData\n      }\n    }\n  }\n}\n\n/**\n * Creates a fetch message waiting indicator action.\n *\n * @method fetchMwi\n * @returns {Object} A flux standard action.\n */\nexport function fetchMwi () {\n  return {\n    type: actionTypes.FETCH_MWI\n  }\n}\n","/**\n * The 'voicemail' namespace is used to retrieve and view\n * voicemail indicators.\n *\n * Voicemail functions are all part of this namespace.\n *\n * @public\n * @requires voicemail\n * @namespace voicemail\n */\n\nimport * as actions from './actions'\n\nimport { getMwi as selectMwi } from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('MWI')\n\nexport default function api ({ dispatch, getState }) {\n  const mwiApi = {\n    /**\n     * Attempts to retrieve voicemail information from the server.\n     * A `voicemail:new` event is emitted upon completion.\n     *\n     * @public\n     * @requires voicemail\n     * @memberof voicemail\n     * @method fetch\n     */\n    fetch () {\n      log.debug(API_LOG_TAG + 'voicemail.fetch')\n      dispatch(actions.fetchMwi())\n    },\n\n    /**\n     * Returns voicemail data from the store.\n     *\n     * @public\n     * @requires voicemail\n     * @memberof voicemail\n     * @method get\n     */\n    get () {\n      log.debug(API_LOG_TAG + 'voicemail.get')\n      return selectMwi(getState())\n    }\n  }\n\n  return { voicemail: mwiApi }\n}\n","// TODO: Fix params in this file, move to voicemail over MWI on all public wording.\n/**\n * A voicemail event has been received.\n *\n * @requires voicemail\n * @public\n * @memberof voicemail\n * @event voicemail:change\n * @param {Object} params An object containing voicemail info.\n * @param {number} params.lastUpdated Timestamp of the last time voicemail data was checked.\n * @param {boolean} params.newMessagesWaiting Whether there are new messages.\n * @param {number} params.totalVoice The total number of voicemail messages.\n * @param {number} params.unheardVoice Number of unheard voicemail messages.\n * @param {Object} params.voice Object containing individual counts of new, old, urgent voicemails.\n * @param {Object} params.fax Object containing individual counts of new, old, urgent faxes.\n * @param {Object} params.multimedia Object containing individual counts of new, old, urgent multimedia messages.\n */\nexport const MWI_CHANGE = 'voicemail:change'\n\n/**\n * An error has occurred while attempting to retrieve voicemail data.\n *\n * @requires voicemail\n * @public\n * @memberof voicemail\n * @event voicemail:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const MWI_ERROR = 'voicemail:error'\n","import * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.MWI_UPDATE] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MWI_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.MWI_CHANGE,\n      args: {\n        lastUpdated: action.payload.lastUpdated,\n        newMessagesWaiting: action.payload.newMessagesWaiting,\n        totalVoice: action.payload.totalVoice,\n        unheardVoice: action.payload.unheardVoice,\n        voice: action.payload.voice,\n        fax: action.payload.fax,\n        multimedia: action.payload.multimedia\n      }\n    }\n  }\n}\n\nexport default eventsMap\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a mwi plugin.\n * @type {string}\n */\nconst name = 'mwi'\n\nexport default {\n  name,\n  api,\n  reducer\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\nreducers[actionTypes.MWI_UPDATE] = {\n  next (state, action) {\n    return {\n      ...action.payload\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import { cloneDeep } from 'lodash/fp'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to retrieve\n *      specific portions of the state.\n */\n\n/**\n * Retrieves the message waiting indicator data from the state.\n * @method getMwi\n * @return {Object}\n */\nexport function getMwi (state) {\n  return cloneDeep(state.mwi)\n}\n","import { put } from 'redux-saga/effects'\n// Events\nimport eventsMap from '../interface/events'\nimport { mapEvents } from '../../events/interface/actions'\n\n// Import the interface to implement.\nimport pluginInterface from '../interface'\n\nimport { mwiReceived, fetchMwi } from './sagas'\n\n/**\n * Plugin for voicemail service.\n * Provides the SDK with the Voicemail feature.\n */\nexport default function mwiLink () {\n  function * init () {\n    yield put(mapEvents(eventsMap))\n  }\n\n  const capabilities = ['voicemail']\n\n  return {\n    capabilities,\n    api: pluginInterface.api,\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    init,\n    sagas: [mwiReceived, fetchMwi]\n  }\n}\n","import { actionChannel, put, take, select } from 'redux-saga/effects'\n// Auth\nimport { getConnectionInfo, getPlatform } from '../../auth/interface/selectors'\n// Notifications\nimport { NOTIFICATION_RECEIVED } from '../../notifications/interface/actionTypes'\n// MWI Actions\nimport * as actions from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\n// Request\nimport request from '../../request/effects'\n// Errors\nimport BasicError, { mwiCodes } from '../../errors'\n// Constants\nimport { platforms } from '../../constants'\n\n// Logs\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('MWI')\n\nexport function * mwiReceived () {\n  const mwiEventChannel = actionChannel(\n    action =>\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage &&\n      action.payload.notificationMessage.eventType === 'mwi'\n  )\n  const mwiReceived = yield mwiEventChannel\n  while (true) {\n    const action = yield take(mwiReceived)\n\n    // Parse the mwi data\n    let mwiData = {\n      ...action.payload.notificationMessage.mwiNotificationParams\n    }\n    mwiData.newMessagesWaiting = mwiData.mwi === 'yes'\n    delete mwiData.mwi\n    log.info(`There are ${mwiData.newMessagesWaiting ? mwiData.newMessagesWaiting : 'no'} new messages waiting.`)\n    mwiData.lastUpdated = action.payload.notificationMessage.time\n    log.info(`There are ${mwiData.totalVoice} total voicemails. ${mwiData.unheardVoice} unheard.`)\n\n    yield put(actions.mwiUpdate({ mwiData }))\n  }\n}\n\nexport function * fetchMwi () {\n  while (true) {\n    const action = yield take(actionTypes.FETCH_MWI)\n    const connInfo = yield select(getConnectionInfo)\n    const options = {\n      ...action.payload,\n      ...connInfo\n    }\n\n    let platform = yield select(getPlatform)\n    const version = platform === platforms.UC ? 1 : options.server.version\n    const response = yield request(\n      {\n        url: `${options.server.protocol}://${options.server.server}:${\n          options.server.port\n        }/rest/version/${version}/user/${options.username}/voicemail`,\n        method: 'GET'\n      },\n      connInfo.requestOptions\n    )\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        const { statusCode } = response.payload.body.mwiresponse\n        const errMsg = `Failed to fetch voicemail(s). Status Code: ${statusCode}`\n        log.info(errMsg)\n\n        error = new BasicError({\n          code: mwiCodes.FETCH_MWI_FAIL,\n          message: errMsg\n        })\n      } else {\n        // Handle errors from the request helper.\n        let { message } = response.payload.result\n        const errMsg = `Voicemail fetch request failed. ${message}`\n        log.info(errMsg)\n\n        error = new BasicError({\n          code: mwiCodes.FETCH_MWI_FAIL,\n          message: errMsg\n        })\n      }\n\n      yield put(actions.mwiUpdate({ error }))\n    } else {\n      let mwiData = {}\n      if (response.payload.body.mwiresponse.statusCode === 52) {\n        // This statusCode means this user has absolutely no messages, new or old.\n        // It is therefore accompanied with absolutely no data, so we make some for the store.\n        mwiData = {\n          lastUpdated: Date.now(),\n          newMessagesWaiting: false,\n          totalVoice: '0',\n          unheardVoice: '0'\n        }\n        log.info('There are no new or old voicemails.')\n      } else {\n        mwiData = { ...response.payload.body.mwiresponse }\n        delete mwiData.statusCode\n\n        // Parse the mwi data\n        mwiData.newMessagesWaiting = mwiData.mwi === 'yes'\n        delete mwiData.mwi\n        log.info(`There are ${mwiData.newMessagesWaiting ? mwiData.newMessagesWaiting : 'no'} new messages waiting.`)\n        mwiData.lastUpdated = Date.now()\n        log.info(`There are ${mwiData.totalVoice} total voicemails. ${mwiData.unheardVoice} unheard.`)\n      }\n      yield put(actions.mwiUpdate({ mwiData }))\n    }\n  }\n}\n","const prefix = '@@KANDY/'\n\nexport const PROCESS_NOTIFICATION = prefix + 'PROCESS_NOTIFICATION'\nexport const PROCESS_NOTIFICATION_FINISH = prefix + 'PROCESS_NOTIFICATION_FINISH'\nexport const NOTIFICATION_RECEIVED = prefix + 'NOTIFICATION_RECEIVED'\n\nexport const ENABLE_NOTIFICATION_CHANNEL = prefix + 'ENABLE_NOTIFICATION_CHANNEL'\nexport const ENABLE_NOTIFICATION_CHANNEL_FINISH = prefix + 'ENABLE_NOTIFICATION_CHANNEL_FINISH'\n\nexport const REGISTER_APPLE_PUSH_NOTIFICATION = prefix + 'REGISTER_APPLE_PUSH_NOTIFICATION'\nexport const REGISTER_ANDROID_PUSH_NOTIFICATION = prefix + 'REGISTER_ANDROID_PUSH_NOTIFICATION'\n\nexport const UNREGISTER_APPLE_PUSH_NOTIFICATION = prefix + 'UNREGISTER_APPLE_PUSH_NOTIFICATION'\nexport const UNREGISTER_ANDROID_PUSH_NOTIFICATION = prefix + 'UNREGISTER_ANDROID_PUSH_NOTIFICATION'\n","import * as actionTypes from './actionTypes'\n// Constants\nimport { platforms } from '../../constants'\n\n/**\n * Helper function for funneling all notification types into a single action.\n * @method notificationHelper\n * @param  {string} channel - The channel that the notification came from.\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nfunction notificationHelper (channel, notification, platform) {\n  return {\n    type: actionTypes.PROCESS_NOTIFICATION,\n    payload: notification,\n    meta: {\n      platform,\n      channel\n    }\n  }\n}\n\n/**\n * Represents an application request to process a websocket notification.\n * @method websocketNotification\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function websocketNotification (notification, platform = platforms.LINK) {\n  return notificationHelper('WEBSOCKET', notification, platform)\n}\n\n/**\n * Represents an application request to process an external notification.\n * @method externalNotification\n * @param  {Object} notification\n * @param  {string} [channel='PUSH'] - The channel that the notification came from.\n * @return {Object} A flux standard action.\n */\nexport function externalNotification (notification, channel = 'PUSH', platform) {\n  // TODO: Are external notifications _only_ for Link?\n  return notificationHelper(channel.toUpperCase(), notification, platform)\n}\n\n/**\n * Represents a received notification.\n * @method notificationReceived\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function notificationReceived (notification, platform, channel) {\n  return {\n    type: actionTypes.NOTIFICATION_RECEIVED,\n    payload: notification,\n    error: notification instanceof Error,\n    meta: {\n      platform,\n      channel\n    }\n  }\n}\n\n/**\n * Represents a received notification.\n * @method processNotificationFinish\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function processNotificationFinish (notification, platform) {\n  return {\n    type: actionTypes.PROCESS_NOTIFICATION_FINISH,\n    payload: notification,\n    error: notification instanceof Error,\n    meta: {\n      platform\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method enableNotificationChannel\n * @param  {string} channel - The notification channel being affected.\n * @param  {Object} params\n * @param  {boolean} params.channelEnabled - Whether to enable the channel or not.\n * @return {Object} A flux standard action.\n */\nexport function enableNotificationChannel (channel, params = {}) {\n  return {\n    type: actionTypes.ENABLE_NOTIFICATION_CHANNEL,\n    payload: {\n      ...params\n    },\n    meta: {\n      channel\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method registerApplePushNotification\n * @param  {Object} params\n * @return {Object} A flux standard action.\n */\nexport function registerApplePushNotification (params, deferred) {\n  return {\n    type: actionTypes.REGISTER_APPLE_PUSH_NOTIFICATION,\n    payload: {\n      ...params,\n      pushProvider: 'apple'\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method registerAndroidPushNotification\n * @param  {Object} params\n * @return {Object} A flux standard action.\n */\nexport function registerAndroidPushNotification (params, deferred) {\n  return {\n    type: actionTypes.REGISTER_ANDROID_PUSH_NOTIFICATION,\n    payload: {\n      ...params,\n      pushProvider: 'google'\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method unregisterApplePushNotification\n * @param  {string} registration\n * @return {Object} A flux standard action.\n */\nexport function unregisterApplePushNotification (registration, deferred) {\n  return {\n    type: actionTypes.UNREGISTER_APPLE_PUSH_NOTIFICATION,\n    payload: {\n      registration\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method unregisterAndroidPushNotification\n * @param  {string} registration\n * @return {Object} A flux standard action.\n */\nexport function unregisterAndroidPushNotification (registration, deferred) {\n  return {\n    type: actionTypes.UNREGISTER_ANDROID_PUSH_NOTIFICATION,\n    payload: {\n      registration\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents the response of a change in a notification channel status.\n * @method enableNotificationChannelFinish\n * @param  {string} channel - The notification channel being affected.\n * @param  {Object} $1\n * @param  {Object} $1.params - Information about the channel change.\n * @param  {Object} $1.params.channelEnabled - Whether the channel was enabled or not.\n * @param  {Object} $1.error - Error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function enableNotificationChannelFinish (channel, { params, error } = {}) {\n  var action = {\n    type: actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH,\n    meta: {\n      channel\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = new Error(error)\n    action.payload.channelEnabled = params.channelEnabled\n  } else {\n    action.payload = {\n      ...params\n    }\n  }\n\n  return action\n}\n","/**\n * The 'notification' namespace allows user to register/deregister for/from push notifications as well as\n * enabling/disabling the processing of websocket notifications.\n *\n * @public\n * @requires externalNotifications\n * @namespace notification\n */\n\nimport * as actions from './actions'\nimport { platforms } from '../../constants'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nimport pDefer from 'p-defer'\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Notifications API.\n * @method api\n * @param {Function} dispatch The redux store's dispatch function.\n * @return {Object} api  The notifications API object.\n */\nexport default function api ({ dispatch }) {\n  const notificationApi = {\n    /**\n     * Provides an external notification to the system for processing.\n     *\n     * @public\n     * @requires externalNotifications\n     * @memberof notification\n     * @method process\n     * @param {Object} notification\n     * @param {string} [channel] - The channel that the notification came from.\n     */\n    process (notification, channel, platform = platforms.LINK) {\n      log.debug(API_LOG_TAG + 'notification.process: ', notification, channel, platform)\n      dispatch(actions.externalNotification(notification, channel, platform))\n    },\n\n    /**\n     * Registers with Apple push notification service. Once registration is successful, the application will be able to receive\n     * standard and/or voip push notifications. It can then send these notifications to the SDK with {@link api.notifications.process}\n     * in order for the SDK to process them.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method registerApplePush\n     * @param {Object} params\n     * @param {string[]} params.services - Array of services for which we wish to receive notifications.\n     * @param {string} params.voipDeviceToken - The voip device token used for voip push on iOS.\n     *                                          This token is required if registering for call service notifications on iOS.\n     * @param {string} params.standardDeviceToken - The standardDevice token used for standard push on iOS .\n     *                                              This token is required when registering for non-call service notifications.\n     * @param {string} params.bundleId - The bundleId to identify the application receiving the push notification.\n     * @param {string} params.clientCorrelator - Unique identifier for a client device.\n     * @param {string} params.realm - The realm used by the push registration service to identify and\n     *                                establish a connection with the service gateway.\n     * @param {boolean} params.isProduction - If true, push notification will be sent to production.\n     *                                        If false, push notification will be sent to sandbox.\n     * @return {Promise} When successful,  the information of the registration.\n     *                   Promise will reject with error object otherwise.\n     */\n    registerApplePush ({\n      services,\n      voipDeviceToken,\n      standardDeviceToken,\n      bundleId,\n      clientCorrelator,\n      realm,\n      isProduction\n    }) {\n      const deferredResult = pDefer()\n      log.debug(API_LOG_TAG + 'notification.registerApplePush', arguments)\n\n      dispatch(\n        actions.registerApplePushNotification(\n          {\n            services,\n            voipDeviceToken,\n            standardDeviceToken,\n            bundleId,\n            clientCorrelator,\n            realm,\n            isProduction\n          },\n          deferredResult\n        )\n      )\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Registers with Google push notification service. Once registration is successful, the application will be able to receive\n     * standard and/or voip push notifications. It can then send these notifications to the SDK with {@link api.notifications.process}\n     * in order for the SDK to process them.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method registerAndroidPush\n     * @param {Object} params\n     * @param {string[]} params.services - Array of services to register for.\n     * @param {string} params.deviceToken - The device token used for standard push on Android. This token is required\n     *                                      when registering for all related services notifications.\n     * @param {string} params.bundleId - The bundleId to identify the application receiving the push notification.\n     * @param {string} params.clientCorrelator - Unique identifier for a client device.\n     * @param {string} params.realm - The realm used by the push registration service to identify\n     *                                and establish a connection with the service gateway.\n     * @return {Promise} When successful,  the information of the registration.\n     *                   Promise will reject with error object otherwise.\n     */\n    registerAndroidPush ({ services, deviceToken, bundleId, clientCorrelator, realm }) {\n      const deferredResult = pDefer()\n      log.debug(API_LOG_TAG + 'notification.registerAndroidPush', arguments)\n\n      dispatch(\n        actions.registerAndroidPushNotification(\n          {\n            services,\n            deviceToken,\n            bundleId,\n            clientCorrelator,\n            realm\n          },\n          deferredResult\n        )\n      )\n      return deferredResult.promise\n    },\n\n    /**\n     * Unregister Apple push notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method unregisterApplePush\n     * @param {string} registrationInfo - The data returned from the push registration\n     * @return {Promise} When successful, the promise will resolve with undefined.\n     *                   Promise will reject with error object otherwise.\n     */\n    unregisterApplePush (registrationInfo) {\n      const deferredResult = pDefer()\n      log.debug(API_LOG_TAG + 'notification.unregisterPush')\n      dispatch(actions.unregisterApplePushNotification(registrationInfo, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Unregister Android push notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method unregisterAndroidPush\n     * @param {string} registrationInfo - The data returned from the push registration\n     * @return {Promise} When successful, the promise will resolve with undefined.\n     *                   Promise will reject with error object otherwise.\n     */\n    unregisterAndroidPush (registrationInfo) {\n      const deferredResult = pDefer()\n      log.debug(API_LOG_TAG + 'notification.unregisterPush')\n      dispatch(actions.unregisterAndroidPushNotification(registrationInfo, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Enables, or disables, the processing of websocket notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method enableWebsocket\n     * @param {boolean} enable - Whether the websocket channel should be enabled.\n     */\n    enableWebsocket (enable) {\n      log.debug(API_LOG_TAG + 'notification.enableWebsocket: ', enable)\n      dispatch(\n        actions.enableNotificationChannel('WEBSOCKET', {\n          channelEnabled: enable\n        })\n      )\n    }\n  }\n\n  return { notification: notificationApi }\n}\n","/**\n * Push notifications registration state has changed.\n *\n * @public\n * @requires push\n * @memberof notification\n * @event notifications:change\n * @param {Object} params\n * @param {string} params.channel The channel for the notification.\n */\nexport const NOTI_CHANGE = 'notifications:change'\n\n/**\n * An error occurred with push notifications.\n *\n * @public\n * @requires push\n * @memberof notification\n * @event notifications:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n * @param {string} params.channel The channel for the notification.\n */\nexport const NOTI_ERROR = 'notifications:error'\n\n/**\n * A notification was received by the SDK.\n *\n * @private This is an undocumented feature.\n *\n * @event notification:received\n * @param {Object} params Object that has information about the notification.\n * @param {Object} params.payload The payload of the notification.\n */\nexport const NOTI_RECEIVED = 'notification:received'\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nvar events = {}\n\nevents[actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.NOTI_ERROR,\n      args: { channel: action.meta.channel, error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.NOTI_CHANGE,\n      args: { channel: action.meta.channel }\n    }\n  }\n}\n\nevents[actionTypes.NOTIFICATION_RECEIVED] = function (action) {\n  if (!action.error) {\n    return {\n      type: eventTypes.NOTI_RECEIVED,\n      args: { payload: action.payload }\n    }\n  }\n}\n\nexport default events\n","import reducer from './reducers'\nimport api from './api'\n\nconst name = 'notifications'\n\nexport { name, api, reducer }\n","import * as actionTypes from './actionTypes'\nimport { WS_CONNECT_FINISHED } from '../../connectivity/interface/actionTypes'\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\nreducers[actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH] = {\n  next (state, action) {\n    let channel = action.meta.channel\n    let enabled = action.payload.channelEnabled\n\n    let newChannelState\n    if (enabled) {\n      newChannelState = {\n        ...state[channel],\n        ...action.payload\n      }\n    } else {\n      // If the channel is being disabled, clear old state.\n      newChannelState = {\n        ...action.payload\n      }\n    }\n\n    return {\n      ...state,\n      [channel]: newChannelState\n    }\n  }\n}\n\n/*\n * The websocket channel is assumed to be enabled when the\n *      websocket is opened.\n */\nreducers[WS_CONNECT_FINISHED] = {\n  next (state) {\n    // TODO: Link WS only?\n    return {\n      ...state,\n      WEBSOCKET: {\n        ...state.WEBSOCKET,\n        channelEnabled: true\n      }\n    }\n  }\n}\n\n// Default notifications sub-state.\nconst defaultState = {\n  WEBSOCKET: {\n    channelEnabled: false\n  },\n  PUSH: {\n    channelEnabled: true\n  }\n}\n\n/**\n * Notifications reducer.\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n */\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves the notifications state.\n * @method getNotificationsInfo\n * @param  {String} [channel] - Specific notification channel information to retrieve.\n * @return {Object}\n */\nexport function getNotificationsInfo (state, channel = undefined) {\n  if (channel) {\n    return state.notifications[channel]\n  } else {\n    return state.notifications\n  }\n}\n\n/**\n * Retrieves notification config.\n * @method getNotificationConfig\n * @return {Object}\n */\nexport function getNotificationConfig (state) {\n  return cloneDeep(state.config.notifications)\n}\n","// Notification plugin.\nimport { api, reducer, name } from '../../notifications/interface'\nimport events from '../../notifications/interface/events'\nimport * as pushRegistrationSagas from './sagas/pushRegistration'\nimport * as notificationSagas from './sagas/notification'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { defaultsDeep, values } from 'lodash/fp'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../../../src/common/validation'\n\n/**\n * Configuration options for the notification feature.\n * @public\n * @name config.notifications\n * @memberof config\n * @instance\n * @param {Object} notifications - The notifications configuration object.\n * @param {number} [notifications.idCacheLength=100] - Default amount of event ids to remember for de-duplication purposes.\n * @param {string} [notifications.incomingCallNotificationMode='any-channel'] - Communication channel mode used for incoming call notifications. Supported values are 'any-channel' or 'push-channel-only'.\n * @param {Object} [notifications.pushRegistration] - Object describing the server to use for push services.\n * @param {string} [notifications.pushRegistration.server] - Hostname for the push registration server.\n * @param {string} [notifications.pushRegistration.port] - Port for the push registration server.\n * @param {string} [notifications.pushRegistration.protocol] - Protocol for the push registration server.\n * @param {string} [notifications.pushRegistration.version] - Version for the push registration server.\n */\n\nconst defaultOptions = {\n  idCacheLength: 100,\n  incomingCallNotificationMode: 'any-channel'\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  idCacheLength: v8n.positive(),\n  incomingCallNotificationMode: enums(['any-channel', 'push-channel-only']),\n  pushRegistration: v8n.optional(\n    v8n.schema({\n      server: v8n.string(),\n      port: v8n.string(),\n      protocol: v8n.string(),\n      version: v8n.string()\n    })\n  )\n})\nconst parseOptions = parse('notifications', v8nValidation)\n\n/**\n * Notifications plugin factory.\n * @method notifications\n * @param {configs.notifications} options - Configuration options for authentication.\n * @return {Object} plugin - A notifications plugin.\n */\nexport default function notifications (options = {}) {\n  const pluginOptions = defaultsDeep(defaultOptions, options)\n  parseOptions(pluginOptions)\n\n  function * init () {\n    yield put(updateConfig(pluginOptions, name))\n    yield put(mapEvents(events))\n  }\n\n  const capabilities = ['push', 'registerPushNotifications', 'externalNotifications']\n\n  return {\n    name,\n    capabilities,\n    init,\n    api,\n    reducer,\n    sagas: [...values(notificationSagas), ...values(pushRegistrationSagas)]\n  }\n}\n","// Request\nimport request from '../../request/effects'\n// Logs\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Registers a device token with On-Prem services.\n * @method pushNotificationsRegistration\n * @param  {Object} connection - Information for formatting the request.\n * @param  {Object} options\n * @param  {string[]} options.services - Push service to register to; either 'google' or 'apple'.\n * @param {string} options.pushProvider - The push provider, can be either 'apple' or 'google'.\n * @param  {string} options.bundleId - The bundle id to use for registration.\n * @param  {string} options.deviceToken\n * @param {string} options.voipDeviceToken - Token for call related service.\n * @param {string} options.standardDeviceToken - Token for non-call related service.\n * @param  {string} options.clientCorrelator - Unique identifier for a client device.\n * @param {string} options.realm - The realm used by the push registration service to identify\n *                                and establish a connection with the service gateway.\n * @param {boolean} options.isProduction - If true, push notification will be sent to production. If false, push notification will be sent to sandbox.\n * @return {Object} response\n */\nexport function * pushNotificationsRegistration (\n  connection,\n  {\n    services,\n    pushProvider,\n    bundleId,\n    deviceToken,\n    voipDeviceToken,\n    standardDeviceToken,\n    clientCorrelator,\n    realm,\n    isProduction\n  }\n) {\n  const { server, requestOptions } = connection\n  pushProvider = pushProvider.toLowerCase()\n  let url =\n    `${server.protocol}://${server.server}:${server.port}/` +\n    `rest/version/${server.version}/` +\n    `user/${connection.username}/` +\n    'push/' +\n    pushProvider +\n    '/devices/'\n  const method = 'POST'\n  let body = {\n    bundleID: bundleId,\n    service: services,\n    clientCorrelator: clientCorrelator,\n    realm: realm,\n    isProduction: isProduction\n  }\n\n  if (pushProvider === 'apple') {\n    body.voipDeviceToken = voipDeviceToken\n    body.standardDeviceToken = standardDeviceToken\n  } else {\n    body.deviceToken = deviceToken\n  }\n\n  body = JSON.stringify(body)\n  log.debug(`Sending PUSH register request: ${method} ${url}`)\n\n  const response = yield request({ url, method, body }, requestOptions)\n\n  let registrationResponse\n  const responseName = pushProvider + 'DeviceRegistrationResponse'\n  if (response.payload.body && response.payload.body[responseName]) {\n    registrationResponse = response.payload.body[responseName]\n  }\n\n  if (response.error) {\n    log.info('Failed to register device token for PUSH notifications.')\n    if (registrationResponse) {\n      // Handle errors from the server.\n      let statusCode = registrationResponse.statusCode\n      log.debug(`Device registration request for PUSH notifications failed with status code: ${statusCode}`)\n\n      return {\n        error: true,\n        status: statusCode,\n        text: `Failed to register device token for PUSH notifications. Code: ${statusCode}`\n      }\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug(`Device registration request for PUSH notifications failed with message: ${message}.`)\n\n      return {\n        error: true,\n        status: response.payload.result.code,\n        text: `Failed to register device token for PUSH notifications. Error: ${response.payload.result.message}`\n      }\n    }\n  } else if (registrationResponse && registrationResponse.statusCode !== 0) {\n    log.info(`Failed to register device token for PUSH notifications. Code: ${registrationResponse.statuscode}`)\n    // TODO: Is this else-if needed?\n    return {\n      error: true,\n      status: registrationResponse.statuscode,\n      text: `Failed to register device token for PUSH notifications. Error: ${registrationResponse.statusCode}`\n    }\n  } else {\n    log.info('Successfully registered device token for PUSH notifications.')\n    return {\n      error: false,\n      ...registrationResponse\n    }\n  }\n}\n\n/**\n * De-Registers a device token with On-Prem services.\n * @method pushNotificationsDeRegistration\n * @param  {Object} connection - Information for formatting the request.\n * @param  {Object} options\n * @param  {string} options.registration\n * @return {Object} response\n */\nexport function * pushNotificationsDeRegistration (connection, { registration }) {\n  const { server, requestOptions } = connection\n  let url = `${server.protocol}://${server.server}:${server.port}${registration}`\n  const method = 'DELETE'\n  const responseType = 'none'\n\n  log.debug(`Sending PUSH unregister request: ${method} ${url}`)\n  const response = yield request({ url, method, responseType }, requestOptions)\n\n  if (response.error) {\n    log.info('Failed to unregister device token for PUSH notifications.')\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let { statusCode } = response.payload.body\n      log.debug(`Failed to unregister device token for PUSH notifications. Status code: ${statusCode}.`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        status: statusCode,\n        text: `Failed to unregister device token for PUSH notifications. Code: ${statusCode}.`\n      }\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug(`Device token unregistration request failed for PUSH notifications: ${message}`)\n      // TODO: Proper error.\n      return {\n        error: true,\n        status: response.payload.result.code,\n        text: `Device token unregistration request failed for PUSH notifications: ${message}`\n      }\n    }\n  } else {\n    log.info('Successfully unregistered device token for PUSH notifications.')\n    // Successful de-register has no response.\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Fetches SDP data from a given partial URL.\n * @method fetchSDP\n * @param  {Object} partialUrl - A partial URL. Contains everything after the protocol://server:port\n * @return {Object} response A response payload\n */\nexport function * fetchSDP (connection, partialUrl) {\n  const { server, requestOptions } = connection\n  const method = 'GET'\n  const url = `${server.protocol}://${server.server}:${server.port}${partialUrl}`\n  log.debug(`Sending request to fecth SDP: ${method} ${url}`)\n\n  const response = yield request(\n    {\n      url,\n      method\n    },\n    requestOptions\n  )\n\n  if (!response.error) {\n    log.info('SDP fetched successfully.')\n    // TODO: test and see what this format actually is.\n    return response.payload.body\n  } else {\n    log.debug(`Failed to fetch SDP. Error is: ${JSON.stringify(response.error)}`)\n  }\n}\n","import { defaults, has } from 'lodash/fp'\nimport { inflate } from 'pako'\nimport { buffers } from 'redux-saga'\nimport { actionChannel, call, put, select, take, takeEvery } from 'redux-saga/effects'\nimport { getConnectionInfo } from '../../../auth/interface/selectors'\nimport { platforms } from '../../../constants'\nimport { logManager } from '../../../logs'\nimport * as actions from '../../interface/actions'\nimport * as actionTypes from '../../interface/actionTypes'\nimport { getNotificationConfig, getNotificationsInfo } from '../../interface/selectors'\nimport * as requests from '../requests'\n\n// Get the logger\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Unregister for android push notification.\n * @method enableWebsocketChannelEntry\n */\nexport function * enableWebsocketChannelEntry () {\n  yield takeEvery(actionTypes.ENABLE_NOTIFICATION_CHANNEL, enableWebsocketChannel)\n}\n\nfunction * enableWebsocketChannel (action) {\n  if (action.payload.enable) {\n    // TODO: If websockets are not connected, connect them here.\n  }\n\n  // TODO: Handle possible error case when connecting websockets.\n  //      Otherwise, plain dispatch to update state.\n  log.info(`Enabling WEBSOCKET notification channel ...`)\n  yield put(\n    actions.enableNotificationChannelFinish(action.meta.channel, {\n      params: action.payload\n    })\n  )\n}\n\nconst INITIAL_BUFFER_SIZE = 10\n\nexport function * processNotification () {\n  const config = yield select(getNotificationConfig)\n  var idCache = []\n  /**\n   * Checks whether a notification has already been received,\n   *      judging by its event ID.\n   * @method isDuplicate\n   * @param  {string} id\n   */\n  function isDuplicate (id) {\n    return idCache.includes(id)\n  }\n\n  /**\n   * Adds an ID to the idCache list which is used to keep track of duplicate notifications\n   * @method addIdToCache\n   * @param {string} id\n   */\n  function addIdToCache (id) {\n    idCache.push(id)\n    if (idCache.length > config.idCacheLength) {\n      idCache.shift()\n    }\n  }\n\n  const externalNotifications = yield actionChannel(\n    actionTypes.PROCESS_NOTIFICATION,\n    buffers.expanding(INITIAL_BUFFER_SIZE)\n  )\n  while (true) {\n    const action = yield take(externalNotifications)\n    log.info(\n      `Received notification on channel ${action.meta.channel} for platform: ${action.meta.platform}; Handling...`\n    )\n\n    // Only process notifications from enabled channels, ie. \"silence\" the channel.\n    let channel = yield select(getNotificationsInfo, action.meta.channel)\n    if (!channel.channelEnabled) {\n      log.debug(`Notification received on disabled channel: ${action.meta.channel}. Ignoring it ...`)\n      continue\n    }\n\n    // Find the unique ID of the received notification.\n    let notificationId\n    let notificationType\n    switch (action.meta.platform) {\n      case platforms.LINK:\n        notificationId = action.payload.notificationMessage.eventId\n        notificationType = action.payload.notificationMessage.eventType\n        break\n      case platforms.UC:\n        // A Link notification can be in either the Link format or the SPiDR format (for calls).\n        notificationId = action.payload.notificationMessage.id || action.payload.notificationMessage.eventId\n        break\n      case platforms.CPAAS:\n        // CPaaS notifications do not have a consistent path to their ID.\n        //    The ID is one level down in the object, but we need to dynamically\n        //    find the key that its in.\n        const notification = action.payload\n        for (let key in notification) {\n          if (notification[key].id) {\n            notificationId = notification[key].id\n            break\n          }\n        }\n        if (!notificationId) {\n          log.error('Received notification without a findable ID: ', Object.keys(notification))\n        }\n        break\n      default:\n        log.debug('Received notification from unknown platform.')\n    }\n    if (notificationType) {\n      log.debug(`The received notification is of type ${notificationType}.`)\n    }\n\n    let formattedPayload = action.payload\n    if (has('payload.notificationMessage.sessionParams.sdpFormat', action)) {\n      log.debug('Notification contains SDP. Normalizing.')\n      formattedPayload = yield call(normalizeSDP, action.payload)\n    }\n\n    // If we're in the PUSH-only notification mode and\n    // this incoming notification is coming through a channel other than PUSH channel (e.g. WEBSOCKET) and\n    // this notification is for an incoming call\n    if (\n      formattedPayload.notificationMessage.eventType === 'call' &&\n      config.incomingCallNotificationMode === 'push-channel-only' &&\n      action.meta.channel !== 'PUSH'\n    ) {\n      // Ignore this call-related notification, but at a minimum generate a log so that user is aware.\n      log.warn(\n        'Dropped incoming call notification with id: ' +\n          notificationId +\n          ' received through channel: ' +\n          action.meta.channel +\n          ' because current mode for handling notifications is set to: push-channel-only.'\n      )\n      continue\n    } else {\n      if (!isDuplicate(notificationId)) {\n        // Add the notification ID to the idCache to prevent handling incoming duplicate notifications\n        addIdToCache(notificationId)\n\n        const { platform, channel } = action.meta\n        log.debug('Added notification ID to the ID cache. Informing listeners ...')\n        // Inform all other plugins by sending a NOTIFICATION_RECEIVED action\n        yield put(actions.notificationReceived(formattedPayload, platform, channel))\n      } else {\n        log.info('Notification was a duplicate; ignoring.')\n        const error = new Error(`Notification id ${notificationId} is duplicate.`)\n        // TODO: Tech-debt; this action should be a notificationReceived error action.\n        //      But that requires all sagas listening for notifications to filter out\n        //      error actions ..which requires their take() patterns changed, which\n        //      is another tech-debt item.\n        yield put(actions.processNotificationFinish(error))\n      }\n    }\n  }\n}\n\n/**\n * This function accepts a notification payload. If the payload is a spidr payload\n * and contains an sdpFormat that needs manipulating, it is done here.\n * @method normalizeSDP\n * @param payload A processNotification action payload\n * @returns payload A processNotification action payload\n */\nfunction * normalizeSDP (payload) {\n  // Copy the payload to not disturb the action.\n  payload = { ...payload }\n\n  if (payload.notificationMessage.sessionParams.sdpFormat === 'compressed') {\n    log.debug('Found SDP format: compressed. Deflating compressed SDP...')\n    // convert based64 encoded string into bytes\n    const sdpCompressedBytes = atob(payload.notificationMessage.sessionParams.sdp)\n    // uncompress the bytes\n    const sdpUnCompressedBytes = yield call(inflate, sdpCompressedBytes)\n    // convert uncompress bytes back into string\n    const sdpString = String.fromCharCode.apply(null, new Uint16Array(sdpUnCompressedBytes))\n    payload.notificationMessage.sessionParams.sdp = sdpString\n    log.debug(`Returning uncompressed SDP as part of payload: ${sdpString}`)\n    return payload\n  } else if (payload.notificationMessage.sessionParams.sdpFormat === 'url') {\n    const connection = yield select(getConnectionInfo)\n    const { pushRegistration } = yield select(getNotificationConfig)\n    log.debug(`Found SDP format: url. pushRegistration: ${pushRegistration}`)\n    // If a push registration endpoint was configured, use that instead of default.\n    if (pushRegistration) {\n      connection.server = defaults(connection.server, pushRegistration)\n      connection.protocol = defaults(connection.protocol, pushRegistration)\n      connection.port = defaults(connection.port, pushRegistration)\n      connection.version = defaults(connection.version, pushRegistration)\n    }\n    log.info('Fetching SDP...')\n    const response = yield call(requests.fetchSDP, connection, payload.notificationMessage.sessionParams.sdp)\n    payload.notificationMessage.sessionParams.sdp = response.eventDataResponse.sdp\n    return payload\n  } else {\n    log.debug(`Unknown sdpFormat received: ${payload.notificationMessage.sessionParams.sdpFormat}.`)\n    return payload\n  }\n}\n","// Libraries.\nimport { defaults } from 'lodash/fp'\nimport { call, select, takeEvery } from 'redux-saga/effects'\n// Other plugins.\nimport { getConnectionInfo } from '../../../auth/interface/selectors'\n// Logs\nimport { logManager } from '../../../logs'\nimport * as actionTypes from '../../interface/actionTypes'\nimport { getNotificationConfig } from '../../interface/selectors'\nimport * as requests from '../requests'\n\n// Get the logger\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Register for apple push notification\n * @method applePushRegistrationEntry\n */\nexport function * applePushRegistrationEntry () {\n  yield takeEvery(actionTypes.REGISTER_APPLE_PUSH_NOTIFICATION, registerPushDeviceToken)\n}\n\n/**\n * Register for android push notification\n * @method androidPushRegistrationEntry\n */\nexport function * androidPushRegistrationEntry () {\n  yield takeEvery(actionTypes.REGISTER_ANDROID_PUSH_NOTIFICATION, registerPushDeviceToken)\n}\n\n/**\n * Saga for registering a device token for push notifications.\n * @method registerPushDeviceToken\n */\nfunction * registerPushDeviceToken (action) {\n  // Wait for a registration action.\n  const connection = yield select(getConnectionInfo)\n  const { pushRegistration } = yield select(getNotificationConfig)\n\n  // If a push registration endpoint was configured, use that instead of default.\n  if (pushRegistration) {\n    connection.server = defaults(connection.server, pushRegistration)\n    connection.protocol = defaults(connection.protocol, pushRegistration)\n    connection.port = defaults(connection.port, pushRegistration)\n    connection.version = defaults(connection.version, pushRegistration)\n  }\n\n  log.info('Registering device token for PUSH notifications...')\n  const response = yield call(requests.pushNotificationsRegistration, connection, {\n    ...action.payload\n  })\n\n  if (response.error) {\n    // Failed to create registration, reject the deferred result.\n    yield call([action.meta.deferred, 'reject'], {\n      error: response.text\n    })\n  } else {\n    // Successfully created registration, resolve the deferred result and respond with the registration.\n    yield call([action.meta.deferred, 'resolve'], response.registration)\n  }\n}\n\n/**\n * Unregister for apple push notification\n * @method applePushUnregisterEntry\n */\nexport function * applePushUnregisterEntry () {\n  yield takeEvery(actionTypes.UNREGISTER_APPLE_PUSH_NOTIFICATION, unregisterPushDeviceToken)\n}\n\n/**\n * Unregister for android push notification.\n * @method androidPushUnregisterEntry\n */\nexport function * androidPushUnregisterEntry () {\n  yield takeEvery(actionTypes.UNREGISTER_ANDROID_PUSH_NOTIFICATION, unregisterPushDeviceToken)\n}\n\n/**\n * Saga for deregistering a device token for push notifications.\n * @method deregisterPushDeviceToken\n */\nfunction * unregisterPushDeviceToken (action) {\n  const connection = yield select(getConnectionInfo)\n  const { pushRegistration } = yield select(getNotificationConfig)\n\n  // If a push registration endpoint was configured, use that instead of default.\n  if (pushRegistration) {\n    connection.server = defaults(connection.server, pushRegistration)\n    connection.protocol = defaults(connection.protocol, pushRegistration)\n    connection.port = defaults(connection.port, pushRegistration)\n    connection.version = defaults(connection.version, pushRegistration)\n  }\n\n  log.info('Un-registering device token for PUSH notifications...')\n  const response = yield call(requests.pushNotificationsDeRegistration, connection, {\n    registration: action.payload.registration\n  })\n  if (response.error) {\n    yield call([action.meta.deferred, 'reject'], {\n      error: response.text\n    })\n  } else {\n    yield call([action.meta.deferred, 'resolve'], undefined)\n  }\n}\n","import { overEvery, overSome, matches, map } from 'lodash/fp'\n// Constants\nimport { platforms } from './constants'\n\nexport { matches }\nexport const and = (...operands) => overEvery(operands)\nexport const or = (...operands) => overSome(operands)\nexport const type = type => matches({ type })\nexport const platform = platform => matches({ meta: { platform } })\nexport const types = (...types) => overSome(map(type, types))\n\nexport const link = platform(platforms.LINK)\n","const prefix = '@@KANDY/PRESENCE/'\n\nexport const UPDATE = prefix + 'UPDATE'\nexport const UPDATE_FINISH = prefix + 'UPDATE_FINISH'\nexport const GET = prefix + 'GET'\nexport const GET_FINISH = prefix + 'GET_FINISH'\nexport const SUBSCRIBE = prefix + 'SUBSCRIBE'\nexport const SUBSCRIBE_FINISH = prefix + 'SUBSCRIBE_FINISH'\nexport const UNSUBSCRIBE = prefix + 'UNSUBSCRIBE'\nexport const UNSUBSCRIBE_FINISH = prefix + 'UNSUBSCRIBE_FINISH'\nexport const RECEIVED = prefix + 'RECEIVED'\nexport const CREATE_PRESENCE_LIST = prefix + 'CREATE_PRESENCE_LIST'\nexport const CREATE_PRESENCE_LIST_FINISH = prefix + 'CREATE_PRESENCE_LIST_FINISH'\nexport const DELETE_PRESENCE_LIST = prefix + 'DELETE_PRESENCE_LIST'\nexport const GET_PRESENCE_LIST = prefix + 'GET_PRESENCE_LIST'\n","// Presence plugin.\nimport * as actionTypes from './actionTypes'\n\n// Other plugins.\nimport BasicError from '../../errors'\n\n/**\n * Update the presence for the current user\n * @param  {string} status   The status of the presence state\n * @param  {string} activity The activity to be shown as presence state\n * @param  {string} note     The note to be shown as alternative presence state\n *                           which is determined by the user. The note entry is\n *                           effective on the remote sip client when the\n *                           activity is “other”.\n * @return {Object}          A Flux Standard Action for UPDATE_PRESENCE\n */\nexport function updatePresence (status, activity, note) {\n  return {\n    type: actionTypes.UPDATE,\n    payload: {\n      status,\n      activity,\n      note\n    }\n  }\n}\n\nexport function updatePresenceFinish (payload) {\n  return {\n    type: actionTypes.UPDATE_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\n/**\n * Get the presence for the given user(s)\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for GET_PRESENCE\n */\nexport function getPresence (users) {\n  return {\n    type: actionTypes.GET,\n    payload: users\n  }\n}\n\nexport function getPresenceFinish (payload) {\n  return {\n    type: actionTypes.GET_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\n/**\n * Subscribe to the presence for the given user(s)\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for SUBSCRIBE_PRESENCE\n */\nexport function subscribePresence (users) {\n  return {\n    type: actionTypes.SUBSCRIBE,\n    payload: users\n  }\n}\n\nexport function subscribePresenceFinish (payload) {\n  if (!Array.isArray(payload.presentityUserId)) {\n    payload.presentityUserId = [payload.presentityUserId]\n  }\n  return {\n    type: actionTypes.SUBSCRIBE_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\n/**\n * Unsubscribe from the presence for the given user(s)\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function unsubscribePresence (users) {\n  return {\n    type: actionTypes.UNSUBSCRIBE,\n    payload: users\n  }\n}\n\nexport function unsubscribePresenceFinish (payload) {\n  if (!Array.isArray(payload.presentityUserId)) {\n    payload.presentityUserId = [payload.presentityUserId]\n  }\n  return {\n    type: actionTypes.UNSUBSCRIBE_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\n/**\n * Create a new presence list\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function createPresenceList (users) {\n  return {\n    type: actionTypes.CREATE_PRESENCE_LIST,\n    payload: users\n  }\n}\n\n/**\n * Delete a presence list\n * @param  {string} presenceListId  The ID of the presence list to delete.\n * @return {Object}                 A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function deletePresenceList (presenceListId) {\n  return {\n    type: actionTypes.DELETE_PRESENCE_LIST,\n    payload: presenceListId\n  }\n}\n\n/**\n * Retrieve a presence list\n * @param  {string} presenceListId  The ID of the presence list to delete.\n * @return {Object}                 A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function getPresenceList (presenceListId) {\n  return {\n    type: actionTypes.GET_PRESENCE_LIST,\n    payload: presenceListId\n  }\n}\n\nexport function createListFinish (payload) {\n  return {\n    type: actionTypes.CREATE_PRESENCE_LIST_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\nexport function presenceReceived (presence) {\n  return {\n    type: actionTypes.RECEIVED,\n    payload: presence\n  }\n}\n","/**\n * The 'presence' namespace provides an interface for an application to set the\n *    User's presence information and to track other Users' presence\n *    information.\n *\n * Presence information is persisted by the server. When the SDK is initialized,\n *    there will be no information available. Presence information will become\n *    available either by using {@link presence.fetch} or by subscribing for\n *    updates about other Users, using {@link presence.subscribe}.\n *\n * Available presence information can be retrieved using {@link presence.get} or\n *    {@link presence.getAll}.\n *\n * @public\n * @requires presence\n * @namespace presence\n */\n\n/**\n * The PresenceStatus type defines the user's current status in terms of the user's availability to\n * communicate/respond to other users in the network.\n * An instance of this type can be obtained by invoking the {@link presence.get} function.\n *\n * Reporting when a user is on the phone is enabled (by default), which means that presence update notifications\n * will be sent whenever a user is in a call, as well as when the call has ended.\n * This is a user preference enabled or disabled on server side, and it can only be changed on the server side.\n *\n * The status is set to {@link presence.statuses open} as soon as a user subscribes for the presence service.\n *\n * @public\n * @static\n * @typedef {Object} PresenceStatus\n * @memberof presence\n * @property {string} userId The unique identifier for the user associated with this presence status.\n * @property {string} status The current status the user has set for themselves. For supported values see {@link presence.statuses}.\n * @property {string} activity The current activity of the user.\n *      For supported values see {@link presence.activities}.\n * @property {string} note Additional message acompanying the status & activity.\n * @property {boolean} loading Whether the presence information has been loaded or is in the process of loading.\n */\n\nimport * as actions from './actions'\nimport * as selectors from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('PRESENCE')\n\nexport default function (context) {\n  const presenceApi = {\n    /**\n     * Updates the presence information for the current user.\n     *\n     * See {@link presence.statuses} and {@link presence.activities} for valid\n     *    values.\n     *\n     * The SDK will emit a\n     *    {@link presence.event:presence:selfChange presence:selfChange} event\n     *    when the operation completes. The updated presence information is\n     *    available and can be retrieved with {@link presence.getSelf}.\n     *\n     * Other users subscribed for this user's presence will receive a\n     *    {@link presence.event:presence:change presence:change} event.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method update\n     * @param  {string} status The status of the presence state.\n     * @param  {string} activity The activity to be shown as presence state\n     * @param  {string} [note] An additional note to be provided when the activity is `presence.activities.ACTIVITIES_OTHER`.\n     */\n    update (status, activity, note) {\n      log.debug(API_LOG_TAG + 'presence.update: ', status, activity, note)\n      context.dispatch(actions.updatePresence(status, activity, note))\n    },\n\n    /**\n     * Retrieves the presence information for specified users, if available.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method get\n     * @param  {Array<string>|string} user A User ID or an array of User IDs.\n     * @return {Array<Object>|Object} List of user presence information.\n     */\n    get (user) {\n      log.debug(API_LOG_TAG + 'presence.get: ', user)\n      const users = Array.isArray(user) ? user : [user]\n      const storedUsers = selectors.getPresence(context.getState(), users)\n      // return something sensible based on the input\n      if (!Array.isArray(users)) {\n        if (storedUsers.length) {\n          return storedUsers[0]\n        }\n        return undefined\n      }\n      return storedUsers\n    },\n\n    /**\n     * Retrieves the presence information for all available users.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method getAll\n     * @return {Array<Object>} List of user presence information.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'presence.getAll')\n      return selectors.getAllPresence(context.getState())\n    },\n\n    /**\n     * Retrieves the presence information for the current user.\n     *\n     * This information is set using the {@link presence.update} API.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method getSelf\n     * @return {Object} Presence information for the current user.\n     */\n    getSelf () {\n      log.debug(API_LOG_TAG + 'presence.getSelf')\n      return selectors.getSelfPresence(context.getState())\n    },\n\n    /**\n     * Fetches presence information for the given users. This will refresh the\n     *    available information with any new information from the server.\n     *\n     * Available presence information an be retrieved using the\n     *    {@link presence.get} or {@link presence.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method fetch\n     * @param {Array<string>|string} user A User ID or an array of User IDs.\n     */\n    fetch (user) {\n      log.debug(API_LOG_TAG + 'presence.fetch: ', user)\n      const users = Array.isArray(user) ? user : [user]\n      context.dispatch(actions.getPresence(users))\n    },\n\n    /**\n     * Subscribe to another User's presence updates.\n     *\n     * When the User updates their presence information, the SDK will emit a\n     *    {@link presence.event:presence:change presence:change} event.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method subscribe\n     * @param {Array<string>|string} users A User ID or an array of User IDs.\n     */\n    subscribe (users) {\n      log.debug(API_LOG_TAG + 'presence.subscribe: ', users)\n      context.dispatch(actions.subscribePresence(users))\n    },\n\n    /**\n     * Unsubscribe from another User's presence updates.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method unsubscribe\n     * @param {Array<string>|string} users A User ID or an array of User IDs.\n     */\n    unsubscribe (users) {\n      log.debug(API_LOG_TAG + 'presence.unsubscribe: ', users)\n      context.dispatch(actions.unsubscribePresence(users))\n    }\n  }\n  return { presence: presenceApi }\n}\n","/**\n * A presence update about a subscribed user has been received.\n *\n * This event is generated as a result of {@link presence.fetch} or {@link presence.update} operations.\n *\n * For the latter operation, the current user receives a presence update of another user that the current user is subscribed to.\n *\n * The changed information can be retrieved using the {@link presence.get}\n *    API.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:change\n * @param {Object} params A presence object containing data.\n * @param {string} params.userId The ID of the user.\n * @param {string} params.status The presence status of the user.\n * @param {string} params.activity The activity of the user.\n * @param {string} params.note A custom note provided by the user.\n */\nexport const RECEIVED = 'presence:change'\n\n/**\n * The current user's presence information has changed.\n *\n * The changed information can be retrieved using the {@link presence.getSelf}\n *    API.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:selfChange\n */\nexport const SELF_CHANGE = 'presence:selfChange'\n\n/**\n * An update (as a result of subscribing to a specific user's presence) has been received.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:subscribe\n * @param {Object} params A subscription object containing data.\n * @param {Array<string>} params.userIds The ID(s) of the user(s) whose presence needs to be watched.\n */\nexport const SUBSCRIBE = 'presence:subscribe'\n\n/**\n * An update (as a result of unsubscribing to a specific user's presence) has been received.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:unsubscribe\n * @param {Object} params A subscription object containing data.\n * @param {Array<string>} params.userIds The ID(s) of the user(s) whose presence no longer requires to be watched.\n */\nexport const UNSUBSCRIBE = 'presence:unsubscribe'\n\n/**\n * An error occurred with presence.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const ERROR = 'presence:error'\n","import * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\n\n// Helper function for error events.\nfunction presenceError (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.ERROR,\n      args: { error: action.payload }\n    }\n  }\n}\n\nconst eventsMap = {}\n\neventsMap[actionTypes.RECEIVED] = action => ({\n  type: eventTypes.RECEIVED,\n  args: {\n    userId: action.payload.userId,\n    status: action.payload.status,\n    activity: action.payload.activity,\n    note: action.payload.note\n  }\n})\n\neventsMap[actionTypes.UPDATE_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.SELF_CHANGE\n    }\n  }\n}\n\neventsMap[actionTypes.GET_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.RECEIVED,\n      args: {\n        userId: action.payload.userId,\n        status: action.payload.status,\n        activity: action.payload.activity,\n        note: action.payload.note\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.SUBSCRIBE_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.SUBSCRIBE,\n      args: {\n        userIds: action.payload.presentityUserId\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.UNSUBSCRIBE_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.UNSUBSCRIBE,\n      args: {\n        userIds: action.payload.presentityUserId\n      }\n    }\n  }\n}\n\n// TODO: Should have events to notifiy of successful operations for these actions.\neventsMap[actionTypes.CREATE_PRESENCE_LIST_FINISH] = presenceError\n\nexport default eventsMap\n","export { default as api } from './api'\nexport { default as reducer } from './reducers'\n","import * as actionTypes from './actionTypes'\n\n// Libraries\nimport { handleActions } from 'redux-actions'\nimport { omit } from 'lodash/fp'\nconst reducers = {}\n\nreducers[actionTypes.UPDATE] = {\n  next (state) {\n    return {\n      ...state,\n      self: {\n        ...state.self,\n        loading: true,\n        error: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.UPDATE_FINISH] = {\n  next (state, action) {\n    let result = {\n      ...state,\n      self: {\n        loading: false,\n        error: false,\n        status: action.payload.status,\n        activity: action.payload.activity\n      }\n    }\n    if (action.payload.note) {\n      result.self.note = action.payload.note\n    }\n    return result\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      self: {\n        ...state.self,\n        loading: false,\n        error: action.payload\n      }\n    }\n  }\n}\n\nreducers[actionTypes.GET] = {\n  next (state, { payload: userIds }) {\n    const users = { ...state.users }\n    for (let userId of userIds) {\n      users[userId] = {\n        userId,\n        loading: true\n      }\n    }\n    return { ...state, users }\n  }\n}\n\nreducers[actionTypes.GET_FINISH] = {\n  next (state, { payload }) {\n    if (!payload.presenceContact) {\n      return { ...state }\n    }\n\n    let users = {}\n    for (let contact of payload.presenceContact) {\n      let presenceObject = {}\n      presenceObject.userId = contact.presentityUserId\n      if (contact.presence && contact.presence.person) {\n        presenceObject.activity = contact.presence.person.activities.activityValue\n        presenceObject.status = contact.presence.person['overriding-willingness'].overridingWillingnessValue\n        presenceObject.note = contact.presence.person.activities.other\n      }\n      presenceObject.loading = false\n      users[contact.presentityUserId] = presenceObject\n    }\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        ...users\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state\n    }\n  }\n}\n\nreducers[actionTypes.RECEIVED] = {\n  next (state, { payload }) {\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        [payload.userId]: {\n          userId: payload.userId, // optimize for filtering by userId\n          status: payload.status,\n          activity: payload.activity,\n          note: payload.note,\n          loading: false\n        }\n      }\n    }\n  }\n}\n\nreducers[actionTypes.UNSUBSCRIBE_FINISH] = {\n  next (state, { payload }) {\n    return {\n      ...state,\n      users: omit(payload.presentityUserId, state.users)\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, { self: {}, users: {} })\nexport default reducer\n","export function getPresence (state, users) {\n  // If no users specified, return them all\n  if (!users) {\n    return state.presence.users\n  }\n\n  // Grab all users that match the passed in IDs, return\n  return Object.values(state.presence.users).filter(user => users.indexOf(user.userId) !== -1)\n}\n\n/**\n * Retrieves presence information for all users.\n * @method getAllPresence\n * @param  {Object} state Redux state.\n * @return {Array}  List of presence information for users.\n */\nexport function getAllPresence (state) {\n  return Object.values(state.presence.users)\n}\n\n/**\n * Retrieves the current user's self presence.\n * @method getSelfPresence\n * @param  {Object} state Redux state.\n * @return {Object} Self-presence information.\n */\nexport function getSelfPresence (state) {\n  return state.presence.self\n}\n","/**\n * The status of the presence state\n * @name STATUS\n */\nexport const STATUS = {\n  OPEN: 'open',\n  CLOSED: 'closed'\n}\n\n/**\n * The presence activity\n * @name ACTIVITY\n */\nexport const ACTIVITY = {\n  ACTIVE: 'active',\n  IDLE: 'idle',\n  AWAY: 'away',\n  LUNCH: 'lunch',\n  OTHER: 'other',\n  BUSY: 'busy',\n  VACATION: 'vacation',\n  ON_THE_PHONE: 'on-the-phone',\n  UNKNOWN: 'unknown'\n}\n","// Presence plugin.\nimport { api, reducer } from '../interface'\nimport * as sagas from './sagas'\nimport eventsMap from '../interface/events'\nimport { STATUS, ACTIVITY } from './constants'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries\nimport { put } from 'redux-saga/effects'\nimport { values } from 'lodash/fp'\n\nconst name = 'presence'\n\nconst capabilities = ['presence']\n\n/**\n * Link Presence plugin factory.\n * @method linkPresence\n * @return {Object} A plugin.\n */\nexport default function linkPresence () {\n  // Add plugin-specific things to the API.\n  function augmentedApi (context) {\n    const newApi = api(context)\n\n    /**\n     * Possible status values.\n     * @public\n     * @static\n     * @memberof presence\n     * @type {Object}\n     * @property {string} OPEN\n     * @property {string} CLOSED\n     * @example\n     * const { statuses, activities } = client.presence\n     * // Use the values when updating presence.\n     * client.presence.update(statuses.OPEN, activities.AVAILABLE)\n     */\n    newApi.presence.statuses = STATUS\n\n    /**\n     * Possible activity values.\n     * @public\n     * @static\n     * @memberof presence\n     * @type {Object}\n     * @property {string} AVAILABLE\n     * @property {string} IDLE\n     * @property {string} AWAY\n     * @property {string} LUNCH\n     * @property {string} BUSY\n     * @property {string} VACATION\n     * @property {string} ON_THE_PHONE\n     * @property {string} UNKNOWN\n     */\n    newApi.presence.activities = ACTIVITY\n    return newApi\n  }\n\n  return {\n    name,\n    capabilities,\n    api: augmentedApi,\n    reducer,\n    init: () => [put(mapEvents(eventsMap))],\n    sagas: values(sagas)\n  }\n}\n","// Request\nimport request from '../../request/effects'\n// Logs\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('PRESENCE')\n\nexport function * updatePresenceRequest ({ status, activity, note }, requestInfo) {\n  let url = `${requestInfo.baseURL}/rest/version/${requestInfo.version}/user/${requestInfo.username}/presence`\n\n  const data = { status, activity }\n  if (note) {\n    data.note = note\n  }\n  const body = JSON.stringify({ presenceRequest: data })\n\n  const method = 'POST'\n\n  const response = yield request({ url, body, method }, requestInfo.requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let { statusCode } = response.payload.body.presenceResponse\n      log.debug(`Failed to update presence with status code ${statusCode}.`)\n\n      // TODO: Proper error.\n      return new Error(`Failed to update presence with status code ${statusCode}.`)\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug(`Update presence request failed: ${message}.`)\n\n      // TODO: Proper error.\n      return new Error(`Update presence request failed: ${message}.`)\n    }\n  } else {\n    if (response.payload.body.presenceResponse.statusCode === 0) {\n      return true // success!\n    }\n    return new Error('Failed to update presence. Code: ' + response.payload.body.presenceResponse.statusCode + '.')\n  }\n}\n\n/**\n * Make a request to the presenceWatcher resource\n * @param  {array<User>}  users  a lits of users for the watch request\n * @param  {string}       action watch     Starts watching the presence updates\n *                                         for the users in the users array.\n *                               stopwatch Stops watching the presence updates\n *                                         for the users in the users array.\n *                               get       Gets the presence updates one time\n *                                         only for the users in the users array.\n */\nexport function * watchPresenceRequest (users, action, requestInfo) {\n  let url = `${requestInfo.baseURL}/rest/version/${requestInfo.version}/user/${requestInfo.username}/presenceWatcher`\n\n  const body = JSON.stringify({\n    presenceWatcherRequest: {\n      userList: users,\n      action\n    }\n  })\n\n  const method = 'POST'\n\n  const response = yield request({ url, method, body }, requestInfo.requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let { statusCode } = response.payload.body.presenceWatcherResponse\n      log.debug(`Failed to watch presence with status code ${statusCode}.`)\n\n      // TODO: Proper error.\n      return new Error(`Failed to watch presence with status code ${statusCode}.`)\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug(`Watch presence request failed: ${message}.`)\n\n      // TODO: Proper error.\n      return new Error(`Watch presence request failed: ${message}.`)\n    }\n  } else {\n    if (response.payload.body.presenceWatcherResponse.statusCode === 0) {\n      return response.payload.body // success!\n    }\n    return new Error(\n      'Failed to execute presence operation (' +\n        action +\n        '). Code: ' +\n        response.payload.body.presenceResponse.statusCode +\n        '.'\n    )\n  }\n}\n","// Presence plugin.\nimport * as actionTypes from '../interface/actionTypes'\nimport * as actions from '../interface/actions'\nimport { updatePresenceRequest, watchPresenceRequest } from './requests'\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\nimport { NOTIFICATION_RECEIVED } from '../../notifications/interface/actionTypes'\n// Libraries.\nimport { put, call, select, takeEvery } from 'redux-saga/effects'\n// Helpers\nimport BasicError, { presenceCodes } from '../../errors'\n\n// Constants\nimport { ACTIVITY, STATUS } from './constants'\nimport { platforms } from '../../constants'\n\nexport function * presenceUpdateSaga () {\n  yield takeEvery(actionTypes.UPDATE, updatePresence)\n}\n\nexport function * presenceGetSaga () {\n  yield takeEvery(actionTypes.GET, getPresence)\n}\n\nexport function * presenceSubscribeSaga () {\n  yield takeEvery(actionTypes.SUBSCRIBE, subscribePresence)\n}\n\nexport function * presenceUnsubscribeSaga () {\n  yield takeEvery(actionTypes.UNSUBSCRIBE, unsubscribePresence)\n}\n\nexport function * presenceReceivedSaga () {\n  yield takeEvery(\n    action =>\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage &&\n      action.payload.notificationMessage.eventType === 'presenceWatcher',\n    receivePresence\n  )\n}\n\nfunction * updatePresence ({ payload }) {\n  // Verify that the status value is a valid\n  if (Object.values(STATUS).indexOf(payload.status) === -1) {\n    yield put(\n      actions.updatePresenceFinish({\n        error: new BasicError({\n          code: presenceCodes.INVALID_STATUS,\n          message: 'Invalid status in presence update request.'\n        })\n      })\n    )\n    return\n  }\n\n  // Verify that the activity value is a valid\n  if (Object.values(ACTIVITY).indexOf(payload.activity) === -1) {\n    yield put(\n      actions.updatePresenceFinish({\n        error: new BasicError({\n          code: presenceCodes.INVALID_ACTIVITY,\n          message: 'Invalid activity in presence update request.'\n        })\n      })\n    )\n    return\n  }\n\n  const requestInfo = yield select(getRequestInfo)\n  let platform = yield select(getPlatform)\n  requestInfo.version = platform === platforms.UC ? 1 : requestInfo.version\n  const res = yield call(updatePresenceRequest, payload, requestInfo)\n  if (res instanceof Error) {\n    yield put(actions.updatePresenceFinish(res))\n  } else {\n    yield put(actions.updatePresenceFinish(payload))\n  }\n}\n\nfunction * getPresence ({ payload }) {\n  const users = Array.isArray(payload) ? payload : [payload]\n  const requestInfo = yield select(getRequestInfo)\n  let platform = yield select(getPlatform)\n  requestInfo.version = platform === platforms.UC ? 1 : requestInfo.version\n  const res = yield call(watchPresenceRequest, users, 'get', requestInfo)\n  yield put(actions.getPresenceFinish(res))\n}\n\nfunction * subscribePresence ({ payload }) {\n  const users = Array.isArray(payload) ? payload : [payload]\n  const requestInfo = yield select(getRequestInfo)\n  let platform = yield select(getPlatform)\n  requestInfo.version = platform === platforms.UC ? 1 : requestInfo.version\n  const res = yield call(watchPresenceRequest, users, 'watch', requestInfo)\n  res.presentityUserId = users\n  yield put(actions.subscribePresenceFinish(res))\n}\n\nfunction * unsubscribePresence ({ payload }) {\n  const users = Array.isArray(payload) ? payload : [payload]\n  const requestInfo = yield select(getRequestInfo)\n  let platform = yield select(getPlatform)\n  requestInfo.version = platform === platforms.UC ? 1 : requestInfo.version\n  const res = yield call(watchPresenceRequest, users, 'stopwatch', requestInfo)\n  yield put(actions.unsubscribePresenceFinish(res))\n}\n\nfunction * receivePresence (wsAction) {\n  const params = wsAction.payload.notificationMessage.presenceWatcherNotificationParams\n  const presence = {\n    userId: params.name,\n    activity: params.activity,\n    status: params.status,\n    note: params.note\n  }\n  yield put(actions.presenceReceived(presence))\n}\n","// Requests plugin.\nimport { RESPONSE } from './interface/actionTypes'\nimport * as actions from './interface/actions'\n\n// Libraries.\nimport { mergeValues } from '../common/utils'\nimport { get } from 'lodash/fp'\nimport { put, take, call, select } from 'redux-saga/effects'\nimport { injectAgentVersionHeader } from './interface/selectors'\nimport { getPlatform } from '../auth/interface/selectors'\nimport { getVersion } from '../common/version'\n\n// Constants\nimport { platforms } from '../constants'\n\n/**\n * Creates an effect description that instructs the middleware to perform a request with the provided options.\n * This effect is blocking and will yield a RESPONSE action on completion.\n *\n * @param {Object} options See https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n * @param {string} options.url The url to perform the request on.\n * @param {string} options.method The HTTP method to use for the request.\n * @param {Object} options.headers Object literal of headers you want to add to the request.\n * @param {Object} [options.queryParams] The parameters to be added to the query string\n * @param {string} [options.responseType] The data type assumed to be received in the response body\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] Any body that you want to add to your request.\n * @return A blocking redux-saga effect that will instruct the middleware to wait for the request to be fullfilled or until it fails.\n */\nexport default function request (options, commonOptions) {\n  return call(requestSaga, options, commonOptions)\n}\n\n/*\n * The saga backing the request effect.\n */\nexport function * requestSaga (options, commonOptions) {\n  // Merge any extra request options into the provided options\n  //      for this request. Priority is for the passed-in options.\n  options = mergeValues(commonOptions, options)\n\n  const useCustomHeader = yield select(injectAgentVersionHeader)\n  if (useCustomHeader) {\n    let platform = yield select(getPlatform)\n\n    // Assume request is for CPaaS platform, by default.\n    let headerValue = `cpaas-js-sdk/${getVersion()}`\n\n    // Check if request is for callMe service, otherwise determine the apropriate platform.\n    // (callMe service uses Link platform for call requests)\n    if (options.url && options.url.includes('/anonymous/')) {\n      headerValue = `callme-js-sdk/${getVersion()}`\n    } else {\n      // Check the actual platform used\n      if (platform === platforms.UC) {\n        headerValue = `uc-js-sdk/${getVersion()}`\n      } else if (platform === platforms.LINK) {\n        headerValue = `link-js-sdk/${getVersion()}`\n      }\n    }\n\n    // Note that the same headerName is used for all platforms & services.\n    options = mergeValues(options, {\n      headers: {\n        'X-Cpaas-Agent': headerValue\n      }\n    })\n  }\n\n  const requestAction = yield put(actions.request(options))\n  const responseAction = yield take(\n    action => action.type === RESPONSE && get('meta.requestId', action) === requestAction.meta.requestId\n  )\n\n  return responseAction\n}\n","import * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\n\nimport { call, put, takeEvery } from 'redux-saga/effects'\nimport { toQueryString, mergeValues } from '../common/utils'\nimport { logManager } from '../logs'\n\n// State setters.\nimport { update as updateConfig } from '../config/interface/actions'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from '../../src/common/validation'\n\n/**\n * Enum declaring the valid request response data types that are available to be handled\n */\nconst responseTypes = Object.freeze({\n  json: 'json',\n  blob: 'blob',\n  text: 'text',\n  none: 'none'\n})\n\nconst contentTypes = Object.freeze({\n  jsonType: 'application/json',\n  vdnJsonType: 'application/vdn.kandy.json',\n  plainTextType: 'text/plain',\n  xmlTextType: 'text/xml',\n  octetStream: 'application/octet-stream'\n})\n\nconst pluginName = 'requests'\n\n/**\n * Configurable properties 'published' by this \"Request\" plugin.\n *\n * @property {boolean} [injectAgentVersionHeader=true] Option to automatically inject an agent version header to every REST request.\n *            This header is used to help with diagnostics and analytics in a completely anonymous fashion.\n *            TODO: Set it to 'true' after server side whitelists that actual custom header.\n */\nconst defaultOptions = {\n  injectAgentVersionHeader: true\n}\n\nconst v8nValidation = v8n.schema({\n  injectAgentVersionHeader: v8n.boolean()\n})\nconst parseOptions = parse('request', v8nValidation)\n\n/*\n * HTTP request plugin.\n */\nexport default function request (options = {}) {\n  options = mergeValues(defaultOptions, options)\n  parseOptions(options)\n\n  function * init () {\n    yield put(updateConfig(options, pluginName))\n  }\n\n  return {\n    sagas: [watchRequests],\n    name: pluginName,\n    init\n  }\n}\n\n/*\n * Saga to watch for every request action.\n */\nfunction * watchRequests () {\n  yield takeEvery(actionTypes.REQUEST, handleRequest)\n}\n\n/*\n * Generator that handles a request action with standard HTTP handling features and reports\n * a requestFinished action when the request is done.\n *\n * @param {FluxStandardAction} action The action to handle.\n */\nfunction * handleRequest (action) {\n  // Make the request based on the action\n  var result = yield call(makeRequest, action.payload, action.meta.requestId)\n  yield put(actions.response(action.meta.requestId, result, !!result.error))\n}\n\n/**\n * Make a request with the specified options. The options is very similar to the options passed to the GlobalFetch\n * method except that is also accepts the url as part of the options.\n *\n * Currently this processes the request and assumes nothing about the response.\n * - If the response has a body, it will always be parsed and forwarded on.\n *      - If no body, then an empty object in its place.\n * - If the fetch succeeded, the response \"results\" will always be forwarded on,\n *      even if the response is outside of the 200-299 range.\n *      - Because some backends provide more detailed error info (that a saga\n *        may need) as part of the body, rather than just the response status.\n *\n * @param {Object} options Options to make the request with.\n * @param {string} options.url The URL to make the request to.\n * @param {Object} [options.queryParams] The parameters to be added to the query string\n * @param {string} [options.responseType] The data type assumed to be received in the response body\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] The request body\n * @return {Promise} A promise that resolves with a custom response object.\n */\nasync function makeRequest (options, requestId) {\n  const log = logManager.getLogger('REQUEST', requestId)\n\n  // TODO This functions is too complex. Consider refactoring.\n\n  /**\n   * Make a response object that will  have the same structure every time\n   * regardless of the server response.\n   *\n   * @param {Object} apiResponse API related response data\n   * @param {string} apiResponse.error This should be a string indicating an error if the request fails due to an invalid request.\n   * @param {string} apiResponse.message This should be a string with more details about the api error.\n   * @param {Object} httpResponse This will contain the response data from the server.\n   * @param {Object} httpResponse.body The response body data from the server.\n   * @param {boolean} httpResponse.ok Indicates if the request was considered a success by the server.\n   * @param {Object} httpResponse.code The HTTP status code for the request.\n   * @param {Object} httpResponse.message A message describing the server response.\n   * @return {Object} An object containing API and/or server response details.\n   */\n  function makeResponse (apiResponse = {}, httpResponse = {}) {\n    return {\n      body: httpResponse.body,\n      error: apiResponse.error,\n      result: {\n        ok: Boolean(httpResponse.ok),\n        code: httpResponse.code,\n        message: apiResponse.message || httpResponse.message\n      }\n    }\n  }\n\n  // Extract and remove the non-fetch API properties.\n  const { url, queryParams, responseType = 'json', ...fetchOptions } = options\n\n  if (!url || typeof url !== 'string') {\n    const invalidUrlMessage = `Invalid request url; expected url of type string but received ${url} instead`\n    log.error(invalidUrlMessage)\n    return makeResponse({ error: 'REQUEST_URL', message: invalidUrlMessage })\n  }\n\n  // Grab that last part of the URL (after the last /) to be logged.\n  let endUrl = url.match(/([^/]*)$/)[0]\n  // Cut it short if it's too long, since this should be human-readable.\n  endUrl = endUrl.length > 15 ? endUrl.substring(0, 15) + '...' : endUrl\n  log.info(`Making ${fetchOptions.method} ${endUrl} request.`)\n\n  if (!responseTypes.hasOwnProperty(responseType)) {\n    // Invalid data type requested\n    const invalidResponseType = 'Cannot make request; responseType value was invalid.'\n    log.info(invalidResponseType)\n    return makeResponse({ error: 'RESPONSE_TYPE', message: invalidResponseType })\n  }\n\n  let response\n  let contentType\n  try {\n    response = await fetch(url + toQueryString(queryParams), fetchOptions)\n  } catch (err) {\n    log.info(`Failed to make request, caused by ${err.message}`)\n    return makeResponse({ error: 'FETCH' }, { code: err.name, message: err.message })\n  }\n\n  try {\n    contentType = await response.headers.get('content-type')\n  } catch (err) {\n    log.debug(`Failed to get content-type:${err.message}.`)\n  }\n\n  try {\n    let result = {\n      ok: response.ok,\n      code: response.status,\n      message: response.statusText\n    }\n    let responseBody\n    let error = !response.ok\n\n    if (error) {\n      log.info(`Received error response for request (status ${response.status}).`)\n      /*\n       * Handle a special-case error where the response body is a HTML page...\n       * Throw away the body and so it is simply reported as 'Forbidden'.\n       * TODO: Handle responses based on their type rather than checking for\n       *    individual special cases...\n       */\n      if (response.status === 403 && contentType.includes('html')) {\n        return makeResponse({ error: 'REQUEST' }, result)\n      }\n\n      /*\n       * If the response indicates an error and has a body, resolve the body as JSON\n       * but no body return an empty object then return a `REQUEST` error\n       */\n      const isJson = contentType && contentType.includes(contentTypes.jsonType)\n      responseBody = isJson ? await response.json() : {}\n      return makeResponse({ error: 'REQUEST' }, { body: responseBody, ...result })\n    } else if (response.status === 204) {\n      /*\n       * A `204 (No Content)` response indicates a success, but with no content to return.\n       * Avoid parsing the response because there isn't one.\n       */\n      responseBody = {}\n\n      log.info(`Finished request with successful response (status ${response.status}).`)\n      return makeResponse(undefined, { body: responseBody, ...result })\n    } else {\n      /**\n       * The SDK should only be parsing the responses as is expected without checking the content type of the response.\n       * This is deterministic depending on the `responseType` passed in to the request through the request options.\n       */\n      responseBody = {}\n      try {\n        switch (responseType) {\n          case responseTypes.json:\n            responseBody = await response.json()\n            break\n          case responseTypes.blob:\n            responseBody = await response.blob()\n            break\n          case responseTypes.text:\n            responseBody = await response.text()\n            break\n          case responseTypes.none:\n            // Do not parse the response\n            break\n          default:\n            // This should be unreachable code.\n            throw Error('Assertion failed')\n        }\n      } catch (e) {\n        log.error(`Failed to parse with response type: ${responseType}. Error: ${e}`)\n\n        // Note: We get here if we have a successful request but the server sent us unexpected data.\n        // We need to treat this as an error case because we can no longer enforce a contract with the\n        // code making the request.\n        //\n        // If the code gets here the issue is either with the server not sending us expected data, or with\n        // the calling code that told us to expect the wrong data.\n\n        return makeResponse({ error: 'REQUEST' }, { code: e.name, message: e.message })\n      }\n\n      log.info(`Finished request with successful response (status ${response.status}).`)\n      return makeResponse(undefined, { body: responseBody, ...result })\n    }\n  } catch (err) {\n    log.info(`Failed to parse response, caused by ${err.message}`)\n    return makeResponse({ error: 'REQUEST' }, { code: err.name, message: err.message })\n  }\n}\n\n// begin-test-code\nexport const __testonly__ = { makeRequest, watchRequests, handleRequest }\n// end-test-code\n","const PREFIX = '@@KANDY/'\n\nexport const REQUEST = PREFIX + 'REQUEST'\nexport const RESPONSE = PREFIX + 'RESPONSE'\n","import * as actionTypes from './actionTypes'\n\nvar nextRequestId = 0\nfunction generateRequestId () {\n  return nextRequestId++\n}\n\n/**\n * Creates a request action.\n * @param {Object} options\n * @param {string} options.url The url for the request\n * @param {Object} [options.queryParams] Query parameters to be added to the url string\n * @param {string} [options.responseType] The data type assumed to be received in the response body\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] The request body\n */\nexport function request (options) {\n  return {\n    type: actionTypes.REQUEST,\n    payload: options,\n    meta: {\n      requestId: generateRequestId()\n    }\n  }\n}\n\n/**\n * Creates a response action.\n */\nexport function response (requestId, result, error = false) {\n  return {\n    type: actionTypes.RESPONSE,\n    payload: result,\n    error,\n    meta: {\n      requestId: requestId\n    }\n  }\n}\n","/**\n * Retrieves the flag which specifies wether or not this SDK should use a custom header as part of any requests being sent to server.\n * This custom header refers to the current agent version.\n * @param {Object} state  The current Redux state object.\n * @return {boolean} True if custom header should be used, false otherwise.\n */\nexport function injectAgentVersionHeader (state) {\n  return state.config.requests.injectAgentVersionHeader\n}\n","// Sip Events plugin.\nimport pluginInterface from './interface'\nimport * as sagas from './sagas'\nimport events from './interface/events'\n\n// Other plugins.\nimport { mapEvents } from '../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { values } from 'lodash/fp'\n\n/**\n * Sip Events Plugin Factory.\n * @method sipEvents\n * @return {Object} Sip Events plugin.\n */\nexport default function sipEvents () {\n  const { name, api, reducer } = pluginInterface\n  const capabilities = ['sipEvents']\n\n  function * init () {\n    yield put(mapEvents(events))\n  }\n\n  return {\n    name,\n    init,\n    api,\n    reducer,\n    capabilities,\n    sagas: values(sagas)\n  }\n}\n","const PREFIX = '@@KANDY/'\n\nexport const SIP_EVENT_SUBSCRIBE = PREFIX + 'SIP_EVENT_SUBSCRIBE'\nexport const SIP_EVENT_SUBSCRIBE_FINISH = PREFIX + 'SIP_EVENT_SUBSCRIBE_FINISH'\n\nexport const SIP_EVENT_UPDATE = PREFIX + 'SIP_EVENT_UPDATE'\nexport const SIP_EVENT_UPDATE_FINISH = PREFIX + 'SIP_EVENT_UPDATE_FINISH'\n\nexport const SIP_EVENT_UNSUBSCRIBE = PREFIX + 'SIP_EVENT_UNSUBSCRIBE'\nexport const SIP_EVENT_UNSUBSCRIBE_FINISH = PREFIX + 'SIP_EVENT_UNSUBSCRIBE_FINISH'\n\nexport const SIP_EVENT_RECEIVED = PREFIX + 'SIP_EVENT_RECEIVED'\n","import * as actionTypes from './actionTypes'\n\n// Helper function for formatting _FINISH actions.\nfunction finishActionHelper (actionType, { response, error }) {\n  return {\n    type: actionType,\n    error: !!error,\n    payload: error || response\n  }\n}\n\n/**\n * Represents a request to subscribe to a specific sip event.\n * @method sipEventSubscribe\n * @param  {string} eventType\n * @param  {Array}  subscribeUserList\n * @param  {string} clientCorrelator\n * @param  {Object} customParameters\n * @returns {Object} A flux standard action.\n */\nexport function sipEventSubscribe (eventType, subscribeUserList, clientCorrelator, customParameters) {\n  return {\n    type: actionTypes.SIP_EVENT_SUBSCRIBE,\n    payload: {\n      eventType,\n      subscribeUserList,\n      clientCorrelator,\n      customParameters\n    }\n  }\n}\n\n/**\n * Represents the response/error of a sip event subscription request.\n * @method sipEventSubscribeFinish\n * @param  {Object} $0\n * @param  {Object} $0.response Information about the subscription response.\n * @param  {BasicError} $0.error An error object, in the case of an issue.\n * @returns {Object} A flux standard action.\n */\nexport function sipEventSubscribeFinish ({ response, error }) {\n  return finishActionHelper(actionTypes.SIP_EVENT_SUBSCRIBE_FINISH, {\n    response,\n    error\n  })\n}\n\n/**\n * Represents a request to update a sip event subscription or resubscribe for it.\n * @method sipEventUpdate\n * @param  {string} eventType\n * @param  {Object} userLists\n * @param  {Object} customParameters\n * @returns {Object} A flux standard action.\n */\nexport function sipEventUpdate (eventType, userLists = {}, customParameters) {\n  // If no userList changes, this should just be a resubscription.\n  let isResub = Object.keys(userLists).length === 0\n  return {\n    type: actionTypes.SIP_EVENT_UPDATE,\n    payload: {\n      eventType,\n      subscribeUserList: userLists.subscribeUserList || [],\n      unsubscribeUserList: userLists.unsubscribeUserList || [],\n      customParameters\n    },\n    meta: isResub ? { isResub: true } : {}\n  }\n}\n\n/**\n * Represents the response/error of a sip event update/resub request.\n * @method sipEventUpdateFinish\n * @param  {Object} $0\n * @param  {Object} $0.response Information about the update/resub response.\n * @param  {BasicError} $0.error An error object, in the case of an issue.\n * @returns {Object} A flux standard action.\n */\nexport function sipEventUpdateFinish ({ response, error }) {\n  return finishActionHelper(actionTypes.SIP_EVENT_UPDATE_FINISH, {\n    response,\n    error\n  })\n}\n\n/**\n * Represents a request to unsubscribe from sip event subscriptions.\n * @method sipEventUnsubscribe\n * @param  {string} eventType The sip event subscription to unsubscribe from.\n * @returns {Object} A flux standard action.\n */\nexport function sipEventUnsubscribe (eventType) {\n  return {\n    type: actionTypes.SIP_EVENT_UNSUBSCRIBE,\n    payload: eventType\n  }\n}\n\n/**\n * Represents the response/error of a sip event unsubscribe request.\n * @method sipEventUnsubscribeFinish\n * @param  {Object} $0\n * @param  {Object} $0.response Information about the unsubscribe response.\n * @param  {BasicError} $0.error An error object, in the case of an issue.\n * @returns {Object} A flux standard action.\n */\nexport function sipEventUnsubscribeFinish ({ response, error }) {\n  return finishActionHelper(actionTypes.SIP_EVENT_UNSUBSCRIBE_FINISH, {\n    response,\n    error\n  })\n}\n\n/**\n * Represents that a sip event notification has been received.\n * @method sipEventReceived\n * @param  {Object} sipEvent\n * @returns {Object} A flux standard action.\n */\nexport function sipEventReceived (sipEvent) {\n  return {\n    type: actionTypes.SIP_EVENT_RECEIVED,\n    payload: sipEvent\n  }\n}\n","/**\n * The 'sip' namespace allows a user to subscribe to, and receive notifications for, sip events.\n *\n * SipEvents functions are all part of this namespace.\n *\n * @public\n * @requires sipEvents\n * @namespace sip\n */\n\nimport { getSipEventInfo } from './selectors'\nimport * as actions from './actions'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('SIPEVENTS')\n\n/**\n * Sip Events API.\n * @method api\n * @param  {Object} $0\n * @param  {Function} $0.dispatch Redux dispatch.\n * @param  {Function} $0.getState Redux getState.\n * @return {Object} Sip Events' plugin API.\n */\nexport default function api ({ dispatch, getState }) {\n  var api = {\n    /**\n     * Subscribe for a sip event.\n     * @public\n     * @method subscribe\n     * @requires sipEvents\n     * @memberof sip\n     * @param  {string} eventType The sip event type to subscribe for.\n     * @param  {Array}  subscribeUserList The list of users to subcribe to.\n     * @param  {string} clientCorrelator\n     * @param  {Array} [customParameters] List of custom options provided as part of the subscription.\n     */\n    subscribe (eventType, subscribeUserList, clientCorrelator, customParameters = []) {\n      log.debug(API_LOG_TAG + 'sip.subscribe: ', eventType, subscribeUserList, clientCorrelator, customParameters)\n      dispatch(actions.sipEventSubscribe(eventType, subscribeUserList, clientCorrelator, customParameters))\n    },\n\n    /**\n     * Update a subscription for a sip event.\n     * @public\n     * @method update\n     * @requires sipEvents\n     * @memberof sip\n     * @param  {string} eventType The sip event subscription to update.\n     * @param  {Object} userLists\n     * @param  {Array}  userLists.subscribeUserList The list of users to subcribe to.\n     * @param  {Array}  userLists.unsubscribeUserList The list of users to unsubscribe from. If all users are unsubscribed from, the event subscription is removed completly.\n     * @param  {Array} [customParameters] List of custom options provided as part of the subscription.\n     */\n    update (eventType, userLists, customParameters = []) {\n      log.debug(API_LOG_TAG + 'sip.update: ', eventType, userLists, customParameters)\n      dispatch(actions.sipEventUpdate(eventType, userLists, customParameters))\n    },\n\n    /**\n     * Unsubscribe from a sip event.\n     * @public\n     * @method unsubscribe\n     * @requires sipEvents\n     * @memberof sip\n     * @param  {string} eventType The sip event to unsubscribe from.\n     */\n    unsubscribe (eventType) {\n      log.debug(API_LOG_TAG + 'sip.unsubscribe: ', eventType)\n      dispatch(actions.sipEventUnsubscribe(eventType))\n    },\n\n    /**\n     * Retrieve information about a specified sip event.\n     * @public\n     * @method getDetails\n     * @requires sipEvents\n     * @memberof sip\n     * @param  {string} [eventType] Type of sip event to retrieve.\n     * @return {Object} Returns all information related to the chosen eventType that is contained in the store. If no eventType is specified, it will return information for all eventTypes.\n     */\n    getDetails (eventType) {\n      log.debug(API_LOG_TAG + 'sip.getDetails: ', eventType)\n      return getSipEventInfo(getState(), eventType)\n    }\n  }\n\n  // Namespace the API.\n  return { sip: api }\n}\n","/**\n * A change in SIP event subscriptions has occurred.\n * @public\n * @requires sipEvents\n * @memberof sip\n * @event sip:subscriptionChange\n * @param {Object} params\n * @param {string} params.eventType The type of sip event.\n * @param {Object} params.change The change operation that occurred.\n * @param {Array} params.subscribedUsers Users that were subscribed to.\n * @param {Array} params.unsubscribedUsers Users that were unsubscribed from.\n */\nexport const EVENT_SUBSCRIPTION_CHANGED = 'sip:subscriptionChange'\n\n/**\n * An error occurred while performing a SIP event action.\n * @public\n * @requires sipEvents\n * @memberof sip\n * @event sip:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const EVENT_ERROR = 'sip:error'\n\n/**\n * A SIP event notification has been received.\n * @public\n * @requires sipEvents\n * @memberof sip\n * @event sip:eventsChange\n * @param {Object} params Information about the notification.\n * @param {string} params.eventType The type of sip event.\n * @param {string} params.eventId The ID of the event.\n * @param {Object} params.event The full event object.\n */\nexport const EVENT_RECEIVED = 'sip:eventsChange'\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\n// Helper function for formatting \"changed\" events.\nfunction subscriptionChange ({ change, action }) {\n  if (action.error) {\n    return {\n      type: eventTypes.EVENT_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.EVENT_SUBSCRIPTION_CHANGED,\n      args: {\n        eventType: action.payload.eventType,\n        change,\n        subscribedUsers: action.payload.subscribedUsers,\n        unsubscribedUsers: action.payload.unsubscribedUsers\n      }\n    }\n  }\n}\n\nvar events = {}\n\nevents[actionTypes.SIP_EVENT_SUBSCRIBE_FINISH] = function (action) {\n  return subscriptionChange({\n    change: 'newSubscription',\n    action\n  })\n}\n\nevents[actionTypes.SIP_EVENT_UPDATE_FINISH] = function (action) {\n  return subscriptionChange({\n    change: 'updateSubscription',\n    action\n  })\n}\n\nevents[actionTypes.SIP_EVENT_UNSUBSCRIBE_FINISH] = function (action) {\n  return subscriptionChange({\n    change: 'unsubscribe',\n    action\n  })\n}\n\nevents[actionTypes.SIP_EVENT_RECEIVED] = function (action) {\n  // Pass the notification straight through.\n  return {\n    type: eventTypes.EVENT_RECEIVED,\n    args: {\n      eventType: action.payload.eventType,\n      eventId: action.payload.eventId,\n      event: action.payload\n    }\n  }\n}\n\nexport default events\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducer'\n\nconst name = 'sipEvents'\n\nexport default {\n  name,\n  api,\n  reducer\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\n\n// Libraries.\nimport { concat, omit, union, without } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.SIP_EVENT_SUBSCRIBE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      // Add a new sip event section to state.\n      [action.payload.eventType]: {\n        sessionData: action.payload.sessionData,\n        subscribedUsers: action.payload.subscribedUsers\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SIP_EVENT_UPDATE_FINISH] = {\n  next (state, action) {\n    let subscribedUsers = state[action.payload.eventType].subscribedUsers\n    // Add the new subscribed users.\n    subscribedUsers = union(action.payload.subscribeUserList, subscribedUsers)\n    // Remove the unsubscribed users.\n    subscribedUsers = without(action.payload.unsubscribeUserList, subscribedUsers)\n\n    // Update the subscribed users for the sip event section.\n    if (subscribedUsers.length === 0) {\n      // If there are no subscribed users for this session, the session is deleted.\n      let newState = { ...state }\n      delete newState[action.payload.eventType]\n      return newState\n    } else {\n      return {\n        ...state,\n        [action.payload.eventType]: {\n          ...state[action.payload.eventType],\n          subscribedUsers\n        }\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SIP_EVENT_UNSUBSCRIBE_FINISH] = {\n  next (state, action) {\n    // Remove the specified sip event section.\n    return omit(action.payload.eventType, state)\n  }\n}\n\nreducers[actionTypes.SIP_EVENT_RECEIVED] = function (state, action) {\n  // Ensure everything is defined.\n  let eventInfo = state[action.payload.eventType] || {}\n  let notifications = eventInfo.notifications || []\n  // Concat the notification to the specified sip event section.\n  return {\n    ...state,\n    [action.payload.eventType]: {\n      ...state[action.payload.eventType],\n      notifications: concat(notifications, action.payload)\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves information about a sip event.\n * @method getSipEventInfo\n * @param  {string} eventType\n * @return {Object}\n */\nexport function getSipEventInfo (state, eventType) {\n  if (eventType) {\n    return cloneDeep(state.sipEvents[eventType])\n  } else {\n    return cloneDeep(state.sipEvents)\n  }\n}\n","// Sip Events plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { getSipEventInfo } from './interface/selectors'\n\n// Other plugins.\nimport { getConnectionInfo, getPlatform } from '../auth/interface/selectors'\nimport { getSubscriptionInfo, getSubscribedServices } from '../subscription/interface/selectors'\nimport { NOTIFICATION_RECEIVED } from '../notifications/interface/actionTypes'\nimport request from '../request/effects'\nimport BasicError, { sipEventCodes } from '../errors'\n\n// Libraries.\nimport { put, race, select, spawn, take, delay } from 'redux-saga/effects'\n\n// Logs\nimport { logManager } from '../logs'\nimport { includes } from 'lodash/fp'\n\n// Constants\nimport { platforms } from '../constants'\n\n// Get the logger\nconst log = logManager.getLogger('SIPEVENTS')\n\n/**\n * Saga for subscribing to specified Sip Events.\n * @method sipEventSubscribe\n */\nexport function * sipEventSubscribe () {\n  while (true) {\n    const action = yield take(actionTypes.SIP_EVENT_SUBSCRIBE)\n    // TODO: Have the client correlator be provided as a config, not through the API.\n    log.debug(`Subscribing for sip ${action.payload.eventType}.`, action.payload.clientCorrelator)\n\n    // Determine if the user is subscribed to the specified sip event.\n    let subscribedServices = yield select(getSubscribedServices)\n    let sipEvents = subscribedServices.filter(service => service.startsWith('event:'))\n\n    if (!includes(action.payload.eventType, sipEvents)) {\n      log.info(`Cannot subcribe to sip ${action.payload.eventType}; service not provisioned.`)\n      yield put(\n        actions.sipEventSubscribeFinish({\n          error: new BasicError({\n            code: sipEventCodes.NOT_PROVISIONED,\n            message: 'Cannot subscribe to sip event; service was not provisioned during connection.'\n          })\n        })\n      )\n      continue\n    }\n\n    // Use the same subscription duration as the user subscription.\n    let { expires } = yield select(getSubscriptionInfo)\n\n    let platform = yield select(getPlatform)\n    let { server, username, token, accessToken, requestOptions: commonOptions } = yield select(getConnectionInfo)\n\n    // TODO: UC should store it's token the same way as Link.\n    if (platform === platforms.UC && !token) {\n      token = accessToken\n    }\n\n    const requestOptions = {}\n    requestOptions.method = 'POST'\n\n    requestOptions.url =\n      `${server.protocol}://${server.server}:${server.port}/` +\n      `rest/version/${server.version}/` +\n      `user/${username}/` +\n      'eventSubscription'\n\n    requestOptions.body = {\n      eventSubscriptionRequest: {\n        subscribeUserList: action.payload.subscribeUserList,\n        clientCorrelator: action.payload.clientCorrelator,\n        eventType: action.payload.eventType,\n        expires\n      }\n    }\n    if (action.payload.customParameters.length) {\n      requestOptions.body.eventSubscriptionRequest.customParameters = action.payload.customParameters\n    }\n    requestOptions.body = JSON.stringify(requestOptions.body)\n\n    const response = yield request(requestOptions, commonOptions)\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        let { statusCode } = response.payload.body.eventSubscriptionResponse\n        log.info(`Failed to subscribe to sip event ${action.payload.eventType}, ` + `status code ${statusCode}`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `Failed to subscribe to sip event ${action.payload.eventType}, ` + `status code ${statusCode}`\n        })\n      } else {\n        // Handler errors from the request helper.\n        let { message } = response.payload.result\n        log.info(`SIP event subscription request failed: ${message}.`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `SIP event subscription request failed: ${message}.`\n        })\n      }\n\n      yield put(actions.sipEventSubscribeFinish({ error }))\n    } else {\n      log.info(`Successfully subscribed to sip event ${action.payload.eventType}.`)\n      let finishAction = actions.sipEventSubscribeFinish({\n        response: {\n          // Response payload includes: statusCode, expires, sessionData.\n          ...response.payload.body.eventSubscriptionResponse,\n          eventType: action.payload.eventType,\n          subscribedUsers: action.payload.subscribeUserList\n        }\n      })\n      // Spawn a non-blocking saga to handle resubscriptions.\n      yield spawn(sipEventResub, finishAction)\n      yield put(finishAction)\n    }\n  }\n}\n\n/**\n * Saga to handle automatic resubscription to subscribed sip event.\n * @method sipEventResub\n * @param  {Object} action A SIP_EVENT_SUBSCRIBE_FINISH action.\n */\nfunction * sipEventResub (action) {\n  let shouldResub = true\n  while (shouldResub) {\n    const resubDelay = (action.payload.expires * 1000) / 2\n    // Wait for either the resub delay or an unsubscribe action.\n    const { expiry } = yield race({\n      expiry: delay(resubDelay),\n      unsubscribe: take(unsubAction => {\n        return (\n          unsubAction.type === actionTypes.SIP_EVENT_UNSUBSCRIBE_FINISH &&\n          unsubAction.payload.eventType === action.payload.eventType\n        )\n      })\n    })\n\n    // If the resubDelay has elapsed, attempt resubscribe.\n    if (expiry) {\n      let eventInfo = yield select(getSipEventInfo, action.payload.eventType)\n\n      if (eventInfo) {\n        log.info(`Re-subscribing for sip ${action.payload.eventType}.`)\n        yield put(actions.sipEventUpdate(action.payload.eventType, {}))\n      } else {\n        shouldResub = false\n      }\n    } else {\n      shouldResub = false\n    }\n  }\n}\n\n/**\n * Saga to update/resubscribe to a subscribed sip event.\n * @method sipEventUpdate\n */\nexport function * sipEventUpdate () {\n  while (true) {\n    const action = yield take(actionTypes.SIP_EVENT_UPDATE)\n    log.debug(`Updating sip event subscription: ${action.payload.eventType}.`)\n    let eventInfo = yield select(getSipEventInfo, action.payload.eventType)\n\n    if (!eventInfo) {\n      if (action.meta.isResub) {\n        // Don't need to resub, since we're not subscribed anymore.\n        // TODO: Tech-Debt: BasicError isn't very useful for these scenarios. The emitted event provides\n        //      the BasicError, except there's no (easy to use) info indicating _which_ event was being\n        //      acted on. BasicError needs the ability to provide extra information.\n        const error = new BasicError({\n          code: sipEventCodes.NOT_SUBSCRIBED,\n          message: `Cannot resubscribe for ${action.payload.eventType} subscription; user not subscribed.`\n        })\n        yield put(actions.sipEventUpdateFinish({ error }))\n      } else {\n        // Error: Not subscribed to this sip event. Cannot update.\n        const error = new BasicError({\n          code: sipEventCodes.NOT_SUBSCRIBED,\n          message: `Cannot update subscription for ${action.payload.eventType}; user not subscribed.`\n        })\n        yield put(actions.sipEventUpdateFinish({ error }))\n      }\n      continue\n    }\n\n    let platform = yield select(getPlatform)\n    let { server, username, token, accessToken, requestOptions: commonOptions } = yield select(getConnectionInfo)\n\n    // TODO: UC should store it's token the same way as Link.\n    if (platform === platforms.UC && !token) {\n      token = accessToken\n    }\n\n    const requestOptions = {}\n    requestOptions.method = 'PUT'\n\n    requestOptions.url =\n      `${server.protocol}://${server.server}:${server.port}/` +\n      `rest/version/${server.version}/` +\n      `user/${username}/` +\n      `eventSubscription/${eventInfo.sessionData}`\n\n    // Only include user lists in the request body if there are entries.\n    let userLists = {}\n    if (action.payload.subscribeUserList.length > 0) {\n      userLists.subscribeUserList = action.payload.subscribeUserList\n    }\n    if (action.payload.unsubscribeUserList.length > 0) {\n      userLists.unsubscribeUserList = action.payload.unsubscribeUserList\n    }\n\n    requestOptions.body = JSON.stringify({\n      eventSubscriptionRequest: {\n        ...userLists,\n        eventType: action.payload.eventType,\n        customParameters: action.payload.customParameters,\n        expires: eventInfo.expires\n      }\n    })\n\n    const response = yield request(requestOptions, commonOptions)\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        let { statusCode } = response.payload.body.eventSubscriptionResponse\n        log.info(`Failed to update sip event subscription; ${action.payload.eventType}, ` + `status code ${statusCode}`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message:\n            `Failed to update to sip event subscription; ${action.payload.eventType}, ` + `status code ${statusCode}`\n        })\n      } else {\n        // Handler errors from the request helper.\n        let { message } = response.payload.result\n        log.info(`SIP event update subscription request failed: ${message}.`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `SIP event update subscription request failed: ${message}.`\n        })\n      }\n\n      yield put(actions.sipEventUpdateFinish({ error }))\n    } else {\n      log.info(`Updated sip event subscription: ${action.payload.eventType}.`)\n      yield put(\n        actions.sipEventUpdateFinish({\n          response: {\n            // Response payload includes statusCode, expires, sessionData.\n            ...response.payload.body.eventSubscriptionResponse,\n            eventType: action.payload.eventType,\n            subscribeUserList: action.payload.subscribeUserList || [],\n            unsubscribeUserList: action.payload.unsubscribeUserList || []\n          }\n        })\n      )\n    }\n  }\n}\n\n/**\n * Saga to unsubscribe from [all currently subscribed] sip events.\n * @method sipEventUnsubscribe\n */\nexport function * sipEventUnsubscribe () {\n  while (true) {\n    const action = yield take(actionTypes.SIP_EVENT_UNSUBSCRIBE)\n    log.debug(`Unsubscribing from sip event subscriptions: ${action.payload}.`)\n    let eventInfo = yield select(getSipEventInfo, action.payload)\n\n    if (!eventInfo) {\n      log.info(`Cannot unsubscribe from sip event ${action.payload}; no subscription exists.`)\n      const error = new BasicError({\n        code: sipEventCodes.NOT_SUBSCRIBED,\n        message: `Cannot unsubscribe from ${action.payload}; no subscription found.`\n      })\n      yield put(actions.sipEventUnsubscribeFinish({ error }))\n      continue\n    }\n\n    let platform = yield select(getPlatform)\n    let { server, username, token, accessToken, requestOptions: commonOptions } = yield select(getConnectionInfo)\n\n    // TODO: UC should store it's token the same way as Link.\n    if (platform === platforms.UC && !token) {\n      token = accessToken\n    }\n\n    const requestOptions = {}\n    requestOptions.method = 'DELETE'\n    requestOptions.responseType = 'none'\n\n    requestOptions.url =\n      `${server.protocol}://${server.server}:${server.port}/` +\n      `rest/version/${server.version}/` +\n      `user/${username}/` +\n      `eventSubscription/${eventInfo.sessionData}`\n\n    const response = yield request(requestOptions, commonOptions)\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        let { statusCode } = response.payload.body.eventSubscriptionResponse\n        log.info(`Failed to unsubscribe from sip event ${action.payload.eventType}, ` + `status code ${statusCode}`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `Failed to unsubscribe from sip event ${action.payload.eventType}, ` + `status code ${statusCode}`\n        })\n      } else {\n        // Handler errors from the request helper.\n        let { message } = response.payload.result\n        log.info(`SIP event unsubscription request failed: ${message}.`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `SIP event unsubscription request failed: ${message}.`\n        })\n      }\n\n      yield put(actions.sipEventUnsubscribeFinish({ error }))\n    } else {\n      log.info(`Successfully unsubscribed from sip ${action.payload}.`)\n      yield put(\n        actions.sipEventUnsubscribeFinish({\n          response: {\n            eventType: action.payload\n          }\n        })\n      )\n    }\n  }\n}\n\n/**\n * Saga to handle received sip event notifications.\n * @method receiveEventNotify\n */\nexport function * receiveEventNotify () {\n  // Redux-saga take() pattern.\n  // Take notification actions that MAY be for sip events.\n  function receiveEventNotifyPattern (action) {\n    return (\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage.hasOwnProperty('genericNotificationParams')\n    )\n  }\n\n  while (true) {\n    const action = yield take(receiveEventNotifyPattern)\n\n    // Determine which sip events the user is subscribed/connected for.\n    let subscribedServices = yield select(getSubscribedServices)\n    let sipEvents = subscribedServices.filter(service => service.startsWith('event:'))\n\n    let notification = action.payload.notificationMessage\n\n    // Determine if this notification is for a sip event the user subscribed/connected for.\n    if (includes(notification.eventType, sipEvents)) {\n      let eventInfo = yield select(getSipEventInfo, notification.eventType)\n\n      // Determine if there is a subscription for this sip event in state.\n      if (eventInfo) {\n        log.info(`Received sip event notification of type ${notification.eventType}.`)\n        yield put(actions.sipEventReceived(notification))\n      } else {\n        // Subscribed to sip event, but received a notification for it?\n        log.debug('Received sip event notification for untracked event.', notification)\n      }\n    } else {\n      // Not subscribed to sip event, but received a notification for it?\n      log.debug('Received sip event notification without subscription.', action.payload.eventType)\n    }\n  }\n}\n","/**\n * Possible subscription states.\n * @name SUBSCRIPTION_STATE\n * @type {Object}\n */\nexport const SUBSCRIPTION_STATE = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n  NONE: 'NONE'\n}\n\n/**\n * Possible disconnect reasons.\n * @name DISCONNECT_REASONS\n * @type {Object}\n */\nexport const DISCONNECT_REASONS = {\n  GONE: 'GONE',\n  LOST_CONNECTION: 'LOST_CONNECTION'\n}\n","const prefix = '@@KANDY/SUBSCRIPTION/'\n\nexport const SUBSCRIBE = prefix + 'SUBSCRIBE'\nexport const SUBSCRIBE_FINISHED = prefix + 'SUBSCRIBE_FINISHED'\n\nexport const UNSUBSCRIBE = prefix + 'UNSUBSCRIBE'\nexport const UNSUBSCRIBE_FINISHED = prefix + 'UNSUBSCRIBE_FINISHED'\n\nexport const RESUBSCRIPTION_FINISHED = prefix + 'RESUBSCRIPTION_FINISHED'\n\nexport const REGISTER_SUB_SERVICE = prefix + 'REGISTER_SUB_SERVICE'\nexport const PLUGIN_SUBSCRIPTION = prefix + 'PLUGIN_SUBSCRIPTION'\nexport const PLUGIN_SUBSCRIPTION_FINISHED = prefix + 'PLUGIN_SUBSCRIPTION_FINISHED'\nexport const PLUGIN_UNSUBSCRIPTION = prefix + 'PLUGIN_UNSUBSCRIPTION'\nexport const PLUGIN_UNSUBSCRIPTION_FINISHED = prefix + 'PLUGIN_UNSUBSCRIPTION_FINISHED'\n\nexport const CHANNEL_OPENED = prefix + 'CHANNEL_OPENED'\nexport const CHANNEL_CLOSED = prefix + 'CHANNEL_CLOSED'\n","import * as actionTypes from './actionTypes'\n\n/**\n * Helper function for formatting actions.\n * Ensures that actions follow an expectable format.\n * @method actionFormatter\n * @param  {string}  actionType   [description]\n * @param  {Object} [payload={}] The action payload.\n * @param  {BasicError} [payload.error] For an error action, the error should be provided.\n * @param  {Object} [meta={}] The action meta data.\n * @return {Object}\n */\nfunction actionFormatter (actionType, payload = {}, meta = {}) {\n  return {\n    type: actionType,\n    payload: {\n      ...payload\n    },\n    error: !!payload.error,\n    meta: {\n      ...meta\n    }\n  }\n}\n\n/**\n * Represents a request to subscribe to services and connect to a notification\n * channel.\n * @method subscribe\n * @param  {Array}   services  An array containing the request services.\n * @param {Object} [options] Any parameters that aren't credentials.\n * @return {Object}            A flux standard action.\n */\nexport function subscribe (services = [], options) {\n  return actionFormatter(actionTypes.SUBSCRIBE, { services, ...options })\n}\n\n/**\n * Indicates that the subscription process has finished.\n * @method subscribeFinished\n * @param  {Object}  subscriptions  An object representing the subscriptions.\n * @param  {string}  type                 The type of notificaitonChannel for this subscription.\n * @param  {Object}  error                An error object.\n * @param  {Object}  platform             The platform being used.\n * @return {Object}                       A flux standard action.\n */\nexport function subscribeFinished ({ subscriptions, type, error }, platform) {\n  return actionFormatter(actionTypes.SUBSCRIBE_FINISHED, { subscriptions, type, error }, { platform })\n}\n\n/**\n * A request to unsubscribe from services.\n * @method unsubscribe\n * @param  {Array} services A list of services.\n * @param  {string} type The type of notificationChannel.\n * @return {Object} A flux standard action.\n */\nexport function unsubscribe (services = [], type) {\n  return actionFormatter(actionTypes.UNSUBSCRIBE, { services, type })\n}\n\n/**\n * A notice that unsubscription has finished.\n * @method unsubscribeFinished\n * @param  {string} type The type of notificationChannel.\n * @param  {Object} [error] An error object.\n * @param  {string} [reason] The reason for the unsubscribe, if abnormal.\n * @param  {Object}  platform             The platform being used.\n * @return {Object} A flux standard action.\n */\nexport function unsubscribeFinished ({ type, error, reason }, platform) {\n  return actionFormatter(actionTypes.UNSUBSCRIBE_FINISHED, { type, error, reason }, { platform })\n}\n\n/**\n * Action creator representing the finish of a resubscription request.\n * Payload mirrors a resubscription finished action.\n *\n * @method resubscribeFinished\n * @param {Object} $0\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} [$0.attemptNum] The attempt number of this resubscription.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function resubscribeFinished ({ error, attemptNum }, platform) {\n  var action = {\n    type: actionTypes.RESUBSCRIPTION_FINISHED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n    action.payload.attemptNum = attemptNum\n  } else {\n    action.payload = {\n      attemptNum\n    }\n  }\n\n  return action\n}\n\n/**\n * Signifies that a plugin has subscription logic for certain services.\n * @method registerService\n * @param  {Array}  [services=[]] A list of services.\n * @return {Object} A flux standard action.\n */\nexport function registerService (services = []) {\n  return actionFormatter(actionTypes.REGISTER_SUB_SERVICE, { services })\n}\n\n/**\n * Indicates that the subscription plugin expects plugins to subscribe\n * for the specified services.\n * @method doPluginSubscriptions\n * @param  {Array<Object>}  services The list of services that should be subscribed to.\n * @param  {string} type The type of notification channel for these subscriptions.\n * @return {Object} A flux standard action.\n */\nexport function doPluginSubscriptions (services, type) {\n  return actionFormatter(actionTypes.PLUGIN_SUBSCRIPTION, { services, type })\n}\n\n/**\n * Indicates that a plugin has finished a subscription for the specified service.\n * @method reportSubscriptionFinished\n * @param  {Object} params\n * @param  {string} params.service The service that the subscription was for.\n * @param  {string} params.type The type of notification channel for this subscription.\n * @param  {Object} params.subscription The subscription response from the backend.\n * @param  {BasicError} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function reportSubscriptionFinished ({ service, type, subscription, error }) {\n  const subscriptionId = subscription ? subscription.resourceURL.split('/subscriptions/')[1] : null\n  return actionFormatter(actionTypes.PLUGIN_SUBSCRIPTION_FINISHED, {\n    ...subscription,\n    subscriptionId: subscriptionId,\n    service,\n    channelType: type,\n    error\n  })\n}\n\n/**\n * Indicates that the subscription plugin expects plugins to unsubscribe\n * for the specified services.\n * @method doPluginUnsubscriptions\n * @param  {Array}  services The list of services that should be unsubscribed.\n * @param  {string} type The type of notification channel for these unsubscriptions.\n * @return {Object} A flux standard action.\n */\nexport function doPluginUnsubscriptions (services, type) {\n  return actionFormatter(actionTypes.PLUGIN_UNSUBSCRIPTION, { services, type })\n}\n\n/**\n * Indicates that a plugin has finished an unsubscription for the specified service.\n * @method reportUnsubscriptionFinished\n * @param  {Object} params\n * @param  {string} params.service The service that the unsubscription was for.\n * @param  {string} params.type The type of notification channel for this unsubscription.\n * @param  {BasicError} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function reportUnsubscriptionFinished ({ service, type, error }) {\n  return actionFormatter(actionTypes.PLUGIN_UNSUBSCRIPTION_FINISHED, {\n    service,\n    channelType: type,\n    error\n  })\n}\n\n/**\n * Indicates that a notification channel has been opened / created.\n * @method channelOpened\n * @param {Object} channelInfo Data about the notification channel.\n * @param {string} type The type of notification channel.\n * @return {Object} A flux standard action.\n */\nexport function channelOpened (channelInfo, type) {\n  return actionFormatter(actionTypes.CHANNEL_OPENED, { ...channelInfo }, { type })\n}\n\n/**\n * Indicates that a notification channel has been closed / deleted.\n * @method channelClosed\n * @param {string} type The type of notification channel.\n * @return {Object} A flux standard action.\n */\nexport function channelClosed (type) {\n  return actionFormatter(actionTypes.CHANNEL_CLOSED, {}, { type })\n}\n","/**\n * The 'services' namespace allows an application to manage how they wish the SDK to\n *    receive communications from the platform. An application can subscribe to\n *    services in order to receive updates about that service for the current\n *    user. A feature generally requires a subscription for its service to be\n *    fully functional.\n *\n * The services an application can subscribe to are based on the features\n *    included in the SDK. The list of available services can be retrieved\n *    using the {@link services.getSubscriptions} API. These values can be used\n *    with the {@link services.subscribe} API.\n *\n * The channel used for subscriptions is the method for receiving the service\n *    updates. The recommended channel is `websocket`, where the SDK is able to\n *    handle receiving the updates internally. Alternate channel methods, if a\n *    websocket cannot be used, will be available in the future.\n *\n * @public\n * @namespace services\n */\n\n/**\n * The ServiceDescriptor type defines the format for specifying how to subscribe for a certain service.\n * This is the service configuration object that needs to be passed (as part of an array of configuration objects) when calling\n * the {@link services.subscribe} function.\n * Only some plugins (`call`, `messaging` and `presence`) support such configuration object that needs to be passed\n * to the subscribe function.\n *\n * @public\n * @static\n * @typedef {Object} ServiceDescriptor\n * @property {string} service The name of the available service user wants to subscribe to.\n * The available service names are `chat`, `presence`, `call` and `smsinbound`.\n *\n * @property {Object} [params] An object containing any additional parameters required for subscribing to that service.\n * This is an optional property as not all service subscriptions require it.\n * @memberof services\n * @example\n * // Subscribe to chat, presence & call services on a WebSocket channel.\n * client.services.subscribe([\n *    {service: 'chat'},\n *    {service: 'presence'},\n *    {service: 'call'},\n * ], 'websocket')\n */\n\n/**\n * The SmsInboundServiceParams type defines the additional information when subscribing to SMS inbound service.\n * This is the configuration object that needs to be passed as the value for the {@link services.ServiceDescriptor ServiceDescriptor.params} property.\n *\n * @public\n * @static\n * @typedef {Object} SmsInboundServiceParams\n * @memberof services\n * @property {string} destinationAddress An E164 formatted DID number.\n *     The subscription created will provide notifications for inbound SMS messages destined for this address.\n * @example\n * // Subscribe to smsinbound service on a WebSocket channel.\n * client.services.subscribe([\n *    {service: 'smsinbound', params: {destinationAddress: '+18001234567'}}\n * ], 'websocket')\n */\n\n// Subscription plugin.\nimport * as actions from './actions'\nimport { getSubscribedServices, getRegisteredServices } from './selectors'\n\n// Auth plugin.\nimport { getUserInfo as selectUserInfo } from '../../auth/interface/selectors'\n\n// Constants\nimport { notificationTypes } from '../../constants'\n\n// Libraries\nimport { normalizeServices } from '../../common/utils'\n\n// Logs\nimport { logManager, API_LOG_TAG } from '../../logs'\nconst log = logManager.getLogger('SUBSCRIPTION')\n\n/**\n * Service API. All functions in this plugin are part of the 'services' namespace.\n * @method api\n * @param  {Function} params\n * @param  {Function} params.dispatch - The redux store's dispatch function.\n * @param  {Function} params.getState - The redux store's getState function.\n * @return {Object} api - The subscription API object.\n */\nexport default function api ({ dispatch, getState }) {\n  const subscriptionApi = {\n    /**\n     * Subscribes to platform notifications for an SDK service.\n     *\n     * Subscriptions can only be made for services available to the SDK. See\n     *    {@link services.getSubscriptions} for information about services.\n     *\n     * Extra configurations can be provided for a subscription as part of its\n     *    \"service configurations\" object (see the `services` parameter). This\n     *    configuration object must contain a `service` property with the\n     *    service name, but may also include other properties as extra\n     *    subscription configurations.\n     *\n     * The SDK currently only supports the `websocket` channel as a subscription\n     *    type.\n     *\n     * @public\n     * @static\n     * @requires cpaas_subscription\n     * @memberof services\n     * @method subscribe\n     * @param {Array<string | services.ServiceDescriptor>} services A list of service configurations.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.type='websocket'] The method of how to receive service updates.\n     * @example\n     * // Subscribe for chat and SMS services.\n     * const services = [\n     *    { service: 'chat' },\n     *    // Specify extra configurations for certain services.\n     *    { service: 'smsinbound', params: {destinationAddress: '<phoneNumber>' }}\n     * ]\n     *\n     * client.services.subscribe(services)\n     */\n\n    /**\n     * Subscribes to platform notifications for an SDK service.\n     *\n     * Extra configuration can be provide as an additional object parameter.\n     * Currently only a \"forceLogOut\" flag can be supplied in this object.\n     *\n     * For push notifications on link, please see {@link notifications.registerPush}\n     *\n     * The SDK currently only supports the `websocket` channel as a subscription\n     *    type.\n     *\n     * @public\n     * @static\n     * @memberof services\n     * @requires link_subscription\n     * @method subscribe\n     * @param {Array<string | services.ServiceDescriptor>} services A list of service configurations.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {boolean} [options.forceLogOut] Force the oldest connection to log out if too many simultaneous connections. Link only.\n     * @param {string} [options.type='websocket'] The method of how to receive service updates.\n     * @example\n     * // Subscribe for chat and SMS services.\n     * client.services.subscribe(['call', 'IM'], {forceLogOut: true})\n     */\n    subscribe (services, options = {}) {\n      // For backwards compatibility, we need to check if the 2nd parameter\n      // is a string and if it's a valid notification type, then convert\n      // it to the new api format\n      if (\n        typeof options === 'string' &&\n        (options === notificationTypes.WEBSOCKET || options === notificationTypes.PUSH)\n      ) {\n        options = {\n          type: options\n        }\n      }\n\n      if (!options.type) {\n        options.type = notificationTypes.WEBSOCKET\n      }\n\n      log.debug(API_LOG_TAG + 'services.subscribe: ', services, options.type)\n      const userInfo = selectUserInfo(getState())\n      if (userInfo && (userInfo.username || userInfo.accessToken)) {\n        // Normalize services array\n        services = normalizeServices(services)\n        dispatch(actions.subscribe(services, options))\n      } else {\n        // TODO: Directly emit error event\n      }\n    },\n\n    /**\n     * Cancels existing subscriptions for platform notifications.\n     *\n     * Existing subscriptions can be retrieved using the\n     *    {@link services.getSubscriptions} API. The `subscribed` values are the\n     *    services that can be unsubscribed from.\n     *\n     * @public\n     * @static\n     * @memberof services\n     * @method unsubscribe\n     * @param {Array<string>} services A list of subscribed service names.\n     * @param {string} [type='websocket'] The method of how the service updates\n     *    are being received.\n     * @example\n     * // Unsubscribe from chat and SMS services.\n     * const services = [ 'chat', 'smsinbound' ]\n     *\n     * client.services.unsubscribe(services)\n     */\n    unsubscribe (services, type = notificationTypes.WEBSOCKET) {\n      log.debug(API_LOG_TAG + 'services.unsubscribe: ', services, type)\n      const userInfo = selectUserInfo(getState())\n      if (userInfo && (userInfo.accessToken || userInfo.username)) {\n        dispatch(actions.unsubscribe(services, type))\n      } else {\n        // TODO: Directly emit error event\n      }\n    },\n\n    /**\n     * Resubscribe for notification subscriptions. ***NOT YET SUPPORTED***\n     * @memberof services\n     * @method resubscribe\n     * @param {Array<string>} services The subscribed services that should be unsubscribed.\n     * @param {string} [type='websocket'] The type of channel to be used for the notifications.\n     */\n    resubscribe (services, type = notificationTypes.WEBSOCKET) {\n      log.debug(API_LOG_TAG + 'services.resubscribe: ', services, type)\n      log.info(`THIS FUNCTIONALITY IS NOT YET SUPPORTED. Services: ${services}. Type: ${type}`)\n    },\n\n    /**\n     * Retrieves information about currently subscribed services and available services.\n     *\n     * The `available` values are the SDK's services that an application can\n     *    subscribe to receive notifications about. A feature generally\n     *    requires a subscription to its service in order to be fully functional.\n     *\n     * The `subscribed` values are the SDK's services that the application has\n     *    an active subscription for. Services are subscribed to using the\n     *    {@link services.subscribe} API.\n     *\n     * @public\n     * @static\n     * @memberof services\n     * @method getSubscriptions\n     * @return {Object} Lists of subscribed and available services.\n     * @example\n     * // Get the lists of services.\n     * const services = client.services.getSubscriptions()\n     *\n     * // Figure out which available services don't have a subscription.\n     * const notSubscribed = services.available.filter(service => {\n     *    return !services.subscribed.includes(service)\n     * })\n     *\n     * // Subscribe for all not-yet-subscribed services.\n     * client.services.subscribe(notSubscribed)\n     */\n    getSubscriptions () {\n      log.debug(API_LOG_TAG + 'services.getSubscriptions')\n      return {\n        subscribed: getSubscribedServices(getState()),\n        available: getRegisteredServices(getState()),\n        isPending: getState().subscription.isPending\n      }\n    }\n  }\n\n  return { services: subscriptionApi }\n}\n","/**\n * Subscription information has changed.\n *\n * The updated subscription information can be retrieved using the\n *    {@link services.getSubscriptions} API.\n * @public\n * @memberof services\n * @event subscription:change\n * @param {Object} params\n * @param {string} [params.reason] When unsolicited, the reason for the change.\n */\nexport const SUB_CHANGE = 'subscription:change'\n\n/**\n * An error occurred during a subscription operation.\n *\n * The subscription information can be retrieved using the\n *    {@link services.getSubscriptions} API.\n * @public\n * @memberof services\n * @event subscription:error\n * @param {Object} params\n * @param {Object} params.error A Basic error object, representing the error that occurred.\n */\nexport const SUB_ERROR = 'subscription:error'\n\n/**\n * An attempt to extend the current user's subscription was made.\n *\n * In a failure scenario, the current user is still connected, and further\n * resubscription attempts will be made, but may become disconnected if the\n * session expires.\n * @public\n * @memberof services\n * @event subscription:resub\n * @param {Object} params\n * @param {number} params.attemptNum The attempt number of this resubscription.\n * @param {boolean} params.isFailure Whether the resubscription failed or not.\n * @param {api.BasicError} [params.error] The Basic error object.\n */\nexport const SUB_RESUB = 'subscription:resub'\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nfunction subChangeEvent (action) {\n  return {\n    type: action.error ? eventTypes.SUB_ERROR : eventTypes.SUB_CHANGE,\n    args: action.error ? { error: action.payload.error } : { reason: action.payload.reason }\n  }\n}\n\nconst eventsMap = {}\n\n// Emit an event on start action for isPending change.\neventsMap[actionTypes.SUBSCRIBE] = subChangeEvent\neventsMap[actionTypes.UNSUBSCRIBE] = subChangeEvent\n\n// Emit an event on finish action for results.\neventsMap[actionTypes.SUBSCRIBE_FINISHED] = subChangeEvent\neventsMap[actionTypes.UNSUBSCRIBE_FINISHED] = subChangeEvent\n\neventsMap[actionTypes.RESUBSCRIPTION_FINISHED] = function (action) {\n  let resubEvent = {\n    type: eventTypes.SUB_RESUB,\n    args: {\n      attemptNum: action.payload.attemptNum,\n      isFailure: action.error || false\n    }\n  }\n\n  if (action.error) {\n    resubEvent.args.error = action.payload\n  }\n  return resubEvent\n}\n\nexport default eventsMap\n","import reducer from './reducers'\nimport name from './name'\nimport api from './api'\n\nexport { reducer, name, api }\n","/**\n * This interface is for an subscription plugin.\n * @type {string}\n */\nconst name = 'subscription'\nexport default name\n","import * as actionTypes from './actionTypes'\n\n// Constants\nimport { platforms } from '../../constants'\n\n// Other plugins.\nimport { DISCONNECT_REASONS } from '../../auth/constants'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\nimport { remove } from 'lodash/fp'\n\n/* State Structure\n    subscription: {\n        notificationChannels: { // An object with key values pairs for channelType -> channelInfo\n            [Websocket] : { ... }, // Channel Info taken directly from UC response.\n            [Push]      : { ... }\n        }\n    }\n */\n\nconst defaultState = {\n  // Information about the open notification channels.\n  notificationChannels: {},\n  // The list of active subscriptions.\n  subscriptions: [],\n  // The list of services that plugins can subscribe to.\n  registeredServices: [],\n  // Whether a subscription change is currently in progress.\n  isPending: false\n}\n\nconst reducers = {}\n\n// Helper function for changing the pending value.\nfunction pendingChange (value) {\n  return (state, action) => {\n    return { ...state, isPending: value }\n  }\n}\n// Change isPending depending on the start/finish of subscriptions.\nreducers[actionTypes.SUBSCRIBE] = pendingChange(true)\nreducers[actionTypes.UNSUBSCRIBE] = pendingChange(true)\n\nreducers[actionTypes.SUBSCRIBE_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      error: undefined,\n      platform: action.meta.platform,\n      subscriptions: action.payload.subscriptions || state.subscriptions\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\n/*\n * Remove subscriptions that are in the unsubscriptions list\n */\nreducers[actionTypes.UNSUBSCRIBE_FINISHED] = {\n  next (state, action) {\n    const newState = {\n      ...state,\n      isPending: false\n    }\n\n    /*\n     * Check if we are using link platform and clear the subscription array\n     */\n    if (action.meta.platform === platforms.LINK) {\n      newState.subscriptions = []\n    }\n\n    /*\n     * If connectivity was lost, remove all subscriptions to reflect that we\n     *    aren't receiving anything from them.\n     * In \"normal\" scenarios, other reducers handle the subscriptions state.\n     */\n    if (action.payload.reason === DISCONNECT_REASONS.LOST_CONNECTION) {\n      newState.subscriptions = []\n    }\n\n    return newState\n  },\n  throw (state) {\n    return {\n      ...state,\n      isPending: false\n    }\n  }\n}\n\n/*\n * When a plugin reports a succesful subscription, store it in state.\n */\nreducers[actionTypes.PLUGIN_SUBSCRIPTION_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      subscriptions: state.subscriptions.concat(action.payload)\n    }\n  }\n}\n\n/*\n * When a plugin reports a succesful unsubscription, remove it from state.\n */\nreducers[actionTypes.PLUGIN_UNSUBSCRIPTION_FINISHED] = {\n  next (state, action) {\n    function removeSubscription (subscription) {\n      return subscription.channelType === action.payload.channelType && subscription.service === action.payload.service\n    }\n\n    return {\n      ...state,\n      subscriptions: remove(removeSubscription)(state.subscriptions)\n    }\n  }\n}\n\n/*\n * Store the services that plugins can subscribe to in state.\n */\nreducers[actionTypes.REGISTER_SUB_SERVICE] = {\n  next (state, action) {\n    return {\n      ...state,\n      // TODO: Worry about duplicate services?\n      registeredServices: state.registeredServices.concat(action.payload.services)\n    }\n  }\n}\n\n/*\n * Store the new notifiction channel into state.\n * Assumption: A channel of the same type should NOT already exist.\n */\nreducers[actionTypes.CHANNEL_OPENED] = {\n  next (state, action) {\n    return {\n      ...state,\n      notificationChannels: {\n        ...state.notificationChannels,\n        [action.meta.type]: action.payload\n      }\n    }\n  }\n}\n\n/*\n * Remove the notification channel info when it has been closed.\n */\nreducers[actionTypes.CHANNEL_CLOSED] = {\n  next (state, action) {\n    return {\n      ...state,\n      notificationChannels: {\n        ...state.notificationChannels,\n        [action.meta.type]: undefined\n      }\n    }\n  }\n}\n\n/**\n * Subscription Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n * @example\n * Subscription state structure example; connected.\n * subscriptionState = {\n *\n * }\n */\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","import { cloneDeep } from 'lodash/fp'\n\n// Auth selectors for backwards compatability.\nimport { getSubscriptionInfo as getAuthSubscriptionInfo } from '../../auth/interface/selectors'\n\n/**\n * Plugin selector function to expose state globally\n * @param  {Object} pluginState The localized (plugin) state\n * @return {Object}             The exposed state\n */\nexport function getExposedState (pluginState) {\n  return cloneDeep(pluginState)\n}\n\n/**\n * Retrieves the config options provided by the subscription plugin.\n * @method getSubscriptionConfig\n * @return {Object}\n */\nexport function getSubscriptionConfig (state) {\n  return cloneDeep(state.config.subscription)\n}\n\n/**\n * Retrieves the list of services that plugins have registered for.\n * @method getRegisteredServices\n * @return {Array}\n */\nexport function getRegisteredServices (state) {\n  return cloneDeep(state.subscription.registeredServices)\n}\n\n/**\n * Retrieves the open notifications channels' info and their active subscriptions.\n * @method getNotificationChannels\n * @return {Object}\n */\n// TODO: Rename this selector. It gets more than notification channels.\nexport function getNotificationChannels (state) {\n  return cloneDeep({\n    notificationChannels: state.subscription.notificationChannels,\n    subscriptions: state.subscription.subscriptions\n  })\n}\n\n/**\n * Retrieve the list of services with current subscriptions.\n * @method getSubscribedServices\n * @param {string} type the type of subscription we want to get specifically\n * @return {Array}\n */\nexport function getSubscribedServices (state, type) {\n  const info = getSubscriptionInfo(state)\n  // For backwards compability, make sure that this is an array. It isn't when\n  //    the old Auth plugin is being used (eg. Link v3.X).\n  let subscriptions = Array.isArray(info) ? info : [info]\n\n  // If a type was specified, filter out subscriptions of other types.\n  if (type) {\n    subscriptions = subscriptions.filter(subscription => subscription.channelType === type)\n  }\n\n  // Massage the subscriptions to be a list of service names.\n\n  // For Link, subscription.service is an array of strings (all services).\n  // For CPaaS, subscription.service is a string (single service).\n  // Process the subscriptions in a way that will provide an array of strings in\n  //    both cases.\n  return subscriptions.reduce((acc, currentSub) => {\n    return acc.concat(currentSub.service)\n  }, [])\n}\n\n/**\n * Retrieves the subscription information.\n * @method getSubscriptionInfo\n * @return {Object}\n */\nexport function getSubscriptionInfo (state) {\n  if (state.subscription) {\n    return cloneDeep(state.subscription.subscriptions)\n  } else {\n    // For backwards compatability, also check if the authentication substate\n    //    has subscription info. It will have the info when the oldAuth plugin\n    //    is being used (eg. Link v3.X).\n    // Warning: This returns an object, unlike the above which returns an array.\n    return cloneDeep(getAuthSubscriptionInfo(state))\n  }\n}\n\n/**\n * Retrieve the list of subscriptions matching a given channel type and service name.\n * @method getSubscriptions\n * @param {string} service the name of the service we want to get specifically (e.g. smsinbound)\n * @param {string} type the type of communication channel we want to get specifically (e.g. websocket)\n * @return {Array}\n */\nexport function getSubscriptions (state, service, type) {\n  let subscriptions = state.subscription.subscriptions\n  subscriptions = subscriptions.filter(\n    subscription => subscription.service === service && subscription.channelType === type\n  )\n  return cloneDeep(subscriptions)\n}\n","// The interface to follow.\nimport { api, reducer, name } from '../interface'\n\n// Redux-Saga\nimport { put } from 'redux-saga/effects'\n\n// Events\nimport eventsMap from '../interface/events'\nimport { mapEvents } from '../../events/interface/actions'\n\n// State setters.\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Utilities.\nimport { mergeValues } from '../../common/utils'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from '../../../src/common/validation'\n\n/**\n * selector for exposed authentication state\n */\nimport { getExposedState } from '../interface/selectors'\n\nimport { subscriptionFlow, extendSubscription, onSubscriptionGone, onConnectionLostEntry } from './sagas'\n\n/**\n * Configuration options for the Subscription feature.\n * @public\n * @name config.subscription\n * @memberof config\n * @instance\n * @param {Object} subscription Subscription config.\n * @param {number} [subscription.expires=3600] The amount of time (in seconds) for which to keep subscription up and alive.\n * @param {Object} subscription.websocket\n * @param {string} subscription.websocket.server Hostname of the server to be used for websocket notifications.\n * @param {string} [subscription.websocket.protocol=wss] Protocol to be used for websocket notifications.\n * @param {Number} [subscription.websocket.port=443] Port to be used for websocket notifications.\n */\nconst defaultOptions = {\n  expires: 3600, // seconds\n  websocket: {\n    server: '',\n    protocol: 'wss',\n    port: 443\n  }\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  expires: v8n.positive(),\n  websocket: v8n.schema({\n    server: v8n.string(),\n    protocol: v8n.string(),\n    port: v8n.positive()\n  })\n})\n\nconst parseOptions = parse('subscription', v8nValidation)\n/**\n * Link subscription implementation factory.\n * @method createSubscriptionPlugin\n * @param {Object} options - Configuration options for subscription. See above.\n * @return {Object} plugin - An subscription plugin.\n */\nexport default function createSubscriptionPlugin (options = {}) {\n  options = mergeValues(defaultOptions, options)\n  parseOptions(options)\n\n  function * init () {\n    // Send the provided options to the store.\n    // This will be 'state.config[name]'.\n    yield put(updateConfig(options, name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  return {\n    sagas: [subscriptionFlow, extendSubscription, onSubscriptionGone, onConnectionLostEntry],\n    init,\n    capabilities: ['link_subscription'],\n    api,\n    selector: getExposedState,\n    reducer,\n    name\n  }\n}\n","import { SUBSCRIPTION_STATE } from '../../constants'\n\n/**\n * Uses the requested and received SPiDR [subscription] services to determine\n *      the SDK subscription status for each service.\n * @method parseSpidrServices\n * @param  {Array}  requested The list of requested SPiDR services.\n * @param  {Array}  received The list of received SPiDR services.\n * @return {Object} Information about the SDK's subscriptions.\n */\nexport function parseSpidrServices (requested, received) {\n  // UC platform is not case-sensitive (Link is), so filter without caring about case.\n  let upperReceived = received.map(service => service.toUpperCase())\n\n  // Find the missing services.\n  let missing = requested.filter(function (reqService) {\n    // If the requested service was received (not caring about case),\n    //      it is not missing.\n    return upperReceived.indexOf(reqService.toUpperCase()) === -1\n  })\n\n  let subscriptions = {\n    requested,\n    received,\n    missing,\n    status: 'UNKNOWN',\n    services: {}\n  }\n\n  // Determine the overall subscription status.\n  if (received.length === 0) {\n    subscriptions.status = SUBSCRIPTION_STATE.NONE\n  } else if (received.length > 0 && missing.length > 0) {\n    subscriptions.status = SUBSCRIPTION_STATE.PARTIAL\n  } else if (received.length > 0 && requested.length === received.length) {\n    subscriptions.status = SUBSCRIPTION_STATE.FULL\n  } else {\n    // Should never reach this case.\n  }\n\n  // List the individual service statuses.\n  received.forEach(function (service) {\n    subscriptions.services[service] = true\n  })\n  missing.forEach(function (service) {\n    subscriptions.services[service] = false\n  })\n\n  return subscriptions\n}\n","// Authentication plugin.\nimport { getPlatform } from '../../../auth/interface/selectors'\nimport { parseSpidrServices } from './services'\n\n// Other plugins.\nimport request from '../../../request/effects'\nimport BasicError, { authCodes } from '../../../errors'\nimport { logManager } from '../../../logs'\n\n// Libraries.\nimport { call, select } from 'redux-saga/effects'\nimport { mergeValues } from '../../../common/utils'\n\n// Constants\nimport { platforms } from '../../../constants'\n\nconst log = logManager.getLogger('SUBSCRIPTION')\n\n/**\n * Subscribe to SPiDR with the provided information.\n * @method subscribe\n * @param  {Object} connection Server information.\n * @param  {Object} username User information.\n * @return {Object} Subscription response.\n */\nexport function * subscribe (authConfig, subConfig, connection, service, extras = {}) {\n  let subscribeType = authConfig.isAnonymous ? 'anonymous' : 'user'\n  let requestOptions = {}\n  requestOptions.method = 'POST'\n\n  requestOptions.url =\n    `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` +\n    `/rest/version/${connection.server.version}` +\n    `/${subscribeType}/${connection.username}/subscription`\n\n  requestOptions.body = JSON.stringify({\n    subscribeRequest: {\n      expires: subConfig.expires,\n      service,\n      localization: authConfig.localization || 'English_US',\n      useTurn: authConfig.useTurn || true,\n      notificationType: authConfig.notificationType || 'WebSocket',\n      supported: ['RingingFeedback'],\n      forceLogOut: (extras.forceLogOut || false).toString()\n    }\n  })\n\n  // If there were any extra request options, merge them into the\n  //      options for this request. Priority is for the options defined here.\n  requestOptions = mergeValues(extras, requestOptions)\n\n  // Send the subscription request.\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      const body = response.payload.body\n\n      let statusCode\n      /*\n       * In some cases, the response is not wrapped in a `subscribeResponse`\n       *    property. This seems to be when using a pre-provisioned user (stored\n       *    as part of KL?) rather than a dynamically created user (retrieved\n       *    from AS?).\n       * Reference: ABE-23981 (and KAA-1937)\n       */\n      if (body.statusCode && body.reason) {\n        statusCode = body.statusCode\n      } else {\n        statusCode = body.subscribeResponse.statusCode\n      }\n      log.debug(`Failed user subscription with status code ${statusCode}.`)\n\n      // Handle errors from the server.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Failed to subscribe user. Code: ${statusCode}.`,\n          code: authCodes.LINK_SUBSCRIBE_FAIL\n        })\n      }\n    } else {\n      log.debug('Failed user subscription.', response.payload.result.message)\n      // Handle errors from the request plugin.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Subscribe request failed: ${response.payload.result.message}.`,\n          // TODO: Shared error codes.\n          code: authCodes.LINK_SUBSCRIBE_FAIL\n        })\n      }\n    }\n  } else {\n    // Request was successful.\n    let subscribeResponse = response.payload.body.subscribeResponse\n\n    let subscribedServices = subscribeResponse.subscriptionParams.service\n    let servicesInfo = yield call(parseSpidrServices, service, subscribedServices)\n    log.debug(`Subscribed user. Service subscription status: ${servicesInfo.status}`)\n\n    return {\n      error: false,\n      servicesInfo,\n      ...subscribeResponse\n    }\n  }\n}\n\n/**\n * Unsubscribe from SPiDR with the provided subscription info.\n * @method unsubscribe\n * @param  {Object}    connection Server information for the service in use.\n * @param  {string}    connection.server Server information for generating the URL.\n * @param  {string}    connection.requestOptions Common request options to be added.\n * @param  {string}    subscriptionURL URL of the user's subscription instance.\n * @return {Object}    Unsubscription response.\n */\nexport function * unsubscribe (connection, subscriptionURL) {\n  let requestOptions = {}\n  requestOptions.method = 'DELETE'\n\n  requestOptions.url =\n    `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` + subscriptionURL\n\n  requestOptions.headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n\n  // Send the unsubscribe request.\n  const response = yield request(requestOptions, connection.requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let { statusCode } = response.payload.body.subscribeResponse\n      log.debug(`Failed to unsubscribe user with status code ${statusCode}.`)\n\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Failed to unsubscribe user. Code: ${statusCode}.`,\n          code: authCodes.LINK_UNSUBSCRIBE_FAIL\n        })\n      }\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug('Failed user unsubscription.', message)\n\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Unsubscribe request failed: ${message}.`,\n          // TODO: Shared error codes.\n          code: authCodes.LINK_UNSUBSCRIBE_FAIL\n        })\n      }\n    }\n  } else {\n    // Request was successful.\n    let unsubResponse = response.payload.body.subscribeResponse\n    let platform = yield select(getPlatform)\n\n    if (platform === platforms.LINK && unsubResponse.statusCode === 0) {\n      // Link success response.\n      return {\n        error: false,\n        ...unsubResponse\n      }\n    } else if (platform === platforms.UC && unsubResponse.statusCode === 0) {\n      // Link success response.\n      return {\n        error: false,\n        ...unsubResponse\n      }\n    } else {\n      // Unknown statusCode, consider as failure.\n      return {\n        error: new BasicError({\n          message: `Unknown error; statusCode: ${unsubResponse.statusCode}.`,\n          code: authCodes.LINK_UNSUBSCRIBE_FAIL\n        })\n      }\n    }\n  }\n}\n\n/**\n * Resubscribe to SPiDR to extend an existing subscription.\n * @method resubscribe\n * @param  {Object}    connection Server information for the service in use.\n * @param  {string}    connection.server Server information for generating the URL.\n * @param  {string}    connection.requestOptions Common request options to be added.\n * @param  {Object}    subscription Information about the subscription instance.\n * @param  {string}    subscription.expires - The time (in seconds) until subscription expiry.\n * @param  {Array}     subscription.service - The SPiDR services to resubscribe to.\n * @param  {Array}     subscription.url - The URL of the user's subscription instance.\n * @return {Object}    Resubscription response.\n */\nexport function * resubscribe (connection, [subscription]) {\n  let requestOptions = {}\n  requestOptions.method = 'PUT'\n\n  requestOptions.url =\n    `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` + subscription.url\n\n  requestOptions.headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n  // TODO: Don't hardcode the defaults here. Should be shared with\n  //      the subscribe request as well.\n  requestOptions.body = JSON.stringify({\n    subscribeRequest: {\n      expires: subscription.expires,\n      service: subscription.service,\n      localization: subscription.localization || 'English_US',\n      useTurn: subscription.useTurn || true,\n      notificationType: subscription.notificationType || 'WebSocket'\n    }\n  })\n\n  // Send the subscription update request.\n  const response = yield request(requestOptions, connection.requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let { statusCode } = response.payload.body.subscribeResponse\n      log.debug(`Failed to update user subscription with status code ${statusCode}.`)\n\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Failed to update user subscription. Code: ${statusCode}.`,\n          code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n        })\n      }\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug('User subscription update request failed.', message)\n\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Update subscription request failed.: ${message}.`,\n          // TODO: Shared error codes.\n          code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n        })\n      }\n    }\n  } else {\n    // Request was successful.\n    let resubResponse = response.payload.body.subscribeResponse\n\n    if (resubResponse.statusCode === 0 || resubResponse.statusCode === 2) {\n      let subscribedServices = resubResponse.subscriptionParams.service\n      let servicesInfo = yield call(parseSpidrServices, subscription.service, subscribedServices)\n      log.debug(`Resubscribed user. Service resubscription status: ${servicesInfo.status}`)\n\n      // Success.\n      return {\n        error: false,\n        servicesInfo,\n        ...resubResponse\n      }\n    } else {\n      // Unknown statusCode, consider as failure.\n      return {\n        error: new BasicError({\n          message: `Unknown error; statusCode: ${resubResponse.statusCode}.`,\n          code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n        })\n      }\n    }\n  }\n}\n","// Subscription plugin.\nimport * as actionTypes from '../../interface/actionTypes'\nimport * as actions from '../../interface/actions'\nimport { DISCONNECT_REASONS } from '../../constants'\n\n// State selectors\nimport { getAuthConfig, getConnectionInfo } from '../../../auth/interface/selectors'\nimport { getSubscriptionConfig, getSubscriptionInfo } from '../../interface/selectors'\n\n// Constants\nimport { platforms } from '../../../constants'\n\n// Requests\nimport { subscribe, unsubscribe, resubscribe } from '../requests/subscriptions'\n\n// Helpers.\nimport { logManager } from '../../../logs'\n\n// Libraries.\nimport {\n  actionChannel,\n  call,\n  cancel,\n  cancelled,\n  delay,\n  fork,\n  put,\n  race,\n  select,\n  take,\n  takeEvery\n} from 'redux-saga/effects'\nimport { mergeValues } from '../../../common/utils'\nimport { union, isEmpty, difference } from 'lodash/fp'\n\n// Other plugins.\nimport { connectWebsocket, disconnectWebsocket } from '../../../connectivity/interface/effects'\nimport { getConnectionState, getConnectivityConfig } from '../../../connectivity/interface/selectors'\nimport * as connectivityActionTypes from '../../../connectivity/interface/actionTypes'\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\n\n// Errors\nimport BasicError, { authCodes } from '../../../errors'\n\n// This is an Link plugin.\nconst platform = platforms.LINK\nconst log = logManager.getLogger('SUBSCRIPTION')\n\n/**\n * Entry point for ALL subscription change actions.\n * Queues all subscription changes (ie. subscribe, unsubscribe) to avoid async\n * scenarios. This ensures channels and subscriptions are not duplicated\n * and that resources are created/clean-up when needed.\n * @method subscriptionFlow\n */\nexport function * subscriptionFlow () {\n  // Use a channel to queue ALL subscription change requests.\n  const subscriptionChannel = yield actionChannel([actionTypes.SUBSCRIBE, actionTypes.UNSUBSCRIBE])\n\n  while (true) {\n    const action = yield take(subscriptionChannel)\n\n    if (action.type === actionTypes.SUBSCRIBE) {\n      // Check if we have an existing subscription\n      const subscription = yield select(getSubscriptionInfo)\n      let task\n\n      console.log(`subscription ${JSON.stringify(subscription)}`)\n      if (!subscription || !subscription[0]) {\n        // No existing subscription, make a new subscription request\n        // Fork off and try to connect/subscribe\n        task = yield fork(doSubscribe, action)\n      } else {\n        // Existing subscription found, update our subscription.\n        // Fork off and try to update subscription\n\n        task = yield fork(updateSubscription, action, true)\n      }\n\n      // Take the actions for if an error or disconnect occurs\n      const finishOrError = yield take([actionTypes.SUBSCRIBE_FINISHED, actionTypes.UNSUBSCRIBE])\n\n      /**\n       * This if block covers 2 of the 3 flows of subscribe / unsubscribe.\n       * 1. The first block covers what happens when we receive an UNSUBSCRIBE action before we finish connecting.\n       *        IE UNSUBSCRIBE comes before a SUBSCRIBE_FINISHED.\n       * 2. The second scenario covers what happens when we get a successful SUBSCRIBE_FINISHED event before any UNSUBSCRIBE events.  We just finish (and restart the saga).\n       * 3. The third scenario is not explicitly covered here. That scenario is when we received a SUBSCRIBE_FINISHED event with an error before any unsubscribe events.\n       *      In this case, there is nothing that we explicitly have to do, since a SUBSCRIBE_FINISHED event with an error doesn't place anything into the state.\n       *      Therefore there is no real cleanup for us to do in this scenario. We then want to wait for the next SUBSCRIBE ( which we do via the next iteration of the while loop).\n       **/\n      if (finishOrError.type === actionTypes.UNSUBSCRIBE) {\n        yield cancel(task)\n      }\n    } else if (action.type === actionTypes.UNSUBSCRIBE) {\n      // Check if we have an existing subscription\n      const subscription = yield select(getSubscriptionInfo)\n\n      if (subscription && subscription[0]) {\n        // Remove all services from our subscribed services if they are present\n        const updatedServices = subscription[0].service.filter(service => !action.payload.services.includes(service))\n\n        if (updatedServices.length === 0) {\n          // All services are being unsubscribed\n          yield call(doUnsubscribe)\n        } else if (isEmpty(difference(subscription[0].service, updatedServices))) {\n          // We don't have a subscription for any of the services requesting unsubscribing\n          // No subscription found\n          const error = new BasicError({\n            message: `No subscription found for ${JSON.stringify(action.payload.services)}, can't unsubscribe.`,\n            code: authCodes.LINK_UNSUBSCRIBE_FAIL\n          })\n\n          yield put(actions.unsubscribeFinished({ error: error }))\n          log.debug(`Unsubscribe failed: ${error.message}`)\n        } else {\n          // Some services are being unsubscribed, update our subscription\n          action.payload.services = updatedServices.map(service => {\n            return {\n              service: service\n            }\n          })\n\n          yield call(updateSubscription, action, false)\n        }\n      } else {\n        // No subscription found\n        const error = new BasicError({\n          message: `No subscription found, can't unsubscribe.`,\n          code: authCodes.LINK_UNSUBSCRIBE_FAIL\n        })\n\n        yield put(actions.unsubscribeFinished({ error: error }))\n        log.debug(`Unsubscribe failed: ${error.message}`)\n      }\n    }\n  }\n}\n\n/**\n * Link subscribe function.\n * Performs the workflow of connecting/subscribing to SPiDR services\n * @method doSubscribe\n */\nexport function * doSubscribe (action) {\n  if (!action.payload.services || action.payload.services.length === 0) {\n    // Error scenario: No services specified.\n    // TODO: Better error.\n    yield put(actions.subscribeFinished({ error: true }))\n    return\n  }\n\n  try {\n    // Retrieve the connection info\n    const authConfig = yield select(getAuthConfig)\n\n    // Retrieve the connection info.\n    const linkConnection = yield select(getConnectionInfo)\n\n    let { services, ...options } = action.payload\n    const requestOptions = mergeValues(options, linkConnection.requestOptions)\n\n    // Retrieve the subscription config.\n    const subConfig = yield select(getSubscriptionConfig)\n\n    services = services.map(subscription => subscription.service)\n\n    const response = yield call(subscribe, authConfig, subConfig, linkConnection, services, requestOptions)\n\n    if (response.error) {\n      yield put(actions.subscribeFinished({ error: response.error }))\n      log.debug(`Subscription failed: ${response.error}`)\n      return\n    }\n\n    // Keep track of service subscription information.\n    const subscription = {\n      ...response.subscriptionParams,\n      servicesInfo: response.servicesInfo,\n      url: response.subscription\n    }\n\n    const { webSocketOAuthMode } = yield select(getConnectivityConfig)\n\n    let params = {}\n    let bearerAccessToken = linkConnection.bearerAccessToken\n\n    if (bearerAccessToken && webSocketOAuthMode === 'query') {\n      // If using bearerAccessToken, set the param token property to its value\n      params.access_token = bearerAccessToken\n    }\n\n    // Need to create a new object, rather than adding `url` to\n    // connectionInfo in order to prevent state mutation.\n    // Format the response to pass off to the connectivity plugin.\n    const websocketInfo = {\n      protocol: 'wss',\n      server: subConfig.websocket.server || authConfig.websocket.server,\n      port: subConfig.websocket.port || authConfig.websocket.port,\n      url: subscription.notificationChannel,\n      params: params\n    }\n\n    // Request the websocket connection.\n    const wsOpenOrError = yield connectWebsocket(websocketInfo, platform)\n\n    if (wsOpenOrError.error) {\n      throw wsOpenOrError.payload\n    }\n\n    yield put(actions.subscribeFinished({ subscriptions: [subscription] }, platform))\n    log.info(`Subscribed to the following services: ${subscription.service}`)\n  } catch (error) {\n    // Error: subscription failed\n    yield put(actions.subscribeFinished({ error }))\n    log.debug(`Subscription failed: ${error.message}`)\n  } finally {\n    if (yield cancelled()) {\n      yield call(doUnsubscribe)\n      // If we enter this point we know we got disconnect mid connection attempt BEFORE SUBSCRIBE_FINISHED fired.\n      // Therefore we have to put any special store cleanup code in here.\n      // SUBSCRIBE_FINISHED action handles clearing up the store so no logic needs to be here right now.\n    }\n  }\n}\n\n/**\n * Link unsubscribe function.\n * Performs the actions for actually unsubscribing from SPiDR.\n * @method doUnsubscribe\n */\nexport function * doUnsubscribe () {\n  // Retrieve needed info from the store.\n  let subscription = yield select(getSubscriptionInfo)\n  // Since link will only ever have 1 subscription object in\n  // this array, we can take the first element and use it directly\n  subscription = subscription[0]\n  const connection = yield select(getConnectionInfo)\n\n  // If the above info is not present, we probably got a disconnect mid-connection attempt.\n  let response = {}\n  if (subscription && connection) {\n    // If the info is in the store we can go ahead and unsubscribe.\n    response = yield call(unsubscribe, connection, subscription.url)\n  }\n\n  const wsState = yield select(getConnectionState, platform)\n  if (wsState.connected) {\n    // disconnect from the websocket\n    yield disconnectWebsocket(undefined, platform)\n  }\n\n  // Dispatch disconnect finished action appropriate for the response.\n  if (response.error) {\n    yield put(actions.unsubscribeFinished({ error: response.error }))\n    log.debug(`Unsubscribe failed: ${response.error}`)\n  } else {\n    // We enter this block if we unsubscribed succesfully OR we never even called unsub. Either way we are unsubscribed.\n    yield put(actions.unsubscribeFinished({}, platform))\n    log.info(`Succesfully unsubscribed from all services.`)\n  }\n}\n\n/**\n * Saga for extending a user's subscription.\n * When triggered, make a resub request to SPiDR for a specific subscription.\n * @method extendSubscription\n */\nexport function * extendSubscription () {\n  // Resubscription timer is triggered by a successful subscription or a previous resub finishing.\n  // Use a channel to queue the triggers (so it can catch the put resub action at the end).\n  const resubTriggers = yield actionChannel([actionTypes.SUBSCRIBE_FINISHED, actionTypes.RESUBSCRIPTION_FINISHED])\n\n  while (true) {\n    const action = yield take(resubTriggers)\n\n    // If the action was a subscription error, ignore it.\n    if (action.type === actionTypes.SUBSCRIBE_FINISHED && action.error) {\n      continue\n    }\n\n    const connection = yield select(getConnectionInfo)\n    const subscription = yield select(getSubscriptionInfo)\n\n    // Check if we actually have a subscription and if not, just continue\n    if (!subscription || !subscription[0]) {\n      continue\n    }\n\n    let attemptNum\n    // If the action was a failed resubscription, increment the attempt number.\n    if (action.type === actionTypes.RESUBSCRIPTION_FINISHED && action.error) {\n      attemptNum = action.payload.attemptNum + 1\n    } else {\n      attemptNum = 1\n    }\n\n    // Set the delay to be halfway between now and when the subscription expires.\n    let resubDelay = (subscription[0].expires * 1000) / Math.pow(2, attemptNum)\n    // Don't try to resub more often than every 5 minutes.\n    resubDelay = resubDelay > 30000 ? resubDelay : 30000\n\n    // Wait for either the resub delay or a disconnect action.\n    const { expiry } = yield race({\n      expiry: delay(resubDelay),\n      unsubscribe: take(actionTypes.UNSUBSCRIBE_FINISHED)\n    })\n\n    // If the resubDelay expired, attempt resubscription\n    if (expiry) {\n      const response = yield call(resubscribe, connection, subscription)\n\n      if (response.error) {\n        yield put(\n          actions.resubscribeFinished(\n            {\n              error: response.error,\n              attemptNum\n            },\n            platform\n          )\n        )\n      } else {\n        // TODO: Check response.serviceInfo for full/partial resubscription.\n        yield put(actions.resubscribeFinished({ attemptNum }, platform))\n      }\n    }\n  }\n}\n\n/**\n * Saga for updating a subscription's services.\n * @method updateSubscription\n */\nexport function * updateSubscription (action, addService = true) {\n  const connection = yield select(getConnectionInfo)\n  let subscription = yield select(getSubscriptionInfo)\n\n  const services = action.payload.services.map(subscription => subscription.service)\n\n  if (addService) {\n    subscription[0].service = union(services, subscription[0].service)\n  } else {\n    subscription[0].service = subscription[0].service.filter(service => services.includes(service))\n  }\n\n  // Use the resubscribe request to update the subscription. The endpoint is for both.\n  const response = yield call(resubscribe, connection, subscription)\n\n  if (response.error) {\n    const error = new BasicError({\n      message: response.message,\n      code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n    })\n\n    yield put(actions.subscribeFinished({ error }))\n    log.debug(`Subscription failed: ${error.message}`)\n  } else {\n    // Keep track of service subscription information.\n    const updatedSubscription = {\n      ...response.subscriptionParams,\n      servicesInfo: response.servicesInfo,\n      url: response.subscription\n    }\n\n    yield put(actions.subscribeFinished({ subscriptions: [updatedSubscription] }, platform))\n    log.info(`Subscribed to the following services: ${subscription[0].service}`)\n  }\n}\n\n/**\n * Saga that handles a \"subscription gone\" notification.\n * Treat the notification as a forced disconnect.\n * @method onSubscriptionGone\n */\nexport function * onSubscriptionGone () {\n  // Redux-saga take() pattern.\n  // Take notifications about the subscription being 'gone'.\n  function takeGoneSubscription (action) {\n    return (\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage &&\n      action.payload.notificationMessage.eventType === 'gone'\n    )\n  }\n\n  while (true) {\n    yield take(takeGoneSubscription)\n\n    // Dispatch an action to disconnect the websocket (and let the connectivity\n    //      plugin know we expect it to be disconnected).\n    const wsState = yield select(getConnectionState, platform)\n    if (wsState.connected) {\n      yield disconnectWebsocket(undefined, platform)\n    }\n\n    // Dispatch a disconnect finished action to trigger \"user disconnected\" logic.\n    yield put(actions.unsubscribeFinished({ reason: DISCONNECT_REASONS.GONE }, platform))\n  }\n}\n\n/**\n * Triggers onConnectionLost saga when a connectivity.WS_RECONNECT_FAILED actionType occurs\n * @method onConnectionLostEntry\n */\nexport function * onConnectionLostEntry () {\n  yield takeEvery(connectivityActionTypes.WS_RECONNECT_FAILED, onConnectionLost)\n}\n\n/**\n * Handles lost connections from the connectivity plugin\n * @method onConnectionLost\n */\nexport function * onConnectionLost () {\n  yield put(\n    actions.unsubscribeFinished({\n      reason: DISCONNECT_REASONS.LOST_CONNECTION\n    })\n  )\n}\n","const prefix = '@@KANDY/'\n\n/**\n * Contact Actions\n *\n * Action types associated with the operations of methods on the contacts namespace\n */\nexport const ADD_CONTACT = prefix + 'ADD_CONTACT'\nexport const ADD_CONTACT_FINISH = prefix + 'ADD_CONTACT_FINISH'\n\nexport const REFRESH_CONTACTS = prefix + 'REFRESH_CONTACTS'\nexport const REFRESH_CONTACTS_FINISH = prefix + 'REFRESH_CONTACTS_FINISH'\n\nexport const REMOVE_CONTACT = prefix + 'REMOVE_CONTACT'\nexport const REMOVE_CONTACT_FINISH = prefix + 'REMOVE_CONTACT_FINISH'\n\nexport const UPDATE_CONTACT = prefix + 'UPDATE_CONTACT'\nexport const UPDATE_CONTACT_FINISH = prefix + 'UPDATE_CONTACT_FINISH'\n\nexport const FETCH_CONTACT = prefix + 'FETCH_CONTACT'\nexport const FETCH_CONTACT_FINISH = prefix + 'FETCH_CONTACT_FINISH'\n\n/**\n * User Actions\n *\n * Action types associated with the operations of methods on the users namespace\n */\nexport const FETCH_USER = prefix + 'FETCH_USER'\nexport const FETCH_USER_FINISH = prefix + 'FETCH_USER_FINISH'\n\nexport const FETCH_SELF_INFO = prefix + 'FETCH_SELF_INFO'\nexport const FETCH_SELF_INFO_FINISH = prefix + 'FETCH_SELF_INFO_FINISH'\n\nexport const SEARCH_DIRECTORY = prefix + 'SEARCH_DIRECTORY'\nexport const SEARCH_DIRECTORY_FINISH = prefix + 'SEARCH_DIRECTORY_FINISH'\n","import * as actionTypes from './actionTypes'\n\n/**\n * Refresh the contact list.\n * @returns {Object} A flux standard action representing the REFRESH_CONTACTS action.\n */\nexport function refreshContacts () {\n  return {\n    type: actionTypes.REFRESH_CONTACTS,\n    payload: null\n  }\n}\n\n/**\n * The finishing action which follows the REFRESH_CONTACTS action\n * @param {Object} $0\n * @param  {Array} [$0.contacts] An array of contact objects.\n * @param  {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the REFRESH_CONTACTS_FINISH action.\n */\nexport function refreshContactsFinish ({ contacts, error }) {\n  return {\n    type: actionTypes.REFRESH_CONTACTS_FINISH,\n    payload: error || contacts,\n    error: Boolean(error)\n  }\n}\n\n/**\n * Adds a contact to the Address Book\n * @param {Object} contact The contact object.\n * @returns {Object} A flux standard action representing the ADD_CONTACT action.\n */\nexport function addContact (contact) {\n  return {\n    type: actionTypes.ADD_CONTACT,\n    payload: contact\n  }\n}\n\n/**\n * The finishing action which follows the ADD_CONTACT action\n * @param {Object} $0\n * @param {Object} [$0.contact] The contact object.\n * @param {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the ADD_CONTACT_FINISH action.\n */\nexport function addContactFinish ({ contact, error }) {\n  return {\n    payload: error || contact,\n    error: Boolean(error),\n    type: actionTypes.ADD_CONTACT_FINISH\n  }\n}\n\n/**\n * Fetch a contact from the user's personal address book\n * @param {string} contactId The ID of the contact to be fetched\n * @returns {Object} A flux standard action representing the FETCH_CONTACT action.\n */\nexport function fetchContact (contactId) {\n  return {\n    type: actionTypes.FETCH_CONTACT,\n    payload: contactId\n  }\n}\n\n/**\n * The finishing action which follows a FETCH_CONTACT action\n * @param {Object} $0\n * @param {Object} [$0.contact] The contact object.\n * @param {Object} [$0.error] A Basic error object\n * @returns {Object} A flux standard action representing the FETCH_CONTACT_FINISH action.\n */\nexport function fetchContactFinish ({ contact, error }) {\n  return {\n    type: actionTypes.FETCH_CONTACT_FINISH,\n    payload: error || contact,\n    error: Boolean(error)\n  }\n}\n\n/**\n * Removes a contact from the Address Book\n * @param {string} contactId The id of the contact whom it has been requested to delete from the address book\n * @returns {Object} A flux standard action representing the REMOVE_CONTACT action.\n */\nexport function removeContact (contactId) {\n  return {\n    type: actionTypes.REMOVE_CONTACT,\n    payload: contactId\n  }\n}\n\n/**\n * The finishing action which follows a REMOVE_CONTACT action\n * @param {Object} $0\n * @param {string} [$0.contactId] The id of the contact whom it has been requested to delete from the address book\n * @param {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the REMOVE_CONTACT_FINISH action.\n */\nexport function removeContactFinish ({ contactId, error }) {\n  return {\n    type: actionTypes.REMOVE_CONTACT_FINISH,\n    payload: contactId || error,\n    error: !!error\n  }\n}\n\n/**\n * Updates the data for a contact in the Address Book\n * @param {Object} contact The contact object. The contact object must include the ID of the contact being targeted for an update action.\n * @returns {Object} A flux standard action representing the UPDATE_CONTACT action.\n */\nexport function updateContact (contact) {\n  return {\n    type: actionTypes.UPDATE_CONTACT,\n    payload: { contact }\n  }\n}\n\n/**\n * The finishing action which follows a UPDATE_CONTACT action\n * @param {Object} $0\n * @param {Object} [$0.contact] The contact object.\n * @param {Object} [$0.error] A Basic error object\n * @returns {Object} A flux standard action representing the UPDATE_CONTACT_FINISH action.\n */\nexport function updateContactFinish ({ contact, error }) {\n  return {\n    type: actionTypes.UPDATE_CONTACT_FINISH,\n    payload: error || contact,\n    error: !!error\n  }\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Action for fetching the current user's profile data.\n * @returns {Object} A flux standard action\n */\nexport function fetchSelfInfo () {\n  return {\n    type: actionTypes.FETCH_SELF_INFO\n  }\n}\n\n/**\n * The finishing action to follow the FETCH_SELF_INFO action\n * @returns {Object} A flux standard action representing the FETCH_SELF_INFO_FINISH action\n */\nexport function fetchSelfInfoFinish (self, error) {\n  return {\n    type: actionTypes.FETCH_SELF_INFO_FINISH,\n    payload: error || self,\n    error: Boolean(error)\n  }\n}\n\n/**\n *\n * @param {string} userId The URI uniquely identifying the user.\n * @returns {Object} A flux standard action representing the FETCH_USER action\n */\nexport function fetchUser (userId) {\n  return {\n    type: actionTypes.FETCH_USER,\n    payload: userId\n  }\n}\n\n/**\n * Create a finish action to follow a FETCH_USER action.\n *\n * @param {Object} user A user object\n * @param {Object} [error] An error object.\n * @returns {Object} A flux standard action representing the USER_FETCH_FINISH action.\n */\nexport function fetchUserFinish (user, error) {\n  return {\n    type: actionTypes.FETCH_USER_FINISH,\n    payload: error || user,\n    error: Boolean(error)\n  }\n}\n\n/**\n * Create an action that searches the directory.\n *\n * @param {Object} filters Query filter options.\n * @param {string} [filters.name] Matches firstName or lastName.\n * @param {string} [filters.firstName] Matches firstName.\n * @param {string} [filters.lastName] Matches lastName.\n * @param {string} [filters.userName] Matches userName.\n * @param {string} [filters.phoneNumber] Matches phoneNumber.\n * @param {Object} [options] Sorting options\n * @param {string} [options.sortBy] The attribute upon which to sort results. This can be any of the above listed filters which describe a user attribute.\n * @param {string} [options.order] Order by which to return results. Can be one of \"asc\" or \"desc\".\n * @param {number} [options.max] The maximmum number of results to return.\n * @param {string} [options.next] The pointer for a chunk of results, which may be returned from other a previous query.\n * @returns {Object} A flux standard action representing the SEARCH_DIRECTORY action.\n */\nexport function searchDirectory (filters, options) {\n  return {\n    type: actionTypes.SEARCH_DIRECTORY,\n    payload: { filters, options }\n  }\n}\n\n/**\n * Create a finish action to follow the SEARCH_DIRECTORY action.\n *\n * @param {Object} $0 A dictionary object of parameters\n * @param {Array} [$0.users] The user objects\n * @param {Object} [$0.error] An error object.\n * @returns {Object} A flux standard action representing the DIRECTORY_CHANGED action.\n */\nexport function searchDirectoryFinish ({ users, error }) {\n  return {\n    type: actionTypes.SEARCH_DIRECTORY_FINISH,\n    payload: error || users,\n    error: Boolean(error)\n  }\n}\n","// Users plugin.\nimport * as actions from '../actions/contacts'\nimport { getContact, getContacts } from '../selectors'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\n\nconst log = logManager.getLogger('USERS')\n\nexport default function contactsAPI ({ dispatch, getState, primitives }) {\n  /**\n   * The 'contacts' namespace allows users to store personal contacts to their account.\n   *\n   * @public\n   * @namespace contacts\n   */\n\n  return {\n    /**\n     * Add a contact to a user's personal address book.\n     * Will trigger the `contacts:new` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method add\n     * @requires addContactAsFriend\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.photoUrl] The URL address identifying location of user's picture\n     * @param {string} [contact.emailAddress] The contact's email address\n     * @param {string} [contact.homePhone] The contact's home phone number\n     * @param {string} [contact.workPhone] The contact's business phone number\n     * @param {string} [contact.mobilePhone] The contact's mobile phone number\n     * @param {string} [contact.conferenceURL] Conference URL and access code for this user's address book entry\n     * @param {string} [contact.fax] The user's fax number\n     * @param {string} [contact.pager] The user's pager number\n     * @param {string} [contact.groupList] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.friendStatus] Indicates whether or not the contact is a friend of the user\n     */\n    /**\n     * Add a contact to a user's personal address book.\n     * Will trigger the `contacts:new` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method add\n     * @requires addContactAsBuddy\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.email] The contact's email address\n     * @param {string} [contact.homePhoneNumber] The contact's home phone number\n     * @param {string} [contact.businessPhoneNumber] The contact's business phone number\n     * @param {string} [contact.mobilePhoneNumber] The contact's mobile phone number\n     * @param {string} [contact.list] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.buddy] Indicates whether or not the contact is a friend of the user\n     */\n    add (contact) {\n      log.debug(API_LOG_TAG + 'contacts.add: ', contact)\n      dispatch(actions.addContact(contact))\n    },\n\n    /**\n     * Retrieves local information about a contact.\n     *\n     * @public\n     * @memberof contacts\n     * @method get\n     * @param {string} contactId The unique contact ID of the contact.\n     * @return {Object} Contact information.\n     */\n    get (contactId) {\n      log.debug(API_LOG_TAG + 'contacts.get: ', contactId)\n      return getContact(getState(), contactId)\n    },\n\n    /**\n     * Retrieves local information about all contacts.\n     *\n     * @public\n     * @memberof contacts\n     * @method getAll\n     * @return {Array} List of contact information.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'contacts.getAll')\n      return getContacts(getState())\n    },\n\n    /**\n     * Refreshes the local information about contacts. This will get new contacts from the platform.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method refresh\n     */\n    refresh () {\n      log.debug(API_LOG_TAG + 'contacts.refresh')\n      dispatch(actions.refreshContacts())\n    },\n\n    /**\n     * Remove a contact from a personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method remove\n     * @param  {string} id The Id of the contact that will be removed.\n     */\n    remove (id) {\n      log.debug(API_LOG_TAG + 'contacts.remove: ', id)\n      dispatch(actions.removeContact(id))\n    },\n\n    /**\n     * Update a contact from the user's personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method update\n     * @requires addContactAsFriend\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.photoUrl] The URL address identifying location of user's picture\n     * @param {string} [contact.emailAddress] The contact's email address\n     * @param {string} [contact.homePhone] The contact's home phone number\n     * @param {string} [contact.workPhone] The contact's business phone number\n     * @param {string} [contact.mobilePhone] The contact's mobile phone number\n     * @param {string} [contact.conferenceURL] Conference URL and access code for this user's address book entry\n     * @param {string} [contact.fax] The user's fax number\n     * @param {string} [contact.pager] The user's pager number\n     * @param {string} [contact.groupList] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.friendStatus] Indicates whether or not the contact is a friend of the user\n     */\n    /**\n     * Update a contact from the user's personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method update\n     * @requires addContactAsBuddy\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.email] The contact's email address\n     * @param {string} [contact.homePhoneNumber] The contact's home phone number\n     * @param {string} [contact.businessPhoneNumber] The contact's business phone number\n     * @param {string} [contact.mobilePhoneNumber] The contact's mobile phone number\n     * @param {string} [contact.list] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.buddy] Indicates whether or not the contact is a friend of the user\n     */\n    update (contact) {\n      let objectToUse\n      if (typeof contact === 'string' || contact instanceof String) {\n        log.warn(\n          API_LOG_TAG +\n            'contacts.update: Call to update(contactId, contact) has been deprecated and so it will be removed. Consider using: update(contact), instead.'\n        )\n        // second argument is supposed to be actual contact obj\n        objectToUse = arguments[1]\n      } else {\n        // Assume first param is the actual contact obj\n        objectToUse = contact\n      }\n      log.debug(API_LOG_TAG + 'contacts.update: ', objectToUse)\n      dispatch(actions.updateContact(objectToUse))\n    },\n\n    /**\n     * Fetch a contact from the user's personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method fetch\n     * @param  {string} contactId The unique contact ID of the contact.\n     */\n    fetch (contactId) {\n      log.debug(API_LOG_TAG + 'contacts.fetch: ', contactId)\n      dispatch(actions.fetchContact(contactId))\n    }\n  }\n}\n","import usersAPI from './users'\nimport contactsAPI from './contacts'\n\n/**\n * Users API index.\n * APIs are organized by their namespacing.\n * @method api\n * @param {Object} context\n * @param {Function} context.dispatch The redux store's dispatch function.\n * @param {Function} context.getState The redux store's getState function.\n * @param {Object} context.primitives Primitive types designed for use in the SDK\n * @return {Object} The plugin's API object.\n */\nexport default function api (context) {\n  return {\n    contacts: contactsAPI(context),\n    user: usersAPI(context)\n  }\n}\n","// Users plugin.\nimport * as actions from '../actions/users'\nimport { getUser, getUsers } from '../selectors'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\nconst log = logManager.getLogger('USERS')\n\nexport default function usersAPI ({ dispatch, getState, primitives }) {\n  /**\n   * The 'user' namespace allows access to user information for users within the same domain.\n   *\n   * @public\n   * @namespace user\n   */\n\n  /**\n   * The User data object.\n   *\n   * @public\n   * @static\n   * @typedef {Object} User\n   * @memberof user\n   * @property {user.UserID} userId The User ID of the user.\n   * @property {string} emailAddress The email address of the user.\n   * @property {string} firstName The first name of the user.\n   * @property {string} lastName The last name of the user.\n   * @property {string} photoURL The URL to get the photo of the user.\n   * @property {string} buddy Whether the user is a \"buddy\". Values can be \"true\" or \"false\".\n   */\n\n  return {\n    /**\n     * Fetches information about a User.\n     *\n     * The SDK will emit a {@link user.event:users:change users:change}\n     *    event after the operation completes. The User's information will then\n     *    be available.\n     *\n     * Information about an available User can be retrieved using the\n     *    {@link user.get} API.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method fetch\n     * @param {string} userId The User ID of the user.\n     */\n    fetch (userId) {\n      log.debug(API_LOG_TAG + 'user.fetch: ', userId)\n      dispatch(actions.fetchUser(userId))\n    },\n\n    /**\n     * Fetches information about the current User from directory.\n     * Compared to {@link user.fetch} API, this API retrieves additional user related information.\n     *\n     * The SDK will emit a {@link user.event:users:change users:change}\n     *    event after the operation completes. The User's information will then\n     *    be available.\n     *\n     * Information about an available User can be retrieved using the\n     *    {@link user.get} API.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method fetchSelfInfo\n     * @requires selfInfoAsUserProfile\n     */\n    /**\n     * Fetches information about the current User from directory.\n     * This API is simply a shortcut for the {@link user.fetch user.fetch(getUserInfo().identity)} API.\n     *\n     * The SDK will emit a {@link user.event:users:change users:change}\n     *    event after the operation completes. The User's information will then\n     *    be available.\n     *\n     * Information about an available User can be retrieved using the\n     *    {@link user.get} API.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method fetchSelfInfo\n     * @requires selfInfoAsUserSearch\n     */\n    fetchSelfInfo () {\n      log.debug(API_LOG_TAG + 'user.fetchSelfInfo')\n      dispatch(actions.fetchSelfInfo())\n    },\n\n    /**\n     * Retrieves information about a User, if available.\n     *\n     * See the {@link user.fetch} and {@link user.search} APIs for details about\n     *    making Users' information available.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method get\n     * @param {user.UserID} userId The User ID of the user.\n     * @returns {user.User} The User object for the specified user.\n     */\n    get (userId) {\n      log.debug(API_LOG_TAG + 'user.get: ', userId)\n      return getUser(getState(), userId)\n    },\n\n    /**\n     * Retrieves information about all available Users.\n     *\n     * See the {@link user.fetch} and {@link user.search} APIs for details about\n     *    making Users' information available.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method getAll\n     * @returns {Array<user.User>} An array of all the User objects.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'user.getAll')\n      return getUsers(getState())\n    },\n\n    /**\n     * Searches the domain's directory for Users.\n     *\n     * Directory searching only supports one filter. If multiple filters are provided, only one of the filters will be used for the search.\n     * A search with no filters provided will return all users.\n     *\n     * The SDK will emit a {@link user.event:directory:change directory:change}\n     *    event after the operation completes. The search results will be\n     *    provided as part of the event, and will also be available using the\n     *    {@link user.get} and {@link user.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method search\n     * @requires limitedSearch\n     * @param {Object} filters The filter options for the search.\n     * @param {user.UserID} [filters.userId] Matches the User ID of the user.\n     * @param {string} [filters.name] Matches the firstName or lastName.\n     * @param {string} [filters.firstName] Matches the firstName.\n     * @param {string} [filters.lastName] Matches the lastName.\n     * @param {string} [filters.userName] Matches the userName.\n     * @param {string} [filters.phoneNumber] Matches the phoneNumber.\n     */\n\n    /**\n     * Searches the domain's directory for Users.\n     *\n     * The SDK will emit a {@link user.event:directory:change directory:change}\n     *    event after the operation completes. The search results will be\n     *    provided as part of the event, and will also be available using the\n     *    {@link user.get} and {@link user.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method search\n     * @requires advancedSearch\n     * @param {Object} filters The filter options for the search.\n     * @param {user.UserID} [filters.userId] Matches the User ID of the user.\n     * @param {string} [filters.name] Matches the firstName or lastName.\n     * @param {string} [filters.firstName] Matches the firstName.\n     * @param {string} [filters.lastName] Matches the lastName.\n     * @param {string} [filters.userName] Matches the userName.\n     * @param {string} [filters.phoneNumber] Matches the phoneNumber.\n     * @param {Object} [options] Sorting options.\n     * @param {string} [options.sortBy] The User property to sort the results by. This can be any of the above listed filters.\n     * @param {string} [options.order] Order in which results are returned. Can be either \"asc\" or \"desc\".\n     * @param {number} [options.max] The maximum number of results to return.\n     * @param {string} [options.next] The pointer for a chunk of results, which may be returned from a previous query.\n     */\n    search (filters = {}, options = {}) {\n      log.debug(API_LOG_TAG + 'user.search: ', filters, options)\n      dispatch(actions.searchDirectory(filters, options))\n    }\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst eventsMap = {}\n\nconst contactNewEvent = action => {\n  return {\n    type: eventTypes.CONTACTS_CHANGE,\n    args: action.payload\n  }\n}\n\nconst contactsChangeEvent = action => {\n  if (action.error) {\n    return {\n      type: eventTypes.CONTACTS_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.CONTACTS_CHANGE\n    }\n  }\n}\n\nconst addContactFinishActions = action => {\n  if (action.error) {\n    return contactsChangeEvent(action)\n  }\n  return [contactNewEvent(action), contactsChangeEvent(action)]\n}\n\neventsMap[actionTypes.ADD_CONTACT_FINISH] = addContactFinishActions\neventsMap[actionTypes.REFRESH_CONTACTS_FINISH] = contactsChangeEvent\neventsMap[actionTypes.REMOVE_CONTACT_FINISH] = contactsChangeEvent\neventsMap[actionTypes.UPDATE_CONTACT_FINISH] = contactsChangeEvent\neventsMap[actionTypes.FETCH_CONTACT_FINISH] = contactsChangeEvent\n\nexport default eventsMap\n","// Contacts actions\n/**\n * A new contact has been added to the address book.\n * @public\n * @memberof contacts\n * @event contacts:new\n * @param {Object} contact The new contact.\n */\nexport const CONTACTS_NEW = 'contacts:new'\n\n/**\n * An error occurred while performing a contact operation.\n * @public\n * @memberof contacts\n * @event contacts:error\n * @param {Object} params\n * @param {Object} params.error The Basic error object.\n */\nexport const CONTACTS_ERROR = 'contacts:error'\n\n/**\n * The contacts list has changed.\n * @public\n * @memberof contacts\n * @event contacts:change\n * @example\n * client.on('contacts:change', function () {\n *    // Get the updated list of contacts.\n *    const contacts = client.contacts.getAll()\n *    ...\n * })\n */\nexport const CONTACTS_CHANGE = 'contacts:change'\n\n// Users actions\n/**\n * The directory has changed.\n * @public\n * @static\n * @memberof user\n * @event directory:change\n * @param {Object} params\n * @param {Array<user.User>} params.results The Users' information returned by the\n *    operation.\n */\nexport const DIRECTORY_CHANGE = 'directory:change'\n\n/**\n * An error occurred while performing a directory operation.\n * @public\n * @memberof user\n * @event directory:error\n * @param {Object} params\n * @param {Object} params.error The Basic error object.\n */\nexport const DIRECTORY_ERROR = 'directory:error'\n\n/**\n * A change has occurred in the users list\n * @public\n * @static\n * @memberof user\n * @event users:change\n * @param {Object} params\n * @param {Array<user.User>} params.results The Users' information returned by the\n *    operation.\n */\nexport const USERS_CHANGE = 'users:change'\n\n/**\n * An error occurred while retrieving the user information\n * @public\n * @static\n * @memberof user\n * @event users:error\n * @param {Object} params\n * @param {Object} params.error params.error The Basic error object.\n */\nexport const USERS_ERROR = 'users:error'\n","import * as actionTypes from '../actions/actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.SEARCH_DIRECTORY_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.DIRECTORY_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.DIRECTORY_CHANGE,\n      args: { results: action.payload }\n    }\n  }\n}\n\neventsMap[actionTypes.FETCH_USER_FINISH] = eventsMap[actionTypes.FETCH_SELF_INFO_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.USERS_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.USERS_CHANGE,\n      args: { results: [action.payload] }\n    }\n  }\n}\nexport default eventsMap\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a users plugin.\n * @type {string}\n */\nconst name = 'users'\n\n// Export the interface as a single object.\nexport default { name, api, reducer }\n","import * as actionTypes from '../actions/actionTypes'\nimport { unset } from 'lodash/fp'\n\nconst reducers = {}\n\nconst contactsPendingReducer = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true\n    }\n  }\n}\n\nreducers[actionTypes.ADD_CONTACT] = contactsPendingReducer\nreducers[actionTypes.REFRESH_CONTACTS] = contactsPendingReducer\nreducers[actionTypes.FETCH_CONTACT] = contactsPendingReducer\nreducers[actionTypes.UPDATE_CONTACT] = contactsPendingReducer\n\nreducers[actionTypes.ADD_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: {\n        ...state.contacts,\n        [action.payload.contactId]: action.payload\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.REFRESH_CONTACTS_FINISH] = {\n  next (state, action) {\n    const contacts = {}\n    for (let contact of action.payload) {\n      contacts[contact.contactId] = contact\n    }\n    return {\n      ...state,\n      contacts: contacts,\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: {\n        ...state.contacts,\n        [action.payload.contactId]: action.payload\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.REMOVE_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: unset(action.payload, state.contacts), // Remove the property from state.contacts whose key is equal to action.payload\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.UPDATE_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: {\n        ...state.contacts,\n        [action.payload.contactId]: action.payload\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nexport default reducers\n","import contactsReducers from './contacts'\nimport usersReducers from './users'\nimport { handleActions } from 'redux-actions'\n\n/*\n * Combine all of reducers into a single reducer, defaulting to an empty Object for each\n * substate of contacts and users\n */\nconst reducer = handleActions(\n  { ...contactsReducers, ...usersReducers },\n  {\n    errors: [],\n    contacts: {},\n    users: {},\n    isPending: true\n  }\n)\nexport default reducer\n","import * as actionTypes from '../actions/actionTypes'\n\nconst reducers = {}\n\nreducers[actionTypes.FETCH_USER_FINISH] = {\n  next (state, action) {\n    const user = action.payload\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        [user.userId]: user\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_SELF_INFO_FINISH] = {\n  next (state, action) {\n    const self = action.payload\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        [self.userId]: self\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.SEARCH_DIRECTORY_FINISH] = {\n  next (state, action) {\n    const users = {}\n    for (let user of action.payload) {\n      users[user.userId] = user\n    }\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        ...users\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nexport default reducers\n","import { cloneDeep } from 'lodash/fp'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to Retrieves\n *      specific portions of the state.\n */\n\n/**\n * Gets the contacts from state.\n * @method getContacts\n * @return {Object}\n */\nexport function getContacts (state) {\n  return cloneDeep(state.users.contacts)\n}\n\n/**\n * Gets a contact from the state whose ID matches the supplied parameter\n * @method getContact\n * @return {Object}\n */\nexport function getContact (state, id) {\n  return cloneDeep(state.users.contacts[id])\n}\n\n/**\n * Gets the users from state.\n * @method getUsers\n * @return {Array<User>} An array of all the User objects.\n */\nexport function getUsers (state) {\n  let allUsers = cloneDeep(state.users.users)\n  return Object.values(allUsers)\n}\n\n/**\n * Gets the users from state.\n * @method getUser\n * @return {Object}\n */\nexport function getUser (state, name) {\n  return cloneDeep(state.users.users[name])\n}\n","import * as actionTypes from './interface/actions/actionTypes'\nimport * as userActions from './interface/actions/users'\nimport * as contactActions from './interface/actions/contacts'\nimport { getConnectionInfo, getPlatform } from '../auth/interface/selectors'\nimport pluginInterface from './interface'\nimport contactsEvents from './interface/events/contacts'\nimport usersEvents from './interface/events/users'\nimport { mapEvents } from '../events/interface/actions'\n// Request\nimport request from '../request/effects'\n\n// Logs\nimport { logManager } from '../logs'\nimport { all, call, take, put, select } from 'redux-saga/effects'\n\n// Constants\nimport { platforms } from '../constants'\n\n// Get the logger\nconst log = logManager.getLogger('USERS')\n\nconst { api, name, reducer } = pluginInterface\n\nconst capabilities = ['addContactAsFriend', 'selfInfoAsUserProfile', 'limitedSearch']\n\nexport default function usersLink () {\n  function * init () {\n    yield put(mapEvents({ ...contactsEvents, ...usersEvents }))\n  }\n\n  function * refreshContacts () {\n    while (true) {\n      const action = yield take([actionTypes.REFRESH_CONTACTS])\n      if (action.error) {\n        continue\n      }\n\n      const connection = yield select(getConnectionInfo)\n      const res = yield call(contactRequest, 'GET', connection)\n      if (res.error) {\n        yield put(contactActions.refreshContactsFinish({ error: res.error }))\n      } else {\n        var contacts = res.result.addressBookEntries ? res.result.addressBookEntries.map(localContactFromRemote) : []\n        yield put(\n          contactActions.refreshContactsFinish({\n            contacts: contacts\n          })\n        )\n      }\n    }\n  }\n\n  /**\n   * fetch a contact from the user's Personal Address Book.\n   *\n   * @return {Generator} [description]\n   */\n  function * fetchContact () {\n    while (true) {\n      const action = yield take([actionTypes.FETCH_CONTACT])\n\n      if (action.error) {\n        log.debug(action.error)\n      }\n\n      const connection = yield select(getConnectionInfo)\n      const res = yield call(contactRequest, 'GET', connection, `contacts/${action.payload}`)\n\n      if (res.error) {\n        const error = new Error(res.error)\n        yield put(contactActions.fetchContactFinish({ error }))\n      } else {\n        const contact = localContactFromRemote(res.result.addressBookEntries[0])\n        yield put(contactActions.fetchContactFinish({ contact }))\n      }\n    }\n  }\n\n  function * addContact () {\n    while (true) {\n      try {\n        // Wait for ADD_CONTACT action.\n        const action = yield take(actionTypes.ADD_CONTACT)\n\n        var contactData = {\n          addressBookRequest: {\n            addressBookEntries: [remoteContactFromLocal({ ...action.payload })]\n          }\n        }\n        const connection = yield select(getConnectionInfo)\n        const res = yield call(contactRequest, 'POST', connection, 'contacts/', JSON.stringify(contactData))\n        if (res.error) {\n          throw new Error(res.error)\n        } else {\n          const contact = localContactFromRemote(action.payload)\n          yield put(contactActions.addContactFinish({ contact }))\n        }\n      } catch (error) {\n        yield put(contactActions.addContactFinish({ error }))\n      }\n    }\n  }\n\n  function * removeContact () {\n    while (true) {\n      try {\n        // Wait for REMOVE_CONTACT action.\n        const action = yield take(actionTypes.REMOVE_CONTACT)\n        const connection = yield select(getConnectionInfo)\n        const res = yield call(contactRequest, 'DELETE', connection, 'contacts/' + encodeURIComponent(action.payload))\n\n        if (res.error) {\n          throw new Error(res.error)\n        }\n        yield put(contactActions.removeContactFinish({ contactId: action.payload }))\n      } catch (err) {\n        yield put(contactActions.removeContactFinish({ error: err }))\n      }\n    }\n  }\n\n  function * updateContact () {\n    while (true) {\n      try {\n        const action = yield take(actionTypes.UPDATE_CONTACT)\n        const { contact } = action.payload\n        const contactRestObject = remoteContactFromLocal({ ...contact })\n        var contactData = {\n          addressBookRequest: {\n            addressBookEntries: [contactRestObject]\n          }\n        }\n        const connection = yield select(getConnectionInfo)\n        const res = yield call(\n          contactRequest,\n          'PUT',\n          connection,\n          'contacts/' + contact.contactId,\n          JSON.stringify(contactData)\n        )\n        if (res.error) {\n          throw new Error(res.error)\n        }\n        yield put(contactActions.updateContactFinish({ contact }))\n      } catch (error) {\n        yield put(contactActions.updateContactFinish({ error }))\n      }\n    }\n  }\n\n  function * searchDirectory () {\n    while (true) {\n      // Wait for SEARCH_DIRECTORY action.\n      const action = yield take(actionTypes.SEARCH_DIRECTORY)\n\n      let type\n      const filters = action.payload.filters\n      // Look for first defined filter provided\n      for (let filter in filters) {\n        if (filters.hasOwnProperty(filter) && filters[filter]) {\n          type = filter\n          break\n        }\n      }\n      log.info(`Using criteria '${type}' with value '${filters[type]}' to search directory.`)\n\n      var body = {\n        searchCriteria: filters[type],\n        searchType: searchTypeInteger(type)\n      }\n      const connection = yield select(getConnectionInfo)\n      const res = yield call(getDirectory, connection, body)\n      if (res.error) {\n        const error = new Error(res.error)\n        yield put(userActions.searchDirectoryFinish({ error }))\n      } else {\n        var users = res.result.directoryItems || []\n        yield put(userActions.searchDirectoryFinish({ users: users.map(localUserFromRemote) }))\n      }\n    }\n  }\n\n  /**\n   * On-Premises fetchUser saga\n   * Performs to uworkflow of caching a user.\n   * @return {Generator} [description]\n   */\n  function * fetchUser () {\n    while (true) {\n      // Wait for FETCH_USER action.\n      const { payload: userId } = yield take(actionTypes.FETCH_USER)\n      var body = {\n        searchCriteria: userId,\n        searchType: searchTypeInteger('user_id')\n      }\n      const connection = yield select(getConnectionInfo)\n      const res = yield call(getDirectory, connection, body)\n      if (res.error) {\n        yield put(userActions.fetchUserFinish(new Error(res.error)))\n      } else {\n        if (res.result.directoryItems) {\n          yield put(userActions.fetchUserFinish(res.result.directoryItems[0]))\n        } else {\n          log.debug('Fetch user request was successful, but result was empty')\n        }\n      }\n    }\n  }\n\n  /**\n   * On-Premises getUserDetails saga.\n   * Performs the workflow of fetching user profile data for the currently logged in user.\n   * @method getUserDetails\n   */\n  function * fetchSelf () {\n    while (true) {\n      // Wait for a GET_USER_DETAILS action.\n      const action = yield take(actionTypes.FETCH_SELF_INFO)\n      const userData = {}\n\n      if (action.error) {\n        continue\n      }\n\n      const connection = yield select(getConnectionInfo)\n      // Fetch the user details\n      const { userProfile, currentLocale } = yield all({\n        userProfile: call(fetchSelfInfo, connection),\n        currentLocale: call(fetchUserLocale, connection)\n      })\n\n      // Set as much user data as possible, but log an error if any of our calls failed\n      if (!userProfile.error) {\n        userData.data = userProfile\n      } else {\n        log.debug('Error retrieving user profile informaion', userProfile.text)\n      }\n\n      if (!currentLocale.error) {\n        userData.currentLocale = currentLocale\n      } else {\n        log.debug('Error retrieving user locale', currentLocale.text)\n      }\n      userData.primaryContact = connection.username\n\n      yield put(userActions.fetchUserFinish(userData))\n    }\n  }\n\n  return {\n    sagas: [\n      refreshContacts,\n      addContact,\n      removeContact,\n      updateContact,\n      fetchContact,\n      searchDirectory,\n      fetchUser,\n      fetchSelf\n    ],\n    api,\n    name,\n    init,\n    reducer,\n    capabilities\n  }\n}\n\nexport function * contactRequest (method, conn, extraURL, body) {\n  let platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : conn.server.version\n  var url\n  if (extraURL) {\n    url = `${conn.server.protocol}://${conn.server.server}:${conn.server.port}/rest/version/${version}/user/${\n      conn.username\n    }/addressbook/${extraURL}`\n  } else {\n    url = `${conn.server.protocol}://${conn.server.server}:${conn.server.port}/rest/version/${version}/user/${\n      conn.username\n    }/addressbook`\n  }\n  const options = {\n    method: method\n  }\n  if (body) {\n    options.body = body\n  }\n\n  const response = yield request({ url, ...options }, conn.requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let statusCode, errorMessage\n      if (response.payload.body.addressBookResponse) {\n        statusCode = response.payload.body.addressBookResponse.statusCode\n      } else if (response.payload.body.message && response.payload.result.code) {\n        statusCode = response.payload.result.code\n        errorMessage = response.payload.body.message\n      }\n      log.debug(`Failed to search addressbook with status code ${statusCode}.`)\n      // TODO: Proper errors.\n      return {\n        error: new Error(`Failed to search addressbook; status ${statusCode}.\\n message ${errorMessage}`)\n      }\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug(`Addressbook search request failed: ${message}`)\n      // TODO: Proper errors.\n      return {\n        error: new Error(`Addressbook search request failed: ${message}`)\n      }\n    }\n  } else if (response.payload.body && response.payload.body.addressBookResponse.statusCode === 0) {\n    return { result: response.payload.body.addressBookResponse || {} }\n  } else {\n    // Unknown case.\n    log.debug('Unknown error case for addressbook search.')\n    let err = new Error('Unknown error.')\n    return { error: err }\n  }\n}\n\n// see SPiDR 4.3 REST API Documentation - 12.11.3\nfunction searchTypeInteger (searchType) {\n  switch (searchType) {\n    case 'first_name':\n    case 'firstName':\n    case 'FIRSTNAME':\n      return 1\n    case 'last_name':\n    case 'lastName':\n    case 'LASTNAME':\n      return 2\n    case 'name':\n    case 'NAME':\n      return 3\n    case 'phone_number':\n    case 'phoneNumber':\n    case 'PHONENUMBER':\n      return 4\n    case 'user_id':\n    case 'userId':\n    case 'USERID':\n    case 'user_name':\n    case 'userName':\n    case 'USERNAME':\n      return 5\n  }\n}\n\nexport function * getDirectory (conn, params = {}) {\n  let platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : conn.server.version\n  var url = `${conn.server.protocol}://${conn.server.server}:${conn.server.port}/rest/version/${version}/user/${\n    conn.username\n  }/directory`\n\n  let queryParams = {}\n  if (params.searchType) {\n    queryParams['criteria'] = params.searchCriteria\n    queryParams['criteriaType'] = params.searchType\n  } else if (params.searchCriteria) {\n    queryParams['criteria'] = params.searchCriteria\n  }\n  const method = 'GET'\n\n  const response = yield request({ url, queryParams, method }, conn.requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let { statusCode } = response.payload.body.directory\n      log.debug(`Failed to search directory with status code ${statusCode}.`)\n      // TODO: Proper errors.\n      return {\n        error: new Error(`Failed to search directory; status ${statusCode}.`)\n      }\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug(`Directory search request failed: ${message}`)\n      // TODO: Proper errors.\n      return { error: new Error(`Directory search request failed: ${message}`) }\n    }\n  } else if (response.payload.body && response.payload.body.directory.statusCode === 0) {\n    // Request was successful.\n    return { result: response.payload.body.directory || {} }\n  } else {\n    // Unknown case.\n    log.debug('Unknown error case for directory search.')\n    let err = new Error('Unknown error.')\n    return { error: err }\n  }\n}\n\n/**\n * Fetch userProfileData from SPiDR with the provided connection info.\n * Compared to {@link user.fetch} API, this API retrieves additional user related information.\n *\n * @param  {Object}     connection Connection information for the platform in use.\n * @return {Object}            Fetch request's response, parsed.\n */\nexport function * fetchSelfInfo (connection) {\n  let platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : connection.server.version\n  var url = `${connection.server.protocol}://${connection.server.server}:${\n    connection.server.port\n  }/rest/version/${version}/user/${connection.username}/userProfileData`\n\n  var params = {\n    method: 'GET'\n  }\n\n  const response = yield request({ url, ...params }, connection.requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let { statusCode } = response.payload.body.userProfileData\n      log.debug(`Failed to fetch user details with status code ${statusCode}.`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        status: statusCode,\n        text: `Failed to fetch user details with status code ${statusCode}.`\n      }\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug(`User details fetch request failed: ${message}`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        text: `User details fetch request failed: ${message}`\n      }\n    }\n  } else if (\n    response.payload.body &&\n    response.payload.body.userProfileData &&\n    response.payload.body.userProfileData.statusCode === 0\n  ) {\n    // Request was successful.\n    return response.payload.body.userProfileData\n  } else {\n    // Unknown case.\n    log.debug('Unknown error case for user details fetch.')\n    return {\n      error: true,\n      text: 'Unknown error case fetching user details.'\n    }\n  }\n}\n\n/**\n * Fetch user localeinformation from SPiDR with the provided connection info.\n * @param  {Object}     connection Connection information for the platform in use.\n * @return {Object}            Fetch request's response.\n */\nexport function * fetchUserLocale (connection) {\n  let platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : connection.server.version\n  const url = `${connection.server.protocol}://${connection.server.server}:${\n    connection.server.port\n  }/rest/version/${version}/localization`\n\n  var params = {\n    method: 'GET'\n  }\n\n  const response = yield request({ url, ...params }, connection.requestOptions)\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      log.debug(`Failed to fetch user locale.`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        text: `Failed to fetch user locale .`\n      }\n    } else {\n      // Handle errors from the request helper.\n      let { message } = response.payload.result\n      log.debug(`User locale fetch request failed: ${message}`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        text: `User locale fetch request failed: ${message}`\n      }\n    }\n  } else if (response.payload.body && response.payload.body.acceptLanguage) {\n    // Locale request was successful.\n    return response.payload.body.acceptLanguage\n  } else {\n    // Unknown case.\n    log.debug('Unknown error case for user locale fetch.')\n    return {\n      error: true,\n      text: 'Unknown error case fetching user locale.'\n    }\n  }\n}\n\n/**\n * remoteContactFromLocal\n *\n * At the time of development, `nickName` is the property by which contact resources are keyed in the back end. Since the manner in which a `nickName` is used and regarded in common practice suggests that it can be changed, we are exposing it as a property named `contactId` and informing developers that this is a unique property. This function is used to normalize the naming convention when preparing contact data to be sent for a REST request\n *\n * @param {Object} contact A contact object\n */\nfunction remoteContactFromLocal (contact) {\n  if ('contactId' in contact) {\n    contact.nickname = contact.contactId\n    delete contact.contactId\n  }\n  // We must remove all empty values, as the back end servicing Link does not permit them\n  for (let prop in contact) {\n    if (!contact[prop] || contact[prop].length === 0) {\n      delete contact[prop]\n    }\n  }\n  return contact\n}\n\n/**\n * localContactFromRemote\n *\n * Convert a contact object from the back end format used in REST calls, to the format maintained in the state\n *\n * @param {Object} contact A contact object\n */\nfunction localContactFromRemote (contact) {\n  if ('nickname' in contact) {\n    contact.contactId = contact.nickname\n    delete contact.nickname\n  }\n  return contact\n}\n\n/**\n * localUserFromRemote\n *\n * Converts a user object from the back end format used in REST calls, to the format maintained in the state. In particular, it ensures that the user object has a `userId` property, as this is the property by which users are keyed in our state.\n *\n * @param {Object} user A user object\n * @returns {Object} The user object\n */\nfunction localUserFromRemote (user) {\n  return {\n    ...user,\n    userId: user.primaryContact || user.userId\n  }\n}\n","// Webrtc plugin.\nimport { deviceActions } from '../interface/actions'\nimport { forwardAction } from '../../common/utils'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Listen for events emitted from the webRTC Device Manager.\n * @method watchDeviceEvents\n * @param  {Object} manager The webRTC Device Manager.\n */\nexport default function * watchDeviceEvents (manager) {\n  /**\n   * Create an event channel between the Device Manager and redux-saga.\n   * This pushes its events into the redux-saga context.\n   * */\n  const managerChannel = eventChannel(emit => {\n    return setListeners(manager, emit)\n  })\n\n  // managerChannel will emit the Manager's events as actions,\n  //  so they can be directly dispatched.\n  yield takeEvery(managerChannel, forwardAction)\n}\n\n/**\n * Function to set-up listeners for the Device Manager events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   manager The Device Manager.\n * @param  {Function} emit    Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (manager, emit, END = 'END') {\n  // Manager event handlers.\n  const change = () => {\n    // Get the latest devices after they changed, then emit the device list\n    //  upwards.\n    manager.checkDevices().then(devices => {\n      emit(deviceActions.devicesChanged(devices))\n    })\n  }\n\n  manager.on('change', change)\n\n  // Return an unsubscribe function that removes all event listeners.\n  const unsubscribe = () => {\n    manager.off('change', change)\n  }\n\n  return unsubscribe\n}\n","// Libaries.\nimport { fork } from 'redux-saga/effects'\n\n// Manager channels.\nimport watchDeviceEvents from './devices'\nimport watchTrackManagerEvents from './trackManager'\nimport watchSessionManagerEvents from './sessionManager'\nimport watchMediaManagerEvents from './mediaManager'\n\n// Re-export each channel.\nexport { default as watchDeviceEvents } from './devices'\nexport { default as watchTrackManagerEvents } from './trackManager'\nexport { default as watchMediaManagerEvents } from './mediaManager'\n\n/**\n * Combine all of the manager channels into a single function.\n * @method watchManagers\n * @param  {Object} managers Webrtc stack managers.\n */\nexport default function * watchManagers (managers, webRTC) {\n  yield fork(watchDeviceEvents, managers.devices)\n  yield fork(watchTrackManagerEvents, managers.track)\n  yield fork(watchSessionManagerEvents, managers.sessionManager, webRTC)\n  yield fork(watchMediaManagerEvents, managers.media)\n}\n","// Webrtc plugin.\nimport { mediaActions } from '../interface/actions'\nimport { forwardAction } from '../../common/utils'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { eventChannel, END } from 'redux-saga'\n\n/**\n * Sets up event listeners for a Media's events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchMediaEvents\n * @param  {Object} media A Media object.\n * @param  {Object} webRTC The webRTC stack.\n */\nexport default function * watchMediaEvents (media, webRTC) {\n  /**\n   * Create an event channel between the Media and redux-saga.\n   * This \"forces\" the Media events into a redux-saga context.\n   */\n  const mediaChannel = eventChannel(emit => {\n    return setListeners(media, emit, END)\n  })\n  yield takeEvery(mediaChannel, forwardAction)\n}\n\n/**\n * Function to set-up listeners for a Media object's events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   media A Media object.\n * @param  {Function} emit  Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (media, emit, END = 'END') {\n  // Media received a new track.\n  const newTrack = ({ mediaId, trackId }) => {\n    /**\n     * When a new track has been added,\n     * update redux state's webrtc.media.tracks array with the new trackId.\n     */\n    emit(mediaActions.mediaNewTrack(mediaId, { trackId }))\n  }\n\n  // TODO: Handle media's 'track:removed' event here.\n  //  In unified-plan, when a track is removed this event is triggered.\n  const trackRemoved = trackId => {\n    emit(mediaActions.mediaTrackRemoved(media.id, { trackId }))\n  }\n\n  const trackEnded = ({ mediaId, trackId }) => {\n    /**\n     * When a track has ended,\n     * update redux state's webrtc.media.tracks array\n     * by removing the specified trackId.\n     */\n    emit(mediaActions.mediaTrackEnded(mediaId, { trackId }))\n  }\n  const mediaStopped = id => {\n    /**\n     * When the media is stopped, its channel should be ended (via `END`).\n     * The mediaManager channel will handle updating state for this event.\n     */\n    emit(END)\n  }\n\n  media.on('track:new', newTrack)\n  media.on('track:removed', trackRemoved)\n  media.on('track:ended', trackEnded)\n  media.on('media:stopped', mediaStopped)\n\n  const unsubscribe = () => {\n    media.off('track:new', newTrack)\n    media.off('track:removed', trackRemoved)\n    media.off('track:ended', trackEnded)\n    media.off('media:stopped', mediaStopped)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { mediaActions } from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport watchMediaEvents from './media'\n\n// Libraries.\nimport { put, takeEvery, fork } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Sets up event listeners for Media Manager events. The events are turned into\n *    actions and dispatched to be handled by redux elsewhere.\n * @method watchMediaManagerEvents\n * @param  {Object} manager The Media Manager.\n */\nexport default function * watchMediaManagerEvents (manager) {\n  /**\n   * Create an event channel between the Media Manager and redux-saga.\n   * This pushes its events into the redux-saga context.\n   */\n  const managerChannel = eventChannel(emit => {\n    return setListeners(manager, emit)\n  })\n\n  yield takeEvery(managerChannel, mediaManagerEventsHandler)\n}\n\nfunction * mediaManagerEventsHandler ({ media, action }) {\n  // If it is a new Media, watch for its events.\n  if (action.type === actionTypes.MEDIA_NEW) {\n    yield fork(watchMediaEvents, media)\n  }\n\n  // Dispatch the action\n  yield put(action)\n}\n\n/**\n * Function to set-up listeners for the Media Manager events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   manager The Media Manager.\n * @param  {Function} emit    Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (manager, emit, END = 'END') {\n  const newMedia = id => {\n    const media = manager.get(id)\n    /**\n     * When a new media has been added,\n     * update redux state's webrtc.media array by adding in the new media object\n     * (List of tracks will just be a list of track ids).\n     */\n    emit({\n      media,\n      action: mediaActions.newMedia(id, {\n        local: media.getState().isLocal,\n        tracks: media.getTracks().map(track => track.id)\n      })\n    })\n  }\n\n  const removedMedia = id => {\n    /**\n     * When a media has been removed,\n     * update redux state's webrtc.media array\n     * by removing the media with the specified media id.\n     */\n    emit({\n      action: mediaActions.removedMedia(id)\n    })\n  }\n\n  manager.on('media:new', newMedia)\n  manager.on('media:removed', removedMedia)\n\n  const unsubscribe = () => {\n    manager.off('media:new', newMedia)\n    manager.off('media:removed', removedMedia)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { sessionActions } from '../interface/actions'\nimport { forwardAction } from '../../common/utils'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Sets up event listeners for a Session's events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchSessionEvents\n * @param  {Object} session The Session object.\n * @param  {Object} webRTC The webRTC stack.\n */\nexport default function * watchSessionEvents (session, webRTC) {\n  /**\n   * Create an event channel between the Session and redux-saga.\n   * This \"forces\" the Session events into a redux-saga context.\n   */\n  const sessionChannel = eventChannel(emit => {\n    return setListeners(session, emit)\n  })\n  // sessionChannel will emit the Session's events as actions, so dispatch\n  //    them to be handled by sagas.\n  // TODO: If the event is \"Session gone\", should close/unsubscribe the channel.\n  yield takeEvery(sessionChannel, forwardAction)\n}\n\n/**\n * Function to set-up listeners for a Session object's events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   session A Session object.\n * @param  {Function} emit  Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (session, emit, END = 'END') {\n  // Session received a new track.\n  const newTrack = ({ local, trackId }) => {\n    /**\n     * When a new track has been added,\n     * update redux state's webrtc.session.localTracks/remoteTracks array\n     * with the new trackId.\n     * ('local' boolean will determine whether to update localTracks or remoteTracks)\n     */\n    emit(\n      sessionActions.sessionNewTrack(session.id, {\n        local,\n        trackId\n      })\n    )\n  }\n\n  const trackRemoved = ({ local, trackId }) => {\n    emit(\n      sessionActions.sessionTrackRemoved(session.id, {\n        local,\n        trackId\n      })\n    )\n  }\n\n  const trackEnded = ({ local, trackId, performRenegotiation }) => {\n    /**\n     * When a track has ended,\n     * update redux state's webrtc.session.localTracks/remoteTracks array\n     * by removing the specified trackId.\n     * ('local' boolean will determine whether to update localTracks or remoteTracks)\n     */\n    emit(\n      sessionActions.sessionTrackEnded(session.id, {\n        local,\n        trackId,\n        performRenegotiation\n      })\n    )\n  }\n\n  const trackReplaced = ({ oldTrackId, trackId }) => {\n    emit(\n      sessionActions.sessionTrackReplaced(session.id, {\n        oldTrackId,\n        trackId\n      })\n    )\n  }\n\n  // Generic \"something changed\" handler.\n  // TODO: Either use this for other events or remove it.\n  // eslint-disable-next-line no-unused-vars\n  const onChange = () => {\n    const state = session.getState()\n\n    emit(\n      sessionActions.sessionChange(session.id, {\n        id: state.id,\n        localTracks: state.localTracks.map(track => track.id),\n        remoteTracks: state.remoteTracks.map(track => track.id)\n      })\n    )\n  }\n\n  session.on('new:track', newTrack)\n  session.on('track:removed', trackRemoved)\n  session.on('track:ended', trackEnded)\n  session.on('track:replaced', trackReplaced)\n\n  const unsubscribe = () => {\n    session.off('new:track', newTrack)\n    session.off('track:removed', trackRemoved)\n    session.off('track:ended', trackEnded)\n    session.off('track:replaced', trackReplaced)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { sessionActions } from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport watchSessionEvents from './session'\n\n// Libraries.\nimport { fork, put, take } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Sets up event listeners for Session Manager Events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchSessionManagerEvents\n * @param  {Object} manager The webRTC Session Manager.\n * @param  {Object} webRTC The webRTC stack.\n */\nexport default function * watchSessionManagerEvents (manager, webRTC) {\n  /**\n   * Create an event channel between the Session Manager and redux-saga.\n   * This pushes its events into the redux-saga context.\n   */\n  const managerChannel = eventChannel(emit => {\n    return setListeners(manager, emit)\n  })\n\n  while (true) {\n    const { session, action } = yield take(managerChannel)\n\n    // If it is a new Session, watch for its events.\n    if (action.type === actionTypes.SESSION_ADDED) {\n      yield fork(watchSessionEvents, session, webRTC)\n    }\n\n    // Dispatch the action directly.\n    yield put(action)\n  }\n}\n\n/**\n * Sets up listeners for the Session Manager events.\n * Contains logic for how specific webRTC events should be\n *    parsed before being sent elsewhere. Split into a\n *    stand-alone function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   manager The Session Manager.\n * @param  {Function} emit    Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (manager, emit, END = 'END') {\n  // Handle new Session.\n  const sessionAdded = id => {\n    const session = manager.get(id)\n    const state = session.getState()\n    delete state.id\n\n    emit({\n      session: session,\n      action: sessionActions.sessionAdded(id, state)\n    })\n  }\n\n  // Handle Sessions ending.\n  const sessionRemoved = id => {\n    emit({\n      action: sessionActions.sessionRemoved(id)\n    })\n  }\n\n  manager.on('session:new', sessionAdded)\n  manager.on('session:removed', sessionRemoved)\n  const unsubscribe = () => {\n    manager.off('session:new', sessionAdded)\n    manager.off('session:removed', sessionRemoved)\n  }\n  return unsubscribe\n}\n","// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { eventChannel, END } from 'redux-saga'\nimport { trackActions } from '../interface/actions'\nimport { forwardAction } from '../../common/utils'\n\n/**\n * Sets up event listeners for a Track's events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchTrackEvents\n * @param  {Object} track A Track object.\n * @param  {Object} webRTC The webRTC stack.\n */\nexport default function * watchTrackEvents (track, webRTC) {\n  /**\n   * Create an event channel between the Track and redux-saga.\n   * This \"forces\" the Track events into a redux-saga context.\n   */\n  const trackChannel = eventChannel(emit => {\n    return setListeners(track, emit, END)\n  })\n  yield takeEvery(trackChannel, forwardAction)\n}\n\n/**\n * Function to set-up listeners for a Track object's events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   track A Track object.\n * @param  {Function} emit  Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (track, emit, END = 'END') {\n  // Track ended\n  const trackEnded = trackData => {\n    /**\n     * When the track ends, its channel should be ended (via `END`).\n     * The trackManager channel will handle updating state for this event.\n     */\n    emit(END)\n  }\n\n  // The track source (which affected the track identified by trackId) was muted.\n  // An example of a track source is a physical media device such as:\n  // microphone or camera.\n  const trackSourceMuted = trackData => {\n    emit(trackActions.trackSourceMuted([trackData.trackId]))\n  }\n\n  // The track source (which affected the track identified by trackId) was unmuted.\n  const trackSourceUnmuted = trackData => {\n    emit(trackActions.trackSourceUnmuted([trackData.trackId]))\n  }\n\n  track.on('ended', trackEnded)\n  track.on('muted', trackSourceMuted)\n  track.on('unmuted', trackSourceUnmuted)\n\n  const unsubscribe = () => {\n    track.off('ended', trackEnded)\n    track.off('muted', trackSourceMuted)\n    track.off('unmuted', trackSourceUnmuted)\n  }\n  return unsubscribe\n}\n","// Call plugin.\nimport { trackActions } from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport watchTrackEvents from './track'\n\n// Libraries.\nimport { put, fork, takeEvery } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Sets up event listeners for Track Manager Events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchTrackManagerEvents\n * @param  {Object} manager The webRTC Track Manager.\n */\nexport default function * watchTrackManagerEvents (manager) {\n  /**\n   * Create an event channel between the Track Manager and redux-saga.\n   * This pushes its events into the redux-saga context.\n   * */\n  const managerChannel = eventChannel(emit => {\n    return setListeners(manager, emit)\n  })\n\n  // https://github.com/redux-saga/redux-saga/issues/684\n  // See user \"kuy\"'s second comment.\n  // Using takeEvery to handle actions.\n  // That way they are handled in a forked process and other actions don't get dropped.\n  yield takeEvery(managerChannel, trackManagerEventsHandler)\n}\n\nfunction * trackManagerEventsHandler ({ track, action }) {\n  // If it is a new Track, watch for its events.\n  if (action.type === actionTypes.TRACK_ADDED) {\n    yield fork(watchTrackEvents, track)\n  }\n\n  // Dispatch the action\n  yield put(action)\n}\n\n/**\n * Sets up listeners for the Track Manager events.\n * Contains logic for how specific webRTC events should be\n *    parsed before being sent elsewhere. Splut into a\n *    stand-alone function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   manager The Track Manager.\n * @param  {Function} emit    Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (manager, emit, END = 'END') {\n  // Handle new Tracks.\n  const trackAdded = id => {\n    const track = manager.get(id)\n    const state = track.getState()\n    delete state.id\n\n    /**\n     * When a new track is added,\n     * update redux state's webrtc.tracks array by adding track's state into it.\n     */\n    emit({\n      track,\n      action: trackActions.trackAdded(id, state)\n    })\n  }\n\n  // Handle Tracks ending.\n  const trackRemoved = id => {\n    /**\n     * When a track has ended,\n     * update redux state's webrtc.tracks array\n     * by specifying which track to remove by providing a track id.\n     */\n    emit({\n      action: trackActions.trackRemoved(id)\n    })\n  }\n\n  manager.on('add', trackAdded)\n  manager.on('remove', trackRemoved)\n  const unsubscribe = () => {\n    manager.off('add', trackAdded)\n    manager.off('remove', trackRemoved)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport pluginInterface from './interface'\nimport events from './interface/events'\nimport watchManagers from './channels'\nimport * as sagas from './sagas'\nimport { miscActions } from './interface/actions'\n\n// Other plugins.\nimport { mapEvents } from '../events/interface/actions'\nimport { logManager } from '../logs'\n\n// Helpers.\nimport { autoRestart } from '../common/utils'\n\n// Libraries.\nimport initialize, { getWebRTCSupportCapabilities } from 'kandy-webrtc'\nimport { values } from 'lodash/fp'\nimport { call, fork, put } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('WEBRTC')\n\nexport function initializeStack () {\n  return initialize()\n}\n\nexport default function webRtcPlugin () {\n  const { mediaDevices, peerConnection } = getWebRTCSupportCapabilities()\n  if (!mediaDevices || !peerConnection) {\n    log.warn(\n      'Calls are not supported on this platform due to lack of WebRTC support. Media APIs will not be available.'\n    )\n    return\n  }\n\n  // Initialize the webRTC.\n  const webRTC = initialize()\n\n  function * init ({ webRTC }) {\n    yield put(mapEvents(events))\n\n    // Wrap the webrtc sagas in a function that provides them with the webRTC stack.\n    const wrappedSagas = values(sagas).map(saga => {\n      return autoRestart(() => saga(webRTC.managers))\n    })\n\n    // Run all of the sagas.\n    for (let saga of wrappedSagas) {\n      yield fork(saga)\n    }\n\n    // Watch for events from the webRTC stack.\n    // TODO: Don't also pass in the entire stack.\n    yield fork(watchManagers, webRTC.managers, webRTC)\n\n    // Use the webRTC stack to check the browser details.\n    const details = yield call([webRTC, 'getBrowserDetails'])\n    log.info(`Browser details: ${details.browser}, version ${details.version}.`)\n    yield put(miscActions.setBrowserDetails(details))\n  }\n\n  return {\n    name: pluginInterface.name,\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer,\n    init,\n    shared: {\n      webRTC\n    }\n  }\n}\n","const prefix = '@@KANDY/WEBRTC/'\n\n/**\n * Device action types.\n */\nexport const DEVICES_CHANGE = prefix + 'DEVICES/CHANGE'\n\n/**\n * Track action types.\n */\nconst trackPrefix = prefix + 'TRACK/'\n\nexport const TRACK_ADDED = trackPrefix + 'ADDED'\nexport const TRACK_REMOVED = trackPrefix + 'REMOVED'\n\nexport const RENDER_TRACKS = trackPrefix + 'RENDER'\nexport const RENDER_TRACKS_FINISH = trackPrefix + 'RENDER_FINISH'\n\nexport const REMOVE_TRACKS = trackPrefix + 'REMOVE'\nexport const REMOVE_TRACKS_FINISH = trackPrefix + 'REMOVE_FINISH'\n\nexport const MUTE_TRACKS = trackPrefix + 'MUTE'\nexport const MUTE_TRACKS_FINISH = trackPrefix + 'MUTE_FINISH'\nexport const UNMUTE_TRACKS = trackPrefix + 'UNMUTE'\nexport const UNMUTE_TRACKS_FINISH = trackPrefix + 'UNMUTE_FINISH'\n\nexport const TRACK_SOURCE_MUTED = trackPrefix + 'SOURCE_MUTED'\nexport const TRACK_SOURCE_UNMUTED = trackPrefix + 'SOURCE_UNMUTED'\n\n/**\n * Session action types.\n */\nconst sessionPrefix = prefix + 'SESSION/'\n\nexport const SESSION_ADDED = sessionPrefix + 'ADDED'\nexport const SESSION_REMOVED = sessionPrefix + 'REMOVED'\n\nexport const SESSION_NEW_TRACK = sessionPrefix + 'NEW_TRACK'\nexport const SESSION_TRACK_REMOVED = sessionPrefix + 'TRACK_REMOVED'\nexport const SESSION_TRACK_ENDED = sessionPrefix + 'TRACK_ENDED'\nexport const SESSION_CHANGE = sessionPrefix + 'CHANGE'\nexport const SESSION_TRACK_REPLACED = sessionPrefix + 'TRACK_REPLACED'\n\n/**\n * Media action types.\n */\nconst mediaPrefix = prefix + 'MEDIA/'\n\nexport const MEDIA_NEW = mediaPrefix + 'NEW'\nexport const MEDIA_REMOVED = mediaPrefix + 'REMOVED'\nexport const MEDIA_CHANGE = mediaPrefix + 'CHANGE'\n\nexport const MEDIA_NEW_TRACK = mediaPrefix + 'NEW_TRACK'\nexport const MEDIA_TRACK_REMOVED = mediaPrefix + 'TRACK_REMOVED'\nexport const MEDIA_TRACK_ENDED = mediaPrefix + 'TRACK_ENDED'\n\n/**\n * Misc. action types.\n */\nexport const SET_BROWSER_DETAILS = prefix + 'SET_BROWSER_DETAILS'\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\nexport function devicesChanged (devices) {\n  return {\n    type: actionTypes.DEVICES_CHANGE,\n    payload: devices\n  }\n}\n","import * as deviceActionsImport from './devices'\nimport * as trackActionsImport from './tracks'\nimport * as sessionActionsImport from './sessions'\nimport * as mediaActionsImport from './media'\nimport * as miscActionsImport from './misc'\n\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\nexport const deviceActions = deviceActionsImport\nexport const trackActions = trackActionsImport\nexport const sessionActions = sessionActionsImport\nexport const mediaActions = mediaActionsImport\nexport const miscActions = miscActionsImport\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { isEmpty } from 'lodash/fp'\n\nfunction mediaActionHelper (type, id, payload = {}, meta = {}) {\n  const action = {\n    type,\n    payload: {\n      ...payload,\n      id\n    }\n  }\n\n  // Only have meta and error properties on the action if they're needed.\n  if (!isEmpty(meta)) {\n    action.meta = meta\n  }\n  if (payload.error) {\n    action.error = true\n  }\n  return action\n}\n\nexport function newMedia (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_NEW, id, params)\n}\n\nexport function removedMedia (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_REMOVED, id, params)\n}\n\nexport function mediaNewTrack (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_NEW_TRACK, id, params)\n}\n\nexport function mediaTrackRemoved (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_TRACK_REMOVED, id, params)\n}\n\nexport function mediaTrackEnded (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_TRACK_ENDED, id, params)\n}\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n/**\n * Action creator\n * @method setBrowserDetails\n * @param  {Object} details\n * @param  {string} details.browser\n * @param  {number} details.version\n * @return {Object} A Flux-Standard-action.\n */\nexport function setBrowserDetails (details) {\n  return {\n    type: actionTypes.SET_BROWSER_DETAILS,\n    payload: details\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { isEmpty } from 'lodash/fp'\n\nfunction sessionActionHelper (type, id, payload = {}, meta = {}) {\n  const action = {\n    type,\n    payload: {\n      ...payload,\n      id\n    }\n  }\n\n  // Only have meta and error properties on the action if they're needed.\n  if (!isEmpty(meta)) {\n    action.meta = meta\n  }\n  if (payload.error) {\n    action.error = true\n  }\n  return action\n}\n\nexport function sessionAdded (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ADDED, id, params)\n}\n\nexport function sessionRemoved (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_REMOVED, id, params)\n}\n\nexport function sessionNewTrack (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_NEW_TRACK, id, params)\n}\n\nexport function sessionTrackRemoved (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_TRACK_REMOVED, id, params)\n}\n\nexport function sessionTrackEnded (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_TRACK_ENDED, id, params)\n}\n\nexport function sessionChange (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_CHANGE, id, params)\n}\n\nexport function sessionTrackReplaced (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_TRACK_REPLACED, id, params)\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\nfunction trackManagerHelper (type, trackId, payload = {}, meta = {}) {\n  return {\n    type,\n    payload: {\n      ...payload,\n      trackId\n    },\n    meta\n  }\n}\n\nexport function trackAdded (trackId, params) {\n  return trackManagerHelper(actionTypes.TRACK_ADDED, trackId, params)\n}\n\nexport function trackRemoved (trackId, params) {\n  return trackManagerHelper(actionTypes.TRACK_REMOVED, trackId, params)\n}\n\nfunction trackHelper (type, payload = {}, meta = {}) {\n  return {\n    type,\n    payload,\n    meta\n  }\n}\n\nexport function muteTracks (trackIds) {\n  return trackHelper(actionTypes.MUTE_TRACKS, trackIds)\n}\n\nexport function muteTracksFinish (trackIds) {\n  return trackHelper(actionTypes.MUTE_TRACKS_FINISH, { trackIds: trackIds })\n}\n\nexport function unmuteTracks (trackIds) {\n  return trackHelper(actionTypes.UNMUTE_TRACKS, trackIds)\n}\n\nexport function unmuteTracksFinish (trackIds) {\n  return trackHelper(actionTypes.UNMUTE_TRACKS_FINISH, { trackIds: trackIds })\n}\n\nexport function trackSourceMuted (trackIds) {\n  return trackHelper(actionTypes.TRACK_SOURCE_MUTED, { trackIds: trackIds })\n}\n\nexport function trackSourceUnmuted (trackIds) {\n  return trackHelper(actionTypes.TRACK_SOURCE_UNMUTED, { trackIds: trackIds })\n}\n\nexport function renderTracks (trackIds, params) {\n  return trackHelper(actionTypes.RENDER_TRACKS, {\n    trackIds,\n    ...params\n  })\n}\n\nexport function renderTracksFinish (trackIds, params) {\n  return trackHelper(actionTypes.RENDER_TRACKS_FINISH, {\n    trackIds,\n    ...params\n  })\n}\n\nexport function removeTracks (trackIds, params) {\n  return trackHelper(actionTypes.REMOVE_TRACKS, {\n    trackIds,\n    ...params\n  })\n}\n\nexport function removeTracksFinish (trackIds, params) {\n  return trackHelper(actionTypes.REMOVE_TRACKS_FINISH, {\n    trackIds,\n    ...params\n  })\n}\n","// Webrtc plugin.\nimport { getBrowserDetails } from '../selectors'\n\n// Namespaced APIs.\nimport mediaAPI from './media'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\n\nconst log = logManager.getLogger('WEBRTC')\n\n/**\n * Public API for the webRTC plugin.\n * @method api\n * @return {Object}\n */\nexport default function api (context) {\n  return {\n    media: mediaAPI(context),\n\n    /**\n     * Retrieve information about the browser being used.\n     *\n     * Browser information being defined indicates that the browser supports\n     *    basic webRTC scenarios.\n     * @public\n     * @memberof api\n     * @method getBrowserDetails\n     * @return {Object} Object containing `browser` and `version` information.\n     * @example\n     * const details = client.getBrowserDetails()\n     *\n     * log(`Browser in use: ${details.browser}, version ${details.version}.`)\n     */\n    getBrowserDetails () {\n      log.debug(API_LOG_TAG + 'getBrowserDetails')\n      return getBrowserDetails(context.getState())\n    }\n  }\n}\n","// Webrtc plugin.\nimport { trackActions } from '../actions'\nimport { getDevices, getMediaById, getTrackById } from '../selectors'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\nconst log = logManager.getLogger('MEDIA')\n\n/**\n * Media related APIs.\n * @method mediaAPI\n * @param  {Function} dispatch Redux dispatch.\n * @param  {Function} getState Redux getState.\n * @return {Object}\n */\nexport default function mediaAPI ({ dispatch, getState }) {\n  return {\n    /**\n     * Retrieves the available media devices for use.\n     *\n     * The {@link media.event:devices:change devices:change} event will be\n     *    emitted when the available media devices have changed.\n     *\n     * @public\n     * @static\n     * @memberof media\n     * @method getDevices\n     * @return {Object} The lists of camera, microphone, and speaker devices.\n     */\n    getDevices () {\n      log.debug(API_LOG_TAG + 'media.getDevices')\n      return getDevices(getState())\n    },\n\n    /**\n     * Retrieves an available Media object with a specific Media ID.\n     * @public\n     * @static\n     * @memberof media\n     * @method getById\n     * @param  {string} mediaId The ID of the Media to retrieve.\n     * @return {call.MediaObject} A Media object.\n     */\n    getById (mediaId) {\n      log.debug(API_LOG_TAG + 'media.getById: ', mediaId)\n      return getMediaById(getState(), mediaId)\n    },\n\n    /**\n     * Retrieve an available Track object with a specific Track ID.\n     * @public\n     * @static\n     * @memberof media\n     * @method getTrackById\n     * @param  {string} trackId The ID of the Track to retrieve.\n     * @return {call.TrackObject} A Track object.\n     */\n    getTrackById (trackId) {\n      log.debug(API_LOG_TAG + 'media.getByTrackId: ', trackId)\n      return getTrackById(getState(), trackId)\n    },\n\n    /**\n     * Render Media Tracks in a container.\n     *\n     * The container is specified by providing a CSS selector string that\n     *    corresponds to the HTMLElement to act as the container.\n     * @public\n     * @static\n     * @memberof media\n     * @method renderTracks\n     * @param  {Array<string>} trackIds List of Track IDs to be rendered.\n     * @param  {string} cssSelector A CSS selector string that uniquely\n     *    identifies an element. Ensure that special characters are properly\n     *    escaped.\n     * @param  {Object} [options] Additional options for rendering the tracks.\n     * @param  {string} [options.speakerId] The speaker's Device ID to use for audio tracks.\n     * @example\n     * // When a Call receives a new track, render it.\n     * client.on('call:newTrack', function (params) {\n     *    const track = client.media.getTrackById(params.trackId)\n     *    const container = params.local ? localContainer : remoteContainer\n     *\n     *    // Render the Call's new track when it first becomes available.\n     *    client.media.renderTracks([ track.id ], container)\n     * })\n     */\n    renderTracks (trackIds, cssSelector, options = {}) {\n      log.debug(API_LOG_TAG + 'media.renderTracks: ', trackIds, cssSelector, options)\n      dispatch(\n        trackActions.renderTracks(trackIds, {\n          selector: cssSelector,\n          ...options\n        })\n      )\n    },\n\n    /**\n     * Remove Media Tracks from a container.\n     *\n     * The container is specified by providing a CSS selector string that\n     *    corresponds to the HTMLElement to act as the container.\n     * @public\n     * @static\n     * @memberof media\n     * @method removeTracks\n     * @param  {Array<string>} trackIds List of Track IDs to stop being rendered.\n     * @param  {string} cssSelector A CSS selector string that uniquely\n     *    identifies an element. Ensure that special characters are properly\n     *    escaped.\n     */\n    removeTracks (trackIds, cssSelector) {\n      log.debug(API_LOG_TAG + 'media.removeTracks: ', trackIds, cssSelector)\n      dispatch(trackActions.removeTracks(trackIds, { selector: cssSelector }))\n    },\n\n    /**\n     * Mutes the specified Tracks at their media source.\n     *\n     * Prevents media from being received for the Tracks. Audio Tracks will\n     *    become silent and video Tracks will be a black frame.\n     *\n     * If a local Track being sent in a Call is muted, the Track will be\n     *    noticeably muted for the remote user. If a remote Track received in a\n     *    call is muted, the result will only be noticeable locally.\n     *\n     * The SDK will emit a {@link media.event:media:muted media:muted} event\n     *    when a Track has been muted.\n     * @public\n     * @static\n     * @memberof media\n     * @method muteTracks\n     * @param  {Array<string>} trackIds List of Track IDs.\n     */\n    muteTracks (trackIds) {\n      log.debug(API_LOG_TAG + 'media.muteTracks: ', trackIds)\n      dispatch(trackActions.muteTracks(trackIds))\n    },\n\n    /**\n     * Unmutes the specified Tracks.\n     *\n     * Media will resume as normal for the Tracks.\n     *\n     * The SDK will emit a {@link media.event:media:unmuted media:unmuted} event\n     *    when a Track has been unmuted.\n     * @public\n     * @static\n     * @memberof media\n     * @method unmuteTracks\n     * @param  {Array<string>} trackIds List of Track IDs.\n     */\n    unmuteTracks (trackIds) {\n      log.debug(API_LOG_TAG + 'media.unmuteTracks: ', trackIds)\n      dispatch(trackActions.unmuteTracks(trackIds))\n    }\n  }\n}\n","/**\n * The media devices available for use have changed.\n *\n * Information about the available media devices can be retrieved using the\n *    {@link media.getDevices} API.\n *\n * @public\n * @memberof media\n * @event devices:change\n * @example\n * // Listen for changes to available media devices.\n * client.on('devices:change', function () {\n *    // Retrieve the latest media device lists.\n *    const devices = client.media.getDevices()\n * })\n */\nexport const DEVICES_CHANGED = 'devices:change'\n\n/**\n * The specified Tracks have been muted.\n *\n * A Track can be muted using the {@link media.muteTracks} API.\n * @public\n * @memberof media\n * @event media:muted\n * @param {Object} params\n * @param {Array<string>} params.tracks The list of Tracks that were muted.\n */\nexport const TRACKS_MUTED = 'media:muted'\n\n/**\n * The specified Tracks have been unmuted.\n *\n * A Track can be unmuted using the {@link media.unmuteTracks}\n *    API.\n * @public\n * @memberof media\n * @event media:unmuted\n * @param {Object} params\n * @param {Array<string>} params.tracks The list of Tracks that were unmuted.\n */\nexport const TRACKS_UNMUTED = 'media:unmuted'\n\n/**\n * The (media) source, associated with specified tracks, has been muted.\n * This event is generated outside the control of the SDK when the media source,\n * such as a microphone or camera, has been muted in a browser. As a result, all tracks\n * associated with that media source will generate such event.\n * @public\n * @memberof media\n * @event media:sourceMuted\n * @param {Object} params\n * @param {Array<string>} params.trackIds The track Ids that are affected as a result of media source being muted.\n */\nexport const TRACK_SOURCE_MUTED = 'media:sourceMuted'\n\n/**\n * The (media) source, associated with specified tracks, has been unmuted.\n * This event is generated outside the control of the SDK when the media source,\n * such as a microphone or camera, has been unmuted in a browser. As a result, all tracks\n * associated with that media source will generate such event.\n * @public\n * @memberof media\n * @event media:sourceUnmuted\n * @param {Object} params\n * @param {Array<string>} params.trackIds The track Ids that are affected as a result of media source being unmuted.\n */\nexport const TRACK_SOURCE_UNMUTED = 'media:sourceUnmuted'\n","import * as eventTypes from '../eventTypes'\nimport * as actionTypes from '../actionTypes'\n\nconst events = {}\n\n// Media devices have changed.\nevents[actionTypes.DEVICES_CHANGE] = action => {\n  return {\n    type: eventTypes.DEVICES_CHANGED\n  }\n}\n\nexport default events\n","import deviceEvents from './devices'\nimport trackEvents from './tracks'\n\nexport default {\n  ...deviceEvents,\n  ...trackEvents\n}\n","import * as eventTypes from '../eventTypes'\nimport * as actionTypes from '../actionTypes'\n\nconst events = {}\n\nevents[actionTypes.MUTE_TRACKS_FINISH] = action => {\n  return {\n    type: eventTypes.TRACKS_MUTED,\n    args: {\n      trackIds: action.payload.trackIds,\n      tracks: action.payload.trackIds\n    }\n  }\n}\n\nevents[actionTypes.UNMUTE_TRACKS_FINISH] = action => {\n  return {\n    type: eventTypes.TRACKS_UNMUTED,\n    args: {\n      trackIds: action.payload.trackIds,\n      tracks: action.payload.trackIds\n    }\n  }\n}\n\nevents[actionTypes.TRACK_SOURCE_MUTED] = action => {\n  return {\n    type: eventTypes.TRACK_SOURCE_MUTED,\n    args: { trackIds: action.payload.trackIds }\n  }\n}\n\nevents[actionTypes.TRACK_SOURCE_UNMUTED] = action => {\n  return {\n    type: eventTypes.TRACK_SOURCE_UNMUTED,\n    args: { trackIds: action.payload.trackIds }\n  }\n}\n\nexport default events\n","import api from './api'\nimport reducer from './reducers'\n\nexport default {\n  name: 'webrtc',\n  api,\n  reducer\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\n/**\n * The devices substate keeps tracks the of the media devices available for use.\n */\nconst reducers = {}\n\n// Replace old devices with newly checked devices.\nreducers[actionTypes.SET_BROWSER_DETAILS] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\n/**\n * The devices substate keeps tracks the of the media devices available for use.\n */\nconst reducers = {}\n\n// Replace old devices with newly checked devices.\nreducers[actionTypes.DEVICES_CHANGE] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\n// The initial state of the reducer.\nconst defaultState = {\n  camera: [],\n  microphone: [],\n  speaker: []\n}\n\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","import devices from './devices'\nimport media from './media'\nimport tracks from './tracks'\nimport sessions from './sessions'\nimport browser from './browser'\n\n/**\n * Webrtc plugin top-level reducer.\n * @method reducer\n * @param  {Object} [state={}]\n * @param  {Object} action\n * @return {Object}\n */\nexport default function (state = {}, action) {\n  return {\n    devices: devices(state.devices, action),\n    tracks: tracks(state.tracks, action),\n    sessions: sessions(state.sessions, action),\n    media: media(state.media, action),\n    browser: browser(state.browser, action)\n  }\n}\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat, remove } from 'lodash/fp'\n\n// Top-tier reducers: Handles the whole state.\nconst reducers = {}\n\n// Add the new media object to state.\nreducers[actionTypes.MEDIA_NEW] = {\n  next (state, action) {\n    return concat(state, {\n      ...action.payload\n    })\n  }\n}\n\n// Remove the media object from state.\nreducers[actionTypes.MEDIA_REMOVED] = {\n  next (state, action) {\n    const removeMedia = media => media.id === action.payload.id\n    return remove(removeMedia)(state)\n  }\n}\n\n// Media-tier reducers: Handles only a specific portion of the substate.\nconst mediaReducers = {}\n\nmediaReducers[actionTypes.MEDIA_NEW_TRACK] = {\n  next (state, action) {\n    return {\n      ...state,\n      tracks: concat(state.tracks, [action.payload.trackId])\n    }\n  }\n}\n\n// Remove specified track from media state.\nmediaReducers[actionTypes.MEDIA_TRACK_REMOVED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    return {\n      ...state,\n      tracks: remove(removeTrack, state.tracks)\n    }\n  }\n}\n\n// Remove specified track from media state.\nmediaReducers[actionTypes.MEDIA_TRACK_ENDED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    return {\n      ...state,\n      tracks: remove(removeTrack, state.tracks)\n    }\n  }\n}\nconst mediaReducer = handleActions(mediaReducers, {})\n\nconst specificMediaActions = combineActions(\n  actionTypes.MEDIA_NEW_TRACK,\n  actionTypes.MEDIA_TRACK_REMOVED,\n  actionTypes.MEDIA_TRACK_ENDED\n)\n\nreducers[specificMediaActions] = (state, action) => {\n  return state.map(media => {\n    if (media.id === action.payload.id) {\n      return mediaReducer(media, action)\n    } else {\n      return media\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat, remove } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.SESSION_ADDED] = {\n  next (state, action) {\n    return concat(state, action.payload)\n  }\n}\n\nreducers[actionTypes.SESSION_REMOVED] = {\n  next (state, action) {\n    const removeSession = session => session.id === action.payload.id\n    return remove(removeSession)(state)\n  }\n}\n\nconst sessionReducers = {}\n\nsessionReducers[actionTypes.SESSION_NEW_TRACK] = {\n  next (state, action) {\n    if (action.payload.local) {\n      return {\n        ...state,\n        localTracks: concat(state.localTracks, [action.payload.trackId])\n      }\n    } else {\n      return {\n        ...state,\n        remoteTracks: concat(state.remoteTracks, [action.payload.trackId])\n      }\n    }\n  }\n}\n\nsessionReducers[actionTypes.SESSION_TRACK_REMOVED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    if (action.payload.local) {\n      return {\n        ...state,\n        localTracks: remove(removeTrack, state.localTracks)\n      }\n    } else {\n      return {\n        ...state,\n        remoteTracks: remove(removeTrack, state.remoteTracks)\n      }\n    }\n  }\n}\n\nsessionReducers[actionTypes.SESSION_TRACK_ENDED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    if (action.payload.local) {\n      return {\n        ...state,\n        localTracks: remove(removeTrack, state.localTracks)\n      }\n    } else {\n      return {\n        ...state,\n        remoteTracks: remove(removeTrack, state.remoteTracks)\n      }\n    }\n  }\n}\n\nsessionReducers[actionTypes.SESSION_TRACK_REPLACED] = {\n  next (state, action) {\n    // Remove old track id if it still exists\n    const removeTrack = trackId => trackId === action.payload.oldTrackId\n    const newLocalTracks = remove(removeTrack, state.localTracks)\n    // Add new track id if it doesn't exist\n    if (newLocalTracks.indexOf(action.payload.trackId) === -1) {\n      newLocalTracks.push(action.payload.trackId)\n    }\n    return {\n      ...state,\n      localTracks: newLocalTracks\n    }\n  }\n}\n\nconst sessionReducer = handleActions(sessionReducers, {})\n\nconst specificSessionActions = combineActions(\n  actionTypes.SESSION_NEW_TRACK,\n  actionTypes.SESSION_TRACK_REMOVED,\n  actionTypes.SESSION_TRACK_ENDED,\n  actionTypes.SESSION_TRACK_REPLACED\n)\n\nreducers[specificSessionActions] = (state, action) => {\n  return state.map(session => {\n    if (session.id === action.payload.id) {\n      return sessionReducer(session, action)\n    } else {\n      return session\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\nimport { concat, remove } from 'lodash/fp'\n\nconst reducers = {}\n\n// Add the new Track to state.\nreducers[actionTypes.TRACK_ADDED] = {\n  next (state, action) {\n    return concat(state, action.payload)\n  }\n}\n\n// Remove the ended Track from state.\nreducers[actionTypes.TRACK_REMOVED] = {\n  next (state, action) {\n    const removeTrack = track => track.trackId === action.payload.trackId\n    return remove(removeTrack)(state)\n  }\n}\n\n// Store the selector used for rendering the track.\nreducers[actionTypes.RENDER_TRACKS_FINISH] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          containers: concat(track.containers, action.payload.selector)\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n// Remove the selector used for rendering the track.\nreducers[actionTypes.REMOVE_TRACKS_FINISH] = {\n  next (state, action) {\n    // TODO: Only remove one container (instead of all that match)?\n    const removeContainer = container => container === action.payload.selector\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          containers: remove(removeContainer)(track.containers)\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n// TODO: Update this on an action from the track channel?\nreducers[actionTypes.MUTE_TRACKS_FINISH] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          muted: true\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\nreducers[actionTypes.UNMUTE_TRACKS_FINISH] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          muted: false\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\nreducers[actionTypes.TRACK_SOURCE_MUTED] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          sourceMuted: true\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\nreducers[actionTypes.TRACK_SOURCE_UNMUTED] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          sourceMuted: false\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","/**\n * Retrieves media devices available on the system.\n * @method getDevices\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getDevices (state) {\n  return state.webrtc.devices\n}\n\n/**\n * Session selectors.\n */\nexport function getSessions (state) {\n  return state.webrtc.sessions\n}\n\nexport function getSessionById (state, sessionId) {\n  return getSessions(state).find(session => session.id === sessionId)\n}\n\n/**\n * Track selectors.\n */\nexport function getTracks (state) {\n  return state.webrtc.tracks\n}\n\nexport function getTrackById (state, trackId) {\n  return getTracks(state).find(track => track.trackId === trackId)\n}\n\n/**\n * Media selectors.\n * Handles retrieving data from the `state.webrtc.media` substate.\n */\n\n/**\n * Get the list of all media this session.\n * @method getMedia\n * @param  {Object} state Redux state.\n * @return {Array} A list of all media objects.\n */\nexport function getMedia (state) {\n  return state.webrtc.media\n}\n\n/**\n * Get a specific media object.\n * @method getMediaById\n * @param  {Object} state Redux state.\n * @param  {string} mediaId The media to retrieve.\n * @return {Object} A media object.\n */\nexport function getMediaById (state, mediaId) {\n  return getMedia(state).find(media => media.id === mediaId)\n}\n\n/**\n * Retrieves information about the browser.\n * @method getBrowserDetails\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getBrowserDetails (state) {\n  return state.webrtc.browser\n}\n","// Webrtc plugin.\nimport * as mediaSagas from './media'\nimport * as logSagas from './logs'\nimport * as actionTypes from '../interface/actionTypes'\n\n// Other plugins.\nimport { HANDLERS_CHANGE, LEVELS_CHANGE } from '../../logs/interface/actionTypes'\nimport { getLevel } from '../../logs/interface/selectors'\n\n// Libraries.\nimport { call, select, takeEvery } from 'redux-saga/effects'\n\n/**\n * Track operations.\n */\n\n/**\n * Handle rendering Track objects.\n * @method renderTracks\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * renderTracks (webRTC) {\n  yield takeEvery(actionTypes.RENDER_TRACKS, mediaSagas.renderTracks, webRTC)\n}\n\n/**\n * Handle removing Track objects.\n * @method removeTracks\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * removeTracks (webRTC) {\n  yield takeEvery(actionTypes.REMOVE_TRACKS, mediaSagas.removeTracks, webRTC)\n}\n\n/**\n * Handle muting tracks.\n * @method muteTracks\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * muteTracks (webRTC) {\n  yield takeEvery(actionTypes.MUTE_TRACKS, mediaSagas.muteTracks, webRTC)\n}\n\n/**\n * Handle unmuting tracks.\n * @method unmuteTracks\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * unmuteTracks (webRTC) {\n  yield takeEvery(actionTypes.UNMUTE_TRACKS, mediaSagas.unmuteTracks, webRTC)\n}\n\n/**\n * Taker saga for \"change webrtc log level\" actions.\n * @method updateLogLevelEntry\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * updateLogLevelEntry (webRTC) {\n  yield takeEvery(LEVELS_CHANGE, logSagas.updateLogLevel, webRTC)\n}\n\n/**\n * Taker saga for \"change webrtc log handler\" actions.\n * @method updateLogHandlerEntry\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * updateLogHandlerEntry (webRTC) {\n  yield takeEvery(HANDLERS_CHANGE, logSagas.updateLogHandler, webRTC)\n}\n\n/**\n * Configure the WebRTC stack's log level on SDK initialization.\n *\n * Special-case saga: This functionality needs to be run when the SDK is\n *    initialized, but can't be part of the plugin's `init` saga. This is\n *    because it needs the level state to have been set in state, but that isn't\n *    guarenteed during the `init` saga. The order that plugins are loaded would\n *    affect this (logs would need to be before webrtc).\n * @method initLogLevel\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * initLogLevel (webRTC) {\n  // Get the WEBRTC logger's level.\n  const level = yield select(getLevel, 'WEBRTC')\n  // Call the \"set log level\" saga for the WEBRTC logger, pretending that we\n  //    received an action updating its level.\n  yield call(logSagas.updateLogLevel, webRTC, { payload: { WEBRTC: level } })\n}\n","// Libraries.\nimport { all, call } from 'redux-saga/effects'\n\n/**\n * Functionality saga for \"update webrtc log level\" actions.\n * @method updateLogLevel\n * @param  {Object} webRTC The WebRTC stack.\n * @param  {Object} action A \"log level change\" action.\n */\nexport function * updateLogLevel (webRTC, action) {\n  // If the WebRTC log level was changed, update the WebRTC stack's loggers.\n  if (action.payload.WEBRTC) {\n    yield call([webRTC.logs, 'setLevel'], action.payload.WEBRTC)\n    const loggers = yield call([webRTC.logs, 'getLoggers'])\n\n    yield all(loggers.map(logger => call([logger, 'setLevel'], action.payload.WEBRTC)))\n  }\n}\n\n/**\n * Functionality saga for \"update webrtc log handler\" actions.\n * @method updateLogHandler\n * @param  {Object} webRTC The WebRTC stack.\n * @param  {Object} action A \"log handler change\" action.\n */\nexport function * updateLogHandler (webRTC, action) {\n  // If the WebRTC log handler was changed, update the WebRTC stack's loggers.\n  if (action.payload.WEBRTC) {\n    yield call([webRTC.logs, 'setHandler'], action.payload.WEBRTC)\n    const loggers = yield call([webRTC.logs, 'getLoggers'])\n\n    yield all(loggers.map(logger => call([logger, 'setHandler'], action.payload.WEBRTC)))\n  }\n}\n","// Webrtc plugin.\nimport { trackActions } from '../interface/actions'\n\n// Other plugins.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { call, put, all } from 'redux-saga/effects'\nimport { isUndefined } from 'lodash/fp'\n\nconst log = logManager.getLogger('MEDIA')\n\n/**\n * Render Tracks in a specified container.\n * @method renderTracks\n * @param  {Object} action A \"render tracks\" action.\n */\nexport function * renderTracks (webRTC, action) {\n  const { trackIds, selector, speakerId } = action.payload\n  log.info(`Rendering track(s) in element ${selector}.`, trackIds)\n\n  // Get the tracks that are to be rendered.\n  const tracks = yield call([webRTC.track, 'getTracks'], trackIds)\n  const filteredTracks = tracks.filter(track => !isUndefined(track))\n\n  // Render the tracks.\n  yield all(filteredTracks.map(track => call([track, 'renderIn'], selector, speakerId)))\n\n  log.info(`Finished rendering track(s).`, filteredTracks.map(track => track.id))\n  // Report operation done.\n  yield put(\n    trackActions.renderTracksFinish(filteredTracks.map(track => track.id), {\n      selector\n    })\n  )\n}\n\n/**\n * Stop Tracks from being rendered in a specified container.\n * @method removeTracks\n * @param  {Object} action A \"remove tracks\" action.\n */\nexport function * removeTracks (webRTC, action) {\n  const { trackIds, selector } = action.payload\n  log.info(`Removing track(s) from element ${selector}.`, trackIds)\n\n  // Get the tracks that are to be removed.\n  const allTracks = yield call([webRTC.track, 'getTracks'])\n  const tracks = allTracks.filter(track => trackIds.includes(track.id))\n\n  // Remove the tracks.\n  yield all(tracks.map(track => call([track, 'removeFrom'], selector)))\n\n  log.info(`Finished removing track(s).`, tracks.map(track => track.id))\n  // Report operation done.\n  yield put(\n    trackActions.removeTracksFinish(tracks.map(track => track.id), {\n      selector\n    })\n  )\n}\n\n/**\n * Mute certain tracks.\n * @method muteTracks\n * @param  {Object} action\n * @param  {Array} action.payload A list of track IDs.\n */\nexport function * muteTracks (webRTC, action) {\n  log.info(`Muting track(s).`, action.payload)\n  // Get the tracks that are to be muted.\n  const allTracks = yield call([webRTC.track, 'getTracks'])\n  const tracks = allTracks.filter(track => action.payload.includes(track.id))\n\n  // Mute the tracks.\n  yield all(tracks.map(track => call([track, 'mute'])))\n\n  log.info(`Finished muting track(s).`, tracks.map(track => track.id))\n  // Report operation done.\n  yield put(trackActions.muteTracksFinish(tracks.map(track => track.id)))\n}\n\n/**\n * Unmute certain tracks.\n * @method unmuteTracks\n * @param  {Object} action\n * @param  {Array} action.payload A list of track IDs.\n */\nexport function * unmuteTracks (webRTC, action) {\n  log.info(`Unmuting track(s).`, action.payload)\n\n  // Get the tracks that are to be unmuted.\n  const allTracks = yield call([webRTC.track, 'getTracks'])\n  const tracks = allTracks.filter(track => action.payload.includes(track.id))\n\n  // Unmute the tracks.\n  yield all(tracks.map(track => call([track, 'unmute'])))\n\n  log.info(`Finished unmuting track(s).`, tracks.map(track => track.id))\n  // Report operation done.\n  yield put(trackActions.unmuteTracksFinish(tracks.map(track => track.id)))\n}\n","// Other plugins.\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('CHANNEL')\n\n/**\n * Wraps a channel with only `send` and `receive` functionality into one that\n *    also has `reply` functionality.\n * This is required by the Proxy Plugin to convert asynchronous code into\n *    synchronous code. The Proxy needs to return a value synchronously when\n *    sending data over the channel.\n * @method wrapChannel\n * @param  {Object} channel\n * @return {Object} The same channel, but with a `reply` method as well.\n */\nexport default function wrapChannel (channel) {\n  /**\n   * Track sent messages by their ID.\n   * @type {Object}\n   */\n  const sentMessages = {}\n\n  channel.receive = function receiveMessage (message) {\n    const { messageId, data } = message\n\n    // Determine how the message needs to be handled.\n    if (messageId && sentMessages[messageId]) {\n      // If the message has an ID from a sent message, then it is a reply to\n      //    that message. Resolve the promise associated with it.\n      log.debug(`Received reply from message ${messageId}.`)\n      sentMessages[messageId].resolve(data)\n    } else if (messageId && !sentMessages[messageId]) {\n      // If the message has an ID that we don't know about, then the application\n      //    will need to handle it.\n      if (api.receive) {\n        log.debug(`Received new message ${messageId}.`)\n        api.receive(messageId, data)\n      } else {\n        log.error('No listener set for handling received messages.', data)\n      }\n    } else {\n      // If the message didn't have an ID, then it wasn't from our test channel.\n      log.warn('Received message without an ID on the channel; ignoring.', message)\n    }\n  }\n\n  /*\n   * The interface that the Proxy Plugin will use.\n   */\n  const api = {}\n\n  /**\n   * Send a message over the channel.\n   * @method send\n   * @param {string} messageId A unique ID to track the sent message.\n   * @param {Object} data\n   * @param {Function} callback Function called when a reply is received.\n   */\n  api.send = (messageId, data, callback) => {\n    if (sentMessages[messageId]) {\n      // The ID has already been used for sending a message.\n      callback(null, new Error('Cannot send message; ID already used.'))\n      return\n    }\n\n    // Attach a messageId to the message.\n    // This lets the remote side reply to this message by using the messageId.\n    const message = {\n      data,\n      messageId\n    }\n\n    // Wrap `send` is a promise so that we can correlate receiving a reply\n    //    to the callback.\n    new Promise(resolve => {\n      // Store `resolve` so we can call it call it when we receive a reply.\n      sentMessages[messageId] = {\n        resolve\n      }\n      // Send the message over the channel.\n      log.debug(`Sending new message ${messageId}.`)\n      channel.send(message)\n    }).then(data => {\n      // The message received a reply, so remove the reference.\n      delete sentMessages[messageId]\n\n      if (typeof callback === 'function') {\n        callback(data)\n      }\n    })\n  }\n\n  /**\n   * Listener for receiving a message from the channel.\n   * @method receive\n   * @param {string} messageId\n   * @param {Object} data\n   */\n  // eslint-disable-next-line\n  api.receive = undefined\n\n  /**\n   * Send a reply to a specific received message over the channel.\n   * @method reply\n   * @param {string} messageId\n   * @param {Object} data\n   */\n  api.reply = (messageId, data) => {\n    // Attach the messageId to the message.\n    const message = {\n      data,\n      messageId\n    }\n\n    log.debug(`Replying to message ${messageId}.`)\n    channel.send(message)\n  }\n\n  return api\n}\n","// Proxy Plugin.\nimport pluginInterface from './interface'\nimport initializeProxy from './proxyStack'\nimport * as sagas from './sagas'\nimport events from './interface/events'\n\n// Other plugins.\nimport { mapEvents } from '../events/interface/actions'\n\n// Helpers.\nimport { autoRestart } from '../common/utils'\nimport { logManager } from '../logs'\n\n// Libraries.\nimport initialize, { getWebRTCSupportCapabilities } from 'kandy-webrtc'\nimport { isFunction, values } from 'lodash/fp'\nimport { fork, put } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('PROXY')\n\n/**\n * Proxy Plugin factory.\n * The Proxy Plugin is responsible for setting up the webRTC /\n *    Media Proxy within the SDK. This includes replacing the\n *    webRTC stack with a Proxy stack, providing an interface\n *    for an application to configure the Proxy stack, and,\n *    in general, bringing all of the Proxy components together.\n * @method proxyPlugin\n * @return {Object} Plugin components.\n */\nexport default function proxyPlugin () {\n  const { mediaDevices, peerConnection } = getWebRTCSupportCapabilities()\n  if (!mediaDevices || !peerConnection) {\n    log.warn(\n      'Calls are not supported on this platform due to lack of WebRTC support. Proxy APIs will not be available.'\n    )\n    return\n  }\n\n  // Initialize a real webRTC stack.\n  const webRTC = initialize()\n  // Initialize the Proxy stack. The real webRTC stack is needed for\n  //    when proxy-mode is disbled.\n  const proxy = initializeProxy(webRTC)\n\n  function * init ({ webRTC }) {\n    yield put(mapEvents(events))\n\n    // Make sure that webRTC is the Proxy Stack.\n    if (!webRTC.setProxyMode || !isFunction(webRTC.setProxyMode)) {\n      log.error('Cannot setup Proxy Plugin: Proxy Stack not found.')\n      return\n    }\n\n    // Wrap the sagas in a function that provides them with the proxy stack.\n    const wrappedSagas = values(sagas).map(saga => {\n      return autoRestart(() => saga(webRTC))\n    })\n\n    // Run all of the sagas.\n    for (let saga of wrappedSagas) {\n      yield fork(saga)\n    }\n  }\n\n  return {\n    name: pluginInterface.name,\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer,\n    init,\n    shared: {\n      // Share the Proxy stack with the factory. The intention is that this\n      //    will replace the webRTC stack the Webrtc plugin previously shared.\n      webRTC: proxy\n    }\n  }\n}\n","const PREFIX = '@@KANDY/PROXY/'\n\nexport const SET_MODE = PREFIX + 'SET_MODE'\nexport const SET_MODE_FINISH = PREFIX + 'SET_MODE_FINISH'\n\nexport const SET_CHANNEL = PREFIX + 'SET_CHANNEL'\nexport const SET_CHANNEL_FINISH = PREFIX + 'SET_CHANNEL_FINISH'\n\nexport const INITIALIZE = PREFIX + 'INITIALIZE'\nexport const INITIALIZE_FINISH = PREFIX + 'INITIALIZE_FINISH'\n","import * as actionTypes from './actionTypes'\n\nfunction actionHelper (type, payload = {}) {\n  const action = {\n    type,\n    payload: {\n      ...payload\n    }\n  }\n\n  if (payload.error) {\n    action.error = true\n  }\n\n  return action\n}\n\nexport function setProxyMode (value) {\n  return actionHelper(actionTypes.SET_MODE, { value })\n}\n\nexport function setProxyModeFinish ({ error, value }) {\n  return actionHelper(actionTypes.SET_MODE_FINISH, { error, value })\n}\n\nexport function setChannel (channel) {\n  return actionHelper(actionTypes.SET_CHANNEL, { channel })\n}\n\nexport function setChannelFinish ({ error }) {\n  return actionHelper(actionTypes.SET_CHANNEL_FINISH, { error })\n}\n\nexport function initializeRemote (config) {\n  return actionHelper(actionTypes.INITIALIZE, { config })\n}\n\nexport function initializeRemoteFinish ({ error, browser }) {\n  return actionHelper(actionTypes.INITIALIZE_FINISH, { error, browser })\n}\n","/**\n * The 'proxy' namespace allows for a secondary mode for making calls: proxy mode.\n * When proxy mode is enabled, the SDK will redirect webRTC / media operations from the current machine to a remote machine using a channel.\n * This is an advanced feature that enables support for Calls in particular scenarios that would otherwise not support them.\n *\n * @public\n * @namespace proxy\n */\n\n/**\n * The Channel object that the Proxy module needs to be provided.\n *\n * @public\n * @static\n * @typedef {Object} Channel\n * @memberof proxy\n * @example\n * // The channel the application uses for communicating with a remote endpoint.\n * const appChannel = ...\n *\n * // The channel the application will provide to the Proxy module for use.\n * const channel = {\n *    send: function (data) {\n *      // Any encoding / wrapping needed for a Proxy message being sent\n *      //    over the channel.\n *      appChannel.sendMessage(data)\n *    },\n *    // The Proxy module will set this function.\n *    receive: undefined\n * }\n * appChannel.on('message', data => {\n *    // Any decoding / unwrapping needed for the received message.\n *    channel.receive(data)\n * })\n *\n * client.proxy.setChannel(channel)\n */\n\n/**\n * Channel function that the Proxy module will use to send messages to the remote side.\n * @public\n * @memberof proxy.Channel\n * @name send\n * @function\n * @param {Object} data Message to be sent over the channel.\n */\n\n/**\n * API that the Proxy module will assign a listener function for accepting received messages.\n * This function should receive all messages sent from the remote side of the channel.\n * @public\n * @memberof proxy.Channel\n * @name receive\n * @function\n * @param {Object} data The message received from the Channel.\n */\n\n// Proxy plugin.\nimport * as actions from './actions'\nimport { getProxyState } from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\nconst log = logManager.getLogger('PROXY')\n\n/**\n * Proxy Plugin API.\n * @method api\n * @param {Object} context\n * @param {Function} dispatch\n * @param {Function} getState\n * @return {Object} An API object.\n */\nexport default function api ({ dispatch, getState }) {\n  const api = {\n    /**\n     * Sets the mode for the Proxy Plugin.\n     * When enabled, webRTC operations will be proxied over a channel. Enabling\n     *    proxy mode requires a channel to have been set. See `setChannel` API.\n     * When disabled, webRTC operation will occur as normal on the local machine.\n     * @public\n     * @memberof proxy\n     * @method setProxyMode\n     * @param {boolean} value Whether proxy mode should be enabled.\n     */\n    setProxyMode (value) {\n      log.debug(API_LOG_TAG + 'proxy.setProxyMode: ', value)\n      dispatch(actions.setProxyMode(value))\n    },\n\n    /**\n     * Retrieves the current mode of the Proxy Plugin.\n     * @public\n     * @memberof proxy\n     * @method getProxyMode\n     * @return {boolean} Whether proxy mode is currently enabled.\n     */\n    getProxyMode () {\n      log.debug(API_LOG_TAG + 'proxy.getProxyMode')\n      return getProxyState(getState()).proxyMode\n    },\n\n    /*\n     * Retrieve Proxy information.\n     */\n    getInfo () {\n      log.debug(API_LOG_TAG + 'proxy.getInfo')\n      return getProxyState(getState())\n    },\n\n    /**\n     * Retrieve information about the proxy's browser being used.\n     * Browser information being defined indicates that the browser supports\n     *    basic webRTC scenarios.\n     * @public\n     * @memberof proxy\n     * @method getProxyDetails\n     * @return {Object} Object containing `browser` and `version` information.\n     * @example\n     * const details = client.proxy.getProxyDetails()\n     *\n     * log(`Proxy Browser in use: ${details.browser}, version ${details.version}.`)\n     */\n    getProxyDetails () {\n      log.debug(API_LOG_TAG + 'proxy.getProxyDetails')\n      return getProxyState(getState()).browser\n    },\n\n    /**\n     * Sets the channel to be used while proxy mode is enabled.\n     * @public\n     * @memberof proxy\n     * @method setChannel\n     * @param {proxy.Channel} channel See the `Channel` module for information.\n     */\n    setChannel (channel) {\n      log.debug(API_LOG_TAG + 'proxy.setChannel: ', channel)\n      dispatch(actions.setChannel(channel))\n    },\n\n    /**\n     * Sends an initialization message over the channel with webRTC configurations.\n     * @public\n     * @memberof proxy\n     * @method initializeRemote\n     * @param  {Object} config\n     */\n    initializeRemote (config) {\n      log.debug(API_LOG_TAG + 'proxy.initializeRemote: ', config)\n      dispatch(actions.initializeRemote(config))\n    }\n  }\n\n  // Namespace the API.\n  return { proxy: api }\n}\n","/**\n * The Proxy state has changed.\n * Indicates either a change in the mode or the channel.\n * @public\n * @memberof proxy\n * @event proxy:change\n */\nexport const PROXY_CHANGE = 'proxy:change'\n\n/**\n * An error has occurred with a Proxy operation.\n * @public\n * @memberof proxy\n * @event proxy:error\n * @param {Object} params\n * @param {Object} params.error An error object.\n */\nexport const PROXY_ERROR = 'proxy:error'\n","// Proxy plugin.\nimport * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst eventsMap = {}\n\n/*\n * Handle Proxy actions as either a \"success\" (state has change) event\n *    or an \"error\" (couldn't do operation) event.\n * @method proxyEvents\n * @param {Action} action\n * @return {Event}\n */\nconst proxyEvents = action => {\n  if (action.error) {\n    return {\n      type: eventTypes.PROXY_ERROR,\n      args: {\n        error: action.payload.error\n      }\n    }\n  } else {\n    return {\n      type: eventTypes.PROXY_CHANGE\n    }\n  }\n}\n\neventsMap[actionTypes.SET_MODE_FINISH] = proxyEvents\neventsMap[actionTypes.SET_CHANNEL_FINISH] = proxyEvents\neventsMap[actionTypes.INITIALIZE_FINISH] = proxyEvents\n\nexport default eventsMap\n","import api from './api'\nimport reducer from './reducers'\n\n/*\n * Expose the components of the Proxy Interface as a single object.\n */\nexport default {\n  name: 'proxy',\n  api,\n  reducer\n}\n","// Proxy plugin.\nimport * as actionTypes from './actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\n// The reducer's default state.\nconst defaultState = {\n  proxyMode: false,\n  hasChannel: false,\n  remoteInitialized: false,\n  browser: {}\n}\n\nconst reducers = {}\n\n// Proxy Mode has changed.\nreducers[actionTypes.SET_MODE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      proxyMode: action.payload.value\n    }\n  }\n}\n\n// A channel has been provided.\nreducers[actionTypes.SET_CHANNEL_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      hasChannel: true,\n      remoteInitialized: false\n    }\n  }\n}\n\n// The remote side has been initialized.\nreducers[actionTypes.INITIALIZE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      browser: action.payload.browser,\n      remoteInitialized: true\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","// Libraries.\nimport { cloneDeep } from 'lodash/fp'\n\n/**\n * Selector functions.\n * Used to retrieve specific portions of redux state without\n *    needing to know the structure of state.\n */\n\n/**\n * Retrieves the Proxy Plugin state.\n * @method getProxyState\n * @param {Object} state Redux state.\n * @return {Object} Proxy plugin state.\n */\nexport function getProxyState (state) {\n  return cloneDeep(state.proxy)\n}\n","// Proxy plugin.\nimport modelProxy from './model'\n\n// Other plugins.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { isArray, isNull } from 'lodash/fp'\nimport { v4 as uuidV4 } from 'uuid'\n\n/**\n * Creates an ES6 Proxy to wrap a webRTC manager.\n * @method createManagerProxy\n * @param  {Object} base The base object being wrapped.\n * @param  {boolean} base.proxyMode Whether operations should be proxied or not.\n * @param  {string} base.type The type of manager this is.\n * @param  {Object} actualManager A webRTC manager.\n * @return {Proxy}\n */\nexport default function (base, actualManager) {\n  // Hardcode `id` as manager, since this function is only for manager proxies.\n  base.id = 'manager'\n\n  const log = logManager.getLogger('PROXY', base.type)\n  log.debug(`Creating manager proxy for ${base.type}.`, base)\n\n  return new Proxy(base, {\n    /**\n     * Proxy \"getter\" calls on the Proxy.\n     * This function is called anytime a property on `base` is accessed,\n     *    eg. `base.someProp`\n     * @param {Object} objTarget base\n     * @param {string} prop Property being accessed.\n     * @param {Object} receiver The Proxy object.\n     */\n    get: function (objTarget, prop, receiver) {\n      // If the Proxy Stack is not in proxy mode, return the property from the\n      //    actual webRTC manager object.\n      if (!objTarget.proxyMode || !objTarget.channel) {\n        return actualManager[prop]\n      }\n      // Otherwise, the webRTC operation needs to be proxied over the channel.\n\n      /*\n       * Tell redux-saga that this is not a promise.\n       * Otherwise it will handle it differently under-the-hood and break things.\n       * Ref: github.com/redux-saga/redux-saga/blob/master/packages/is/src/index.js#L10\n       */\n      if (!objTarget[prop] && prop === 'then') {\n        return undefined\n      }\n\n      if (objTarget[prop]) {\n        // If something that actually exists is being accessed,\n        //    then return that thing.\n        return objTarget[prop]\n      } else {\n        // Otherwise, it's probably accessing a prop that it\n        //    expects to be a function. So return a function proxy.\n        return new Proxy(() => {}, {\n          /**\n           * Proxy function calls.\n           * This function is called when the dummy function is called,\n           * @example\n           *    const someProp = base.someProp  // Triggers the above `get`.\n           *    someProp()                      // Triggers this `apply`.\n           * @param  {Function} funcTarget The dummy function.\n           * @param  {boolean} thisArg The `base` object wrapped by the first proxy layer.\n           * @param  {Array}  args List of function parameters.\n           */\n          apply: function (funcTarget, thisArg, args) {\n            // Assemble the webRTC command to be sent over the channel.\n            const operation = {\n              type: thisArg.type,\n              id: thisArg.id,\n              operation: prop,\n              params: args\n            }\n\n            if (thisArg.proxyMode && thisArg.channel && thisArg.channel.send) {\n              /*\n               * All manager APIs will now return a Promise, even if they didn't\n               *    before. This is needed to wait for the remote response.\n               * Since sagas `yield` on these API calls, they will also wait\n               *    until the promise resolves.\n               */\n              return new Promise((resolve, reject) => {\n                function callback (data) {\n                  log.debug(`Received manager ${operation.operation} response (${messageId}).`, data)\n\n                  /**\n                   * Parse the data received from the remote side.\n                   */\n                  function parseData (data) {\n                    if (data && data.type) {\n                      // If the response is a Webrtc model, we need to wrap it\n                      //    with a proxy for the Callstack.\n                      return modelProxy(data, thisArg.channel)\n                    } else if (isNull(data)) {\n                      // The JSON codec encoder/decoder converts undefined to\n                      //    null (because of JSON stringify/parse), so undo\n                      //    that if the data is explicitly null value.\n                      return undefined\n                    } else {\n                      return data\n                    }\n                  }\n\n                  if (isArray(data)) {\n                    const proxies = data.map(parseData)\n                    resolve(proxies)\n                  } else {\n                    resolve(parseData(data))\n                  }\n                }\n\n                const messageId = uuidV4().substring(0, 8)\n                log.debug(`Sending manager ${operation.operation} operation (${messageId}).`, operation)\n                thisArg.channel.send(messageId, operation, callback)\n              })\n            }\n          }\n        })\n      }\n    }\n  })\n}\n","// Other plugins.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\n\n/**\n * Creates an ES6 Proxy to wrap a webRTC object.\n * @method modelProxy\n * @param  {Object}  base The base object being wrapped.\n * @param  {Channel} channel The channel to use for proxying commands.\n * @return {Proxy}   A proxied webRTC object.\n */\nexport default function modelProxy (base, channel) {\n  const log = logManager.getLogger('PROXY', `${base.type}/${base.id}`)\n  log.debug(`Creating model proxy for ${base.type}/${base.id}.`)\n\n  return new Proxy(base, {\n    get: function (objTarget, prop, receiver) {\n      /*\n       * Tell redux-saga that this is not a promise.\n       * Otherwise it will handle it differently under-the-hood and break things.\n       * Ref: github.com/redux-saga/redux-saga/blob/master/packages/is/src/index.js#L10\n       */\n      if (!objTarget[prop] && prop === 'then') {\n        return undefined\n      }\n\n      /*\n       * Tell the Proxy channel (and anything else) that the original object is\n       *    already a JSON object.\n       * When sending this Proxy over the channel, it will try to JSON.stringify()\n       *    it, which actually first tries to call toJSON on it.\n       * Mimic the real toJSON with a function that returns the original object.\n       */\n      if (prop === 'toJSON') {\n        return () => objTarget\n      }\n\n      /**\n       * The base object used to create a model's proxy may have references to\n       *    other webRTC objects. We need to proxy those references as well.\n       * Session: localTracks, remoteTracks\n       * Media: tracks\n       */\n      if (['localTracks', 'remoteTracks', 'tracks'].includes(prop)) {\n        return objTarget[prop].map(track => modelProxy(track, channel))\n      }\n\n      if (objTarget[prop]) {\n        // If something that actually exists is being accessed,\n        //    then return that thing.\n        return objTarget[prop]\n      } else {\n        // Otherwise, it's probably accessing a prop that it\n        //    expects to be a function. So return a function proxy.\n        return new Proxy(() => {}, {\n          /**\n           * Proxy function calls.\n           * This function is called when the dummy function is called,\n           * @example\n           *    const someProp = base.someProp  // Triggers the above `get`.\n           *    someProp()                      // Triggers this `apply`.\n           * @param  {Function} funcTarget The dummy function.\n           * @param  {boolean} thisArg The `base` object wrapped by the first proxy layer.\n           * @param  {Array}  args List of function parameters.\n           */\n          apply: function (funcTarget, thisArg, args) {\n            // Assemble the webRTC command to be sent over the channel.\n            const operation = {\n              type: thisArg.type,\n              id: thisArg.id,\n              operation: prop,\n              params: args\n            }\n\n            /*\n             * All APIs will now return a Promise, even if they didn't\n             *    before. This is needed to wait for the remote response.\n             * Since sagas `yield` on these API calls, they will also wait\n             *    until the promise resolves.\n             */\n            return new Promise(resolve => {\n              function callback (data) {\n                log.debug(`Received model ${operation.operation} response (${messageId}).`, data)\n                if (operation.operation === 'getStats') {\n                  // If-block required for https://jira.rbbn.com/browse/KAA-2056\n                  // The RTCStatsReport does not serialize over the wire natively\n                  // So we need to reconstruct it here\n                  data = new Map(data)\n                }\n\n                log.debug(`Received model response for ${messageId}.`, data)\n\n                /**\n                 * Parse the data received from the remote side.\n                 */\n                function parseData (data) {\n                  if (data && data.type && operation.operation === 'getTracks') {\n                    // If the operation we sent across was `getTracks`, then the\n                    //    response data should be Webrtc model(s). We need to\n                    //    wrap it with a proxy for the Callstack.\n                    return modelProxy(data, channel)\n                  } else if (data === null) {\n                    // The JSON codec encoder/decoder converts undefined to\n                    //    null (because of JSON stringify/parse), so undo\n                    //    that if the data is explicitly null value.\n                    return undefined\n                  } else {\n                    return data\n                  }\n                }\n\n                if (Array.isArray(data)) {\n                  const proxies = data.map(parseData)\n                  resolve(proxies)\n                } else {\n                  resolve(parseData(data))\n                }\n                resolve(data)\n              }\n\n              const messageId = uuidV4().substring(0, 8)\n              log.debug(`Sending model ${operation.operation} operation (${messageId}).`, operation)\n              channel.send(messageId, operation, callback)\n            })\n          }\n        })\n      }\n    }\n  })\n}\n","// Proxy plugin.\nimport createManagerProxy from './proxies/manager'\nimport wrapChannel from './channel'\n\n// Other plugins.\nimport { logManager } from '../logs'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\n\nconst log = logManager.getLogger('PROXY')\n\n/**\n * Creates a Proxied webRTC Stack.\n * This Proxy Stack is the replacement for the actual webRTC stack.\n * @method initializeProxy\n * @param {Object} webRTC The local webRTC stack.\n * @return {Object} The Proxy Stack.\n */\nexport default function initializeProxy (webRTC) {\n  // The base of the proxy stack.\n  const base = {\n    // Whether operations should be proxied.\n    proxyMode: false,\n    // The channel to use for proxying operations.\n    channel: undefined,\n    // Whether the Client side is ready.\n    clientReady: false,\n    // The proxied webRTC managers.\n    managers: {}\n  }\n\n  /*\n   * Recreate each of the actual webRTC managers as a proxied manager.\n   * Creating proxies at the manager level (instead of only at the stack level)\n   *    allows the Proxy Stack to be used in scenarios where the managers\n   *    themselves are stored (rather than only using the stack from the top\n   *    level).\n   * Specifically, this allows us to use the Proxy Stack in the webRTC examples\n   *    for testing outside of the SDK/redux context.\n   */\n  for (const manager in webRTC.managers) {\n    base.managers[manager] = createManagerProxy(\n      {\n        type: manager,\n        proxyMode: base.proxyMode,\n        channel: base.channel\n      },\n      webRTC.managers[manager]\n    )\n  }\n\n  /**\n   * Sets proxy mode for the Proxy Stack.\n   * @method setProxyMode\n   * @param {boolean} value\n   * @return {boolean} Whether the setting was successfully changed or not.\n   */\n  const setProxyMode = value => {\n    if (typeof value !== 'boolean') {\n      log.debug('Provided value is not a boolean; cannot set proxy mode.')\n      return false\n    }\n\n    log.debug('Setting proxyMode for managers to ' + value)\n    base.proxyMode = value\n\n    for (const manProxy in base.managers) {\n      base.managers[manProxy].proxyMode = value\n    }\n    return true\n  }\n\n  /**\n   * Retreives the current mode of the Proxy Stack.\n   * @method getProxyMode\n   * @return {boolean}\n   */\n  const getProxyMode = () => {\n    return base.proxyMode\n  }\n\n  /**\n   * Sets the channel to be used for proxying operations.\n   * @method setChannel\n   * @param {Channel} channel\n   */\n  const setChannel = channel => {\n    // TODO: How to unset a channel?\n    // TODO: Make (more) sure its a valid channel.\n    if (!channel || !channel.send) {\n      log.debug('Provided channel does not support the expected interface.')\n      return false\n    }\n\n    const wrappedChannel = wrapChannel(channel)\n    base.channel = wrappedChannel\n    base.clientReady = false\n\n    for (const manProxy in base.managers) {\n      base.managers[manProxy].channel = wrappedChannel\n    }\n\n    // TODO: Have an API for this.\n    // setTimeout(initialize, 1000)\n\n    return true\n  }\n\n  /**\n   * Retreives the current channel to be used.\n   * @method getChannel\n   * @return {Channel}\n   */\n  const getChannel = () => {\n    return base.channel\n  }\n\n  /**\n   * Sets the listener function for receiving messages from the channel.\n   * @method setReceiver\n   * @param  {Function} listener\n   */\n  const onMessage = listener => {\n    base.channel.receive = listener\n  }\n\n  /**\n   * Attempts to initialize the Client side to be ready for use.\n   * @method initialize\n   * @param {Object} config WebRTC stack configuration.\n   * @param {Object} logLevels  The initial log levels for the Remote end's loggers.\n   * @param {string} logLevels.WEBRTC Log level for the Remote WebRTC stack.\n   * @param {string} logLevels.PROXY  Log level for the Remote Proxy operations.\n   */\n  const initialize = (config, logLevels) => {\n    return new Promise(resolve => {\n      if (!base.clientReady && base.channel) {\n        const callback = data => {\n          log.debug('Received initialize response.', data)\n          if (data.initialized) {\n            // The Client is now ready.\n            base.clientReady = true\n            resolve({ browser: data.browser })\n          } else {\n            resolve({ error: new Error('Remote end not initialized.') })\n          }\n        }\n\n        const messageId = uuidV4()\n        base.channel.send(messageId, { initialize: true, config, logLevels }, callback)\n      } else {\n        log.debug('Cannot initialize remote: either Client is already ready or no channel to use.')\n        resolve({ error: new Error('Either Client is already ready or no channel to use.') })\n      }\n    })\n  }\n\n  /**\n   * Set the SDP handlers the webRTC stack should use with the pipeline.\n   * @method setHandlers\n   * @param  {Array} handlers List of SDP handlers.\n   */\n  function setHandlers (handlers) {\n    webRTC.sdp.pipeline.setHandlers(handlers)\n  }\n\n  /**\n   * Retrieve details about the browser.\n   * Intended to only be used for retreiving the local browser details. The\n   *    Proxy details are retrieved when initializing the remote SDK.\n   * @method getBrowserDetails\n   * @return {Object}\n   */\n  function getBrowserDetails () {\n    // Query the local webRTC stack if we're not in proxy mode.\n    if (!base.proxyMode) {\n      return webRTC.getBrowserDetails()\n    }\n  }\n\n  return {\n    // Proxy stack specific.\n    setProxyMode,\n    getProxyMode,\n    setChannel,\n    getChannel,\n    onMessage,\n    // webRTC imitations.\n    initialize,\n    sdp: {\n      pipeline: {\n        setHandlers\n      }\n    },\n    managers: base.managers,\n    getBrowserDetails\n  }\n}\n","// Proxy plugin.\nimport * as actionTypes from '../interface/actionTypes'\nimport * as sagas from './proxyStack'\n\n// Other plugins.\nimport { LEVELS_CHANGE } from '../../logs/interface/actionTypes'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\n\nexport function * setMode (webRTC) {\n  yield takeEvery(actionTypes.SET_MODE, sagas.setProxyMode, webRTC)\n}\n\nexport function * setChannel (webRTC) {\n  yield takeEvery(actionTypes.SET_CHANNEL, sagas.setChannel, webRTC)\n}\n\nexport function * initializeRemote (webRTC) {\n  yield takeEvery(actionTypes.INITIALIZE, sagas.initializeRemote, webRTC)\n}\n\n/**\n * Taker saga for \"change proxy log level\" actions.\n * @method updateLogLevelEntry\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * updateLogLevelEntry (webRTC) {\n  yield takeEvery(LEVELS_CHANGE, sagas.updateProxyLevel, webRTC)\n}\n","// Proxy Plugin.\nimport * as actions from '../interface/actions'\nimport { getProxyState } from '../interface/selectors'\n\n// Other plugins.\nimport { getActiveCalls } from '../../call/interfaceNew/selectors'\nimport { logManager } from '../../logs'\nimport { getLevel } from '../../logs/interface/selectors'\nimport { devicesChanged } from '../../webrtc/interface/actions/devices'\n\n// Helpers.\nimport BasicError from '../../errors'\n\n// Libraries.\nimport { call, fork, put, select, take } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\nconst log = logManager.getLogger('PROXY')\n\n/**\n * Sets the proxy mode for the Proxy Stack.\n * @method setProxyMode\n * @param {Object} webRTC The Proxy Stack.\n * @param {Object} action\n */\nexport function * setProxyMode (webRTC, action) {\n  log.info(`Setting proxy mode to ${action.payload.value}.`)\n  // Check to see if there are any on-going calls.\n  const calls = yield select(getActiveCalls)\n\n  if (calls.length > 0) {\n    log.info('Cannot change proxy mode while there are on-going calls.')\n    yield put(\n      actions.setProxyModeFinish({\n        error: new BasicError({\n          code: 'proxy:3',\n          message: 'Cannot change proxy mode while there are on-going calls.'\n        })\n      })\n    )\n    return\n  }\n\n  const value = action.payload.value\n  const result = yield call([webRTC, 'setProxyMode'], value)\n\n  const response = {\n    value\n  }\n  // If the mode wasn't set, define an error to be included\n  //    in the finish action.\n  if (!result) {\n    log.info(`Failed to set proxy mode to ${value}.`)\n    response.error = new BasicError({\n      code: 'proxy:1',\n      message: `Failed to set proxy mode to ${value}.`\n    })\n  } else {\n    log.info(`Finished setting proxy mode to ${value}.`)\n  }\n\n  yield put(actions.setProxyModeFinish(response))\n\n  // After Proxy mode is changed, manually update devices to ensure they are\n  //    from the correct machine.\n  const devices = yield call([webRTC.managers.devices, 'checkDevices'])\n  if (devices.microphone && devices.camera && devices.speaker) {\n    log.debug('Updating available media devices based on proxy mode change.', devices)\n    // Only update state with the devices if its an actual device object.\n    // If the Remote SDK is not initialized yet, it will return garbage.\n    yield put(devicesChanged(devices))\n  }\n}\n\n/**\n * Sets the channel for the Proxy Stack.\n * @method setChannel\n * @param {Object} webRTC The Proxy Stack.\n * @param {Object} action\n */\nexport function * setChannel (webRTC, action) {\n  log.info('Setting channel for use in proxy mode.')\n  // Check to see if there are any on-going calls.\n  const calls = yield select(getActiveCalls)\n\n  if (calls.length > 0) {\n    log.info('Cannot set channel while there are on-going calls.')\n    yield put(\n      actions.setChannelFinish({\n        error: new BasicError({\n          code: 'proxy:3',\n          message: 'Cannot set channel while there are on-going calls.'\n        })\n      })\n    )\n    return\n  }\n\n  const channel = action.payload.channel\n  const result = yield call([webRTC, 'setChannel'], channel)\n\n  const response = {}\n  // If the channel wasn't set, define an error to be included\n  //    in the finish action.\n  if (!result) {\n    log.info('Failed to set channel for proxy mode.')\n    response.error = new BasicError({\n      code: 'proxy:2',\n      message: 'Failed to set proxy channel.'\n    })\n  } else {\n    log.info('Finished setting channel for proxy mode.')\n    // Channel was successfully set.\n    // Listen for messages received from the channel.\n    yield fork(handleMessages, webRTC)\n  }\n\n  yield put(actions.setChannelFinish(response))\n}\n\n/**\n * Handles (non-reply) messages received from the Client Host.\n * @method handleMessages\n * @param  {Object}  webRTC The webRTC stack.\n */\nexport function * handleMessages (webRTC) {\n  // Setup an event channel to bring the messages into redux-saga's context.\n  const messageChannel = eventChannel(emit => {\n    /**\n     * Set the listener function on the Proxy Stack for\n     *    receiving messages. It simply \"emits\" the entire\n     *    messages into the event channel.\n     */\n    webRTC.onMessage((messageId, data) => {\n      emit({ messageId, data })\n    })\n\n    return () => {\n      // Unsubscribe by removing any listener function.\n      webRTC.onMessage(() => {})\n    }\n  })\n\n  while (true) {\n    const { messageId, data } = yield take(messageChannel)\n\n    // Ignore messages from the channel if we're not in Proxy mode.\n    const proxyState = yield select(getProxyState)\n    if (!proxyState.proxyMode) {\n      log.debug(`Not in Proxy mode, ignoring previous message (${messageId}).`)\n      continue\n    }\n\n    // If the received message is an event, dispatch it.\n    if (data.event) {\n      log.debug(`Received event from remote webrtc stack (${data.event.type}).`)\n      yield put(data.event)\n    } else {\n      log.debug(`Received unknown message type; ignoring message (${messageId}).`, data)\n    }\n  }\n}\n\nexport function * initializeRemote (webRTC, action) {\n  log.info('Initializing the Remote SDK for proxy mode.')\n\n  // Get the current local log levels for the loggers that the remote end also uses.\n  //    Send this as part of the init command, so the two sides are in-sync.\n  const webrtcLevel = yield select(getLevel, 'WEBRTC')\n  const proxyLevel = yield select(getLevel, 'PROXY')\n  const channelLevel = yield select(getLevel, 'CHANNEL')\n  const logLevels = { WEBRTC: webrtcLevel, PROXY: proxyLevel, CHANNEL: channelLevel }\n\n  const result = yield call([webRTC, 'initialize'], action.payload.config, logLevels)\n\n  if (result.error) {\n    log.info('Failed to initialize the Remote SDK.')\n    yield put(actions.initializeRemoteFinish({ error: result.error.message }))\n  } else {\n    log.info('Finished initializing the Remote SDK.')\n    yield put(actions.initializeRemoteFinish({ browser: result.browser }))\n  }\n}\n\n/**\n * Functionality saga for \"update proxy log level\" actions.\n * @method updateProxyLevel\n * @param  {Object} webRTC The WebRTC stack.\n * @param  {Object} action A \"log level change\" action.\n */\nexport function * updateProxyLevel (webRTC, action) {\n  const { proxyMode } = yield select(getProxyState)\n\n  // If the PROXY log level was changed while in Proxy mode, update the PROXY\n  //    logger on the Remote SDK.\n  if (proxyMode && action.payload.PROXY) {\n    log.info(`Updating proxy log level on the remote end of channel.`)\n    /*\n     * Special-case: The PROXY logger isn't managed by the WebRTC stack's\n     *   log manager, but we pretend that it is. We do this because we need to\n     *   send this \"command\" to the remote end, so we piggy-back on how the\n     *   ProxyStack sends its \"logger commands\" (to update the remote WebRTC\n     *   stack's loggers). The Remote SDK needs to check for this special-case\n     *   to handle this properly. If it doesn't, then this will do nothing.\n     */\n    const logger = yield call([webRTC.managers.logs, 'getLogger'], 'PROXY')\n    yield call([logger, 'setLevel'], action.payload.PROXY)\n  }\n\n  // Same thing as above for the CHANNEL logger.\n  if (proxyMode && action.payload.CHANNEL) {\n    log.info(`Updating channel log level on the remote end of channel.`)\n    const logger = yield call([webRTC.managers.logs, 'getLogger'], 'CHANNEL')\n    yield call([logger, 'setLevel'], action.payload.CHANNEL)\n  }\n}\n","/**\n * Log levels supported by Loggers.\n * When a level is set, all logs of that level and higher will be logged.\n * @type {Object}\n */\nexport const logLevels = {\n  TRACE: 'TRACE',\n  DEBUG: 'DEBUG',\n  INFO: 'INFO',\n  WARN: 'WARN',\n  ERROR: 'ERROR',\n  SILENT: 'SILENT'\n}\n\n/**\n * Numeric values for each log level.\n * When a level is set, all logs of that level and higher will be logged.\n * @type {Object}\n */\nexport const levelValues = {\n  TRACE: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n  SILENT: 5\n}\n\n/**\n * Supported Log methods and their set log level; `<logMethod>: <logLevel>`\n * Used to construct the logging methods on a Logger.\n * @type {Object}\n */\nexport const logMethods = {\n  // Standard methods.\n  trace: logLevels.TRACE,\n  debug: logLevels.DEBUG,\n  info: logLevels.INFO,\n  warn: logLevels.WARN,\n  error: logLevels.ERROR,\n  // Extra console methods.\n  log: logLevels.DEBUG,\n  group: logLevels.DEBUG,\n  groupEnd: logLevels.DEBUG,\n  groupCollapsed: logLevels.DEBUG\n}\n\n/**\n * The log level for all timer methods.\n * @type {string}\n */\nexport const timeLevel = logLevels.DEBUG\n","import createManager from './logManager'\nimport { logLevels as levelImport } from './constants'\n\n/**\n * Package main.\n */\n\n// Main export is the manager's factory function.\nexport default createManager\n\n// Named export for the log level constants the package uses / expects.\nexport const logLevels = levelImport\n","/**\n * Default function for the SDK to use for logging.\n *    Uses entry information to form a prefix, then logs to console.\n * @method defaultLogHandler\n * @param  {LogEntry} entry\n */\nexport default function defaultLogHandler (entry) {\n  // Compile the meta info of the log for a prefix.\n  const { timestamp, level, target } = entry\n  let { method } = entry\n\n  // Find a short name to reference which Logger this log is from.\n  //    This is mostly to cut down the ID if it's too long for a human to read.\n  const shortId = target.id && target.id.length > 8 ? target.id.substring(0, 6) : target.id\n  const shortName = shortId ? `${target.type}/${shortId}` : target.type\n\n  const logInfo = `${timestamp} - ${shortName} - ${level}`\n\n  // Assume that the first message parameter is a string.\n  const [log, ...extra] = entry.messages\n\n  // For the time-related methods, don't actually use the console methods.\n  //    The Logger already did the timing, so simply log out the info.\n  if (method.includes('time')) {\n    method = 'debug'\n  }\n\n  console[method](`${logInfo} - ${log}`, ...extra)\n}\n","import createLogger from './logger'\nimport defaultLogHandler from './logHandler'\nimport { logLevels } from './constants'\nimport { checkLevel, checkHandler } from './validation'\n\nconst defaultType = Symbol('Default')\n\n/**\n * Creates a Log Manager.\n * @method createManager\n * @param  {Object}     [options={}]\n * @param  {Function}   [options.handler]      The default log handler used for\n *    Loggers that don't have a handler set.\n * @param  {string}     [options.level='INFO'] The default log level used for\n *    Loggers that don't have a level set.\n * @return {LogManager}\n */\nexport default function createManager (options = {}) {\n  /*\n   * This log is pointless, but is here to workaround a weird issue in Chrome.\n   * The Chrome console will lag when it is loading the sourcemap for a file.\n   *    Logging from the SDK will force Chrome to load its sourcemap (if its\n   *    not already loaded). So this ensures that /something/ is logged from the\n   *    SDK file as early as possible, to help avoid this lag being visible to\n   *    a developer.\n   */\n  console.debug(`Creating LogManager.`)\n  const loggers = {}\n\n  /**\n   * Mapping between a Logger `type` and their default settings. Created Loggers\n   *    will use their `type` settings if they exist. Otherwise the \"global\"\n   *    options provided during Manager creation.\n   * @type {Object}\n   */\n  const settings = {\n    [defaultType]: {\n      handler: options.handler ? checkHandler(options.handler) : defaultLogHandler,\n      level: options.level ? checkLevel(options.level) : logLevels.INFO\n    }\n  }\n\n  /**\n   * Gets a specific logger. If the logger doesn't exist, a new one will be\n   *    created.\n   * @method getLogger\n   * @param  {string} type Human-readable type/name for the logger.\n   * @param  {string} [id] A unique identifier for the logger.\n   * @return {Logger}\n   */\n  function getLogger (type, id = '') {\n    id = String(id)\n\n    // Combine the name and ID to create the \"full\" logger name.\n    const loggerName = id ? `${type}-${id}` : type\n\n    let logger = loggers[loggerName]\n    // If the logger does not exist, create a new one.\n    if (!logger) {\n      // This logger logs items from a specific \"target\".\n      const target = { type, id, name: loggerName }\n      let options = {\n        level: getLevel(type),\n        handler: getHandler(type)\n      }\n\n      logger = createLogger(target, options)\n\n      // Save the new logger to be returned by future getter cals.\n      loggers[loggerName] = logger\n    }\n\n    return logger\n  }\n\n  /**\n   * Gets all created loggers, or Loggers of a specific type.\n   * @method getLoggers\n   * @param {string} [type] The type of Loggers to retrieve.\n   * @return {Array<Logger>} List of Loggers.\n   */\n  function getLoggers (type) {\n    if (type) {\n      return Object.values(loggers).filter(logger => logger.type === type)\n    } else {\n      return Object.values(loggers)\n    }\n  }\n\n  /**\n   * Sets the default `level` to be used when creating Loggers.\n   *\n   * Can set the level \"globally\" or per `type`, depending if `type` is provided\n   *    or not. When set for a specific type, only Loggers of that type will use\n   *    the set level. When set \"globally\", all Loggers without a set type will\n   *    use the level as a default.\n   *\n   * Setting the level only affects Loggers created after that point.\n   * @method setLevel\n   * @param  {string} type  The type of Logger to set the option for.\n   * @param  {string} level The logLevel to be set.\n   * @throws Throws an error if level is not a valid log level.\n   * @example\n   * const manager = createManager({ level: logLevels.WARN })\n   *\n   * // Setting the level for a type sets it for created Loggers of that type.\n   * manager.setLevel('Call', logLevels.DEBUG)\n   * const logger1 = manager.getLogger('Call')\n   * // logger1.getLevel() === logLevels.DEBUG\n   *\n   * // Loggers created of types without a set level uses the Manager's level.\n   * const logger2 = manager.getLogger('Auth')\n   * // logger2.getLevel() === logLevels.WARN\n   *\n   * // Setting the level without a type changes the Manager's level.\n   * manager.setLevel(logLevels.INFO)\n   * const logger3 = manager.getLogger('Messaging')\n   * // logger3.getLevel() === logLevels.INFO\n   *\n   * // Setting the level for a type does not affect previously created Loggers.\n   * manager.setLevel('Auth', logLevels.INFO)\n   * // logger2.getLevel() !== logLevels.INFO\n   * // logger2.getLevel() === logLevels.WARN\n   */\n  function setLevel (type, level) {\n    // Signature can be: `setLevel(type, level)` or `setLevel(level)`.\n    // Normalize the parameters to always be consistent.\n    if (level === undefined) {\n      level = type\n      type = defaultType\n    }\n\n    // Ensure `settings[type]` is an object.\n    if (!settings[type]) {\n      settings[type] = {}\n    }\n\n    // Set the level.\n    settings[type].level = checkLevel(level)\n  }\n\n  /**\n   * Gets the default `level` that is used when creating Loggers.\n   *\n   * Can get the level used \"globally\" or per `type`, depending if `type` is\n   *    provided or not.\n   *\n   * See the `setLevel` API for setting these values.\n   * See the Logger APIs for getting this value for an already created Logger.\n   * @method getLevel\n   * @param  {string} [type] A type of Logger.\n   * @return {LogLevel}\n   * @example\n   * const manager = createManager({ level: logLevels.WARN })\n   *\n   * // If a type's level has not been set, gets the \"global\" level.\n   * // manager.getLevel('Call') === logLevels.WARN\n   *\n   * // If a type's level has been set, gets its level.\n   * manager.setLevel('Auth', logLevels.DEBUG)\n   * // manager.getLevel('Auth') === logLevels.DEBUG\n   *\n   * // Can get the \"global\" level.\n   * manager.setLevel(logLevels.INFO)\n   * // manager.getLevel() === logLevels.INFO\n   */\n  function getLevel (type) {\n    // Signature can be: `getLevel(type)` or `getLevel()`.\n    // Normalize the parameters to always be consistent.\n    type = type || defaultType\n\n    return (settings[type] && settings[type].level) || settings[defaultType].level\n  }\n\n  /**\n   * Sets the default `handler` to be used when creating Loggers.\n   *\n   * Can set the handler \"globally\" or per `type`, depending if `type` is\n   *    provided or not. When set for a specific type, only Loggers of that type\n   *    will use the set handler. When set \"globally\", all Loggers without a set\n   *    type will use the handler as a default.\n   *\n   * Setting the handler only affects Loggers created after that point.\n   * @method setHandler\n   * @param  {string}     type    The type of Logger to set the option for.\n   * @param  {LogHandler} handler The log handler to be set.\n   * @throws Throws an error if handler is not a function.\n   * @example\n   * const manager = createManager({ handler: managerHandler })\n   *\n   * // Setting the handler for a type sets it for created Loggers of that type.\n   * manager.setHandler('Call', callHandler)\n   * const logger1 = manager.getLogger('Call')\n   * // logger1.getHandler() === callHandler\n   *\n   * // Loggers created of types without a set handler uses the Manager's handler.\n   * const logger2 = manager.getLogger('Auth')\n   * // logger2.getHandler() === managerHandler\n   *\n   * // Setting the handler without a type changes the Manager's handler.\n   * manager.setHandler(newHandler)\n   * const logger3 = manager.getLogger('Messaging')\n   * // logger3.getHandler() === newHandler\n   *\n   * // Setting the handler for a type does not affect previously created Loggers.\n   * manager.setHandler('Auth', authHandler)\n   * // logger2.getHandler() !== authHandler\n   * // logger2.getHandler() === managerHandler\n   */\n  function setHandler (type, handler) {\n    // Signature can be: `setHandler(type, handler)` or `setHandler(handler)`.\n    // Normalize the parameters to always be consistent.\n    if (typeof type === 'function' && handler === undefined) {\n      handler = type\n      type = defaultType\n    }\n\n    // Ensure `settings[type]` is an object.\n    if (!settings[type]) {\n      settings[type] = {}\n    }\n\n    // Set the handler.\n    settings[type].handler = checkHandler(handler)\n  }\n\n  /**\n   * Gets the default `handler` that is used when creating Loggers.\n   *\n   * Can get the handler used \"globally\" or per `type`, depending if `type` is\n   *    provided or not.\n   *\n   * See the `setHandler` API for setting these values.\n   * See the Logger APIs for getting this value for an already created Logger.\n   * @method getHandler\n   * @param  {string} [type] A type of Logger.\n   * @return {LogHandler}\n   * @example\n   * const manager = createManager({ handler: managerHandler })\n   *\n   * // If a type's handler has not been set, gets the \"global\" handler.\n   * // manager.getHandler('Call') === managerHandler\n   *\n   * // If a type's handler has been set, gets its handler.\n   * manager.setHandler('Auth', authHandler)\n   * // manager.getHandler('Auth') === authHandler\n   *\n   * // Can get the \"global\" handler.\n   * manager.setHandler(newHandler)\n   * // manager.getHandler() === newHandler\n   */\n  function getHandler (type) {\n    // Signature can be: `getHandler(type)` or `getHandler()`.\n    // Normalize the parameters to always be consistent.\n    type = type || defaultType\n\n    return (settings[type] && settings[type].handler) || settings[defaultType].handler\n  }\n\n  return {\n    getLogger,\n    getLoggers,\n    setLevel,\n    getLevel,\n    setHandler,\n    getHandler\n  }\n}\n","import { levelValues, logMethods, logLevels, timeLevel } from './constants'\nimport { checkLevel, checkHandler } from './validation'\nimport createTimer from './timer'\n\n/**\n * Creates a Logger.\n * @method createLogger\n * @param  {Object}   target          The subject of the logs from this logger.\n * @param  {Object}   options\n * @param  {Function} options.handler The function to receive/handle log entries.\n * @param  {string}   options.level   The log level to be set.\n * @return {Logger}\n */\nexport default function createLogger (target, options = {}) {\n  // Validate provided options. Do not let invalid options be set.\n  const level = checkLevel(options.level)\n  const handler = checkHandler(options.handler)\n\n  /**\n   * Logger data.\n   * @type {Object}\n   * @property {Object}   target  Metadata about the \"target\" of the Logger.\n   * @property {LogLevel} level   The currently set log level.\n   * @property {Function} handler The currently set Log Handler.\n   */\n  const logger = {\n    target,\n    level,\n    handler\n  }\n\n  /**\n   * Currying function to dynamically create the Logger's logging methods.\n   * @method logFunc\n   * @param  {string} method   Name of the logger method to create.\n   * @param  {string} logLevel The log level for the method.\n   * @param  {Object} [injectables] Other values to include in the LogEntry.\n   * @return {Function} A log method.\n   */\n  function logFunc (method, logLevel, injectables) {\n    /*\n     * Return the function that will be used as `log.<method>`.\n     */\n    return function (...args) {\n      // Compare the logged level and the configured level.\n      const shouldLog = levelValues[logLevel] >= levelValues[logger.level]\n      // If this entry shouldn't be logged, don't do anything.\n      if (!shouldLog) {\n        return\n      }\n\n      // Create the Log Entry to be handed off to the handler.\n      const entry = {\n        // Extra data to be added to the LogEntry.\n        ...injectables,\n        // Meta-info about the log.\n        method,\n        timestamp: Date.now(),\n        level: logLevel,\n        target: logger.target,\n        // The actual arguments logged.\n        messages: [...args]\n      }\n\n      logger.handler(entry)\n    }\n  }\n\n  /**\n   * Sets the Logger's current log level.\n   * @method setLevel\n   * @param  {string} level The logLevel to be set.\n   * @throws Throws an error if level is not a valid log level.\n   * @example\n   * logger.setLevel(logLevels.INFO)\n   * logger.info('This will be logged.')\n   * logger.debug('This will not be logged.')\n   */\n  function setLevel (level) {\n    logger.level = checkLevel(level)\n  }\n\n  /**\n   * Gets the Logger's current log level.\n   * @method getLevel\n   * @return {string} The log level.\n   * @example\n   * logger.setLevel(logLevels.DEBUG)\n   * const level = logger.getLevel()\n   * // level === logLevels.DEBUG\n   */\n  function getLevel () {\n    return logger.level\n  }\n\n  /**\n   * Sets the Logger's current log handler.\n   * @method setHandler\n   * @param  {Function} handler The log handler to be set.\n   * @throws Throws an error if handler is not a function.\n   * @example\n   * const logger = manager.getLogger('Test', '123')\n   * logger.setHandler((logEntry) => {\n   *    console.log(logEntry.target.name, ...logEntry.messages)\n   * })\n   * logger.info('I am a logged message.')\n   * // logs: \"Test-123 I am a logged message.\"\n   */\n  function setHandler (handler) {\n    logger.handler = checkHandler(handler)\n  }\n\n  /**\n   * Gets the Logger's current log handler.\n   * @method getHandler\n   * @return {Function} The log handler.\n   * @example\n   * logger.setHandler(customHandler)\n   * const handler = logger.getHandler()\n   * // handler === customHandler.DEBUG\n   */\n  function getHandler () {\n    return logger.handler\n  }\n\n  const api = {\n    getHandler,\n    setHandler,\n    getLevel,\n    setLevel,\n    get type () {\n      return logger.target.type\n    },\n    get id () {\n      return logger.target.id\n    },\n    get name () {\n      return logger.target.name\n    }\n  }\n\n  // For all supported log methods, create a function on the Logger for it.\n  for (let method in logMethods) {\n    api[method] = logFunc(method, logMethods[method])\n  }\n\n  // Create log functions for the Timer to use.\n  // Follows the same style as above logMethods, but curries it once more\n  //    to align the timer parameters as needed.\n  const timeLog = (message, data) => logFunc(data.event, timeLevel, { timer: data })(message)\n  const timeWarn = (message, data) => logFunc('warn', logLevels.WARN, { timer: data })(message)\n  const timer = createTimer(timeLog, timeWarn)\n\n  return {\n    ...api,\n    ...timer\n  }\n}\n","import { checkHandler } from './validation'\n\n/**\n * Timer factory function.\n * The Timer imitates the Console's Time APIs.\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/console#Timers\n * @method createTimer\n * @param  {Function} log  Function for logging timer information.\n * @param  {Function} warn Function for warning about timer misuse.\n * @return {Timer}\n */\nexport default function createTimer (log, warn) {\n  // Validate that params are a function.\n  //    Uses funtions as `log(message, data)`.\n  checkHandler(log)\n  checkHandler(warn)\n\n  /**\n   * Mapping of on-going timers; <name>: <start>.\n   * @type {Object}\n   */\n  const timers = {}\n\n  /**\n   * Starts a timer. Logs a message to indicate it was started.\n   * Logs a warning if the timer has already been started.\n   * @method timeStart\n   * @param  {string} name Name to identify the timer.\n   */\n  function time (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'time',\n      name\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      data.start = timers[name]\n      warn(`Timer ${name} already started.`, data)\n    } else {\n      // Set the new timer.\n      timers[name] = now\n\n      data.start = now\n      log(`Timer ${name} started.`, data)\n    }\n  }\n\n  /**\n   * Ends a timer. Logs a message with the elapsed time.\n   * @method timeEnd\n   * @param  {string} name Name to identify the timer.\n   */\n  function timeEnd (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'timeEnd',\n      name,\n      start: timers[name]\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      const start = timers[name]\n      // End the timer.\n      delete timers[name]\n\n      const elapsed = now - start\n      data.end = now\n      data.elapsed = elapsed\n\n      log(`Timer ${name} ended, taking ${elapsed}ms.`, data)\n    } else {\n      warn(`Timer ${name} has not been started.`, data)\n    }\n  }\n\n  /**\n   * Adds a split to the timer. Logs a message with the elapsed time so far.\n   * Logs a warning if the timer has not been started.\n   * @method timeSplit\n   * @param  {string} name Name to identify the timer.\n   */\n  function timeLog (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'timeLog',\n      name,\n      start: timers[name]\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      const elapsed = now - timers[name]\n      data.split = now\n      data.elapsed = elapsed\n\n      log(`Timer ${name} split, at ${elapsed}ms so far.`, data)\n    } else {\n      warn(`Timer ${name} has not been started.`, data)\n    }\n  }\n\n  return {\n    time,\n    timeEnd,\n    timeLog\n  }\n}\n","import { logLevels } from './constants'\n\n/**\n * Helper function to validate a \"log level\" string before its used in the library.\n * @method checkLevel\n * @param  {string} level A log level provided by a user.\n * @return {string}       The log level as expected by the library.\n * @throws Will throw an error if the `level` parameter is invalid.\n */\nexport function checkLevel (level) {\n  // Ensure: is defined and is a string.\n  const upperLevel = level && level.toUpperCase && level.toUpperCase()\n\n  // Ensure: is a supported log level.\n  if (upperLevel && logLevels[upperLevel]) {\n    return logLevels[upperLevel]\n  } else {\n    throw new Error('Provided level is not a valid log level.')\n  }\n}\n\n/**\n * Helper function to validate a \"log handler\".\n * Basically just \"is function\" that throws an error if false.\n * @method checkHandler\n * @param  {Function} handler A log handler function, ideally.\n * @return {Function}         The same log handler function, ideally.\n * @throws Will throw an error if the `handler` provided is not a function.\n */\nexport function checkHandler (handler) {\n  if (handler && typeof handler === 'function') {\n    return handler\n  } else {\n    throw new Error('Provided log handler is not a function.')\n  }\n}\n","import { PEER } from '../constants'\n\n/**\n * Configuration object for a Peer.\n * @typedef {Object} PeerConfig\n * @property {Object} [rtcConfig] Configuration for the native RTCPeerConnection.\n * @property {String} [trickleIceMode=FULL] The initial mode the Peer will use when receiving ICE candidates.\n * @property {Boolean} [removeBundling=false] Remove the a=group attribute to stop media bundling\n * @property {Function} [halfTrickleThreshold] Function that determines whether the threshold has been met when in HALF trickle mode.\n * @property {Number} [iceCollectionDelay=1000] The time (in ms) between ICE collection checks.\n * @property {Number} [maxIceTimeout=3000] Duration (in ms) that the Peer should wait for ICE candidate collection.\n * @property {Function} [iceCollectionCheck] The function to check whether enough ICE candidates\n *    have been collected to continue with negotiation. Must return a boolean value.\n */\nexport default {\n  rtcConfig: {\n    sdpSemantics: PEER.SDP_SEMANTICS.PLAN_B\n  },\n  trickleIceMode: PEER.TRICKLE_ICE.FULL,\n  removeBundling: false,\n  halfTrickleThreshold: isPassedHalfTrickleThreshold,\n  iceCollectionDelay: 1000,\n  maxIceTimeout: 3000,\n  iceCollectionCheck: iceCollectionCheck\n}\n\n/**\n * Default function for determining whether the HALF trickle ICE threshold has\n *    been met, to start trickling ICE candidates.\n * Defines the threshold as one relay candidate being gathered.\n * @method isPassedHalfTrickleThreshold\n * @param  {String}             sdp          The local SDP of the Peer.\n * @param  {RTCIceCandidate}    iceCandidate The native candidate object that triggered this check.\n * @param  {Number}             time         The amount of time (ms) since ICE collection began.\n * @return {Boolean} Whether the \"half trickle\" threshold has been passed.\n */\nfunction isPassedHalfTrickleThreshold ({ sdp, iceCandidate, time }) {\n  const passedHalf = iceCandidate.candidate.indexOf('relay') !== -1\n  return passedHalf\n}\n\n/**\n * Default function to determine if the ice candidates is enough to negotiate.\n * We assume that: at least one relay candidate is good enough to try negotiation.\n * @method iceCollectionCheck\n * @param {Array<RTCIceCandidate>} iceCandidates List of collected ICE candidates.\n * @return {Boolean} Whether the ice Candidates is enough for negotiation.\n */\nfunction iceCollectionCheck (iceCandidates) {\n  return iceCandidates.some(candidate => candidate.type === 'relay')\n}\n","import { PEER } from '../../constants'\n\n/**\n * Event wrapper for `icecandidate` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicecandidate\n * @method onicecandidate\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onicecandidate (listener) {\n  const { nativePeer, proxyPeer, config, iceTimer, emitter, iceCandidates, log } = this\n\n  /**\n   * Intercept the PeerConnection onicecandidate event.\n   * Handle the candidate as defined by the current trickle ICE mode config.\n   * Trickle ICE scenarios:\n   *   - FULL: Trickle.\n   *   - HALF, pre-half: Wait for \"half\" or null candidate.\n   *   - HALF, post-half: Trickle.\n   *   - NONE: Wait for null candidate.\n   */\n  nativePeer.onicecandidate = event => {\n    log.debug(\n      `ICE candidate received (trickling?: ${config.trickleIceMode === PEER.TRICKLE_ICE.FULL}): `,\n      event.candidate\n    )\n\n    // Keep track of all candidates gathered by this collection process.\n    if (event.candidate !== null) {\n      iceCandidates.push(event.candidate)\n    }\n\n    if (config.trickleIceMode === PEER.TRICKLE_ICE.FULL) {\n      // If trickling is enabled, emit an event for every ICE candidate. The\n      //    Peer is already ready for negotiation at this point.\n      if (event.candidate) {\n        // Only trickle non-null (ie. actual) candidates.\n        listener(event)\n      }\n    } else if (event.candidate === null) {\n      // If we received the last candidate (null), then gathering is done and\n      //    Peer is ready for negotiation (no matter the scenario).\n      log.debug('ICE collection process complete; ready for negotiation.')\n\n      // Clear the candidate array without redefining it (it's a const).\n      iceCandidates.length = 0\n\n      emitter.emit('onnegotiationready')\n    } else if (config.trickleIceMode === PEER.TRICKLE_ICE.HALF) {\n      // For half trickle, only start trickling after a certain threshold.\n      //    Peer will be considered ready for negotiation after that point.\n      const haveHalf = config.halfTrickleThreshold({\n        sdp: proxyPeer.localDescription.sdp,\n        iceCandidate: event.candidate,\n        time: iceTimer.timeFromStart()\n      })\n\n      if (haveHalf) {\n        log.debug('Half ICE collection process complete; ready for negotiation.')\n        config.trickleIceMode = PEER.TRICKLE_ICE.FULL\n        emitter.emit('onnegotiationready')\n      } else {\n        log.debug(\"Peer's half trickle threshold not reached.\")\n      }\n    }\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `iceconnectionstatechange` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/oniceconnectionstatechange\n * @method oniceconnectionstatechange\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function oniceconnectionstatechange (listener) {\n  const { nativePeer, log } = this\n\n  nativePeer.oniceconnectionstatechange = function (event) {\n    log.debug(`Peer received iceconnectionstatechange event: ${nativePeer.iceConnectionState}`)\n    listener(event)\n  }\n\n  return true\n}\n","import { PEER } from '../../constants'\n\n/**\n * Event wrapper for `icegatheringstatechange` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicegatheringstatechange\n * @method onicegatheringstatechange\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onicegatheringstatechange (listener) {\n  const { nativePeer, iceTimer, log } = this\n\n  /**\n   * Intercept the PeerConnection onicegatheringstatechange event.\n   * Time how long ICE collection takes and handles scenarios when it takes\n   *    too long.\n   */\n  nativePeer.onicegatheringstatechange = event => {\n    const gatheringState = event.target.iceGatheringState\n    log.debug(`Peer iceGatheringState changed to ${gatheringState}.`)\n\n    if (gatheringState === PEER.ICE_GATHERING_STATE.GATHERING) {\n      iceTimer.start()\n      // TODO: Handle \"ICE collection taking too long\" scenario.\n    } else if (gatheringState === PEER.ICE_GATHERING_STATE.COMPLETE) {\n      log.debug(`Peer took ${iceTimer.timeFromStart()}ms to collect ICE candidates.`)\n      iceTimer.stop()\n    }\n    // Bubble the event up.\n    listener(event)\n  }\n\n  return true\n}\n","import onicecandidate from './icecandidate'\nimport oniceconnectionstatechange from './iceconnectionstatechange'\nimport onicegatheringstatechange from './icegatheringstatechange'\nimport onnegotiationneeded from './negotiationneeded'\nimport onsignalingstatechange from './signalingstatechange'\nimport ontrack from './track'\n\nexport default {\n  onicecandidate,\n  oniceconnectionstatechange,\n  onicegatheringstatechange,\n  onnegotiationneeded,\n  onsignalingstatechange,\n  ontrack\n}\n","/**\n * Event wrapper for `negotiationneeded` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onnegotiationneeded\n * @method onnegotiationneeded\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onnegotiationneeded (listener) {\n  const { nativePeer, log } = this\n\n  nativePeer.onnegotiationneeded = function (event) {\n    log.debug(`Peer received negotiationneeded event.`)\n    listener(event)\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `signalingstatechange` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onsignalingstatechange\n * @method onsignalingstatechange\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onsignalingstatechange (listener) {\n  const { nativePeer, log } = this\n\n  nativePeer.onsignalingstatechange = function (event) {\n    log.debug(`Peer received signalingstatechange event: ${nativePeer.signalingState}`)\n    listener(event)\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `track` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/ontrack\n * @method ontrack\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function ontrack (listener) {\n  const { nativePeer, trackManager, log } = this\n\n  nativePeer.ontrack = event => {\n    /**\n     * transceiver: The RTCRtpTransceiver for this remote track. (Available in unified-plan)\n     * receiver: The RTCRtpReceiver for this remote track.\n     * track: The remote MediaStreamTrack.\n     * streams: Array of MediaStreams the track is in.\n     */\n    // event object contains transceiver which already has track attached to its receiver\n    const { track: nativeTrack, streams } = event\n\n    // When remote side adds track on a previously unused transceiver sender via `replaceTrack`,\n    //  a stream is not associated with it so we get no stream here.\n    // So we create our own stream here.\n    // In the future, support will be available for `sender.setStreams` on the remote side\n    //  so this is a temporary workaround.\n    let targetStream\n    if (streams.length === 0) {\n      targetStream = new MediaStream([nativeTrack])\n    } else {\n      targetStream = streams[0]\n    }\n\n    // Convert the native MediaStreamTrack into a Track object.\n    const track = trackManager.add(nativeTrack, targetStream)\n\n    log.debug(`Peer received ${nativeTrack.kind} Track ${track.id}.`)\n    listener(track)\n  }\n\n  return true\n}\n","/*\n * Wrapper imports.\n * Events, methods, and properties that we want to wrap/add to the native Peer.\n */\nimport events from './events'\nimport methods from './methods'\nimport properties from './properties'\n\nimport { mergeValues } from '../utils'\nimport defaults from './config'\nimport { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\nimport { createTimer } from './utils/timer'\n\n/**\n * Create a Proxied Peer.\n * This Peer is a native PeerConnection that has had some new functionality\n *    added and some existing functionality \"augmented\". Where an event, a\n *    method, or a property has been defined (see folders), we intercept/add\n *    that functionality.\n * @method peer\n * @return {Peer}\n */\nexport default function peer (id, config = {}, trackManager) {\n  const log = logManager.getLogger('Peer', id)\n  config = mergeValues(defaults, config)\n  log.info(`Creating new Peer.`)\n\n  const iceTimer = createTimer()\n  const emitter = new EventEmitter()\n\n  // Create the native Peer.\n  log.debug(`Creating native PeerConnection.`, config.rtcConfig)\n  const nativePeer = new RTCPeerConnection(config.rtcConfig, { optional: [{ googDscp: true }] })\n\n  // Add the event emitter methods to the wrapped methods as well.\n  const customMethods = {\n    ...methods,\n    on: emitter.on.bind(emitter),\n    off: emitter.off.bind(emitter),\n    once: emitter.once.bind(emitter)\n  }\n\n  /**\n   * The Peer model.\n   * @typedef {Peer}\n   * @property {RTCPeerConnection} peer     The native PeerConnection.\n   * @property {string}            id       The unique identifier for the Peer.\n   * @property {boolean}           dtlsRole The DTLS role selected for this PeerConnection. Set after the initial negotiation is completed.\n   * @property {Object}            trackManager Manager that tracks all MediaStreamTracks.\n   * @property {Object}            log      Logger specific to this Peer.\n   * @property {Object}            iceTimer Timer tool (specifically for ICE collection).\n   * @property {EventEmitter}      emitter\n   * @property {Array<RTCIceCandidate>} iceCandidates Gathered candidates.\n   */\n  const base = {\n    nativePeer,\n    proxyPeer: undefined,\n    id,\n    dtlsRole: null,\n    config,\n    trackManager,\n    log,\n    iceTimer,\n    emitter,\n    iceCandidates: []\n  }\n\n  /**\n   * Create the Proxy object that will be used as the PeerConnection.\n   *\n   * This will intercept all `get` and `set` operations and either forward them\n   *    directly to the real PeerConnection or to our wrapped operations.\n   * This allows us to shim part or all of the PeerConnection's API. We can\n   *    decide which operations we want to intercept while allowing others to\n   *    pass through unchanged.\n   */\n  base.proxyPeer = new Proxy(base, {\n    /**\n     * Intercept \"get\" calls on the Proxy.\n     * This function is called anytime a property on `base` is accessed,\n     *    eg. `base.someProp`\n     * @param {Object} target    base\n     * @param {string} prop      Property being accessed.\n     * @param {Object} receiver  The Proxy object.\n     */\n    get: function (target, prop, receiver) {\n      if (typeof base.nativePeer[prop] === 'function') {\n        /*\n         * If a function is being accessed, determine whether we want to\n         *    return the native function or our own.\n         */\n        if (Object.keys(customMethods).includes(prop)) {\n          // Return our wrapped version of the original function.\n          return customMethods[prop].bind(base)\n        } else {\n          // Return the original function, bound to have the original context.\n          return base.nativePeer[prop].bind(base.nativePeer)\n        }\n      } else if (customMethods[prop] && typeof customMethods[prop] === 'function') {\n        /*\n         * If a non-native function is being accessed, return our custom method.\n         * These are methods that are not on the native RTCPeerConnection\n         *    object, but we added to the old Peer model.\n         */\n        // TODO: Move all of this functionality to a higher level of abstraction.\n        return customMethods[prop].bind(base)\n      } else if (properties[prop]) {\n        /*\n         * If a PeerConnection property is being accessed, and we have a\n         *    wrapping for it, return our wrapper property.\n         */\n        if (typeof properties[prop] === 'function') {\n          // If our property wrapper is a function, call the function and return\n          //    the results.\n          return properties[prop].bind(base)()\n        } else {\n          // Otherwise, just return the original results.\n          return base.nativePeer[prop]\n        }\n      } else if (prop !== 'nativePeer' && base[prop]) {\n        /*\n         * If a Peer model property, other than the peer, is being accessed,\n         *    return it. The Peer model shouldn't have any properties that the\n         *    PeerConnection also has (to avoid conflicts).\n         */\n        return base[prop]\n      } else {\n        // Otherwise, return the property from the PeerConnection itself.\n        return base.nativePeer[prop]\n      }\n    },\n\n    /**\n     * Intercept \"set\" calls on the Proxy.\n     * This function is called anytime a property on `base` is assigned,\n     *    eg. `base.someProp = value`\n     * @method\n     * @param  {Object} target   base\n     * @param  {string} prop     Property being set.\n     * @param  {Any}    value    The value being set.\n     * @param  {Proxy}  receiver The Proxy object.\n     * @return {boolean}         Whether the assignment succeeded or not.\n     */\n    set: function (target, prop, value, receiver) {\n      if (events[prop]) {\n        // If a value is being set on one of our \"wrapped events\", then call\n        //    the \"event function\".\n        return events[prop].bind(base)(value)\n      } else if (prop === 'dtlsRole') {\n        /**\n         * Only allow the `dtlsRole` property of the Peer model be set. The\n         *    Session needs to be able to get/set this property, in the case\n         *    where it recreates the Peer multiple times, so it needs to set the\n         *    role to something specific.\n         * Reference: KAA-1816\n         */\n        base.dtlsRole = value\n        return true\n      } else {\n        // Otherwise, try to set the value on the native Peer.\n        return Reflect.set(base.nativePeer, prop, value)\n      }\n    }\n  })\n\n  /**\n   * For event debugging purposes, start with a dummy listener for every event.\n   *    This ensures our Proxy is listening for the events (in the case nothing\n   *    else is listening), so that debug information from the event wrappers\n   *    are logged.\n   */\n  for (let eventName in events) {\n    base.proxyPeer[eventName] = () => {}\n  }\n\n  return base.proxyPeer\n}\n","/**\n * Add an ICE candidate to the connection.\n * @method addIceCandidate\n * @param  {RTCIceCandidate} candidate A native candidate object.\n * @return {Promise} Resolves when the candidate is successfully added.\n */\nexport default function addIceCandidate (candidate) {\n  const { nativePeer, proxyPeer, id, log } = this\n  log.info(`Adding ICE candidate.`)\n\n  return new Promise((resolve, reject) => {\n    if (proxyPeer.remoteDescription.type && proxyPeer.remoteDescription.sdp) {\n      nativePeer\n        .addIceCandidate(candidate)\n        .then(resolve)\n        .catch(reject)\n    } else {\n      log.info(`Cannot set remote ICE candidate without a remote description.`)\n      // TODO: Better error.\n      reject(new Error(`Peer ${id} cannot set remote ICE candidate without a remote description.`))\n    }\n  })\n}\n","/**\n * Add a Track to the connection.\n * @method addTrack\n * @param  {Track} track A Track object.\n * @return {RTCRtpSender}\n */\nexport default function addTrack (track) {\n  const { nativePeer, log } = this\n  log.info(`Adding new ${track.track.kind} track.`)\n\n  let sender\n  try {\n    sender = nativePeer.addTrack(track.track, track.getStream())\n  } catch (err) {\n    // TODO: Better error handling.\n    log.info(`Failed to add track: ${err.message}`)\n  }\n  // TODO: What to return here? Probably shouldn't expose the rtpSender itself.\n  return sender\n}\n","/**\n * Clean the Peer by closing the RTCPeerConnection.\n * @method close\n */\nexport default function close () {\n  const { nativePeer, id, emitter, log } = this\n  log.info(`Closing Peer.`)\n\n  nativePeer.close()\n  emitter.emit('peer:closed', id)\n}\n","import { PEER } from '../../constants'\n\nimport { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\nimport { runPipeline } from '../../sdpUtils/pipeline'\nimport { removeTrickleIce, removeBundling, changeMediaDirection, preventDtlsRoleChange } from '../../sdpUtils/handlers'\n\n/**\n * Creates an SDP answer, given that a remote offer has been set.\n * @method createAnswer\n * @param  {RTCAnswerOptions} [options={}] Options used to customize the answer.\n * @param  {Object} [options.mediaDirections] Directions to use for media.\n * @param  {string} [options.mediaDirections.audio]\n * @param  {string} [options.mediaDirections.video]\n * @return {Promise} Resolves with the answer.\n */\nexport default function createAnswer (options = {}) {\n  const { nativePeer, config, dtlsRole, log } = this\n  log.info(`Creating local answer.`)\n\n  // If using unified-plan, remove options.mediaDirections.\n  // This is because directions are now set in transceivers.\n  if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n    delete options.mediaDirections\n  }\n\n  return new Promise((resolve, reject) => {\n    nativePeer\n      .createAnswer(options)\n      .then(answer => {\n        const sdpHandlers = []\n\n        /*\n         * Always include the `preventDtlsRoleChange` handler. This ensures\n         *    that the SDP's DTLS role does not change during a renegotiation.\n         */\n        sdpHandlers.push(preventDtlsRoleChange)\n\n        if (config.trickleIceMode === PEER.TRICKLE_ICE.NONE) {\n          // Modify the answer to claim the Peer doesn't support trickle ICE.\n          sdpHandlers.push(removeTrickleIce)\n        }\n        if (config.removeBundling) {\n          // Modify the offer to remove media bundling\n          sdpHandlers.push(removeBundling)\n        }\n        if (options.mediaDirections) {\n          // Modify the answer to set media directions as desired.\n          sdpHandlers.push(changeMediaDirection(options.mediaDirections))\n        }\n        if (sdpHandlers.length > 0) {\n          // Run the SDP pipeline with only these handlers.\n          answer.sdp = runPipeline(sdpHandlers, answer.sdp, {\n            type: answer.type,\n            endpoint: PEER.ENDPOINT.LOCAL,\n            dtlsRole: dtlsRole\n          })\n        }\n\n        log.info(`Finished creating local answer.`)\n        resolve(answer)\n      })\n      .catch(reject)\n  })\n}\n","import { PEER } from '../../constants'\n\nimport { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\nimport { runPipeline } from '../../sdpUtils/pipeline'\nimport { removeTrickleIce, removeBundling, changeMediaDirection } from '../../sdpUtils/handlers'\n\n/**\n * Creates an SDP offer.\n * @method createOffer\n * @param  {RTCOfferOptions} [options={}] Options used to customize the offer.\n * @param  {Object} [options.mediaDirections] Directions to use for media.\n * @param  {string} [options.mediaDirections.audio]\n * @param  {string} [options.mediaDirections.video]\n * @return {Promise} Resolves with the offer.\n */\nexport default function createOffer (options = {}) {\n  const { nativePeer, config, log } = this\n  log.info(`Creating local offer.`)\n\n  // If using unified-plan, remove options.mediaDirections.\n  // This is because directions are now set in transceivers.\n  if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n    delete options.mediaDirections\n  }\n\n  return new Promise((resolve, reject) => {\n    nativePeer\n      .createOffer(options)\n      .then(offer => {\n        const sdpHandlers = []\n        if (config.trickleIceMode === PEER.TRICKLE_ICE.NONE) {\n          // Modify the offer to claim the Peer doesn't support trickle ICE.\n          sdpHandlers.push(removeTrickleIce)\n        }\n        if (config.removeBundling) {\n          // Modify the offer to remove media bundling\n          sdpHandlers.push(removeBundling)\n        }\n        if (options.mediaDirections) {\n          // Modify the offer to set media directions as desired.\n          sdpHandlers.push(changeMediaDirection(options.mediaDirections))\n        }\n        if (sdpHandlers.length > 0) {\n          // Run the SDP pipeline with only these handlers.\n          offer.sdp = runPipeline(sdpHandlers, offer.sdp, {\n            type: offer.type,\n            endpoint: PEER.ENDPOINT.LOCAL\n          })\n        }\n\n        log.info(`Finished creating local offer.`)\n        resolve(offer)\n      })\n      .catch(reject)\n  })\n}\n","import { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\n\n/**\n * Finds a transceiver that can be reused.\n * A transceiver can be reused if it satisfies the following conditions:\n *   - it does not have a track on its sender\n *   - it has the same kind (audio or video) as what we specified\n *   - it has been used before (if it has not been used then we are not \"reusing\" it)\n * @method findReusableTransceiver\n * @param {string} kind The kind of transceiver to find (audio or video)\n * @returns {Object} Transceiver object that matches kind, has no sender track, and has currentDirection. Otherwise undefined.\n */\nexport default function findReusableTransceiver (kind) {\n  const { proxyPeer, config } = this\n\n  if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n    const transceivers = proxyPeer.getTransceivers()\n    return transceivers.find(\n      transceiver =>\n        transceiver.sender.track == null &&\n        transceiver.receiver &&\n        transceiver.receiver.track &&\n        transceiver.receiver.track.kind === kind &&\n        transceiver.currentDirection // If this has been set, then transceiver has been used before.\n    )\n  }\n}\n","/**\n * Retrieve a snapshot of the Peer object's current state.\n * @method getState\n * @return {Object}\n */\nexport default function getState () {\n  const { proxyPeer, config, id } = this\n\n  return {\n    id,\n    config: config,\n    localDesc: proxyPeer.localDescription,\n    signalingState: proxyPeer.signalingState,\n    localTracks: proxyPeer.localTracks,\n    remoteTracks: proxyPeer.remoteTracks,\n    senderTracks: proxyPeer.senderTracks\n  }\n}\n","/**\n * Retrieve RTCStatsReport for a sender or the peerConnection.\n * @method getStats\n * @param {string} [TrackId] Return stats for peerConnection if trackId is not provided\n * @return {Promise} Resolves with the RTCStatsReport\n */\nexport default function getStats (trackId) {\n  const { nativePeer, proxyPeer, log } = this\n  log.info(`Getting stats ${trackId ? 'for track.' : '.'}`)\n  // If no trackId is supplied, get the stats from the RTCPeerConnection. Otherwise, find an RTCSender\n  // associated with the trackId and get the stats from it.\n\n  // Use the trackId if it was provided\n  if (trackId) {\n    return new Promise((resolve, reject) => {\n      const senders = proxyPeer.getSenders()\n      // search for a sender associated with the trackId\n      const sender = senders.find(sender => sender.track.id === trackId)\n      if (sender) {\n        sender\n          .getStats()\n          .then(resolve)\n          .catch(reject)\n      } else {\n        const errMsg = `Cannot find sender with trackId: ${trackId}`\n        log.info(errMsg)\n        reject(new Error(errMsg))\n      }\n    })\n  } else {\n    // get the stats associated with the peerConnection if no trackId is supplied\n    return nativePeer.getStats()\n  }\n}\n","import addIceCandidate from './addIceCandidate'\nimport addTrack from './addTrack'\nimport close from './close'\nimport createAnswer from './createAnswer'\nimport createOffer from './createOffer'\nimport findReusableTransceiver from './findReusableTransceiver'\nimport getState from './getState'\nimport getStats from './getStats'\nimport removeTrack from './removeTrack'\nimport replaceTrack from './replaceTrack'\nimport sendDTMF from './sendDTMF'\nimport setLocalDescription from './setLocalDescription'\nimport setRemoteDescription from './setRemoteDescription'\nimport setTransceiversDirection from './setTransceiversDirection'\n\nconst methods = {\n  addIceCandidate,\n  addTrack,\n  close,\n  createAnswer,\n  createOffer,\n  findReusableTransceiver,\n  getState,\n  getStats,\n  removeTrack,\n  replaceTrack,\n  sendDTMF,\n  setLocalDescription,\n  setRemoteDescription,\n  setTransceiversDirection\n}\n\nexport default methods\n","/**\n * Remove a Track from the connection.\n * @method removeTrack\n * @param  {string} trackId An id for a Track object.\n */\nexport default function removeTrack (trackId) {\n  const { nativePeer, proxyPeer, log } = this\n  log.info(`Removing track ${trackId}.`)\n\n  const track = proxyPeer.senderTracks.find(track => track.id === trackId)\n  if (!track) {\n    log.info(`Invalid track ID ${trackId}; no such track found.`)\n    return\n  } else if (proxyPeer.signalingState === ' closed') {\n    log.info(`Peer is closed; cannot remove track.`)\n    return\n  }\n\n  // Get the RtpSender for the Track we want to remove.\n  const sender = proxyPeer\n    .getSenders()\n    .filter(sender => sender.track !== null)\n    .find(sender => sender.track.id === trackId)\n  nativePeer.removeTrack(sender)\n}\n","import { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\n\n/**\n * Replaces a specified transceiver's sender.track.\n * @method replaceTrack\n * @param {Object} newTrack The MediaStreamTrack we want to place into the sender.\n * @param {Object} options Options for specifying which transceiver's sender should be replaced. They are ordered by priority.\n * @param {Array} [options.trackId] The track id whose transceivers we want to set the direction of.\n * @return {Object} A Promise object which is fulfilled once the track has been replaced\n */\nexport default function replaceTrack (newTrack, options) {\n  const { proxyPeer, config, log } = this\n  log.info(`Replacing track ${options.trackId} with new ${newTrack.kind} track.`)\n\n  return new Promise((resolve, reject) => {\n    let sender\n    if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n      // Find the transceiver related to the provided track ID.\n      const targetTransceiver = proxyPeer\n        .getTransceivers()\n        .find(transceiver => transceiver.sender.track && transceiver.sender.track.id === options.trackId)\n\n      sender = targetTransceiver ? targetTransceiver.sender : undefined\n    } else {\n      sender = proxyPeer.getSenders().find(sender => sender.track.id === options.trackId)\n    }\n\n    if (sender) {\n      sender\n        .replaceTrack(newTrack)\n        .then(resolve)\n        .catch(error => {\n          log.info(`Failed to replace track; ${error.message}`)\n          reject(error)\n        })\n    } else {\n      log.info(`Failed to replace track; could not find track ${options.trackId}.`)\n      reject(new Error(`Sender for track ${options.trackId} not found.`))\n    }\n  })\n}\n","/**\n * Send DTMF tones.\n * @method sendDTMF\n * @param {Object} DTMFOptions The DTMF options.\n * @param {string} DTMFOptions.tone DTMF tone to send. Valid values are [0,1,2,3,4,5,6,7,8,9,#].\n * @param {number} DTMFOptions.duration=100 The amount of time, in milliseconds, that each DTMF tone should last.\n * @param {number} DTMFOptions.intertoneGap=70 The length of time, in milliseconds, to wait between tones.\n * @param {Object} [sendOptions] The send options.\n * @param {func} [sendOptions.callback] Optional callback for tone event .\n * @param {string} [sendOptions.trackId] The trackId of the sender to use.\n * @return {Boolean} Whether the DTMF tones were inserted\n */\nexport default function sendDTMF ({ tone, duration = 100, intertoneGap = 70 }, { callback, trackId }) {\n  const { proxyPeer, log } = this\n  log.info(`Sending DTMF tones.`, tone)\n\n  if (!proxyPeer.getSenders) {\n    log.info(`Failed to send tones; getSenders is not supported by this browser.`)\n    return false\n  }\n  const senders = proxyPeer.getSenders()\n  // Use the trackId if it was provided\n  if (trackId) {\n    let sender = senders.find(sender => sender.track.id === trackId)\n    if (!sender) {\n      log.info(`Failed to send tones; could not find track ${trackId}.`)\n      return false\n    }\n    insertDTMF(sender, tone, duration, intertoneGap, callback, log)\n    return true\n  } else {\n    let result\n    for (let i = 0; i < senders.length; i++) {\n      result = insertDTMF(senders[i], tone, duration, intertoneGap, callback, log)\n      if (result) {\n        return true\n      }\n    }\n\n    log.info(`Failed to send tones; could not find an appropriate track.`)\n    return false\n  }\n}\n\n/**\n * Helper function to sendDTMF tones .\n * @private\n * @method insertDTMF\n * @param {sender} object\n * @param {string} tone\n * @param {number} duration\n * @param {number} intertoneGap\n * @param {Function} callback\n */\nfunction insertDTMF (sender, tone, duration, intertoneGap, callback, log) {\n  /**\n   * Event handler when tone is played.\n   * @private\n   * @method handleToneChangeEvent\n   * @param  {event} event\n   */\n  function handleToneChangeEvent (event) {\n    if (event.tone !== '') {\n      log.debug('Tone played: ' + event.tone)\n    } else {\n      log.debug('All tones have played.')\n    }\n  }\n\n  if (sender.dtmf) {\n    const dtmfSender = sender.dtmf\n    if (callback) {\n      dtmfSender.ontonechange = callback\n    } else {\n      dtmfSender.ontonechange = handleToneChangeEvent\n    }\n    try {\n      dtmfSender.insertDTMF(tone, duration, intertoneGap)\n      return true\n    } catch (err) {\n      log.debug(err.message)\n      return false\n    }\n  } else {\n    log.debug('The sender requires DTMF which is not support by this browser.')\n    return false\n  }\n}\n","import { PEER } from '../../constants'\n\n// Utils.\nimport iceCollectionLoop from '../utils/iceCollectionLoop'\n\n/**\n * Sets an SDP as the local description of the connection.\n * The returned Promise will resolve when the Peer is ready for negotiation,\n *    taking into account the Peer's `trickleIceMode` configuration.\n * @method setLocalDescription\n * @param  {RTCSessionDescription} sessionDesc\n * @return {Promise}\n */\nexport default function setLocalDescription (desc) {\n  const { nativePeer, proxyPeer, config, id, emitter, iceTimer, log } = this\n\n  // TODO: SDP pipeline here.\n  log.info(`Setting local description ${desc.type} in ${proxyPeer.signalingState} state.`)\n  log.debug(`Setting local description ${desc.type}:`, desc.sdp)\n\n  /**\n   * Scenario: A local answer SDP is being applied to the Peer, but it does\n   *    not have a selected DTLS role yet. This should occur during initial\n   *    negotiation, before responding with this Peer's answer.\n   * Set the local Peer's DTLS role depending on what role was generated. This\n   *    role will be kept throughout all renegotiations.\n   */\n  if (!this.dtlsRole && desc.type === 'answer') {\n    const dtlsMatch = desc.sdp.match(/a=setup:(\\w*?)[\\r\\n]/)\n    if (dtlsMatch) {\n      log.debug(`Selecting DTLS role ${dtlsMatch[1]}.`)\n      this.dtlsRole = dtlsMatch[1]\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    // We always want to wait for the PeerConnection to be ready for\n    //    negotiation before resolving setLocalDescription.\n    // Each trickle ICE option (FULL/HALF/NONE) emits \"negotiation ready\" event once.\n    emitter.once('onnegotiationready', () => {\n      if (iceTimer.isStarted()) {\n        // In a HALF trickle scenario, the Peer will be ready for negotiation\n        //    before ICE collection has completed. Log that timing.\n        log.debug(`Took ${iceTimer.timeFromStart()}ms to collect ICE candidates before negotiation.`)\n      }\n      resolve()\n    })\n\n    nativePeer\n      .setLocalDescription(desc)\n      .then(() => {\n        log.info(`Finished setting local description.`)\n        log.debug(`State is now ${proxyPeer.signalingState}.`)\n\n        if (config.trickleIceMode === PEER.TRICKLE_ICE.FULL) {\n          // Trickling ICE candidates means that we can begin negotiation immediately.\n          log.debug(`Ready for negotiation (full trickleICE).`)\n          emitter.emit('onnegotiationready')\n        } else {\n          // ICE candidates aren't always gathered (only initially and when something\n          //    changes), but we rely on \"gathering complete\" to know when the Peer is\n          //    ready for negotiation. Give the Peer some time to start gathering\n          //    before deciding if we need to wait for gathering to complete or not.\n          // The timeout is needed because of a bug in Chrome:\n          //    https://bugs.chromium.org/p/webrtc/issues/detail?id=1873\n          // Known issue: If candidate collection takes less time than this timeout,\n          //    the logged message will be incorrect, but will functionally still work.\n          setTimeout(() => {\n            if (proxyPeer.iceGatheringState === 'complete') {\n              // Gathering is \"complete\", so we are ready for negotiation.\n              log.debug(`Ready for negotiation; ICE candidate collection not needed.`)\n              emitter.emit('onnegotiationready')\n            } else {\n              log.debug(`Waiting for ICE collection process (${config.trickleIceMode}).`)\n              // If ICE collection never finishes, we need to time it out at some point.\n              //    Start the timeout-out loop after an initial delay.\n              setTimeout(() => {\n                iceCollectionLoop(this, config.iceCollectionDelay)\n              }, config.iceCollectionDelay)\n            }\n          }, 25)\n        }\n      })\n      .catch(err => {\n        log.info(`Failed to set local description.`)\n        log.debug(`Peer ${id}: ${err}`)\n        // Parse native error. Make it more understand and/or\n        //    provide a better log about what went wrong.\n        reject(err)\n      })\n  })\n}\n","/**\n * Sets an SDP as the remote description of the connection.\n * @method setRemoteDescription\n * @param  {RTCSessionDescription} sessionDesc\n */\nexport default function setRemoteDescription (desc) {\n  const { nativePeer, proxyPeer, id, log } = this\n\n  // TODO: SDP pipeline here.\n  log.info(`Setting remote description ${desc.type} in ${proxyPeer.signalingState} state.`)\n  log.debug(`Setting remote description ${desc.type}:`, desc.sdp)\n\n  /**\n   * Scenario: A remote answer SDP is being applied to the Peer, but it does\n   *    not have a selected DTLS role yet. This should occur only when the\n   *    initial negotiation is being completed.\n   * Set the local Peer's DTLS role depending on what the remote Peer\n   *    selected. This role will be kept throughout all renegotiations.\n   */\n  if (!this.dtlsRole && desc.type === 'answer') {\n    const dtlsMatch = desc.sdp.match(/a=setup:(\\w*?)[\\r\\n]/)\n    if (dtlsMatch) {\n      const localRole = dtlsMatch[1] === 'active' ? 'passive' : 'active'\n      log.debug(`Selecting DTLS role ${localRole}. Remote Peer selected ${dtlsMatch[1]} DTLS role.`)\n      this.dtlsRole = localRole\n    }\n  }\n\n  // TODO: Update `config.trickleIceMode` to either NONE or FULL (from HALF)\n  //    depending on remote support, since HALF is only needed for initial.\n  return new Promise((resolve, reject) => {\n    nativePeer\n      .setRemoteDescription(desc)\n      .then(() => {\n        log.info(`Finished setting remote description.`)\n        log.debug(`State is now ${proxyPeer.signalingState}.`)\n        resolve()\n      })\n      .catch(err => {\n        log.info(`Failed to set remote description.`)\n        log.debug(`Peer ${id}: ${err}`)\n        // Parse native error. Make it more understand and/or\n        //    provide a better log about what went wrong.\n        reject(err)\n      })\n  })\n}\n","import { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\nimport { setTransceiverDirection } from '../../sdpUtils/transceiverUtils'\n\n/**\n * Sets the direction of transceivers.\n * @method setTransceiversDirection\n * @param {string} targetDirection The desired direction to set the transceivers to.\n * @param {Object} [options] Options for specifying which transceivers should be affected. They are ordered by priority.\n * @param {Array} [options.trackIds] The optional list of track ids whose transceivers we want to set the direction of.\n * @return {Object} An object containing an `error` flag and  an array `failures` of transceivers whose directions weren't changed.\n */\nexport default function setTransceiversDirection (targetDirection, options = {}) {\n  const { proxyPeer, config, log } = this\n  log.info(`Setting transceiver direction to ${targetDirection}.`)\n\n  if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n    let transceivers = proxyPeer.getTransceivers()\n\n    if (options.trackIds) {\n      transceivers = transceivers.filter(transceiver => options.trackIds.includes(transceiver.sender.track.id))\n    }\n\n    const failures = []\n    transceivers.forEach(transceiver => {\n      if (!setTransceiverDirection(transceiver, targetDirection)) {\n        failures.push(transceiver)\n      }\n    })\n    return {\n      error: failures.length !== 0,\n      failures\n    }\n  } else {\n    log.info(`Transceiver direction modification is only available in unified-plan.`)\n    return {\n      error: true\n    }\n  }\n}\n","import localDescription from './localDescription'\nimport localTracks from './localTracks'\nimport remoteDescription from './remoteDescription'\nimport remoteTracks from './remoteTracks'\nimport senderTracks from './senderTracks'\n\nexport default { localDescription, localTracks, remoteDescription, remoteTracks, senderTracks }\n","/**\n * The SDP for the local end of the connection.\n * @method getLocalDescription\n */\nexport default function getLocalDescription () {\n  const { nativePeer, log } = this\n  log.info(`Getting local description.`)\n\n  const localDesc = nativePeer.localDescription\n  /*\n   * Ensure it is a RTCSessionDescription object.\n   * In some scenarios (based on browser?), it may return an empty object\n   *    instead of undefined when there is no local description.\n   * TODO: Determine if this is still needed, or if we can use the native\n   *    property directly.\n   */\n  if (localDesc && localDesc.sdp && localDesc.type) {\n    return localDesc\n  } else {\n    return undefined\n  }\n}\n","/**\n * @method getLocalTracks\n * @return {Array} List of active Track objects added to the Peer locally.\n */\nexport default function localTracks () {\n  const { proxyPeer, trackManager, log } = this\n  log.info(`Getting local tracks.`)\n\n  // Return the list of Tracks from active senders.\n  return (\n    proxyPeer\n      .getSenders()\n      /**\n       * Remove any Senders that do not have an associated track.\n       * We only want to retrieve Senders that do have tracks, because those are\n       *    the local tracks that have been added to the Peer.\n       * Senders without tracks are part of a Transceiver where the Receiver has\n       *    a remote track, but no local track has been added to it. We don't\n       *    care about this for the \"get local tracks\" operation.\n       */\n      .filter(sender => Boolean(sender.track))\n      .map(sender => trackManager.get(sender.track.id))\n      .filter(track => {\n        // Make sure the trackManager has the track and that its active.\n        // It's possble that Peer has the sender but not the actual track yet.\n        return track && track.getState().state === 'live' && track.getStream().active\n      })\n  )\n}\n","/**\n * The SDP for the remote end of the connection.\n * @method getRemoteDescription\n */\nexport default function getRemoteDescription () {\n  const { nativePeer, log } = this\n  log.info(`Getting remote description.`)\n\n  const remoteDesc = nativePeer.remoteDescription\n  /*\n   * Ensure it is a RTCSessionDescription object.\n   * In some scenarios (based on browser?), it may return an empty object\n   *    instead of undefined when there is no local description.\n   * TODO: Determine if this is still needed, or if we can use the native\n   *    property directly.\n   */\n  if (remoteDesc && remoteDesc.sdp && remoteDesc.type) {\n    return remoteDesc\n  } else {\n    return undefined\n  }\n}\n","/**\n * @method getRemoteTracks\n * @return {Array} List of active Track objects the Peer has received remotely.\n */\nexport default function getRemoteTracks () {\n  const { proxyPeer, trackManager, log } = this\n  log.info(`Getting remote tracks.`)\n\n  // Return the list of Tracks from active receivers.\n  return (\n    proxyPeer\n      .getReceivers()\n      /**\n       * Remove any Receivers that do not have an associated track.\n       * We only want to retrieve Receivers that do have tracks, because those are\n       *    the remote tracks that have been added to the Peer.\n       * Receivers without tracks are part of a Transceiver where the Sender has\n       *    a local track, but no remote track has been added to it. We don't\n       *    care about this for the \"get remote tracks\" operation.\n       */\n      .filter(receiver => Boolean(receiver.track))\n      .map(receiver => trackManager.get(receiver.track.id))\n      .filter(track => {\n        // Make sure the trackManager has the track and that its active.\n        // It's possble that Peer has the receiver but not the actual track yet.\n        return track && track.getState().state === 'live' && track.getStream().active\n      })\n  )\n}\n","/**\n * This method is similar to the `localTracks` method, however this method returns\n *  all of the sender's tracks (ended or not) rather than just the active/live ones.\n *\n * @method senderTracks\n * @return {Array} List of Track objects added to the Peer locally.\n */\nexport default function senderTracks () {\n  const { proxyPeer, log } = this\n  log.info(`Getting sender tracks.`)\n\n  // Return the list of Tracks from senders.\n  return (\n    proxyPeer\n      .getSenders()\n      /**\n       * Remove any Senders that do not have an associated track.\n       * We only want to retrieve Senders that do have tracks, because those are\n       *    the local tracks that have been added to the Peer.\n       * Senders without tracks are part of a Transceiver where the Receiver has\n       *    a remote track, but no local track has been added to it. We don't\n       *    care about this for the \"get local tracks\" operation.\n       */\n      .filter(sender => Boolean(sender.track))\n      .map(sender => sender.track)\n  )\n}\n","/**\n * Recursive function for checking whether the ICE collection process should\n *    be timed-out.\n *\n * If the ICE collection process does not complete normally (or is just taking\n *    too long), there are two conditions where we want to timeout:\n *      1. ICE candidates collected so far are \"good enough\".\n *      2. We have reached the \"max timeout\".\n *\n * This function checks for these conditions at a configured interval. If either\n *    are met, \"manually\" triggers the \"ready for negotiation\" event.\n * @method iceCollectionLoop\n * @param {Object} proxyBase The \"base\" of the Proxy Peer object.\n * @param {number} elapsedTime The time, in milliseconds, that ICE collection has taken so far.\n */\nexport default function iceCollectionLoop (proxyBase, elapsedTime) {\n  const { proxyPeer, iceCandidates, emitter, config, log } = proxyBase\n\n  // If gathering completed during the delay, we don't need to loop anymore.\n  if (proxyPeer.iceGatheringState === 'complete') {\n    log.debug('ICE collection completed; stopping candidate check loop.')\n    // Gathering completes when the null candidate is received. The \"on\n    //    negotiation ready\" event should be emitted at that time.\n\n    // Clear the candidate array without redefining it (it's a const).\n    iceCandidates.length = 0\n    return\n  }\n\n  const enoughCandidates = config.iceCollectionCheck(iceCandidates)\n  const hasReachedTimeout = elapsedTime >= config.maxIceTimeout\n\n  if (hasReachedTimeout) {\n    log.debug('ICE collection timeout reached; continuing with negotiation.')\n    iceCandidates.length = 0\n    emitter.emit('onnegotiationready')\n  } else if (enoughCandidates) {\n    log.debug('ICE candidates sufficient for negotiation; continuing.')\n    iceCandidates.length = 0\n    emitter.emit('onnegotiationready')\n  } else {\n    log.debug(`ICE candidates not sufficient for negotiation, delaying another ${config.iceCollectionDelay}ms.`)\n    setTimeout(function () {\n      iceCollectionLoop(proxyBase, elapsedTime + config.iceCollectionDelay)\n    }, config.iceCollectionDelay)\n  }\n}\n","/**\n * Prototype for a timer object that can keep time and be stopped and started.\n */\nconst timerPrototype = {\n  /**\n   * Start the timer\n   * @returns {boolean} True if the timer was successfully started, false if it was already started.\n   */\n  start () {\n    if (!this.isStarted()) {\n      this._startTime = now()\n      return true\n    }\n    return false\n  },\n\n  /**\n   * Stops the timer\n   * @returns {boolean} True if the timer was successfully stopped, false if it was already stopped.\n   */\n  stop () {\n    if (this.isStarted()) {\n      this._startTime = undefined\n      return true\n    }\n\n    return false\n  },\n\n  /**\n   * @returns {boolean} True if the timer is started, false otherwise.\n   */\n  isStarted () {\n    return Boolean(this._startTime)\n  },\n\n  /**\n   * @returns {number} The time in milliseconds since the timer was started, or 0 if it wasn't started.\n   */\n  timeFromStart () {\n    return this.isStarted() ? now() - this._startTime : 0\n  }\n}\n\n/**\n * @returns A timestamp in milliseconds since the unix-epoch\n */\nfunction now () {\n  return new Date().getTime()\n}\n\n/**\n * Create a new timer object. Timers are not started when created and need to be started manualy.\n *\n * @returns {Object} The timer object that supports the timer interface.\n */\nexport function createTimer () {\n  return Object.create(timerPrototype)\n}\n","/**\n * Constants relating to the Peer model.\n */\nexport const PEER = {\n  TRICKLE_ICE: {\n    FULL: 'FULL',\n    HALF: 'HALF',\n    NONE: 'NONE'\n  },\n  // Defined by the RTCPeerConnection.iceGatheringState spec.\n  ICE_GATHERING_STATE: {\n    NEW: 'new',\n    GATHERING: 'gathering',\n    COMPLETE: 'complete'\n  },\n  ENDPOINT: {\n    LOCAL: 'local',\n    REMOTE: 'remote'\n  },\n  SDP_SEMANTICS: {\n    PLAN_B: 'plan-b',\n    UNIFIED_PLAN: 'unified-plan'\n  }\n}\n\n/**\n * SDP constants for media direction.\n * @type {Object}\n */\nexport const MEDIA_DIR = {\n  INACTIVE: 'inactive',\n  SEND_ONLY: 'sendonly',\n  RECV_ONLY: 'recvonly',\n  SEND_RECV: 'sendrecv'\n}\n","// Models.\nimport Track from '../models/track'\nimport Media from '../models/media'\nimport Peer from '../Peer'\n\n// Managers.\nimport MediaManager from '../managers/mediaManager'\nimport PeerManager from '../managers/peerManager'\nimport SessionManager from '../managers/sessionManager'\nimport DeviceManager from '../managers/deviceManager'\nimport TrackManager from '../managers/trackManager'\nimport WebRTCManager from '../managers/webrtcManager'\n\nimport { logManager } from '../logs'\n\n// SDP helpers.\nimport sdpPipeline from '../sdpUtils/pipeline'\nimport * as sdpHandlers from '../sdpUtils/handlers'\n\n// Utils\nimport { getBrowserDetails } from '../utils'\n\n/**\n * @returns An dictionary of features that are supported on this platform.\n */\nexport function getWebRTCSupportCapabilities () {\n  return {\n    mediaDevices: Boolean(navigator.mediaDevices),\n    peerConnection: Boolean(window.RTCPeerConnection)\n  }\n}\n\nexport default function initialize () {\n  const log = logManager.getLogger('WebRTC')\n\n  const browserDetails = getBrowserDetails()\n  if (browserDetails.version) {\n    log.debug(`Browser details: ${browserDetails.browser}, version ${browserDetails.version}.`)\n  } else {\n    log.debug('Browser details: Not supported by webRTC adapter.')\n  }\n\n  const deviceManager = new DeviceManager()\n  const trackManager = new TrackManager()\n  const mediaManager = new MediaManager({ trackManager })\n  const peerManager = new PeerManager({ trackManager })\n  const sessionManager = new SessionManager({\n    peerManager,\n    mediaManager,\n    trackManager\n  })\n  const webrtcManager = new WebRTCManager()\n\n  return {\n    models: {\n      Track,\n      Media,\n      Peer\n    },\n    // TODO: Make naming consistent.\n    managers: {\n      devices: deviceManager,\n      media: mediaManager,\n      peerManager: peerManager,\n      sessionManager,\n      track: trackManager,\n      // Give access to the Log Manager.\n      // TODO: Don't include it under managers. It's here now because of\n      //    ProxyStack annoyingness.\n      logs: logManager,\n      webrtcManager\n    },\n    sdp: {\n      pipeline: sdpPipeline,\n      handlers: sdpHandlers\n    },\n    // Export this on the webRTC stack for backwards compatibility.\n    getBrowserDetails\n  }\n}\n","import createManager from 'kandy-logger'\n\nconst manager = createManager({ level: 'DEBUG' })\nexport const logManager = manager\n","import { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/*\n * A conversion from MediaDeviceInfo.kind values to their more common terms.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/kind\n * @enum {String}\n */\nexport const WEBRTC_DEVICE_KINDS = {\n  audioinput: 'microphone',\n  videoinput: 'camera',\n  audiooutput: 'speaker'\n}\n\n/**\n * Manager for connected devices.\n * Keeps an up-to-date list of all devices.\n * @class DeviceManager\n */\nexport default function DeviceManager () {\n  const log = logManager.getLogger('Manager', 'Device')\n\n  // Internal variables.\n  const emitter = new EventEmitter()\n  // Store each device type separately, so that `deviceId` is unique\n  //    per kind (there is a `default` deviceId per kind).\n  let microphone = []\n  let camera = []\n  let speaker = []\n\n  // Check devices on initialization.\n  checkDevices().then(() => {\n    // Emit an initial event to notify that devices are available.\n    emitter.emit('change')\n  })\n\n  // Check devices whenever they change.\n  let recentDeviceChange = false\n  navigator.mediaDevices.addEventListener('devicechange', () => {\n    log.info('Media device change detected.')\n    // A physical device change results in one event per\n    // device \"kind\". Group the events together.\n    if (!recentDeviceChange) {\n      recentDeviceChange = true\n      setTimeout(() => {\n        recentDeviceChange = false\n        checkDevices().then(() => {\n          // Emit an event to notify of the change.\n          emitter.emit('change')\n        })\n      }, 50)\n    }\n  })\n\n  /**\n   * Updates the stored device lists with the latest devices.\n   * @method checkDevices\n   * @return {Promise}\n   */\n  function checkDevices () {\n    log.info('Checking media devices.')\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .enumerateDevices()\n        .then(devices => {\n          // Clear the stored devices, to prevent duplicates.\n          microphone = []\n          camera = []\n          speaker = []\n          devices.forEach(device => {\n            const kind = WEBRTC_DEVICE_KINDS[device.kind]\n            switch (kind) {\n              case 'microphone':\n                microphone.push(device)\n                break\n              case 'camera':\n                camera.push(device)\n                break\n              case 'speaker':\n                speaker.push(device)\n                break\n            }\n          })\n          resolve(get())\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Retrieves the stored device lists.\n   * @method get\n   * @return {Object}\n   */\n  function get () {\n    return {\n      microphone,\n      camera,\n      speaker\n    }\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    checkDevices,\n    get,\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\n\n// Models that this manager directly manages.\nimport Media from '../models/media'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager for Media objects.\n * Allows the creation and retrieval of media objects.\n * @class MediaManager\n */\nexport default function MediaManager (managers) {\n  const log = logManager.getLogger('Manager', 'Media')\n\n  // Internal variables.\n  const trackManager = managers.trackManager\n  const medias = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Retrieve a snapshot of all Media objects' current state.\n   * @method getState\n   * @return {Array}\n   */\n  function getState () {\n    return getAll().map(id => get(id).getState())\n  }\n\n  /**\n   * Workaround to get Firefox to behave similarly to Chrome regarding device permission prompts.\n   * @method browserContraintsWorkaround\n   * @param  {MediaStreamConstraints}  constraints\n   * @return {Object}  media contraints\n   */\n\n  function browserContraintsWorkaround (constraints) {\n    /**\n     * Firefox workaround.\n     *\n     * Issue Summary: Browser behaviour for prompting the user for device\n     *    permissions is not consistent for consecutive gUM calls. The following\n     *    workaround makes it consistent if the less-specific constraint is\n     *    provided.\n     *\n     * Context: The `deviceId` constraint format can be either a string or an\n     *    object. The object format allows precise control over how the browser\n     *    should try to get the track. It can be specified to fail if it can't\n     *    fulfill the constraint (exact), or whether the constraint is \"best\n     *    effort\" (ideal). When the string format is given, it follows the\n     *    \"ideal\" behaviour.\n     * See: https://developer.mozilla.org/en-US/docs/Web/API/ConstrainDOMString\n     *\n     *  - When the \"ideal\" behaviour is followed and the user has not given\n     *      permission (and not disallowed), the browswer will prompt the user\n     *      for permission.\n     *  - [Issue] When the \"ideal\" behaviour is followed and the user has given\n     *      permission previously, the browser will not prompt the user for\n     *      permission.\n     *\n     * Problem: When gUM is called for a different device (ideal behaviour) than\n     *    permission was granted for previously, the browser will not prompt the\n     *    user to give permission for the (new) device. This results in gUM\n     *    using the original device for the new track.\n     *\n     * This happens on Firefox because the prompt for media permissions is\n     *    specific to a single device. For Chrome, the prompt is generic to any\n     *    device.\n     * If permissions are always allowed (\"remember my decision\" on Firefox or\n     *    default on Chrome), this issue wouldn't be seen.\n     *\n     * Workaround: When the behaviour (idea / exact) isn't specified, default\n     *    to exact (instead of letting the browser default to ideal; as per the\n     *    specification).\n     *\n     * This ensures that the browser always prompts the user to give permissions\n     *    for the device (if not already granted). It is also more in-line with\n     *    what might be expected when you ask for a certain device (ie. don't\n     *    return a different device unless it was specified that it's okay).\n     */\n    for (const kind in constraints) {\n      if (\n        constraints[kind] &&\n        typeof constraints[kind] === 'object' &&\n        typeof constraints[kind].deviceId === 'string'\n      ) {\n        // Don't allow a \"bare\" value be provided for deviceId. Change it to use\n        //    \"exact\".\n        const id = constraints[kind].deviceId\n        constraints[kind].deviceId = { exact: id }\n      }\n    }\n    return constraints\n  }\n\n  /**\n   * Wraps native mediaStream, adds tracks to trackManager and Media, and sets up event handlers on a given media.\n   * @method setupMedia\n   * @param {MediaStream} mediaStream Creating a Media object with it.\n   * @return {Media}\n   */\n\n  function setupMedia (mediaStream) {\n    const media = new Media(mediaStream, true)\n    log.debug(`Creating Media with ID: ${media.id}.`)\n\n    // Only add tracks to a Media objects using the `addTrack` method.\n    mediaStream.getTracks().forEach(nativeTrack => {\n      const wrappedTrack = trackManager.add(nativeTrack, mediaStream)\n      media.addTrack(wrappedTrack)\n    })\n\n    media.once('media:stopped', mediaId => {\n      remove(mediaId)\n    })\n\n    media.on('track:removed', trackId => {\n      if (media.tracks.size === 0) {\n        remove(media.id)\n      }\n    })\n\n    media.on('track:ended', ({ mediaId, trackId }) => {\n      if (media.getTracks().length === 0) {\n        remove(mediaId)\n      }\n    })\n\n    media.on('track:muted', ({ mediaId, trackId }) => {\n      // TBD: Add any extra behaviour (if needed) here\n    })\n\n    return media\n  }\n\n  /**\n   * Create a new local Media object.\n   * Use the provided constraints to get user media as the base MediaStream.\n   * @method createLocal\n   * @param  {MediaStreamConstraints}  constraints\n   * @return {Promise}\n   */\n  function createLocal (constraints) {\n    const constraintsWorkaround = browserContraintsWorkaround(constraints)\n\n    // Get user media, ...\n    return new Promise((resolve, reject) => {\n      // TODO: Proper error checking.\n      // TODO: Use the WebAPI directly here? Probably not.\n      navigator.mediaDevices\n        .getUserMedia(constraintsWorkaround)\n        .then(mediaStream => {\n          const media = setupMedia(mediaStream)\n\n          medias.set(media.id, media)\n          // TODO: Better event. Include metadata?\n          emitter.emit('media:new', media.id)\n\n          resolve(media)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Creates a new local Screen Media object.\n   * Use the provided constraints to get user media as the base MediaStream.\n   * @method createLocalScreen\n   * @param {MediaStreamConstraints} constraints\n   * @return {promise}\n   */\n\n  function createLocalScreen (constraints) {\n    const constraintsWorkaround = browserContraintsWorkaround(constraints)\n\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .getDisplayMedia(constraintsWorkaround)\n        .then(mediaStream => {\n          const media = setupMedia(mediaStream)\n\n          medias.set(media.id, media)\n          // TODO: Better event. Include metadata?\n          emitter.emit('media:new', media.id)\n\n          resolve(media)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Create a new remote Media object.\n   * Use provided stream/tracks as the base media objects.\n   * @method createRemote\n   * @param  {MediaStream} mediaStream Native MediaStream object.\n   * @param  {Tracks[]} tracks Array of Track objects.\n   * @return {Media}\n   */\n  function createRemote (stream, tracks = []) {\n    const media = new Media(stream, false)\n\n    tracks.forEach(track => {\n      media.addTrack(track)\n    })\n\n    media.once('media:stopped', mediaId => {\n      remove(mediaId)\n    })\n\n    media.on('track:removed', trackId => {\n      if (media.tracks.size === 0) {\n        remove(media.id)\n      }\n    })\n\n    media.on('track:ended', ({ mediaId, trackId }) => {\n      if (media.getTracks().length === 0) {\n        remove(mediaId)\n      }\n    })\n\n    medias.set(media.id, media)\n    // TODO: Better event. Include metadata?\n    emitter.emit('media:new', media.id)\n    return media\n  }\n\n  /**\n   * Removes a Media object from the medias array.\n   * @private\n   * @method remove\n   * @param {String} mediaId\n   */\n  function remove (mediaId) {\n    const media = get(mediaId)\n    if (media) {\n      medias.delete(mediaId)\n      emitter.emit('media:removed', mediaId)\n    }\n  }\n\n  /**\n   * Retrieve an existing Media object.\n   * @method get\n   * @param  {String} mediaId ID of the desired Media object.\n   * @return {Media}\n   */\n  function get (mediaId) {\n    const media = medias.get(mediaId)\n    if (!media) {\n      log.debug(`No media found with ID: ${mediaId}.`)\n    }\n    return media\n  }\n\n  /**\n   * Retrieve a list of all existing Media object's IDs.\n   * @method getAll\n   * @return {Array} List of Media IDs.\n   */\n  function getAll () {\n    return Array.from(medias.keys())\n  }\n\n  /**\n   * Finds the Media object that contains the specified Track.\n   * @method findTrack\n   * @param  {string}  trackId The ID of the Track to find.\n   * @return {string} The ID of the Media object that contains the Track.\n   */\n  function findTrack (trackId) {\n    // Search through all Media objects for the one that has the desired track.\n    const allMedia = Array.from(medias.values())\n    const media = allMedia.find(media => media.getTrack(trackId))\n    if (media) {\n      log.debug(`Found Media (${media.id}) with Track ${trackId}.`)\n      return media.id\n    } else {\n      log.debug(`Found no Media with Track ${trackId}.`)\n    }\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    // Getter APIs.\n    get,\n    getAll,\n    getState,\n    findTrack,\n    // Create APIs.\n    createLocal,\n    createLocalScreen,\n    createRemote,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\n\nimport Peer from '../Peer'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager for Peer objects.\n * Allows the creation and retrieval of peer objects.\n * @method PeerManager\n */\nexport default function PeerManager (managers) {\n  const log = logManager.getLogger('Manager', 'Peer')\n\n  // Internal variables.\n  const trackManager = managers.trackManager\n  const peers = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Retrieve a snapshot of all Peer objects' current state.\n   * @method getState\n   * @return {Array}\n   */\n  function getState () {\n    return getAll().map(id => get(id).getState())\n  }\n\n  /**\n   * Create a new Peer using the provided configs.\n   * @method create\n   * @param  {Object} [config={}]\n   * @return {Peer}\n   */\n  function create (config = {}) {\n    const peer = new Peer(uuidV4(), config, trackManager)\n    peer.once('peer:closed', id => peers.delete(id))\n    peers.set(peer.id, peer)\n    emitter.emit('peer:new', peer.id)\n    return peer\n  }\n\n  /**\n   * Retrieves an existing Peer object.\n   * @method get\n   * @param  {String} id ID of the desired Peer object.\n   * @return {Peer}\n   */\n  function get (id) {\n    const peer = peers.get(id)\n    if (!peer) {\n      log.debug(`No Peer found with ID: ${id}.`)\n    }\n    return peer\n  }\n\n  /**\n   * Retrieve a list of all existing Peer object's IDs.\n   * @method getAll\n   * @return {Array} List of Peer IDs.\n   */\n  function getAll () {\n    return Array.from(peers.keys())\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    getState,\n    get,\n    getAll,\n    create,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\nimport Session from '../models/session'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager for Session objects.\n * Allows for creation and retrieval of session objects.\n * @method SessionManager\n */\nexport default function SessionManager (managers) {\n  const log = logManager.getLogger('Manager', 'Session')\n  // Internal variables.\n  const sessions = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Create a new Session object.\n   * @method create\n   * @param {Object} [config]\n   * @param {Object} [config.peer] Configs for the Session's Peer object.\n   * @return {Session}\n   */\n  function create (config = {}) {\n    const session = new Session(uuidV4(), managers, config)\n    session.once('session:ended', id => {\n      sessions.delete(id)\n      emitter.emit('session:removed', id)\n    })\n    sessions.set(session.id, session)\n    emitter.emit('session:new', session.id)\n    return session\n  }\n\n  /**\n   * Retrieve an existing Session object.\n   * @method get\n   * @param  {String} sessionId ID of the desired Session object.\n   * @return {Session}\n   */\n  function get (sessionId) {\n    const session = sessions.get(sessionId)\n    if (!session) {\n      log.debug(`No session found with ID: ${sessionId}.`)\n    }\n    return session\n  }\n\n  /**\n   * Retrieve a list of all existing Sessions.\n   * @method getAll\n   * @return {Array} List of Media IDs.\n   */\n  function getAll () {\n    return Array.from(sessions.values())\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    create,\n    get,\n    getAll,\n    on,\n    once,\n    off\n  }\n}\n","import Track from '../models/track'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager / store for Track objects.\n * @method TrackManager\n */\nexport default function TrackManager () {\n  /**\n   * The Track objects being managed.\n   * @type {Map}\n   */\n  const tracks = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Retrieve a Track object.\n   * @method get\n   * @param  {string} trackId\n   * @return {Track}\n   */\n  function get (trackId) {\n    return tracks.get(trackId)\n  }\n\n  /**\n   * Retrieve a list of Track objects.\n   * If no tracks are specified, will return all tracks.\n   * @method getTracks\n   * @param  {Array} [trackIds] List of tracks to retrieve.\n   * @return {Array}\n   */\n  function getTracks (trackIds) {\n    if (trackIds) {\n      return trackIds.map(trackId => tracks.get(trackId))\n    } else {\n      return Array.from(tracks.values())\n    }\n  }\n\n  /**\n   * Wraps a MediaStreamTrack into a Track object and adds\n   *    it to the manager.\n   * @method add\n   * @param  {MediaStreamTrack} track A native track object.\n   * @param  {MediaStream} stream\n   * @return {Track} The added/wrapped Track object.\n   */\n  function add (track, stream) {\n    const targetTrack = tracks.get(track.id)\n\n    // Chrome issue: track.stream is outdated and needs to be updated to newStream.\n    // targetTrack.stream.active is false & targetTrack.stream.getTracks() gives us an empty array.\n    // stream.active is true & stream.getTracks() gives us the correct array of tracks.\n    // Set/update the new stream as the track's stream\n    if (targetTrack && !targetTrack.getStream().active && stream.active) {\n      // The track was previously registered and is being re-added with new stream\n      targetTrack.setStream(stream)\n      return targetTrack\n    } else if (targetTrack) {\n      // This track is already registered.\n      return targetTrack\n    } else {\n      // Wrap the track as a Track object.\n      const wrappedTrack = new Track(track, stream)\n      tracks.set(track.id, wrappedTrack)\n\n      // Remove the track from the manager when it ends.\n      wrappedTrack.once('ended', remove)\n\n      emitter.emit('add', wrappedTrack.id)\n      return wrappedTrack\n    }\n  }\n\n  /**\n   * Remove a Track from the manager.\n   * @method remove\n   * @param  {string} trackId\n   * @return {Boolean} Whether the Track existed (and hence removed).\n   */\n  function remove ({ trackId }) {\n    const track = get(trackId)\n    if (track) {\n      tracks.delete(trackId)\n      // Clean up any listeners.\n      track.off('ended', remove)\n      emitter.emit('remove', trackId)\n    }\n\n    return Boolean(track)\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    get,\n    getTracks,\n    add,\n    remove,\n    on,\n    once,\n    off\n  }\n}\n","/**\n * \"Manager\" for general WebRTC functions.\n * @class WebRTCManager\n */\nexport default function WebRTCManager (managers) {\n  /**\n   * Retrieve the list of available and supported codecs based on the browser's capabilities for sending media.\n   * @method getAvailableCodecs\n   * @param {string} kind The kind of media of which to get the supported codecs of.\n   * @return {Array}\n   */\n  function getAvailableCodecs (kind) {\n    return RTCRtpSender.getCapabilities(kind).codecs\n  }\n  /**\n   * The exposed API.\n   */\n  return {\n    getAvailableCodecs\n  }\n}\n","import { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Object to represent a \"media\" object.\n * Wraps a MediaStream object.\n * @class Media\n * TODO: Rename to Stream? Would be more straight-forward since Tracks can be\n *    managed directly (with trackManager), instead of through a \"Media\" object.\n */\nexport default function Media (nativeStream, isLocal) {\n  const log = logManager.getLogger('Media', nativeStream.id)\n  log.info(`Creating new ${isLocal ? 'local' : 'remote'} Media.`)\n\n  // Internal variables.\n  const id = nativeStream.id\n  const stream = nativeStream\n  const emitter = new EventEmitter()\n\n  /**\n   * Mapping of the IDs of this Media object's tracks to the Track object.\n   * @type {Map}\n   */\n  const tracks = new Map()\n\n  stream.onremovetrack = event => {\n    tracks.delete(event.track.id)\n    emitter.emit('track:removed', event.track.id)\n  }\n\n  /**\n   * Retrieve a snapshot of the Media object's current state.\n   * @method getState\n   * @return {Object}\n   */\n  function getState () {\n    return {\n      id: id,\n      tracks: Array.from(tracks.values()).map(track => track.getState()),\n      isLocal: isLocal\n    }\n  }\n\n  /**\n   * Add a track to this Media object.\n   * @method addTrack\n   * @param {Track} track The Track object to add to the Media object.\n   */\n  function addTrack (track) {\n    if (tracks.has(track.id)) {\n      log.debug(`Track (${track.id}) is already in Media (${id}).`)\n      return\n    }\n\n    // Add the native MediaStreamTrack to the MediaStream.\n    stream.addTrack(track.track)\n    // Add the Track to the Media object.\n    tracks.set(track.id, track)\n\n    /**\n     * When a track ends, remove it from the Media object then clean it up.\n     */\n    track.on('ended', () => {\n      const removedTrack = removeTrack(track.id)\n      // Might be from old already deleted media which has no tracks anymore.\n      if (removedTrack) {\n        removedTrack.cleanup()\n        emitter.emit('track:ended', {\n          mediaId: id,\n          trackId: removedTrack.id\n        })\n      }\n    })\n    // TODO: Emit event or return result?\n    emitter.emit('track:new', {\n      mediaId: id,\n      trackId: track.id\n    })\n\n    /**\n     * When a track is muted, we generate our own internal event\n     */\n    track.on('muted', event => {\n      const wrappedTrack = getTrack(event.trackId)\n      if (wrappedTrack && wrappedTrack.track && wrappedTrack.track.muted) {\n        // Emit our internal event.\n        // Note that wrappedTrack.id is same as wrappedTrack.track & event.trackId\n        emitter.emit('track:muted', {\n          mediaId: id,\n          trackId: event.trackId\n        })\n      }\n    })\n\n    /**\n     * When a track is unmuted, we generate our own internal event\n     */\n    track.on('unmuted', event => {\n      const wrappedTrack = getTrack(event.trackId)\n      if (wrappedTrack && wrappedTrack.track && wrappedTrack.track.muted === false) {\n        // Emit our internal event.\n        // Note that wrappedTrack.id is same as wrappedTrack.track & event.trackId\n        emitter.emit('track:unmuted', {\n          mediaId: id,\n          trackId: event.trackId\n        })\n      }\n    })\n  }\n\n  /**\n   * Remove a track from the Media object.\n   * @private\n   * @method removeTrack\n   * @param  {string} trackId The Track to remove.\n   */\n  function removeTrack (trackId) {\n    const track = getTrack(trackId)\n    if (track) {\n      tracks.delete(trackId)\n      return track\n    }\n  }\n\n  /**\n   * Render all tracks of this Media object inside the specified element.\n   * @method renderIn\n   * @param  {HTMLElement} element The DOM element to be rendered in.\n   * @param  {String} [speakerId] The device ID to be used for audio output.\n   */\n  function renderIn (element, speakerId) {\n    getTracks().forEach(track => {\n      track.renderIn(element, speakerId)\n    })\n  }\n\n  /**\n   * Stop rendering all tracks of this Media object from the specified element.\n   * @method removeFrom\n   * @param  {HTMLElement} element The DOM element to be removed from.\n   */\n  function removeFrom (element) {\n    getTracks().forEach(track => {\n      track.removeFrom(element)\n    })\n  }\n\n  /**\n   * Moves the rendered Media object to only the specified element.\n   * @method moveTo\n   * @param  {HTMLElement} element The DOM element to be move to.\n   */\n  function moveTo (element) {\n    getTracks().forEach(track => {\n      track.moveTo(element)\n    })\n  }\n\n  /**\n   * Stop all Tracks within this Media object.\n   * @method stop\n   */\n  function stop () {\n    getTracks().forEach(track => {\n      track.stop()\n    })\n    emitter.emit('media:stopped', this.id)\n  }\n\n  /**\n   * Clean-up the Media object by stopping all Tracks and removing any rendered media.\n   * @method cleanup\n   */\n  function cleanup () {\n    getTracks().forEach(track => {\n      track.cleanup()\n    })\n    emitter.emit('media:stopped', this.id)\n  }\n\n  /**\n   * Retrieve the list of Track object this this Media object manages.\n   * @method getTracks\n   * @return {Array} The list of Track objects.\n   */\n  function getTracks () {\n    return Array.from(tracks.values())\n  }\n\n  /**\n   * Retrieve a specific Track object from within the Media object.\n   * @method getTrack\n   * @param  {String} trackId ID of the Track to retrieve.\n   * @return {Track}\n   */\n  function getTrack (trackId) {\n    return tracks.get(trackId)\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    id,\n    tracks,\n    isLocal,\n    // Getter APIs.\n    getState,\n    getTracks,\n    getTrack,\n    // Create APIs.\n    addTrack,\n    // Render APIs.\n    renderIn,\n    removeFrom,\n    moveTo,\n    // Cleanup APIs.\n    stop,\n    cleanup,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\n\n// Helpers.\nimport { PEER } from '../constants'\n\n// SDP Helpers.\nimport sdpPipeline from '../sdpUtils/pipeline'\nimport { isUnifiedPlan } from '../sdpUtils/sdpSemantics'\nimport { getSdpSessionId } from '../sdpUtils/extractors'\n\n// General Utils.\nimport { getBrowserDetails, mergeValues } from '../utils'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Object to represent a webRTC Session for a single peer.\n * \"Session\" being an abstraction of a webRTC connection between another peer.\n * Performs logic for initializing and connecting a peer connection.\n * Manages media added to / received from the peer connection.\n * @method Session\n */\nexport default function Session (id, managers, config = {}) {\n  const log = logManager.getLogger('Session', id)\n  log.info(`Creating new Session.`)\n  const sdpSemantics = config.peer && config.peer.rtcConfig && config.peer.rtcConfig.sdpSemantics\n  log.debug(`Session configured for ${sdpSemantics || 'default'} SDP semantics.`)\n\n  // Internal variables.\n  const sessionId = id\n  let peerId\n  const peerManager = managers.peerManager\n  const mediaManager = managers.mediaManager\n  const trackManager = managers.trackManager\n  const emitter = new EventEmitter()\n\n  // Session settings\n  const settings = {\n    dscpControls: {}\n  }\n\n  // This structure is used to remember the dtls role of a peer relative to some remote sdp.\n  // key: the remote sdp's session id (o= line).\n  // value: the dtls role that the current peer's local sdp has.\n  // This is needed because a remote SDP with the same sessionId as a previous one may reappear later on\n  //  (music-unhold scenario) and the roles will be expected to be the same.\n  const dtlsRoleRecord = new Map()\n\n  // The latest remote description successfully set, even if the Peer has\n  //    been recreated since it was set.\n  let latestRemoteDescription\n\n  // Create and initialize the peer\n  let peer = peerManager.create(config.peer)\n  if (peer) {\n    // The id of the created peer\n    peerId = peer.id\n    setupPeerEventHandlers(peer)\n  } else {\n    throw new Error(`Peer creation error in Session ${sessionId}.`)\n  }\n\n  /**\n   * Records the peer's dtlsRole if it hasn't been recorded yet and associates it with a remote sdp's sessionId.\n   * @method recordNewDtlsRole\n   */\n  function recordNewDtlsRole () {\n    const remoteSdpSessionId = getSdpSessionId(peer.remoteDescription.sdp)\n    if (!dtlsRoleRecord.get(remoteSdpSessionId)) {\n      dtlsRoleRecord.set(remoteSdpSessionId, peer.dtlsRole)\n    }\n  }\n\n  /**\n   * @property {Array} getLocalTracks List of active Track objects the Session has added locally.\n   */\n  function getLocalTracks () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.localTracks\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * @property {Array} getRemoteTracks List of active Track objects the Session has received remotely.\n   */\n  function getRemoteTracks () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.remoteTracks\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * Retrieve a snapshot of the Session object's current state.\n   * @method getState\n   * @return {Object}\n   */\n  function getState () {\n    return {\n      id: sessionId,\n      localTracks: getLocalTracks(),\n      remoteTracks: getRemoteTracks()\n    }\n  }\n\n  /**\n   * Setup a warm PeerConnection.\n   * @method warmup\n   */\n  function warmup () {}\n\n  /**\n   * Add Track objects to the Session.\n   * @method addTracks\n   * @param  {Array} tracks List of Track objects.\n   * @param  {Object} dscpTrackMapping Track - DSCPSettings map\n   */\n  function addTracks (tracks, dscpTrackMapping) {\n    const peer = peerManager.get(peerId)\n    // TODO: Better error handling?\n    if (peer) {\n      const addTrackOrReuseTransceiverPromises = tracks.map(track => {\n        return new Promise((resolve, reject) => {\n          // We try to find a reusable transceiver that we can attach the track to achieve the following:\n          // - Avoid transceiver pollution and needing to create a brand new transceiver to attach the track to.\n          // - Allow re-adding of the same track type that has been previously removed.\n          //   (This is so that we can still have re-adding of tracks when using the \"basic\" media API which imposes a 1-audio & 1-video limit)\n          const reusableTransceiver = peer.findReusableTransceiver(track.track.kind)\n\n          // If we can find a reusable transceiver, reuse it.\n          if (isUnifiedPlan(config.peer.rtcConfig.sdpSemantics) && reusableTransceiver) {\n            // Current limitations of transceiver reuse method:\n            // - We cannot attach the track's associated stream to the sender (lack of `sender.setStreams` support atm)\n            // So the local transceiver's sender track & remote transceiver's receiver track must have been used before so that it already has a stream attached to the sender.\n            // If the local transceiver's sender has not been used before, we should ideally be able to do the following:\n            // transceiver.sender.setStreams([<someStream>]) <- Not yet supported\n            // transceiver.sender.replaceTrack(<someTrack>)\n            // However, because of lack of support for `setStreams`, if we just tried to do `replaceTrack` on a transceiver that has not been used before,\n            //  the sender will not have a stream and the SDP generated will have no associated stream which can cuase issues such as not triggering events on the local stream during renegotiation.\n            // Once `setStreams` is supported, we can use the transceiver reuse method above even on transceivers that have not been used to send data before.\n            reusableTransceiver.sender\n              .replaceTrack(track.track)\n              .then(() => {\n                reusableTransceiver.direction = reusableTransceiver.direction === 'recvonly' ? 'sendrecv' : 'sendonly'\n                resolve(\n                  `Track (${track.track.kind} : ${track.id}) reused transceiver (mid: ${reusableTransceiver.mid}).`\n                )\n              })\n              .catch(err => {\n                log.error(err)\n                reject(err)\n              })\n          } else {\n            // To get around the current limitation described above, we use peerConnection's `addTrack` when we can't find a reusable transceiver.\n            // `addTrack` does one of the following when called:\n            // - Create a new transceiver and attaches the track and stream to the sender\n            // - Find and use an existing transceiver that has never been used to send data before and attach the track and stream to the sender.\n            peer.addTrack(track)\n            resolve(`Added track (${track.track.kind} : ${track.id}).`)\n          }\n        }).then(message => {\n          // Set event emitters and handlers\n          log.info(message)\n\n          // Indicate that the Session has a new Track.\n          emitter.emit('new:track', {\n            local: true,\n            trackId: track.id\n          })\n\n          settings.dscpControls = mergeValues(settings.dscpControls, dscpTrackMapping)\n\n          const media = mediaManager.get(track.getStream().id)\n          if (media) {\n            media.on('track:removed', trackId => {\n              emitter.emit('track:removed', {\n                local: true,\n                trackId: trackId\n              })\n            })\n          }\n\n          track.once('ended', ({ performRenegotiation }) => {\n            // If the PeerConnection is closed, we don't need to worry about\n            //    removing the track (and it would throw an error anyway).\n            if (peer.signalingState !== 'closed') {\n              peer.removeTrack(track.id)\n              emitter.emit('track:ended', {\n                local: true,\n                trackId: track.id,\n                performRenegotiation: performRenegotiation\n              })\n              // Remove track from session dscp settings\n              if (settings.dscpControls.hasOwnProperty(track.id)) {\n                log.debug(`Removing track ${track.id} from session dscp settings`)\n                delete settings.dscpControls[track.id]\n              }\n            }\n          })\n        })\n      })\n\n      return Promise.all(addTrackOrReuseTransceiverPromises)\n    }\n  }\n\n  /**\n   * Creates a local SDP offer.\n   * @method createOffer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local offer.\n   * @return {Promise} Resolves with the offer.\n   */\n  function createOffer (options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      // If using unified-plan, remove options.mediaDirections.\n      // This is because directions are now set in transceivers.\n      if (isUnifiedPlan(config.peer.rtcConfig.sdpSemantics)) {\n        if (options.mediaDirections) {\n          const audioTransceiverTargetDir = options.mediaDirections.audio\n          const videoTransceiverTargetDir = options.mediaDirections.video\n\n          if (audioTransceiverTargetDir) {\n            const result = peer.setTransceiversDirection(audioTransceiverTargetDir, {\n              trackIds: peer.localTracks.filter(track => track.track.kind === 'audio').map(track => track.id)\n            })\n            if (result.error) {\n              log.info(`Failed to process the following transceivers: ${result.failures}`)\n            }\n          }\n          if (videoTransceiverTargetDir) {\n            const result = peer.setTransceiversDirection(videoTransceiverTargetDir, {\n              trackIds: peer.localTracks.filter(track => track.track.kind === 'video').map(track => track.id)\n            })\n            if (result.error) {\n              log.info(`Failed to process the following transceivers: ${result.failures}`)\n            }\n          }\n          delete options.mediaDirections\n        }\n      }\n\n      peer\n        .createOffer(options)\n        .then(offer => {\n          if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n            log.debug('Modifying local offer with SDP pipeline.')\n            offer.sdp = sdpPipeline.run(options.sdpHandlers, offer.sdp, {\n              type: offer.type,\n              endpoint: PEER.ENDPOINT.LOCAL\n            })\n          }\n\n          resolve(offer)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Sets a local SDP.\n   * @method setLocalDescription\n   * @param  {Object} description The description containing the SDP to set as the local description.\n   * @return {Promise} Resolves with the description.\n   */\n  function setLocalDescription (description) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .setLocalDescription(description)\n        .then(() => {\n          // Record the peer's dtls role if setting a local answer.\n          if (description.type === 'answer') {\n            recordNewDtlsRole()\n          }\n          // Set any parameters on the peer's senders if applicable\n          setParameters()\n\n          // Resolve with the _current_ local description, which may be\n          //    different than the provided description due trickle ICE config.\n          resolve(peer.localDescription)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Sets parameters on the RTCRtpSenders\n   * @param {Object} mediaConstraints\n   */\n  function setParameters (mediaConstraints) {\n    // RTCRtpSender.setParameters is currently unsupported on Firefox (or atleast not supported as it should be)\n    if (getBrowserDetails().browser === 'firefox') {\n      log.debug('Setting sender parameters not supported on Firefox; skipping.')\n      return\n    }\n\n    const promises = []\n\n    // Set the DSCPControls (i.e., network priorities) if set in the session's settings\n    for (const trackId in settings.dscpControls) {\n      promises.push(\n        new Promise((resolve, reject) => {\n          log.debug(`Setting networkPriority ${settings.dscpControls[trackId]} for sender with track ${trackId}`)\n          setNetworkPriority(trackId, settings.dscpControls[trackId])\n            .then(resolve)\n            .catch(reject)\n        })\n      )\n    }\n\n    return Promise.all(promises)\n  }\n\n  /**\n   * Sets the networkPriority in the peer connection's sender's encodings.\n   * @method setNetworkPriority\n   * @param {string} trackId The track ID\n   * @param {string} networkPriority The network priority value to set\n   * @return {Promise} Resolves with the setParameters()\n   */\n  function setNetworkPriority (trackId, networkPriority) {\n    const peer = peerManager.get(peerId)\n    const senders = peer.getSenders()\n\n    // search for a sender associated with the provided track id\n    const sender = senders.find(sender => sender.track.id === trackId)\n    if (sender) {\n      // Need to perform a getParameters() prior to a setParameters()\n      const parameters = sender.getParameters()\n      parameters.encodings.forEach(encoding => {\n        encoding.networkPriority = networkPriority\n      })\n      return sender.setParameters(parameters)\n    } else {\n      const errMsg = `Cannot find sender associated with trackId: ${trackId}`\n      log.info(errMsg)\n      return Promise.reject(errMsg)\n    }\n  }\n\n  /**\n   * Generates (and sets) a local SDP offer.\n   * @method generateOffer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local offer.\n   * @return {Promise} Resolves with the offer.\n   */\n  function generateOffer (options = {}) {\n    // Backwards compatibility: Create the offer and set it as one operation.\n    return new Promise((resolve, reject) => {\n      createOffer(options)\n        .then(setLocalDescription)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Replaces a specified transceiver's sender.track.\n   * @method replaceTrack\n   * @param {Object} newTrack The MediaStreamTrack we want to place into the sender.\n   * @param {Object} options Options for specifying which transceiver's sender should be replaced. They are ordered by priority.\n   * @param {String} [options.trackId] The transceiver with the specific sender.track.id.\n   * @param {String} [options.mid] The transceiver with the specific media id.\n   * @return {Object} A Promise object which is fulfilled once the track has been replaced\n   */\n  function replaceTrack (newTrack, options) {\n    const peer = peerManager.get(peerId)\n    const track = trackManager.get(newTrack.id)\n    return peer\n      .replaceTrack(track.track, options)\n      .then(() => {\n        // Setup handlers for the replaced track, same as adding a new track\n        const media = mediaManager.get(track.getStream().id)\n        if (media) {\n          media.on('track:removed', trackId => {\n            emitter.emit('track:removed', {\n              local: true,\n              trackId: trackId\n            })\n          })\n        }\n\n        track.once('ended', ({ performRenegotiation }) => {\n          // If the PeerConnection is closed, we don't need to worry about\n          //    removing the track (and it would throw an error anyway).\n          if (peer.signalingState !== 'closed') {\n            peer.removeTrack(track.id)\n            emitter.emit('track:ended', {\n              local: true,\n              trackId: track.id,\n              performRenegotiation: performRenegotiation\n            })\n            // Remove track from session dscp settings\n            if (settings.dscpControls.hasOwnProperty(track.id)) {\n              log.debug(`Removing track ${track.id} from session dscp settings`)\n              delete settings.dscpControls[track.id]\n            }\n          }\n        })\n\n        emitter.emit('track:replaced', {\n          oldTrackId: options.trackId,\n          trackId: newTrack.id\n        })\n      })\n      .catch(err => err)\n  }\n\n  /**\n   * Sets the direction of transceivers.\n   * @method setTransceiversDirection\n   * @param {String} targetDirection The desired direction to set the transceivers to.\n   * @param {Object} [options] Options for specifying which transceivers should be affected.\n   *  trackIds option has priority\n   * @param {Array} [options.trackIds] The optional list of track ids whose transceivers we want to set the direction of.\n   * @return {Object} An object containing an `error` flag and  an array `failures` of transceiver \"mid\"s whose directions weren't changed.\n   */\n  function setTransceiversDirection (targetDirection, options = {}) {\n    if (isUnifiedPlan(config.peer.rtcConfig.sdpSemantics)) {\n      const peer = peerManager.get(peerId)\n      return peer.setTransceiversDirection(targetDirection, options)\n    } else {\n      log.info(`Transceiver direction modification is only available in unified-plan.`)\n      return { error: true }\n    }\n  }\n\n  /**\n   * Processes (and sets) a remote SDP offer.\n   * @method processOffer\n   * @param  {RTCSessionDescription} offer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the remote offer.\n   * @return {Promise}\n   */\n  function processOffer (offer, options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n        log.debug('Modifying remote offer with SDP pipeline.')\n        offer.sdp = sdpPipeline.run(options.sdpHandlers, offer.sdp, {\n          type: offer.type,\n          endpoint: PEER.ENDPOINT.REMOTE\n        })\n      }\n\n      peer\n        .setRemoteDescription(offer)\n        .then(() => {\n          // Set the offer as the latest remote description.\n          latestRemoteDescription = offer\n          resolve()\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Creates a local SDP answer.\n   * @method createAnswer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local answer.\n   * @return {Promise} Resolves with the answer.\n   */\n  function createAnswer (options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      // If using unified-plan, remove options.mediaDirections.\n      // This is because directions are now set in transceivers.\n      if (isUnifiedPlan(config.peer.rtcConfig.sdpSemantics)) {\n        if (options.mediaDirections) {\n          const audioTransceiverTargetDir = options.mediaDirections.audio\n          const videoTransceiverTargetDir = options.mediaDirections.video\n\n          if (audioTransceiverTargetDir) {\n            const result = peer.setTransceiversDirection(audioTransceiverTargetDir, {\n              trackIds: peer.localTracks.filter(track => track.track.kind === 'audio').map(track => track.id)\n            })\n            if (result.error) {\n              log.info(`Failed to process the following transceivers: ${result.failures}`)\n            }\n          }\n          if (videoTransceiverTargetDir) {\n            const result = peer.setTransceiversDirection(videoTransceiverTargetDir, {\n              trackIds: peer.localTracks.filter(track => track.track.kind === 'video').map(track => track.id)\n            })\n            if (result.error) {\n              log.info(`Failed to process the following transceivers: ${result.failures}`)\n            }\n          }\n          delete options.mediaDirections\n        }\n      }\n\n      // Set the dtlsRole here if the following are true:\n      // - It previously existed for this specific remote sdp.\n      // - It hasn't been set on a recreated peer yet.\n      const remoteSdpSessionId = getSdpSessionId(peer.remoteDescription.sdp)\n      const previousDtlsRole = dtlsRoleRecord.get(remoteSdpSessionId)\n      if (!peer.dtlsRole && previousDtlsRole) {\n        peer.dtlsRole = previousDtlsRole\n      }\n\n      peer\n        .createAnswer(options)\n        .then(answer => {\n          if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n            log.debug('Modifying local answer with SDP pipeline.')\n            answer.sdp = sdpPipeline.run(options.sdpHandlers, answer.sdp, {\n              type: answer.type,\n              endpoint: PEER.ENDPOINT.LOCAL\n            })\n          }\n          resolve(answer)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Generates (and sets) a local SDP answer.\n   * @method generateAnswer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local answer.\n   * @return {Promise} Resolves with the answer.\n   */\n  function generateAnswer (options = {}) {\n    // For backwards compatibility: Should use other APIs directly.\n    return new Promise((resolve, reject) => {\n      createAnswer(options)\n        .then(setLocalDescription)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Processes (and sets) a remote SDP answer.\n   * @method processAnswer\n   * @param  {RTCSessionDescription} answer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the remote answer.\n   * @return {Promise}\n   */\n  function processAnswer (answer, options = {}) {\n    if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n      log.debug('Modifying remote answer with SDP pipeline.')\n      answer.sdp = sdpPipeline.run(options.sdpHandlers, answer.sdp, {\n        type: answer.type,\n        endpoint: PEER.ENDPOINT.REMOTE\n      })\n    }\n\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .setRemoteDescription(answer)\n        .then(() => {\n          // Record the peer's dtls role.\n          recordNewDtlsRole()\n\n          // Set the answer as the latest remote description.\n          latestRemoteDescription = answer\n\n          resolve()\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Add an ICE candidate from the remote endpoint.\n   * @method addIceCandidate\n   * @param  {RTCIceCandidate} candidate\n   * @param  {Object} [options]\n   * @param  {string} [options.label] The Peer to perform the operation on.\n   * @return {Promise}\n   */\n  function addIceCandidate (candidate, options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .addIceCandidate(candidate)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  /**\n   * End the Session.\n   * @method end\n   */\n  function end () {\n    log.info(`Ending Session.`)\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      peer.close()\n    }\n    emitter.emit('session:ended', sessionId)\n  }\n\n  /**\n   * Removes specified Track objects from the Session.\n   * @method removeTrack\n   * @param  {Array} trackIds List of IDs of Track objects to remove.\n   */\n  function removeTracks (trackIds) {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      trackIds.forEach(trackId => {\n        if (getLocalTracks().findIndex(track => track.id === trackId) > -1) {\n          peer.removeTrack(trackId)\n          // Remove the track from the session dscp settings\n          if (settings.dscpControls.hasOwnProperty(trackId)) {\n            log.debug(`Removing track ${trackId} from session dscp settings`)\n            delete settings.dscpControls[trackId]\n          }\n        }\n      })\n    }\n  }\n\n  /**\n   * Send DTMF tones on specified Track object from the Session.\n   * @method sendDTMF\n   * @param {Object} options The DTMF options.\n   * @param {string} options.tone DTMF tone to send. Valid values are [0,1,2,3,4,5,6,7,8,9,#].\n   * @param {number} [options.duration=100] The amount of time, in milliseconds, that each DTMF tone should last.\n   * @param {number} [options.intertoneGap=70] The length of time, in milliseconds, to wait between tones.\n   * @param {Object} [sendOptions] The send options.\n   * @param {func} [sendOptions.callback] Optional callback for tone event .\n   * @param {string} [sendOptions.trackId] The trackId of the sender to use.\n   * @return {boolean} The success or fail indicator\n   */\n  function sendDTMF (DTMFOptions, sendOptions = {}) {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.sendDTMF(DTMFOptions, sendOptions)\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * Retrieve RTCStatsReport from a sender.\n   * @method getStats\n   * @param  {string} trackId The track id associated with a sender.\n   * @return {Promise}\n   */\n  function getStats (trackId) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n        return\n      }\n      peer\n        .getStats(trackId)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * Sets up event handlers on a given peer.\n   * @method setupPeerEventHandlers\n   * @param {PeerConnection} targetPeer The peer to set event handlers on.\n   */\n  function setupPeerEventHandlers (targetPeer) {\n    // TODO: Use `uniqueLabel` when setting event listeners (and bubbling events).\n    // When the peer gets an ICE candidate, emit it as\n    //  a message to be sent to the other end.\n    targetPeer.onicecandidate = event => {\n      emitter.emit('onicecandidate', {\n        candidate: event.candidate\n      })\n    }\n\n    // Handle when the Peer receives a new remote track.\n    targetPeer.ontrack = track => {\n      let media = mediaManager.get(track.getStream().id)\n      if (media) {\n        // Add the new Track to its Media object.\n        media.addTrack(track)\n      } else {\n        // Create a new Media object using the Track.\n        media = mediaManager.createRemote(track.getStream(), [track])\n      }\n\n      media.on('track:removed', trackId => {\n        // This is used as a workaround for an issue that was noticed on Chrome 76 plan-b\n        //  (it may have already been happening in previous versions):\n        //  - the remote audio track's `ended` event does not fire when remote sdp comes in with `inactive` media (hold).\n        //  - the remote audio track's `ended` event fires when sdp comes in with `sendrecv` media (unhold).\n        // Only do manual remote track cleanup when plan-b.\n        // Doing so for unified-plan will make the new track in `ontrack` event come in an `ended` state.\n        if (!isUnifiedPlan(config.peer.rtcConfig.sdpSemantics)) {\n          const trackToCleanup = trackManager.get(trackId)\n          if (trackToCleanup) {\n            trackToCleanup.cleanup()\n            log.info(`Cleaning up track ${trackId}.`)\n          } else {\n            log.info(`Track ${trackId} not found.`)\n          }\n        }\n\n        emitter.emit('track:removed', {\n          local: false,\n          trackId: trackId\n        })\n      })\n\n      track.once('ended', () => {\n        emitter.emit('track:ended', {\n          local: false,\n          trackId: track.id,\n          // If a remote track is ended, we don't want to manually perform a renegotiation\n          performRenegotiation: false\n        })\n      })\n\n      const { kind } = track.getState()\n      log.info(`Received new track (${kind} : ${track.id})`)\n\n      // Indicate that the Session has a new Track.\n      emitter.emit('new:track', {\n        local: false,\n        trackId: track.id\n      })\n    }\n  }\n\n  /**\n   * Creates a new peer and replaces the current peer being used by this session.\n   *     This will close the previous Peer, stopping any media being sent/received on it.\n   * @method recreatePeer\n   */\n  function recreatePeer () {\n    const oldPeer = peer\n    const newPeer = peerManager.create(config.peer)\n    if (newPeer) {\n      // The id of the created peer\n      peerId = newPeer.id\n      peer = newPeer\n\n      // Copy tracks\n      oldPeer.localTracks.forEach(oldLocalTrack => {\n        newPeer.addTrack(oldLocalTrack)\n      })\n\n      // Set event handlers\n      setupPeerEventHandlers(newPeer)\n\n      // Close the old peer\n      oldPeer.close()\n    } else {\n      throw new Error(`Peer creation error in Session ${sessionId}.`)\n    }\n  }\n\n  function getPeer () {\n    return peer\n  }\n\n  function getRemoteDescription () {\n    return peer.remoteDescription\n  }\n\n  function getLatestRemoteDesc () {\n    return latestRemoteDescription\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    id: sessionId,\n    config,\n    // Getter APIs.\n    get peer () {\n      return getPeer()\n    },\n    getState,\n    get localTracks () {\n      return getLocalTracks()\n    },\n    get remoteTracks () {\n      return getRemoteTracks()\n    },\n    warmup,\n    addTracks,\n    removeTracks,\n    replaceTrack,\n    setTransceiversDirection,\n    // Negotiation APIs.\n    createOffer,\n    createAnswer,\n    setLocalDescription,\n    getRemoteDescription,\n    getLatestRemoteDesc,\n    generateOffer,\n    processOffer,\n    generateAnswer,\n    processAnswer,\n    // Other APIs.\n    recreatePeer,\n    addIceCandidate,\n    end,\n    sendDTMF,\n    getStats,\n    setParameters,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\nimport { makeSafeForCSS } from '../utils'\n\n/**\n * Wrapper object for a native MediaStreamTrack object.\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack\n * @method Track\n */\nexport default function Track (mediaTrack, mediaStream) {\n  const log = logManager.getLogger('Track', mediaTrack.id)\n  log.info(`Creating new ${mediaTrack.kind} Track.`)\n\n  // Internal variables.\n  const id = mediaTrack.id\n  const track = mediaTrack\n  let stream = mediaStream\n  const containers = []\n  let constraints = {}\n  const emitter = new EventEmitter()\n\n  /**\n   * When a track ends, the Track itself doesn't do anything about it.\n   * It \"bubbles\" the event up to be handled at a higher level.\n   */\n  track.onended = event => {\n    log.debug('Event emitted: ', event)\n    emitter.emit('ended', {\n      trackId: track.id,\n      // If the event is defined:\n      //   The event is triggered either from a remote notification or browser action.\n      //   In case of browser action (e.g. \"Stop sharing\" screenshare on chrome), SDK will (eventually) receive a SESSION_TRACK_REMOVED action.\n      //   This action is dispatched when the session picks up on this ended event and triggers a 'track:ended' event.\n      //   When dispatching this action, we need to tell the SDK to perform renegotiation (but for browser actions only)\n      // If the event is undefined:\n      //   `track.onended` is manually triggered and the saga that eventually triggered this function will handle the renegotiation itself.\n      performRenegotiation: !!event\n    })\n  }\n\n  /**\n   * When a track is muted, we forward this to any listener.\n   * This handler is tipically invoked by actions triggered outside the\n   * direct control of the webrtc SDK.\n   */\n  track.onmute = event => {\n    log.debug('Event emitted: ', event)\n    emitter.emit('muted', {\n      trackId: track.id\n    })\n  }\n\n  /**\n   * When a track is unmuted, we forward this to any listener.\n   * This handler is tipically invoked by actions triggered outside the\n   * direct control of the webrtc SDK.\n   */\n  track.onunmute = event => {\n    log.debug('Event emitted: ', event)\n    emitter.emit('unmuted', {\n      trackId: track.id\n    })\n  }\n\n  function setStream (newStream) {\n    stream = newStream\n  }\n  function getStream () {\n    return stream\n  }\n\n  /**\n   * Retrieve a snapshot of the Track object's current state.\n   * @method getState\n   * @return {Object}\n   */\n  function getState () {\n    return {\n      id,\n      streamId: stream.id,\n      kind: track.kind,\n      label: track.label,\n      muted: track.muted,\n      enabled: track.enabled,\n      state: track.readyState,\n      containers: containers.map(element => element.id)\n    }\n  }\n\n  /**\n   * Renders this Track as a subelement of the specified element.\n   * @method renderIn\n   * @param  {HTMLElement|String} container The DOM element to be rendered in,\n   *    or a unique CSS selector for the DOM element.\n   * @param  {String} [speakerId] The device ID to be used for audio output.\n   */\n  function renderIn (container, speakerId) {\n    let element\n    // If a string was provided, use it as a CSS selector to find the element.\n    if (typeof container === 'string') {\n      log.info(`Rendering track in element using selector: ${container}`)\n\n      element = document.querySelector(container)\n      if (!element) {\n        log.error(`Unable to get container with selector: ${container}.`)\n        return false\n      }\n    } else {\n      log.info(`Rendering track in provided HTMLElement.`)\n\n      element = container\n    }\n\n    // TODO: Proper error checking.\n\n    if (containers.indexOf(element) > -1) {\n      // Already rendered in element.\n      log.info(`Failed to render track; already rendered in element.`)\n      return\n    }\n\n    containers.push(element)\n\n    let type = track.kind\n    let renderer = document.createElement(type)\n\n    // Make id safe for css (Firefox ids come wrapped in curly braces)\n    // This makes it easier to do other manipulation on the rendering side\n    // as we don't need to escape curly braces when doing element.querySelector (See removeFrom).\n    renderer.id = `${type}-${makeSafeForCSS(id)}`\n    renderer.style.height = '100%'\n    renderer.style.width = '100%'\n\n    try {\n      renderer.srcObject = stream\n    } catch (error) {\n      log.debug('srcObject property not supported; reverting to createObjectURL.')\n      // TODO: AdapterJS handles this, we should remove this.\n      renderer.src = window.URL.createObjectURL(stream)\n    }\n\n    renderer.autoplay = 'true'\n\n    if (type === 'video') {\n      renderer.muted = 'true'\n      // Needed for Android.\n      renderer.play().catch(err => {\n        log.debug(`Could not autoplay renderer #${renderer.id}: ${err.message}`)\n      })\n    }\n\n    // Set speaker if it was provided and it's supported.\n    if (speakerId && typeof renderer.setSinkId !== 'undefined') {\n      // TODO: Better then/catch handling.\n      renderer\n        .setSinkId(speakerId)\n        .then(() => {\n          log.debug(`Set to use speaker: ${speakerId}.`)\n        })\n        .catch(error => {\n          log.debug(`Could not set speaker to use ${speakerId}: ${error.message}`)\n        })\n    } else if (speakerId && typeof renderer.setSinkId === 'undefined') {\n      log.info(`Failed to set speaker; setSinkId not supported in this browser.`)\n    }\n\n    element.appendChild(renderer)\n\n    // TODO: Emit event to notify of changes?\n    return true\n  }\n\n  /**\n   * Stop rendering this Track from the specified element.\n   * @method removeFrom\n   * @param  {HTMLElement} container The DOM element to be removed from, or\n   *     a unique CSS selector for the DOM element.\n   */\n  function removeFrom (container) {\n    let element\n    // If a string was provided, use it as a CSS selector to find the element.\n    if (typeof container === 'string') {\n      log.info(`Removing track from element using selector: ${container}`)\n\n      element = document.querySelector(container)\n      if (!element) {\n        log.error(`Unable to get container with selector: ${container}.`)\n        return false\n      }\n    } else {\n      log.info(`Removing track from provided HTMLElement.`)\n\n      element = container\n    }\n\n    let index = containers.indexOf(element)\n    if (index === -1) {\n      // Not rendered in element.\n      log.info(`Failed to remove track; not rendered in element.`)\n      return\n    }\n    containers.splice(index, 1)\n\n    // TODO: This id may not be unique.\n    // Make id safe for css (Firefox ids come wrapped in curly braces)\n    // This makes it easier to do other manipulation on the rendering side\n    // as we don't need to escape curly braces when doing element.querySelector.\n    let rendererId = `${track.kind}-${makeSafeForCSS(id)}`\n    const renderer = element.querySelector(`#${rendererId}`)\n\n    if (renderer.srcObject) {\n      renderer.srcObject = null\n    } else if (renderer.src) {\n      renderer.src = null\n    }\n    element.removeChild(renderer)\n\n    // TODO: Emit event to notify of changes?\n    return true\n  }\n\n  /**\n   * Moves the rendered track to only the specified element.\n   * @method moveTo\n   * @param  {HTMLElement} element The DOM element to be moved to.\n   */\n  function moveTo (element) {\n    // Iterate over the array backwards since `removeFrom` changes the length\n    //    of the array. This ensures that indexes aren't skipped.\n    for (let i = containers.length; i > 0; i--) {\n      removeFrom(containers[i - 1])\n    }\n    renderIn(element)\n  }\n\n  /**\n   * Clean-up the Track by removing it wherever it is rendered and stopping the\n   *    track itself.\n   * @method cleanup\n   */\n  function cleanup () {\n    log.info(`Cleaning up track.`)\n    // Iterate over the array backwards since `removeFrom` changes the length\n    //    of the array. This ensures that indexes aren't skipped.\n    for (let i = containers.length; i > 0; i--) {\n      removeFrom(containers[i - 1])\n    }\n    // Stop the track if it isn't already stopped.\n    if (track.readyState === 'live') {\n      stop()\n    }\n  }\n\n  /**\n   * Set this Track to be disabled and disallow the Track to render the source stream.\n   * @method mute\n   */\n  function mute () {\n    track.enabled = false\n  }\n\n  /**\n   * Set this Track to be enabled and allow the Track to render the source stream.\n   * @method unmute\n   */\n  function unmute () {\n    track.enabled = true\n  }\n\n  /**\n   * Calls native stop() function to deassociate the source and the track.\n   * @method stop\n   */\n  function stop () {\n    track.stop()\n    /**\n     * Treat stopping the track the same as it being ended.\n     * Noramlly, onended is not triggered when `stop` is called, only when it is\n     *    \"remotely ended\".\n     */\n    track.onended()\n  }\n\n  /**\n   * Gets the currently set constraints for the track.\n   * @method getConstraints\n   * @return {Object}\n   */\n  function getConstraints () {\n    return constraints\n  }\n\n  /**\n   * Set the values for constrainable properties of the track.\n   * @method applyConstraints\n   * @param  {Object} constraints The list of constrainable properties.\n   */\n  function setConstraints (constr) {\n    constraints = constr\n  }\n\n  /**\n   * Retrieves the list of containers where the Track is rendered.\n   * @method getContainers\n   * @return {Array} List of HTMLElements.\n   */\n  function getContainers () {\n    return containers\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    id,\n    // Track APIs.\n    getState,\n    renderIn,\n    removeFrom,\n    moveTo,\n    cleanup,\n    mute,\n    unmute,\n    stop,\n    getConstraints,\n    setConstraints,\n    getContainers,\n    // Event APIs.\n    on,\n    off,\n    once,\n    // The native track and stream was accessible before, so it was\n    //    used when it probably shouldn't have been.\n    // TODO: Find a better solution.\n    track,\n    setStream,\n    getStream\n  }\n}\n","/**\n * Extracts the session ID from the SDP.\n * Session ID is located in the o= line.\n * Ref: https://tools.ietf.org/html/rfc4566#section-5.2\n * @method getSdpSessionId\n * @param  {string} sdp A valid SDP string.\n * @return {string} The SDP's session ID.\n */\nexport function getSdpSessionId (sdp) {\n  const oLine = sdp.match(/o=.*/gm)\n\n  if (oLine && oLine[0]) {\n    return oLine[0].split(' ')[1]\n  }\n}\n","import { logManager } from '../logs'\n// Constants.\nimport { MEDIA_DIR } from '../constants'\n\nconst log = logManager.getLogger('SdpPipeline')\n\n/**\n * SDP handler to remove the trickle ICE option from media groups.\n * Modifies the SDP so it claims to not support trickle ICE.\n * @method removeTrickleIce\n * @param  {Object} sdp\n * @param  {Object} info\n * @param  {String} info.type\n * @param  {String} info.endpoint\n * @param  {Object} originalSdp\n * @return {Object}\n */\nexport function removeTrickleIce (sdp, info, originalSdp) {\n  sdp.media.forEach(media => {\n    if (media.iceOptions === 'trickle') {\n      log.debug(`Removing trickle ICE option from ${media.type} media.`)\n      delete media.iceOptions\n    }\n  })\n\n  return sdp\n}\n\n/**\n * SDP handler to delete the bundle groupings line from the SDP.\n * PeerConnections do not have an option to completely disable bundling, so\n *    manually removing the line from the SDP is needed to prevent bundling.\n * @method removeBundling\n * @param  {Object}     sdp           The session description.\n * @param  {Object}     info          Information about the session description.\n * @param  {RTCSdpType} info.type     The session description's type.\n * @param  {String}     info.endpoint Which end of the connection created the SDP.\n * @param  {Object}     originalSdp   The original SDP before any modifications.\n * @return {Object}\n */\nexport function removeBundling (sdp, info, originalSdp) {\n  if (sdp.groups) {\n    log.debug('Removing SDP bundling groups.')\n    delete sdp.groups\n  }\n\n  return sdp\n}\n\n/**\n * Currying function to create an SDP handler.\n * The SDP handler modifies the SDP to change the direction of media.\n * @method changeMediaDirection\n * @param  {Object} mediaDirections\n * @param  {string} [audio] Direction to set for audio.\n * @param  {string} [video] Direction to set for video.\n * @return {Function} SDP handler.\n */\nexport function changeMediaDirection ({ audio, video }) {\n  function isValid (direction) {\n    return Object.values(MEDIA_DIR).includes(direction)\n  }\n\n  /**\n   * SDP handler to change the direction of media a-lines.\n   */\n  return (sdp, info, originalSdp) => {\n    sdp.media.forEach(media => {\n      if (media.type === 'audio' && isValid(audio)) {\n        media.direction = audio\n      } else if (media.type === 'video' && isValid(video)) {\n        media.direction = video\n      }\n    })\n    return sdp\n  }\n}\n\n/**\n * SDP handler to modify the DTLS role of a locally generated answer SDP.\n *\n * The point of this SDP handler is to avoid a DTLS role conflict during a\n *    renegotiation. A role conflict occurs when DTLS roles have been selected\n *    during initial negotiation, but during renegotiation, the answerer selects\n *    the opposite role than previously used.\n *\n * This handler only needs to be used when the Peer is generating an answer SDP.\n *    That is the only point when a conflicting role can be chosen.\n *\n * This handler prevents the role changing by comparing the SDP's role with the\n *    role that the Peer previously selected. If they conflict, the Peer's\n *    previous role is used.\n *\n * Related stories: KAA-1426, KAA-1562.\n * References: https://groups.google.com/forum/#!topic/discuss-webrtc/gsw3OEAwNKo\n * @method preventDtlsRoleChange\n * @param  {Object}     newSdp          The session description.\n * @param  {Object}     info            Information about the session description.\n * @param  {RTCSdpType} info.type       The session description's type.\n * @param  {string}     info.endpoint   Which end of the connection created the SDP.\n * @param  {string}     [info.dtlsRole] The previously select DTLS role of the Peer.\n * @param  {Object}     originalSdp     The sdp in its initial state.\n * @return {Object}                     The modified SDP.\n */\nexport function preventDtlsRoleChange (newSdp, info, originalSdp) {\n  /**\n   * This SDP handler only affects local answer SDPs.\n   *  - Only local because we are trying to prevent role conflict issues caused\n   *        by the answerer choosing the \"wrong\" role during a renegotiation.\n   *  - Only answer because offers are always actpass.\n   */\n  if (info.endpoint === 'local' && info.type === 'answer') {\n    for (let mLine of newSdp.media) {\n      /**\n       * If the generated DTLS role is different than what the Peer expects,\n       *    replace it. The Peer expects the DTLS role to stay the same\n       *    throughout renegotiations.\n       */\n      if (mLine.setup && info.dtlsRole && mLine.setup !== info.dtlsRole) {\n        log.debug(`Changing DTLS role from ${mLine.setup} to ${info.dtlsRole}.`)\n        mLine.setup = info.dtlsRole\n      }\n    }\n  }\n  return newSdp\n}\n","// Libraries.\nimport sdpTransform from 'sdp-transform'\nimport { cloneDeep, isArray, isFunction } from 'lodash/fp'\n\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('SdpPipeline')\n\n/**\n * Basic SDP pipeline runner.\n * Does not include any default handlers.\n * @method sdpPipeline\n * @param  {Array}      handlers       List of functions that transform the SDP.\n * @param  {String}     sdp            The session description.\n * @param  {RTCSdpType} info           Information about the session description.\n * @param  {RTCSdpType} info.type      The session description's type.\n * @param  {String}     info.endpoint  Which end of the connection created the SDP.\n * @param  {Boolean}    info.isInitiator Whether this session initiated the connection or not.\n * @return {String}     The modified session description.\n\n */\nexport function runPipeline (handlers, sdp, info) {\n  let objectSdp = sdpTransform.parse(sdp)\n\n  const originalSdp = Object.freeze(objectSdp)\n  let newSdp = cloneDeep(originalSdp)\n\n  if (isArray(handlers)) {\n    handlers.forEach(handler => {\n      if (isFunction(handler)) {\n        newSdp = handler(newSdp, info, originalSdp)\n      } else {\n        log.error(`SDP handler not a function; skipping.`)\n      }\n    })\n  }\n\n  return sdpTransform.write(newSdp)\n}\n\n/**\n * Create an instance of the SDP pipeline.\n * Allows for persistent SDP handlers to be set and implictly used.\n * @method createPipeline\n * @return {Object} An SDP pipeline.\n */\nfunction createPipeline () {\n  /**\n   * SDP handlers that should be included with every pipeline run.\n   * @type {Array}\n   */\n  let defaultHandlers = []\n\n  /**\n   * Use the pipeline to process an SDP.\n   * @method run\n   * @param  {Array}      handlers      List of functions that transform the SDP.\n   * @param  {String}     sdp           The session description.\n   * @param  {RTCSdpType} info          Information about the session description.\n   * @param  {RTCSdpType} info.type     The session description's type.\n   * @param  {String}     info.endpoint Which end of the connection created the SDP.\n   * @return {String}     The modified session description.\n   */\n  function run (handlers = [], sdp, info) {\n    return runPipeline(handlers.concat(defaultHandlers), sdp, info)\n  }\n\n  /**\n   * Set the SDP handlers that should be included with every pipeline run.\n   * @method setHandlers\n   * @param  {Array} handlers List of SDP handler functions.\n   */\n  function setHandlers (handlers) {\n    if (isArray(handlers)) {\n      defaultHandlers = defaultHandlers.concat(handlers)\n    }\n  }\n\n  /**\n   * Get the SDP handlers that are included with every pipeline run.\n   * @method getHandlers\n   * @return {Array} List of SDP handler functions.\n   */\n  function getHandlers () {\n    return defaultHandlers\n  }\n\n  return {\n    run,\n    setHandlers,\n    getHandlers\n  }\n}\n\n// Export an instance of the pipeline to be used by everything.\nexport default createPipeline()\n","import { PEER } from '../constants'\nimport { values } from 'lodash/fp'\n\n/**\n * Checks whether the current sdp semantics is unified-plan\n * @method isUnifiedPlan\n * @param {String} sdpSemantics The current sdp semantics being used\n * @return {Boolean}\n */\nexport function isUnifiedPlan (sdpSemantics) {\n  return sdpSemantics === PEER.SDP_SEMANTICS.UNIFIED_PLAN\n}\n\n/**\n * Generates a list of sdp semantics.\n * @method getSdpSemanticsList\n * @return {Array}\n */\nexport function getSdpSemanticsList () {\n  return values(PEER.SDP_SEMANTICS)\n}\n","import { MEDIA_DIR } from '../constants'\nimport { values, includes } from 'lodash/fp'\n\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('SdpPipeline')\n\n/**\n * Sets a transceiver's direction.\n * Checks that the desired direction is a valid one.\n * @method setTransceiverDirection\n * @param {Object} transceiver The transceiver that we want to modify.\n * @param {String} targetDirection The desired direction we want to change to.\n * @return {Boolean} Indicator on whether the transceiver direction was successfully changed.\n */\nexport function setTransceiverDirection (transceiver, targetDirection) {\n  if (!includes(targetDirection, values(MEDIA_DIR))) {\n    log.info(`Invalid direction \"${targetDirection}\"`)\n    return false\n  }\n\n  // Only in Safari:\n  //  - has transceiver.setDirection\n  //  - transceiver.direction is readOnly\n  if (transceiver.setDirection) {\n    transceiver.setDirection(targetDirection)\n  } else {\n    transceiver.direction = targetDirection\n  }\n  return true\n}\n","import adapter from 'webrtc-adapter/out/adapter_no_edge'\nimport { mergeAllWith, isArray } from 'lodash/fp'\n\n// TODO: This function was copied from Kandy, we should eventually create a common project that\n// can contain all of these utils that are useful in multiple packages.\n\n/**\n * Deeply merges the values of multiple objects. Objects on the left receive the values from objects on their right.\n * Unlike lodash's default merge behavior this doesn't merge arrays.\n *\n * @name mergeValues\n * @param {...Object} objects - Objects to merge\n * @return {Object} A new object containing the merged values.\n */\nexport function mergeValues (...objects) {\n  return mergeAllWith((leftValue, rightValue) => {\n    // Overwrite the default behavior of lodash's merge for arrays and simply\n    // clobber what's on the left so we don't end up with merged arrays.\n    if (isArray(leftValue)) {\n      return rightValue\n    }\n  }, objects)\n}\n\nexport function makeSafeForCSS (name) {\n  if (!name) {\n    return name\n  } else {\n    return name.replace(/[^a-z0-9]/g, '')\n  }\n}\n\n/**\n * @returns The browser details as provided by webrtc-adapter\n */\nexport function getBrowserDetails () {\n  return adapter.browserDetails\n}\n","import logs from '../../packages/kandy/src/logs/plugin'\nimport config from '../../packages/kandy/src/config'\nimport events from '../../packages/kandy/src/events'\nimport request from '../../packages/kandy/src/request'\n\n/**\n * This is a list of base plugins that most solutions will need. These plugins provide service-like capabilities\n * to the SDK.\n */\nexport default [\n  { name: 'logs', fn: logs },\n  { name: 'config', fn: config },\n  { name: 'events', fn: events },\n  { name: 'request', fn: request }\n]\n","// Disabling eslint for the next comment as we want to be able to use a disallowed word\n// eslint-disable-next-line no-warning-comments\n/**\n * The SDK creation factory. Create an instance of the SDK by calling this factory with the desired configurations.\n * The SDK instance will be refered as 'api' throughout the rest of the documentation content.\n * @public\n * @method create\n * @param {config} config The configuration object.\n * @return {api} The SDK instance.\n * @example\n * // Instantiate the SDK.\n * import { create } from 'kandy'\n * const client = create({\n *     authentication: { ... },\n *     logs: { ... },\n *     ...\n * });\n * // Use the SDK's API.\n * client.on( ... );\n */\n\n/**\n * The 'api' is the type returned by the create function.\n * It contains various top-level functions that pertain to SDK global instance\n * as well as several nested namespaces that pertain to various features (e.g. call, contacts, presence, etc).\n *\n * @public\n * @module api\n */\n\n/**\n * The configuration object. This object defines what different configuration\n * values you can use when instantiating the SDK using the {@link create} function.\n * @public\n * @module config\n */\n\n// Disabling eslint for the next comment as we want to be able to use a disallowed word\n// eslint-disable-next-line no-warning-comments\n/**\n * A set of {@link call.SdpHandlerFunction SdpHandlerFunction}s for manipulating SDP information.\n * These handlers are used to customize low-level call behaviour for very specific\n * environments and/or scenarios.\n *\n * Note that SDP handlers are exposed on the entry point of the SDK. They can be added during\n * initialization of the SDK using the {@link #configconfigcall config.call.sdpHandlers} configuration\n * parameter. They can also be set after the SDK's creation by using the\n * {@link call.setSdpHandlers} function.\n *\n * @public\n * @namespace sdpHandlers\n * @example\n * import { create, sdpHandlers } from 'kandy';\n * const codecRemover = sdpHandlers.createCodecRemover(['VP8', 'VP9'])\n * const client = create({\n *   call: {\n *     sdpHandlers: [ codecRemover, <Your-SDP-Handler-Function>, ...]\n *   }\n * })\n * @example\n * // Through the Call API post-instantiation\n * client.call.setSdpHandlers([ codecRemover, <Your-SDP-Handler-Function>, ...])\n */\n\n/**\n * An object that represents a selector to match codecs of an RTP map in SDP.\n *\n * @public\n * @static\n * @typedef {Object} CodecSelector\n * @memberof sdpHandlers\n * @property {string} name The name of the codec.\n * @property {Array<string>} fmtpParams An array of strings to match against the \"a=fmtp\" format parameters for the corresponding codec.\n *                                      All of the elements in the array must be contained in the \"a=fmtp\" attribute in order to be a match.\n */\n\n/**\n * This function creates an SDP handler that will remove codecs matching the selectors specified for SDP offers and answers.\n *\n * In some scenarios it's necessary to remove certain codecs being offered by the SDK to remote parties. For example, some legacy call services limit the SDP\n * length (usually to 4KB) and will reject calls that have SDP size above this amount.\n *\n * While creating an SDP handler would allow a user to perform this type of manipulation, it is a non-trivial task that requires in-depth knowledge of WebRTC SDP.\n *\n * To facilitate this common task, the createCodecRemover function creates a codec removal handler that can be used for this purpose. Applications can use this codec\n * removal handler in combination with the {@link call.getAvailableCodecs call.getAvailableCodecs} function in order to build logic to determine the best codecs to use\n * for their application.\n *\n * @public\n * @memberof sdpHandlers\n * @method createCodecRemover\n * @param {Array<CodecSelector> | Array<string>} codecs A list of codec selectors to remove from the SDP. If passing a list of strings, they will be converted into\n *                                                      codec selectors that correspond to those names without any extra FMTP parameters.\n * @returns {call.SdpHandlerFunction} The resulting SDP handler that will remove the codec.\n * @example\n * import { create, sdpHandlers } from 'kandy';\n *\n * const codecRemover = sdpHandlers.createCodecRemover([\n *   // Remove all VP8 and VP9 codecs.\n *   'VP8',\n *   'VP9',\n *\n *   // Remove all H264 codecs with the specified FMTP parameters.\n *   {\n *     name: 'H264',\n *     fmtpParams: ['profile-level-id=4d0032', 'packetization-mode=1']\n *   }\n * ])\n *\n * const client = create({\n *   call: {\n *     sdpHandlers: [codecRemover]\n *   }\n * })\n *\n */\n\n/*\n * Index template file that is used to create pre-defined version of the SDK.\n */\nimport { factory } from '../../packages/kandy/src/factory'\nimport { map, _ } from 'lodash/fp'\n\n// This is a hack to fix an issue where Lodash will add itself to\n// the window scope even if it's loaded via ES6. You can remove this when\n// we have an answer to https://github.com/lodash/lodash/issues/1798 .\n// eslint-disable-next-line\nif (_) _.noConflict()\n\nexport default function commonIndex (options = {}, plugins = []) {\n  const pluginInstances = map(function (plugin) {\n    return plugin.fn(options[plugin.name])\n  }, plugins)\n\n  return factory(pluginInstances, options.common)\n}\n","import commonIndex from '../core'\n\nimport basePlugins from '../core/basePlugins'\nimport webrtc from '../../packages/kandy/src/webrtc'\nimport proxy from '../../packages/kandy/src/webrtcProxy'\nimport subscription from '../../packages/kandy/src/subscription/link'\nimport auth from '../../packages/kandy/src/auth/link'\nimport call from '../../packages/kandy/src/call/link'\nimport callHistory from '../../packages/kandy/src/callHistory'\nimport clickToCall from '../../packages/kandy/src/clickToCall'\nimport connectivity from '../../packages/kandy/src/connectivity/link'\nimport messaging from '../../packages/kandy/src/messaging/link'\nimport mwi from '../../packages/kandy/src/mwi/link'\nimport notifications from '../../packages/kandy/src/notifications/link'\nimport presence from '../../packages/kandy/src/presence/link'\nimport sipEvents from '../../packages/kandy/src/sipEvents'\nimport users from '../../packages/kandy/src/users/link'\nimport '../../packages/kandy/src/docs/docs'\n\nimport createCodecRemover from '../../packages/fcs/src/js/sdp/codecRemover'\n\nconst defaultPlugins = [\n  ...basePlugins,\n  { name: 'authentication', fn: auth },\n  { name: 'subscription', fn: subscription },\n  { name: 'webrtc', fn: webrtc },\n  // TODO: Don't _always_ include the Proxy Plugin.\n  { name: 'proxy', fn: proxy },\n  { name: 'call', fn: call },\n  { name: 'callHistory', fn: callHistory },\n  { name: 'clickToCall', fn: clickToCall },\n  { name: 'connectivity', fn: connectivity },\n  { name: 'messaging', fn: messaging },\n  { name: 'mwi', fn: mwi },\n  { name: 'notifications', fn: notifications },\n  { name: 'presence', fn: presence },\n  { name: 'sipEvents', fn: sipEvents },\n  { name: 'users', fn: users }\n]\n\nfunction root (options = {}, plugins = []) {\n  return commonIndex(options, [...defaultPlugins, ...plugins])\n}\n\n// Alias 'create' to be equal to the root function\nroot.create = root\n\nroot.sdpHandlers = {\n  createCodecRemover\n}\n\n// Export this way as a work-around, so it can be used as `<export>();`.\n// See: https://github.com/webpack/webpack/issues/706\nmodule.exports = root\n"],"sourceRoot":""}